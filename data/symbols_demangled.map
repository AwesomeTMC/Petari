 0001:80004000       __check_pad3
 0001:80004028       __set_debug_bba
 0001:80004034       __get_debug_bba
 0001:8000403C       __start
 0001:800041A8       __init_registers
 0001:80004238       __init_data
 0001:800042E0       __init_hardware
 0001:80004338       memcpy
 0001:8000443C       memset
 0001:800044C0       aMetrowerksTarg
 0002:800070A0       nw4r::ut::detail::LinkListImpl::~LinkListImpl((void))
 0002:80007124       nw4r::ut::detail::LinkListImpl::Erase((nw4r::ut::detail::LinkListImpl::Iterator))
 0002:8000716C       nw4r::ut::detail::LinkListImpl::Insert((nw4r::ut::detail::LinkListImpl::Iterator,nw4r::ut::LinkListNode *))
 0002:80007198       nw4r::ut::detail::LinkListImpl::Erase((nw4r::ut::LinkListNode *))
 0002:800071C8       nw4r::ut::IsValidBinaryFile((nw4r::ut::BinaryFileHeader const *,ulong,ushort,ushort))
 0002:8000723C       nw4r::ut::CharStrmReader::ReadNextCharUTF8((void))
 0002:800072B4       nw4r::ut::CharStrmReader::ReadNextCharUTF16((void))
 0002:800072D0       nw4r::ut::CharStrmReader::ReadNextCharCP1252((void))
 0002:800072EC       nw4r::ut::CharStrmReader::ReadNextCharSJIS((void))
 0002:8000734C       nw4r::ut::TagProcessorBase<c>::TagProcessorBase<c>((void))
 0002:8000735C       nw4r::ut::TagProcessorBase<c>::~TagProcessorBase<c>((void))
 0002:8000739C       nw4r::ut::TagProcessorBase<c>::Process((ushort,nw4r::ut::PrintContext<c> *))
 0002:80007494       cbForCancelSync
 0002:800074CC       nw4r::ut::TagProcessorBase<c>::CalcRect((nw4r::ut::Rect *,ushort,nw4r::ut::PrintContext<c> *))
 0002:800076B4       nw4r::ut::TagProcessorBase<w>::TagProcessorBase<w>((void))
 0002:800076C4       nw4r::ut::TagProcessorBase<w>::~TagProcessorBase<w>((void))
 0002:80007704       nw4r::ut::TagProcessorBase<w>::Process((ushort,nw4r::ut::PrintContext<w> *))
 0002:80007834       nw4r::ut::TagProcessorBase<w>::CalcRect((nw4r::ut::Rect *,ushort,nw4r::ut::PrintContext<w> *))
 0002:80007A1C       nw4r::ut::Font::InitReaderFunc((nw4r::ut::FontEncoding))
 0002:80007AC4       nw4r::ut::Font::~Font((void))
 0002:80007B04       nw4r::ut::detail::ResFontBase::ResFontBase((void))
 0002:80007B48       nw4r::ut::detail::ResFontBase::~ResFontBase((void))
 0002:80007B88       nw4r::ut::detail::ResFontBase::SetResourceBuffer((void *,nw4r::ut::FontInformation *))
 0002:80007B94       nw4r::ut::detail::ResFontBase::RemoveResourceBuffer((void))
 0002:80007BAC       nw4r::ut::detail::ResFontBase::GetWidth(const(void))
 0002:80007BB8       nw4r::ut::detail::ResFontBase::GetHeight(const(void))
 0002:80007BBC       J3DColorBlockLightOn::getColorChanNum(const(void))
 0002:80007BC4       nw4r::ut::detail::ResFontBase::GetAscent(const(void))
 0002:80007BC8       J3DColorBlockLightOff::getCullMode(const(void))
 0002:80007BD0       nw4r::ut::detail::ResFontBase::GetDescent(const(void))
 0002:80007BE4       nw4r::ut::detail::ResFontBase::GetBaselinePos(const(void))
 0002:80007BF8       nw4r::ut::detail::ResFontBase::GetCellHeight(const(void))
 0002:80007C00       TriggerChecker::getLevel(const(void))
 0002:80007C08       nw4r::ut::detail::ResFontBase::GetCellWidth(const(void))
 0002:80007C18       nw4r::ut::detail::ResFontBase::GetMaxCharWidth(const(void))
 0002:80007C28       nw4r::ut::detail::ResFontBase::GetType(const(void))
 0002:80007C30       nw4r::ut::detail::ResFontBase::GetTextureFormat(const(void))
 0002:80007C40       nw4r::ut::detail::ResFontBase::GetLineFeed(const(void))
 0002:80007C50       nw4r::ut::detail::ResFontBase::GetDefaultCharWidths(const(void))
 0002:80007C68       nw4r::ut::detail::ResFontBase::SetDefaultCharWidths((nw4r::ut::CharWidths const &))
 0002:80007C88       nw4r::ut::detail::ResFontBase::SetAlternateChar((ushort))
 0002:80007D20       nw4r::ut::detail::ResFontBase::SetLineFeed((int))
 0002:80007D2C       nw4r::ut::detail::ResFontBase::GetCharWidth(const(ushort))
 0002:80007D78       nw4r::ut::detail::ResFontBase::GetCharWidths(const(ushort))
 0002:80007E64       nw4r::ut::detail::ResFontBase::GetGlyph(const(nw4r::ut::Glyph *,ushort))
 0002:80007F08       nw4r::ut::detail::ResFontBase::HasGlyph(const(ushort))
 0002:80007F8C       nw4r::ut::detail::ResFontBase::GetEncoding(const(void))
 0002:80007F98       nw4r::ut::detail::ResFontBase::FindGlyphIndex(const(nw4r::ut::FontCodeMap const *,ushort))
 0002:8000806C       nw4r::ut::detail::ResFontBase::GetGlyphFromIndex(const(nw4r::ut::Glyph *,ushort))
 0002:80008170       nw4r::ut::ResFont::ResFont((void))
 0002:800081AC       nw4r::ut::ResFont::~ResFont((void))
 0002:80008204       nw4r::ut::ResFont::SetResource((void *))
 0002:80008348       nw4r::ut::detail::ResFontBase::RemoveResourceBuffer((void))
 0002:8000834C       nw4r::ut::ResFont::Rebuild((nw4r::ut::BinaryFileHeader *))
 0002:80008478       nw4r::ut::Color::~Color((void))
 0002:800084B8       nw4r::ut::CharWriter::CharWriter((void))
 0002:800086D8       nw4r::ut::CharWriter::SetColorMapping((nw4r::ut::Color,nw4r::ut::Color))
 0002:8000871C       nw4r::ut::CharWriter::SetTextColor((nw4r::ut::Color))
 0002:8000887C       nw4r::ut::CharWriter::~CharWriter((void))
 0002:800088BC       nw4r::ut::CharWriter::SetupGX((void))
 0002:80009314       nw4r::ut::CharWriter::SetFontSize((float,float))
 0002:800093D8       nw4r::ut::CharWriter::GetFontWidth(const(void))
 0002:80009438       nw4r::ut::CharWriter::GetFontHeight(const(void))
 0002:80009498       nw4r::ut::CharWriter::GetFontAscent(const(void))
 0002:800094F8       nw4r::ut::CharWriter::Print((ushort))
 0002:80009628       nw4r::ut::CharWriter::PrintGlyph((float,float,float,nw4r::ut::Glyph const &))
 0002:800098A4       nw4r::ut::CharWriter::UpdateVertexColor((void))
 0002:800099F4       nw4r::ut::CharWriter::SetupGXWithColorMapping((nw4r::ut::Color,nw4r::ut::Color))
 0002:80009D40       nw4r::ut::TextWriterBase<c>::GetLineHeight(const(void))
 0002:80009DBC       nw4r::ut::Font::GetCharStrmReader(const(void))
 0002:80009DF4       nw4r::ut::TextWriterBase<w>::TextWriterBase<w>((void))
 0002:80009E50       nw4r::ut::TextWriterBase<w>::~TextWriterBase<w>((void))
 0002:80009EA8       nw4r::ut::TextWriterBase<w>::GetLineHeight(const(void))
 0002:80009F24       nw4r::ut::TextWriterBase<w>::CalcStringWidth(const(wchar_t const *,int))
 0002:8000A1C8       nw4r::ut::TextWriterBase<w>::CalcStringRect(const(nw4r::ut::Rect *,wchar_t const *,int))
 0002:8000A450       nw4r::ut::TextWriterBase<w>::Print((wchar_t const *,int))
 0002:8000A654       nw4r::ut::TextWriterBase<w>::CalcLineWidth((wchar_t const *,int))
 0002:8000A870       nw4r::ut::TextWriterBase<w>::CalcLineRectImpl((nw4r::ut::Rect *,wchar_t const **,int))
 0002:8000AEF8       nw4r::ut::TextWriterBase<w>::GetCharSpace(const(void))
 0002:8000AF00       nw4r::ut::TextWriterBase<w>::CalcStringRectImpl((nw4r::ut::Rect *,wchar_t const *,int))
 0002:8000B020       nw4r::ut::TextWriterBase<w>::AdjustCursor((float *,float *,wchar_t const *,int))
 0002:8000B76C       __sinit__ut_TextWriterBase_cpp
 0002:8000B7F0       nw4r::db::Console_Printf((nw4r::db::detail::ConsoleHead *,char const *,...))
 0002:8000B858       nw4r::db::Console_GetTotalLines((nw4r::db::detail::ConsoleHead *))
 0002:8000B8C4       nw4r::db::Assertion_Printf_((char const *,...))
 0002:8000B95C       nw4r::db::ShowStack_((ulong))
 0002:8000BA08       VPanic__Q24nw4r2dbFPCciPCcP16__va_list_structb
 0002:8000BB0C       nw4r::db::Panic((char const *,int,char const *,...))
 0002:8000BBA0       nw4r::math::SinFIdx((float))
 0002:8000BC0C       nw4r::math::CosFIdx((float))
 0002:8000BC68       nw4r::math::VEC3TransformNormal((nw4r::math::VEC3 *,nw4r::math::MTX34 const *,nw4r::math::VEC3 const *))
 0002:8000BCF8       nw4r::lyt::LytInit((void))
 0002:8000BD4C       nw4r::lyt::Pane::Pane((nw4r::lyt::res::Pane const *))
 0002:8000BE80       nw4r::lyt::Pane::~Pane((void))
 0002:8000BFAC       nw4r::lyt::Pane::SetName((char const *))
 0002:8000BFE8       nw4r::lyt::Pane::AppendChild((nw4r::lyt::Pane *))
 0002:8000C038       nw4r::lyt::Pane::RemoveChild((nw4r::lyt::Pane *))
 0002:8000C074       nw4r::lyt::Pane::GetVtxColor(const(ulong))
 0002:8000C080       nw4r::lyt::Pane::SetVtxColor((ulong,nw4r::ut::Color))
 0002:8000C084       nw4r::lyt::Pane::GetColorElement(const(ulong))
 0002:8000C0AC       nw4r::lyt::Pane::SetColorElement((ulong,uchar))
 0002:8000C0D4       nw4r::lyt::Pane::GetVtxColorElement(const(ulong))
 0002:8000C0DC       nw4r::lyt::Pane::SetVtxColorElement((ulong,uchar))
 0002:8000C0E0       nw4r::lyt::Pane::FindPaneByName((char const *,bool))
 0002:8000C18C       nw4r::lyt::Pane::FindMaterialByName((char const *,bool))
 0002:8000C244       nw4r::lyt::Pane::CalculateMtx((nw4r::lyt::DrawInfo const &))
 0002:8000C53C       nw4r::lyt::Pane::Draw((nw4r::lyt::DrawInfo const &))
 0002:8000C5C0       nw4r::lyt::Pane::DrawSelf((nw4r::lyt::DrawInfo const &))
 0002:8000C5C4       nw4r::lyt::Pane::Animate((ulong))
 0002:8000C650       nw4r::lyt::Pane::AnimateSelf((ulong))
 0002:8000C704       nw4r::lyt::Pane::BindAnimation((nw4r::lyt::AnimTransform *,bool))
 0002:8000C720       nw4r::lyt::Pane::UnbindAnimation((nw4r::lyt::AnimTransform *,bool))
 0002:8000C7B0       nw4r::lyt::Pane::UnbindAllAnimation((bool))
 0002:8000C7C8       nw4r::lyt::Pane::UnbindAnimationSelf((nw4r::lyt::AnimTransform *))
 0002:8000C828       nw4r::lyt::Pane::AddAnimationLink((nw4r::lyt::AnimationLink *))
 0002:8000C85C       nw4r::lyt::Pane::FindAnimationLinkSelf((nw4r::lyt::AnimTransform *))
 0002:8000C864       nw4r::lyt::Pane::SetAnimationEnable((nw4r::lyt::AnimTransform *,bool,bool))
 0002:8000C924       nw4r::lyt::Pane::LoadMtx((nw4r::lyt::DrawInfo const &))
 0002:8000CA24       nw4r::lyt::Pane::GetVtxPos(const(void))
 0002:8000CB10       nw4r::lyt::Pane::GetMaterial(const(void))
 0002:8000CB18       nw4r::lyt::Pane::GetRuntimeTypeInfo(const(void))
 0002:8000CB20       __sinit__lyt_pane_cpp
 0002:8000CB2C       nw4r::lyt::Group::Group((nw4r::lyt::res::Group const *,nw4r::lyt::Pane *))
 0002:8000CC38       nw4r::lyt::Group::~Group((void))
 0002:8000CCDC       nw4r::lyt::GroupContainer::~GroupContainer((void))
 0002:8000CDA0       nw4r::lyt::GroupContainer::AppendGroup((nw4r::lyt::Group *))
 0002:8000CDD4       @unnamed@lyt_layout_cpp@::SetTagProcessorImpl((nw4r::lyt::Pane *,nw4r::ut::TagProcessorBase<w> *))
 0002:8000CF80       nw4r::lyt::Layout::Layout((void))
 0002:8000CFC4       nw4r::lyt::Layout::~Layout((void))
 0002:8000D364       DrawBuffer::init((int))
 0002:8000D3B8       MR::followRailPoseOnGround((NPCActor *,float))
 0002:8000D418       nw4r::lyt::Layout::CreateAnimTransform((void))
 0002:8000D498       nw4r::lyt::Layout::CreateAnimTransform((void const *,nw4r::lyt::ResourceAccessor *))
 0002:8000D4F0       nw4r::lyt::Layout::CreateAnimTransform((nw4r::lyt::AnimResource const &,nw4r::lyt::ResourceAccessor *))
 0002:8000D574       nw4r::lyt::Layout::BindAnimation((nw4r::lyt::AnimTransform *))
 0002:8000D598       nw4r::lyt::Layout::UnbindAnimation((nw4r::lyt::AnimTransform *))
 0002:8000D5BC       nw4r::lyt::Layout::UnbindAllAnimation((void))
 0002:8000D5D0       nw4r::lyt::Layout::SetAnimationEnable((nw4r::lyt::AnimTransform *,bool))
 0002:8000D5F4       nw4r::lyt::Layout::CalculateMtx((nw4r::lyt::DrawInfo const &))
 0002:8000D614       nw4r::lyt::Layout::Draw((nw4r::lyt::DrawInfo const &))
 0002:8000D634       nw4r::lyt::Layout::Animate((ulong))
 0002:8000D640       DemoPositionController::control((void))
 0002:8000D654       nw4r::lyt::Layout::GetLayoutRect(const(void))
 0002:8000D6B8       nw4r::lyt::Layout::SetTagProcessor((nw4r::ut::TagProcessorBase<w> *))
 0002:8000D868       nw4r::lyt::Layout::BuildPaneObj((long,void const *,nw4r::lyt::ResBlockSet const &))
 0002:8000DA80       nw4r::lyt::Picture::Picture((nw4r::lyt::res::Picture const *,nw4r::lyt::ResBlockSet const &))
 0002:8000DBA4       nw4r::lyt::Picture::~Picture((void))
 0002:8000DC70       nw4r::lyt::Picture::Append((nw4r::lyt::TexMap const &))
 0002:8000DE24       nw4r::lyt::Picture::GetVtxColor(const(ulong))
 0002:8000DE50       nw4r::lyt::Picture::SetVtxColor((ulong,nw4r::ut::Color))
 0002:8000DE7C       nw4r::lyt::Picture::GetVtxColorElement(const(ulong))
 0002:8000DE94       nw4r::lyt::Picture::SetVtxColorElement((ulong,uchar))
 0002:8000DEAC       nw4r::lyt::Picture::DrawSelf((nw4r::lyt::DrawInfo const &))
 0002:8000DF90       __sinit__lyt_picture_cpp
 0002:8000DF9C       @unnamed@lyt_textBox_cpp@::GetColor((_GXColorS10 const &))
 0002:8000E304       nw4r::lyt::TextBox::~TextBox((void))
 0002:8000E488       nw4r::lyt::TextBox::GetVtxColor(const(ulong))
 0002:8000E490       nw4r::lyt::TextBox::GetTextColor(const(ulong))
 0002:8000E4BC       nw4r::lyt::TextBox::SetVtxColor((ulong,nw4r::ut::Color))
 0002:8000E504       nw4r::lyt::TextBox::SetTextColor((ulong,nw4r::ut::Color))
 0002:8000E530       nw4r::lyt::TextBox::GetVtxColorElement(const(ulong))
 0002:8000E548       nw4r::lyt::TextBox::SetVtxColorElement((ulong,uchar))
 0002:8000E560       nw4r::lyt::TextBox::GetTextDrawRect(const(nw4r::lyt::DrawInfo const &))
 0002:8000E5FC       nw4r::lyt::TextBox::DrawSelf((nw4r::lyt::DrawInfo const &))
 0002:8000E7E4       nw4r::ut::CharWriter::SetTextColor((nw4r::ut::Color,nw4r::ut::Color))
 0002:8000E828       nw4r::lyt::TextBox::AllocStringBuffer((ushort))
 0002:8000E8A0       nw4r::lyt::TextBox::FreeStringBuffer((void))
 0002:8000E8E8       nw4r::lyt::TextBox::SetString((wchar_t const *,ushort))
 0002:8000E950       nw4r::lyt::TextBox::SetString((wchar_t const *,ushort,ushort))
 0002:8000EA18       nw4r::lyt::TextBox::SetFont((nw4r::ut::Font const *))
 0002:8000ED70       NANDSafeCloseAsync
 0002:8000ED94       __sinit__lyt_textBox_cpp
 0002:8000EDA0       nw4r::lyt::Window::Window((nw4r::lyt::res::Window const *,nw4r::lyt::ResBlockSet const &))
 0002:8000EFA8       nw4r::lyt::Window::~Window((void))
 0002:8000F0F0       nw4r::lyt::Window::FindMaterialByName((char const *,bool))
 0002:8000F1EC       nw4r::lyt::Window::SetAnimationEnable((nw4r::lyt::AnimTransform *,bool,bool))
 0002:8000F280       nw4r::lyt::Window::GetVtxColor(const(ulong))
 0002:8000F2AC       nw4r::lyt::Window::SetVtxColor((ulong,nw4r::ut::Color))
 0002:8000F2D8       nw4r::lyt::Window::GetVtxColorElement(const(ulong))
 0002:8000F2F0       nw4r::lyt::Window::SetVtxColorElement((ulong,uchar))
 0002:8000F308       nw4r::lyt::Window::DrawSelf((nw4r::lyt::DrawInfo const &))
 0002:8000F448       nw4r::lyt::Window::AnimateSelf((ulong))
 0002:8000F4D8       nw4r::lyt::Window::UnbindAnimationSelf((nw4r::lyt::AnimTransform *))
 0002:8000F568       nw4r::lyt::Window::DrawContent((nw4r::math::VEC2 const &,nw4r::lyt::WindowFrameSize const &,uchar))
 0002:8000F67C       nw4r::lyt::Window::DrawFrame((nw4r::math::VEC2 const &,nw4r::lyt::Window::Frame const &,nw4r::lyt::WindowFrameSize const &,uchar))
 0002:8000FC5C       nw4r::lyt::Window::DrawFrame4((nw4r::math::VEC2 const &,nw4r::lyt::Window::Frame const *,nw4r::lyt::WindowFrameSize const &,uchar))
 0002:800103A0       nw4r::lyt::Window::DrawFrame8((nw4r::math::VEC2 const &,nw4r::lyt::Window::Frame const *,nw4r::lyt::WindowFrameSize const &,uchar))
 0002:800111E8       nw4r::lyt::Window::GetFrameSize((uchar,nw4r::lyt::Window::Frame const *))
 0002:800112E8       nw4r::lyt::Window::GetFrameMaterial(const(ulong))
 0002:80011308       J3DTexGenBlockPatched::getTexGenNum(const(void))
 0002:80011310       nw4r::lyt::Window::GetContentMaterial(const(void))
 0002:80011328       __sinit__lyt_window_cpp
 0002:800113D4       __sinit__lyt_bounding_cpp
 0002:800113E0       nw4r::lyt::@unnamed@lyt_material_cpp@::CalcTextureMtx((nw4r::math::MTX34 *,nw4r::lyt::TexSRT const &))
 0002:800114E8       nw4r::lyt::@unnamed@lyt_material_cpp@::SetIndTexMtx((_GXIndTexMtxID,float const *[3]))
 0002:800116E4       JGeometry::TVec2<f>::TVec2<f>((JGeometry::TVec2<f> const &))
 0002:800116F8       nw4r::ut::LinkList<Q34nw4r3lyt13AnimationLink,0>::LinkList<Q34nw4r3lyt13AnimationLink,0>((void))
 0002:80011710       VFiPFSTR_SetCodeMode
 0002:80011718       nw4r::lyt::Material::Material((nw4r::lyt::res::Material const *,nw4r::lyt::ResBlockSet const &))
 0002:80011D7C       J3DGXColorS10::__as((J3DGXColorS10 const &))
 0002:80011DA0       JGadget::TNodeLinkList::iterator::iterator((JGadget::TNodeLinkList::iterator const &))
 0002:80011DAC       nw4r::lyt::res::MaterialResourceNum::GetTexMapNum(const(void))
 0002:80011DB8       nw4r::lyt::res::MaterialResourceNum::GetTexSRTNum(const(void))
 0002:80011DC4       nw4r::lyt::res::MaterialResourceNum::GetTexCoordGenNum(const(void))
 0002:80011DD0       nw4r::lyt::res::MaterialResourceNum::GetChanCtrlNum(const(void))
 0002:80011DDC       nw4r::lyt::res::MaterialResourceNum::GetMatColNum(const(void))
 0002:80011DE8       nw4r::lyt::res::MaterialResourceNum::HasTevSwapTable(const(void))
 0002:80011DF4       nw4r::lyt::res::MaterialResourceNum::HasAlphaCompare(const(void))
 0002:80011E00       nw4r::lyt::res::MaterialResourceNum::HasBlendMode(const(void))
 0002:80011E0C       nw4r::lyt::res::MaterialResourceNum::GetIndTexSRTNum(const(void))
 0002:80011E18       nw4r::lyt::res::MaterialResourceNum::GetIndTexStageNum(const(void))
 0002:80011E24       nw4r::lyt::res::MaterialResourceNum::GetTevStageNum(const(void))
 0002:80011E30       nw4r::lyt::TexMap::SetWrapMode((_GXTexWrapMode,_GXTexWrapMode))
 0002:80011E44       nw4r::lyt::res::TexMap::GetWarpModeS(const(void))
 0002:80011E50       nw4r::lyt::res::TexMap::GetWarpModeT(const(void))
 0002:80011E5C       nw4r::lyt::TexMap::SetFilter((_GXTexFilter,_GXTexFilter))
 0002:80011E70       nw4r::lyt::res::TexMap::GetMinFilter(const(void))
 0002:80011E84       nw4r::lyt::res::TexMap::GetMagFilter(const(void))
 0002:80011E98       JUtility::TColor::__as((JUtility::TColor const &))
 0002:80011F04       nw4r::lyt::TevSwapMode::__as((nw4r::lyt::TevSwapMode const &))
 0002:80011F10       nw4r::lyt::TexSRT::__as((nw4r::lyt::TexSRT const &))
 0002:80011F60       nw4r::lyt::TevStage::__as((nw4r::lyt::TevStage const &))
 0002:80012054       nw4r::lyt::detail::ConvertOffsToPtr<Q44nw4r3lyt3res6TexMap>(nw4r::lyt::res::TexMap const *(void const *,uint))
 0002:8001209C       nw4r::ut::@unnamed@lyt_material_cpp@::Min<Uc>(uchar (uchar,uchar))
 0002:800120C4       nw4r::lyt::Material::Init((void))
 0002:8001212C       MapObjActorInitInfo::setupSound((long))
 0002:80012134       nw4r::lyt::Material::~Material((void))
 0002:800121E0       nw4r::lyt::Material::ReserveGXMem((uchar,uchar,uchar,uchar,bool,uchar,uchar,bool,bool,bool,bool))
 0002:8001295C       nw4r::lyt::Material::GetTexSRTAry((void))
 0002:80012974       nw4r::lyt::Material::GetTexCoordGenAry((void))
 0002:80012998       nw4r::lyt::Material::GetChanCtrlAry((void))
 0002:800129C4       nw4r::lyt::Material::GetMatColAry((void))
 0002:800129F8       nw4r::lyt::Material::GetTevSwapAry((void))
 0002:80012A34       nw4r::lyt::Material::GetAlphaComparePtr((void))
 0002:80012A78       nw4r::lyt::Material::GetBlendModePtr((void))
 0002:80012AC4       nw4r::lyt::Material::GetIndirectStageAry((void))
 0002:80012B18       nw4r::lyt::Material::GetIndTexSRTAry((void))
 0002:80012B74       nw4r::lyt::Material::GetTevStageAry((void))
 0002:80012BD8       nw4r::lyt::Material::SetName((char const *))
 0002:80012C14       nw4r::lyt::Material::SetTextureNum((uchar))
 0002:80012CA4       nw4r::lyt::Material::SetTexCoordGenNum((uchar))
 0002:80012D2C       nw4r::lyt::Material::SetTevStageNum((uchar))
 0002:80012E4C       nw4r::lyt::Material::SetIndStageNum((uchar))
 0002:80012F10       nw4r::lyt::Material::SetColorElement((ulong,short))
 0002:800130F0       nw4r::lyt::Material::SetupGX((bool,uchar))
 0002:80013F90       nw4r::lyt::Material::BindAnimation((nw4r::lyt::AnimTransform *))
 0002:80013FAC       JASWaveArc::erase((void))
 0002:80013FB4       nw4r::lyt::Material::UnbindAllAnimation((void))
 0002:80013FC8       nw4r::lyt::Material::Animate((void))
 0002:80014040       nw4r::lyt::Material::AddAnimationLink((nw4r::lyt::AnimationLink *))
 0002:8001407C       nw4r::lyt::Material::SetAnimationEnable((nw4r::lyt::AnimTransform *,bool))
 0002:800140C8       nw4r::lyt::detail::GetTextureSize((nw4r::lyt::Material *,uchar))
 0002:80014138       nw4r::lyt::TexMap::Get(const(_GXTexObj *))
 0002:80014224       nw4r::lyt::TexMap::Get(const(_GXTlutObj *))
 0002:80014240       nw4r::lyt::TexMap::Set((_GXTexObj const &))
 0002:80014394       nw4r::lyt::TexMap::ReplaceImage((TPLPalette *,ulong))
 0002:80014464       nw4r::lyt::DrawInfo::DrawInfo((void))
 0002:80014518       nw4r::lyt::@unnamed@lyt_animation_cpp@::GetStepCurveValue((float,nw4r::lyt::res::StepKey const *,ulong))
 0002:80014530       J3DShapeMtx::getUseMtxIndex(const(ushort))
 0002:8001455C       RSOLinkList
 0002:80014600       nw4r::lyt::@unnamed@lyt_animation_cpp@::GetHermiteCurveValue((float,nw4r::lyt::res::HermiteKey const *,ulong))
 0002:80014624       JASAudioReseter::resume((void))
 0002:800147BC       nw4r::lyt::AnimTransform::GetFrameSize(const(void))
 0002:800147C8       nw4r::lyt::AnimTransform::IsLoopData(const(void))
 0002:800147E0       nw4r::lyt::AnimTransformBasic::AnimTransformBasic((void))
 0002:80014814       nw4r::lyt::AnimTransformBasic::~AnimTransformBasic((void))
 0002:80014898       nw4r::lyt::AnimTransformBasic::SetResource((nw4r::lyt::res::AnimationBlock const *,nw4r::lyt::ResourceAccessor *))
 0002:800148AC       nw4r::lyt::AnimTransformBasic::SetResource((nw4r::lyt::res::AnimationBlock const *,nw4r::lyt::ResourceAccessor *,ushort))
 0002:800149E4       nw4r::lyt::AnimTransformBasic::Bind((nw4r::lyt::Pane *,bool))
 0002:80014BA0       nw4r::lyt::AnimTransformBasic::Bind((nw4r::lyt::Material *))
 0002:80014CAC       nw4r::lyt::AnimTransformBasic::Animate((ulong,nw4r::lyt::Pane *))
 0002:80014E98       nw4r::lyt::AnimTransformBasic::Animate((ulong,nw4r::lyt::Material *))
 0002:80015220       PoltaFunction::appearWhiteRockCircle((Polta *,JGeometry::TVec3<f> const &,float,long,long))
 0002:80015288       nw4r::lyt::detail::FindAnimationLink((nw4r::ut::LinkList<Q34nw4r3lyt13AnimationLink,0> *,nw4r::lyt::AnimTransform *))
 0002:800152BC       nw4r::lyt::detail::UnbindAnimationLink((nw4r::ut::LinkList<Q34nw4r3lyt13AnimationLink,0> *,nw4r::lyt::AnimTransform *))
 0002:80015394       nw4r::lyt::detail::EqualsResName((char const *,char const *))
 0002:800153C0       nw4r::lyt::detail::EqualsMaterialName((char const *,char const *))
 0002:800153EC       nw4r::lyt::detail::TestFileHeader((nw4r::lyt::res::BinaryFileHeader const &,ulong))
 0002:80015414       nw4r::lyt::detail::TexCoordAry::TexCoordAry((void))
 0002:80015428       nw4r::lyt::detail::TexCoordAry::Free((void))
 0002:80015474       nw4r::lyt::detail::TexCoordAry::Reserve((uchar))
 0002:800154F4       nw4r::lyt::detail::TexCoordAry::SetSize((uchar))
 0002:800155E0       nw4r::lyt::detail::TexCoordAry::Copy((void const *,uchar))
 0002:80015674       nw4r::lyt::detail::IsModulateVertexColor((nw4r::ut::Color *,uchar))
 0002:8001567C       ARCCloseDir
 0002:800156DC       nw4r::lyt::detail::MultipleAlpha((nw4r::ut::Color,uchar))
 0002:80015730       nw4r::lyt::detail::SetVertexFormat((bool,uchar))
 0002:80015814       nw4r::lyt::detail::DrawQuad((nw4r::math::VEC2 const &,nw4r::lyt::Size const &,uchar,nw4r::math::VEC2 const *[4],nw4r::ut::Color const *))
 0002:80015D74       nw4r::lyt::detail::DrawQuad((nw4r::math::VEC2 const &,nw4r::lyt::Size const &,uchar,nw4r::math::VEC2 const *[4],nw4r::ut::Color const *,uchar))
 0002:80015E6C       JGeometry::TQuat4<f>::setEuler((float,float,float))
 0002:80015FB0       JGeometry::TQuat4<f>::setRotate((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800160C4       JGeometry::TQuat4<f>::slerp((JGeometry::TQuat4<f> const &,float))
 0002:800162AC       JGeometry::TQuat4<f>::normalize((JGeometry::TQuat4<f> const &))
 0002:8001637C       JGeometry::TQuat4<f>::getEuler(const(JGeometry::TVec3<f> &))
 0002:800165AC       nullsub_119
 0002:800165B0       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::identity((void))
 0002:800165EC       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::mult(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> &))
 0002:8001667C       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::multTranspose(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> &))
 0002:80016734       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::invert((JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>> const &))
 0002:80016A18       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::concat((JGeometry::SMatrix34C<f> const &,JGeometry::SMatrix34C<f> const &))
 0002:80016CC4       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::concat((JGeometry::SMatrix34C<f> const &))
 0002:80016F70       JGeometry::TVec3<f>::TVec3<f>((float))
 0002:80016F80       JGeometry::TVec3<f>::set<f>(void (float,float,float))
 0002:80016F90       JGeometry::TUtil<f>::epsilonEquals((float,float,float))
 0002:80016FBC       JGeometry::TUtil<f>::sqrt((float))
 0002:80016FF8       JGeometry::SMatrix34C<f>::set((float,float,float,float,float,float,float,float,float,float,float,float))
 0002:8001703C       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getQuat(const(JGeometry::TQuat4<f> &))
 0002:80017268       JGeometry::TVec4<f>::set<f>(void (float,float,float,float))
 0002:8001727C       JGeometry::TBox2<f>::set((JGeometry::TBox<Q29JGeometry8TVec2<f>> const &))
 0002:800172A0       AnmPlayerBase::AnmPlayerBase((ResTable const *))
 0002:800172F8       AnmPlayerBase::update((void))
 0002:80017310       AnmPlayerBase::reflectFrame((void))
 0002:80017328       AnmPlayerBase::start((char const *))
 0002:800173B8       AnmPlayerBase::stop((void))
 0002:800173F8       AnmPlayerBase::isPlaying(const(char const *))
 0002:80017458       MaterialAnmPlayerBase::MaterialAnmPlayerBase((ResTable const *,J3DModelData *))
 0002:800174A4       MaterialAnmPlayerBase::beginDiff((void))
 0002:800174F8       MaterialAnmPlayerBase::endDiff((void))
 0002:8001751C       J3DFrameCtrl::~J3DFrameCtrl((void))
 0002:8001755C       AnmPlayerBase::changeAnimation((J3DAnmBase *))
 0002:80017560       AnmPlayerBase::stopAnimation((void))
 0002:80017564       JMapInfoIter::getValue<l>(bool const(char const *,long *))
 0002:800175C8       BckCtrl::BckCtrl((ResourceHolder *,char const *))
 0002:800177EC       BckCtrl::add((BckCtrlData const &))
 0002:80017880       MR::timeKeepDemoFadeOut((void))
 0002:8001790C       BckCtrlData::__as((BckCtrlData const &))
 0002:80017970       BckCtrl::overWrite((BckCtrlData const &))
 0002:800179F4       BckCtrl::changeBckSetting(const(char const *,XanimePlayer *))
 0002:80017AA4       BckCtrl::find(const(char const *))
 0002:80017B70       BckCtrlFunction::reflectBckCtrlData((BckCtrlData const &,XanimePlayer *))
 0002:80017CBC       BckCtrlData::BckCtrlData((void))
 0002:80017CE8       BpkPlayer::BpkPlayer((ResourceHolder const *,J3DModelData *))
 0002:80017D28       BpkPlayer::attach((J3DAnmBase *,J3DModelData *))
 0002:80017D30       BpkPlayer::detach((J3DAnmBase *,J3DModelData *))
 0002:80017D38       BrkPlayer::BrkPlayer((ResourceHolder const *,J3DModelData *))
 0002:80017D78       BrkPlayer::attach((J3DAnmBase *,J3DModelData *))
 0002:80017D80       BrkPlayer::detach((J3DAnmBase *,J3DModelData *))
 0002:80017D88       BtkPlayer::BtkPlayer((ResourceHolder const *,J3DModelData *))
 0002:80017DC8       BtkPlayer::attach((J3DAnmBase *,J3DModelData *))
 0002:80017DD0       BtkPlayer::detach((J3DAnmBase *,J3DModelData *))
 0002:80017DD8       BtpPlayer::BtpPlayer((ResourceHolder const *,J3DModelData *))
 0002:80017E18       BtpPlayer::attach((J3DAnmBase *,J3DModelData *))
 0002:80017E20       BtpPlayer::detach((J3DAnmBase *,J3DModelData *))
 0002:80017E28       BvaPlayer::BvaPlayer((ResTable const *,J3DModel *))
 0002:80017E74       BvaPlayer::calc((void))
 0002:80017F48       BvaPlayer::getAnmVisibility((void))
 0002:80017F5C       LayoutAnmPlayer::LayoutAnmPlayer((LayoutManager const *))
 0002:80017FB8       LayoutAnmPlayer::movement((void))
 0002:80017FD0       LayoutAnmPlayer::reflectFrame((void))
 0002:80017FE8       LayoutAnmPlayer::start((char const *))
 0002:80018084       LayoutAnmPlayer::stop((void))
 0002:80018090       MaterialAnmBuffer::MaterialAnmBuffer((ResourceHolder const *,J3DModelData *,bool))
 0002:8001815C       MaterialAnmBuffer::getDiffFlag(const(long))
 0002:8001816C       MaterialAnmBuffer::getAllocMaterialAnmNum(const(J3DModelData *,bool))
 0002:80018180       MaterialAnmBuffer::searchUpdateMaterialID((ResourceHolder const *,J3DModelData *))
 0002:80018274       MaterialAnmBuffer::setDiffFlag((ResourceHolder const *))
 0002:800183F0       MaterialAnmBuffer::getDifferedMaterialNum(const(J3DModelData const *))
 0002:80018434       MaterialAnmBuffer::attachMaterialAnmBuffer((J3DModelData *,bool))
 0002:80018438       NWC24EncodeQuotedPrintable
 0002:80018490       modifyDiffFlagBrk(ulong *,J3DAnmTevRegKey const *,bool,char const *)
 0002:8001854C       MR::onDiffFlagBpk((ulong *,J3DAnmColorKey const *,char const *))
 0002:80018558       MR::getFirstPolyOnLineToMapExceptActor((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,LiveActor const *))
 0002:80018560       modifyDiffFlag_14J3DAnmColorKey___FPUlPC14J3DAnmColorKey11J3DDiffFlagbPCcPCc_v
 0002:800185C4       MR::offDiffFlagBpk((ulong *,J3DAnmColorKey const *,char const *))
 0002:800185D8       MR::onDiffFlagBtp((ulong *,J3DAnmTexPattern const *,char const *))
 0002:800185EC       modifyDiffFlag_16J3DAnmTexPattern___FPUlPC16J3DAnmTexPattern11J3DDiffFlagbPCcPCc_v
 0002:80018650       MR::offDiffFlagBtp((ulong *,J3DAnmTexPattern const *,char const *))
 0002:80018664       MR::onDiffFlagBtk((ulong *,J3DAnmTextureSRTKey const *,char const *))
 0002:80018678       modifyDiffFlag_19J3DAnmTextureSRTKey___FPUlPC19J3DAnmTextureSRTKey11J3DDiffFlagbPCcPCc_v
 0002:800186E8       MR::offDiffFlagBtk((ulong *,J3DAnmTextureSRTKey const *,char const *))
 0002:800186FC       SwitchWatcherHolder::joinSwitchEventListenerA((StageSwitchCtrl const *,SwitchEventListener *))
 0002:80018700       MR::declarePowerStar((NameObj const *,long))
 0002:80018708       MR::endActorCameraAtLanding((LiveActor const *,ActorCameraInfo const *,long))
 0002:80018714       J3DMaterialAnm::J3DMaterialAnm((void))
 0002:800187F4       J3DTevKColorAnm::J3DTevKColorAnm((void))
 0002:80018804       OSSetAlarmTag
 0002:800188A4       J3DTexNoAnm::J3DTexNoAnm((void))
 0002:800189B8       J3DMaterialAnm::~J3DMaterialAnm((void))
 0002:80018A80       J3DTexNoAnm::calc(const(ushort *))
 0002:80018A94       JGeometry::TVec3<f>::TVec3<f>((void))
 0002:80018A98       JGeometry::TVec3<f>::zero((void))
 0002:80018AAC       XtransformInfo::__as((XtransformInfo const &))
 0002:80018B14       JGeometry::TVec3<f>::__as((JGeometry::TVec3<f> const &))
 0002:80018B28       JGeometry::TVec3<f>::__ml(const(float))
 0002:80018B8C       JGeometry::TVec3<f>::TVec3<f>((JGeometry::TVec3<f> const &))
 0002:80018BA0       JGeometry::TVec3<f>::__apl((JGeometry::TVec3<f> const &))
 0002:80018BC4       JGeometry::TVec3<f>::TVec3<f>(void *(float,float,float))
 0002:80018BD4       JGeometry::TVec3<f>::__mi(const(JGeometry::TVec3<f> const &))
 0002:80018C2C       Quaternion::__as((Quaternion const &))
 0002:80018C50       XanimeTrack::init((void))
 0002:80018C6C       XjointInfo::XjointInfo((void))
 0002:80018CFC       XjointTransform::XjointTransform((void))
 0002:80018D8C       XanimeCore::shareJointTransform((XanimeCore const *))
 0002:80018D98       XanimeCore::enableJointTransform((J3DModelData *))
 0002:80018EBC       XanimeCore::reconfigJointTransform((J3DModelData *))
 0002:80018F38       XanimeCore::initMember((ulong))
 0002:80018FF8       XanimeCore::XanimeCore((ulong,ulong,uchar))
 0002:80019088       XanimeCore::XanimeCore((ulong,XanimeCore *))
 0002:800190E8       XanimeCore::doFreeze((void))
 0002:800190FC       XanimeCore::setBck((ulong,J3DAnmTransform *))
 0002:8001912C       J3DColorBlockLightOff::setColorChanNum((uchar))
 0002:80019134       XanimeCore::setWeight((uchar,float))
 0002:80019140       LodCtrl::setDistanceToLow((float))
 0002:80019148       XanimeCore::calcBlend((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:8001955C       XanimeCore::calcSingle((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:80019728       XanimeCore::calcBlendSpecial((void))
 0002:80019B44       XanimeCore::updateFrame((void))
 0002:80019C10       XanimeCore::calcScaleBlendMaya((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8001A158       XanimeCore::calcScaleBlendMayaNoTransform((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8001A324       XanimeCore::calcScaleBlendSI((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8001A7F4       XanimeCore::calcScaleBlendBasic((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8001A8F8       XanimeCore::calcScaleBlendSpecial((void))
 0002:8001A990       XanimeCore::freezeCopy((J3DModelData *,XanimeCore *,ulong,ulong))
 0002:8001AA7C       XanimeCore::initT((J3DModelData *))
 0002:8001AB64       XanimeCore::fixT((JGeometry::TVec3<f> *))
 0002:8001ABAC       XanimeCore::~XanimeCore((void))
 0002:8001ABEC       XtransformInfo::XtransformInfo((void))
 0002:8001AC3C       XanimeCore::calc((void))
 0002:8001AD60       XanimeCore::init((Vec const &,float const (&)[3][4]))
 0002:8001AD74       J3DMtxCalcNoAnm<28J3DMtxCalcCalcTransformBasic,25J3DMtxCalcJ3DSysInitBasic>::init((Vec const &,float const (&)[3][4]))
 0002:8001AD84       J3DTransformInfo::__as((J3DTransformInfo const &))
 0002:8001ADB8       JASDsp::getDSPMixerLevel((void))
 0002:8001ADC0       J3DMtxCalc::getAnmTransform((void))
 0002:8001ADC8       J3DMtxCalc::getAnmTransform((uchar))
 0002:8001ADD0       J3DMtxCalc::setAnmTransform((J3DAnmTransform *))
 0002:8001ADD4       J3DMtxCalc::setAnmTransform((uchar,J3DAnmTransform *))
 0002:8001ADDC       JMath::fastReciprocal((float))
 0002:8001ADE4       XanimePlayer::init((void))
 0002:8001AE90       XanimePlayer::XanimePlayer((J3DModel *,XanimeResourceTable *))
 0002:8001AFD4       XanimePlayer::XanimePlayer((J3DModel *,XanimeResourceTable *,XanimePlayer *))
 0002:8001B10C       XanimePlayer::runDefaultAnimation((void))
 0002:8001B110       XanimePlayer::stopAnimation((char const *))
 0002:8001B154       XanimePlayer::changeTrackAnimation((uchar,char const *))
 0002:8001B1AC       XanimePlayer::changeTrackAnimation((uchar,ulong))
 0002:8001B224       XanimePlayer::changeSimpleBck((char const *))
 0002:8001B298       XanimePlayer::changeAnimation((char const *))
 0002:8001B2F8       XanimePlayer::changeAnimationByHash((ulong))
 0002:8001B33C       XanimePlayer::swapFrameCtrl((XanimeGroupInfo const *))
 0002:8001B464       XanimePlayer::changeAnimation((XanimeGroupInfo const *))
 0002:8001B4C8       XanimePlayer::prepareAnimation((XanimeGroupInfo const *))
 0002:8001B528       XanimePlayer::runNextAnimation((void))
 0002:8001B650       XanimePlayer::changeAnimationSimple((J3DAnmTransform *))
 0002:8001B788       XanimePlayer::changeSpeed((float))
 0002:8001B78C       JASLfo::setDepth((float))
 0002:8001B794       XanimePlayer::changeInterpoleFrame((long))
 0002:8001B7D0       XanimePlayer::changeTrackWeight((ulong,float))
 0002:8001B80C       XanimePlayer::calcAnm((ushort))
 0002:8001B91C       XanimePlayer::setModel((J3DModel *))
 0002:8001B930       XanimePlayer::overWriteMtxCalc((ushort))
 0002:8001B94C       XanimePlayer::clearMtxCalc((ushort))
 0002:8001B968       XanimePlayer::clearAnm((ushort))
 0002:8001B990       XanimePlayer::updateBeforeMovement((void))
 0002:8001BA20       XanimePlayer::updateAfterMovement((void))
 0002:8001BB50       XanimePlayer::updateInterpoleRatio((void))
 0002:8001BBF0       XanimePlayer::getMainAnimationTrans(const(ulong,JGeometry::TVec3<f> *))
 0002:8001BCCC       XanimePlayer::isRun(const(char const *))
 0002:8001BD68       XanimePlayer::isTerminate(const(char const *))
 0002:8001BDD0       XanimePlayer::isTerminate(const(void))
 0002:8001BDF8       XanimePlayer::setDefaultAnimation((char const *))
 0002:8001BE5C       XanimePlayer::runDefaultAnimation((void))
 0002:8001BEDC       XanimePlayer::isAnimationRunSimple(const(void))
 0002:8001BF2C       XanimePlayer::getCurrentAnimationName(const(void))
 0002:8001BF38       IPCGetBufferLo
 0002:8001BF40       GKI_getfirst
 0002:8001BF48       XanimePlayer::getDefaultAnimationName(const(void))
 0002:8001BF64       J3DTexGenBlockPatched::getTexMtxOffset(const(void))
 0002:8001BF6C       XanimePlayer::getNameStringPointer(const(char const *))
 0002:8001BF88       UserFile::makeGameDataBinary(const(uchar *,ulong))
 0002:8001BFA4       XanimePlayer::checkPass(const(float))
 0002:8001C024       XanimePlayer::getSimpleGroup(const(void))
 0002:8001C044       XanimePlayer::duplicateSimpleGroup((void))
 0002:8001C0B8       XanimeFrameCtrl::XanimeFrameCtrl((void))
 0002:8001C114       XanimePlayer::changeCurrentAnimation((XanimeGroupInfo const *))
 0002:8001C130       XanimeFrameCtrl::~XanimeFrameCtrl((void))
 0002:8001C170       XanimeResourceTable::init((void))
 0002:8001C1A4       XanimeResourceTable::getGroupInfo(const(char const *))
 0002:8001C260       XanimeResourceTable::getSimpleIndex(const(char const *))
 0002:8001C2D4       XanimeResourceTable::getIndexFromHash(const(ulong))
 0002:8001C318       XanimeResourceTable::getGroupInfoFromHash(const(ulong))
 0002:8001C360       XanimeResourceTable::getGroupIndex(const(char const *))
 0002:8001C3DC       XanimeResourceTable::getSingleIndex(const(char const *))
 0002:8001C464       XanimeResourceTable::search(const(XanimeBckTable **,char const *,ulong))
 0002:8001C504       XanimeResourceTable::XanimeResourceTable((ResourceHolder *))
 0002:8001C5A0       XanimeResourceTable::swapBckName(const(char const *,XanimeSwapTable *))
 0002:8001C624       XanimeResourceTable::initGroupInfo((ResourceHolder *,XanimeGroupInfo *,XanimeAuxInfo *,XanimeOfsInfo *,XanimeBckTable *,XanimeBckTable2 *,XanimeBckTable3 *,XanimeBckTable4 *,XanimeSwapTable *))
 0002:8001CA44       XanimeResourceTable::XanimeResourceTable((ResourceHolder *,XanimeGroupInfo *,XanimeAuxInfo *,XanimeOfsInfo *,XanimeBckTable *,XanimeBckTable2 *,XanimeBckTable3 *,XanimeBckTable4 *,XanimeSwapTable *))
 0002:8001CB90       XanimeResourceTable::getIndex(const(XanimeDirectory *,char const *))
 0002:8001CC0C       XanimeResourceTable::getGroupInfo(const(char const *,XanimeDirectory *))
 0002:8001CDBC       XanimeResourceTable::createSortTable((void))
 0002:8001CE48       XanimeGroupInfo::init((void))
 0002:8001CE9C       GameDataTemporaryInGalaxy::resetStageResultStarPieceParam((void))
 0002:8001CEAC       XanimeResourceTable::findResMotion(const(char const *))
 0002:8001CF18       XanimeResourceTable::findStringMotion(const(char const *))
 0002:8001CF44       JGeometry::TVec3<f>::dot(const(JGeometry::TVec3<f> const &))
 0002:8001CF64       JGeometry::TVec3<f>::set<f>(void (JGeometry::TVec3<f> const &))
 0002:8001CF80       JGeometry::TVec3<f>::add((JGeometry::TVec3<f> const &))
 0002:8001CFA4       JMAAsinRadian(float)
 0002:8001CFC0       NPCActor::turnToPlayer((void))
 0002:8001D040       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::mult33(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> &))
 0002:8001D0B8       JMapInfoIter::getValue<f>(bool const(char const *,float *))
 0002:8001D138       AreaFormCube::AreaFormCube((int))
 0002:8001D198       AreaFormCube::init((JMapInfoIter const &))
 0002:8001D1F8       AreaFormCube::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001D2AC       AreaFormCube::calcWorldPos(const(JGeometry::TVec3<f> *))
 0002:8001D2D8       AreaFormCube::calcWorldRotate(const(JGeometry::TVec3<f> *))
 0002:8001D450       AreaFormCube::calcWorldBox(const(JGeometry::TDirBox3<f> *))
 0002:8001D50C       AreaFormCube::calcLocalPos(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:8001D560       AreaFormCube::updateBoxParam((void))
 0002:8001D688       AreaFormCube::calcWorldMtx(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8001D6DC       AreaFormSphere::AreaFormSphere((void))
 0002:8001D708       AreaFormSphere::calcUpVec(const(JGeometry::TVec3<f> *))
 0002:8001D768       AreaFormCylinder::calcPos(const(JGeometry::TVec3<f> *))
 0002:8001D794       AreaFormSphere::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001D804       AreaFormBowl::AreaFormBowl((void))
 0002:8001D830       AreaFormBowl::init((JMapInfoIter const &))
 0002:8001D8AC       AreaFormBowl::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001D94C       AreaFormBowl::calcUpVec((JGeometry::TVec3<f> const &))
 0002:8001D9D0       AreaFormCylinder::AreaFormCylinder((void))
 0002:8001DA38       AreaFormCylinder::calcCenterPos(const(JGeometry::TVec3<f> *))
 0002:8001DAA8       AreaFormCylinder::calcUpVec(const(JGeometry::TVec3<f> *))
 0002:8001DB08       AreaFormCylinder::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001DBDC       AreaFormCylinder::calcDir((JGeometry::TVec3<f> const &))
 0002:8001DC74       JMathInlineVEC::PSVECSubtract((Vec const *,Vec const *,Vec *))
 0002:8001DC98       AreaFormSphere::init((JMapInfoIter const &))
 0002:8001DD58       AreaFormCylinder::init((JMapInfoIter const &))
 0002:8001DDF8       JGeometry::TVec3<f>::__pl(const(JGeometry::TVec3<f> const &))
 0002:8001DE50       __sinit__AreaFormDrawer_cpp
 0002:8001DE9C       JUtility::TColor::TColor((uchar,uchar,uchar,uchar))
 0002:8001DEB0       AreaObj::AreaObj((int,char const *))
 0002:8001DFF8       AreaObj::init((JMapInfoIter const &))
 0002:8001E1A0       AreaObj::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001E210       AreaObj::isValidSwitchB(const(void))
 0002:8001E220       AreaObj::isOnSwitchA(const(void))
 0002:8001E230       AreaObj::isValidSwitchA(const(void))
 0002:8001E240       AreaObj::setFollowMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *))
 0002:8001E24C       AreaObj::getFollowMtx(const(void))
 0002:8001E258       AreaObjMgr::AreaObjMgr((long,char const *))
 0002:8001E2B8       MR::Vector<Q22MR26AssignableArray<P7AreaObj>>::~Vector<Q22MR26AssignableArray<P7AreaObj>>((void))
 0002:8001E310       AreaObjMgr::entry((AreaObj *))
 0002:8001E37C       AreaObjMgr::find_in(const(JGeometry::TVec3<f> const &))
 0002:8001E458       AreaObj::validate((void))
 0002:8001E464       AreaObj::invalidate((void))
 0002:8001E470       AreaObj::getManagerName(const(void))
 0002:8001E478       MR::Functor<7AreaObj>(MR::FunctorV0M<P7AreaObj,M7AreaObjFPCvPv_v> (AreaObj *,void (AreaObj::)(void const *,void *)))
 0002:8001E4B8       MR::FunctorV0M<P7AreaObj,M7AreaObjFPCvPv_v>::__cl(const(void))
 0002:8001E4E8       MR::FunctorV0M<P7AreaObj,M7AreaObjFPCvPv_v>::clone(const(JKRHeap *))
 0002:8001E550       AreaObj::~AreaObj((void))
 0002:8001E5A8       AreaObjMgr::~AreaObjMgr((void))
 0002:8001E610       MR::AssignableArray<P7AreaObj>::~AssignableArray<P7AreaObj>((void))
 0002:8001E670       @unnamed@AreaObjContainer_cpp@::createManager<10AreaObjMgr>(AreaObjMgr *(long,char const *))
 0002:8001E6C0       @unnamed@AreaObjContainer_cpp@::createManager<13CubeCameraMgr>(AreaObjMgr *(long,char const *))
 0002:8001E710       @unnamed@AreaObjContainer_cpp@::createManager<11WarpCubeMgr>(AreaObjMgr *(long,char const *))
 0002:8001E77C       @unnamed@AreaObjContainer_cpp@::createManager<12WaterAreaMgr>(AreaObjMgr *(long,char const *))
 0002:8001E7CC       @unnamed@AreaObjContainer_cpp@::createManager<19GlaringLightAreaMgr>(AreaObjMgr *(long,char const *))
 0002:8001E8BC       AreaObjContainer::AreaObjContainer((char const *))
 0002:8001E900       AreaObjContainer::init((JMapInfoIter const &))
 0002:8001E9A8       AreaObjContainer::getManager(const(char const *))
 0002:8001EA40       MR::setEffectHostMtx((LayoutActor *,char const *,float *[4]))
 0002:8001EA74       MR::getAreaObjContainer((void))
 0002:8001EA9C       AreaObjContainer::~AreaObjContainer((void))
 0002:8001EAF4       WarpCubeMgr::~WarpCubeMgr((void))
 0002:8001EB4C       AreaObjFollower::AreaObjFollower((AreaObj *,JMapInfoIter const &))
 0002:8001EBAC       AreaObjFollower::update((void))
 0002:8001EC1C       MR::addBaseMatrixFollowerAreaObj((AreaObj *,JMapInfoIter const &))
 0002:8001EC8C       BaseMatrixFollower::setGravityFollowHost((NameObj const *))
 0002:8001EC90       AstroChangeStageCube::AstroChangeStageCube((int,char const *))
 0002:8001ECDC       AstroChangeStageCube::init((JMapInfoIter const &))
 0002:8001ED50       AstroChangeStageCube::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001EE40       AstroChangeStageCube::~AstroChangeStageCube((void))
 0002:8001EE9C       AstroChangeStageCube::movement((void))
 0002:8001F0A0       AudioEffectArea::AudioEffectArea((int,char const *))
 0002:8001F0E8       AudioEffectArea::init((JMapInfoIter const &))
 0002:8001F13C       AudioEffectArea::movement((void))
 0002:8001F220       AudioEffectArea::~AudioEffectArea((void))
 0002:8001F27C       AudioEffectArea::getManagerName(const(void))
 0002:8001F288       BgmProhibitArea::~BgmProhibitArea((void))
 0002:8001F2E4       @unnamed@BgmProhibitArea_cpp@::findDataElement((char const *))
 0002:8001F358       BgmProhibitArea::BgmProhibitArea((int,char const *))
 0002:8001F3B0       BgmProhibitArea::init((JMapInfoIter const &))
 0002:8001F3E4       BgmProhibitArea::movement((void))
 0002:8001F54C       BgmProhibitArea::getManagerName(const(void))
 0002:8001F558       BigBubbleCameraArea::BigBubbleCameraArea((int,char const *))
 0002:8001F594       CubeCameraArea::~CubeCameraArea((void))
 0002:8001F5F0       BigBubbleCameraArea::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001F6DC       BigBubbleSwitchArea::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:8001F730       BigBubbleCameraArea::~BigBubbleCameraArea((void))
 0002:8001F788       BigBubbleSwitchArea::~BigBubbleSwitchArea((void))
 0002:8001F7E0       BigBubbleSwitchArea::getManagerName(const(void))
 0002:8001F7EC       BigBubbleCameraArea::getManagerName(const(void))
 0002:8001F7F8       BigBubbleGoalArea::BigBubbleGoalArea((int,char const *))
 0002:8001F854       BigBubbleGoalArea::init((JMapInfoIter const &))
 0002:8001F8E8       BigBubbleGoalArea::addBubble((BigBubble *))
 0002:8001F95C       BigBubbleGoalArea::movement((void))
 0002:8001F9F4       BigBubbleGoalArea::draw(const(void))
 0002:8001FB10       MR::checkBigBubbleGoal((BigBubble *))
 0002:8001FB64       BigBubbleGoalArea::getManagerName(const(void))
 0002:8001FB70       BigBubbleGoalArea::~BigBubbleGoalArea((void))
 0002:8001FBCC       BloomArea::BloomArea((int,char const *))
 0002:8001FC34       ImageEffectArea::~ImageEffectArea((void))
 0002:8001FC90       BloomArea::init((JMapInfoIter const &))
 0002:8001FD00       BloomArea::~BloomArea((void))
 0002:8001FD58       ImageEffectArea::isSyncWithPlayer(const(void))
 0002:8001FD60       BloomArea::getManagerName(const(void))
 0002:8001FD6C       JGeometry::TVec3<f>::scale((float))
 0002:8001FD94       JGeometry::TVec3<f>::__ami((JGeometry::TVec3<f> const &))
 0002:8001FDB8       CameraRepulsiveArea::~CameraRepulsiveArea((void))
 0002:8001FE14       CameraRepulsiveSphere::~CameraRepulsiveSphere((void))
 0002:8001FE6C       CameraRepulsiveCylinder::~CameraRepulsiveCylinder((void))
 0002:8001FEC4       CameraRepulsiveSphere::getRepulsion((JGeometry::TVec3<f> const &))
 0002:8001FED8       CameraRepulsiveCylinder::getRepulsion((JGeometry::TVec3<f> const &))
 0002:8001FFD4       CameraRepulsiveArea::getManagerName(const(void))
 0002:8001FFE0       ChangeBgmCube::ChangeBgmCube((int,char const *))
 0002:800200B4       ChangeBgmCube::movement((void))
 0002:8002044C       JGeometry::TVec3<f>::setLength((float))
 0002:80020530       JGeometry::TUtil<f>::inv_sqrt((float))
 0002:80020568       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getXDir(const(JGeometry::TVec3<f> &))
 0002:80020580       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getYDir(const(JGeometry::TVec3<f> &))
 0002:80020598       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getZDir(const(JGeometry::TVec3<f> &))
 0002:800205B0       CollisionArea::CollisionArea((int,char const *))
 0002:80020628       CollisionArea::init((JMapInfoIter const &))
 0002:80020740       CollisionArea::movement((void))
 0002:80020984       CollisionArea::hitCheck((JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:8002114C       AreaPolygon::setMtx((float *[4],JGeometry::TVec3<f> const &,float))
 0002:80021194       AreaPolygon::setSurfaceAndSync((long))
 0002:800211DC       AreaPolygon::setSurface((long))
 0002:800216CC       PTimerSwitch::initAfterPlacement((void))
 0002:800216DC       AreaPolygon::~AreaPolygon((void))
 0002:80021790       AreaObj::isValid(const(void))
 0002:800217C4       AreaPolygon::AreaPolygon((void))
 0002:8002181C       DynamicCollisionObj::~DynamicCollisionObj((void))
 0002:80021878       AreaPolygon::init((JMapInfoIter const &))
 0002:80021A10       LiveActor::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80021A18       LiveActor::receiveMsgThrow((HitSensor *,HitSensor *))
 0002:80021A20       LiveActor::receiveMsgTaken((HitSensor *,HitSensor *))
 0002:80021A28       LiveActor::receiveMsgTake((HitSensor *,HitSensor *))
 0002:80021A30       LiveActor::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80021A38       LiveActor::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80021A40       LiveActor::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80021A48       LiveActor::updateHitSensor((HitSensor *))
 0002:80021A4C       LiveActor::control((void))
 0002:80021A50       CubeCameraArea::CubeCameraArea((int,char const *))
 0002:80021A98       CubeCameraArea::init((JMapInfoIter const &))
 0002:80021C14       CubeCameraArea::movement((void))
 0002:80021CC4       CubeCameraArea::isValidCameraID(const(void))
 0002:80021CD4       CubeCameraArea::getCameraID(const(void))
 0002:80021CE0       CubeCameraArea::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:80021D2C       CubeCameraArea::setCurrentCategory((long))
 0002:80021D3C       CubeCameraArea::getCategoryArg(const(void))
 0002:80021D44       CubeCameraMgr::CubeCameraMgr((long,char const *))
 0002:80021D88       CubeCameraMgr::initAfterLoad((void))
 0002:80021D8C       CubeCameraMgr::sort((void))
 0002:80021E38       CubeCameraMgr::~CubeCameraMgr((void))
 0002:80021E90       DeathArea::DeathArea((int,char const *))
 0002:80021ECC       DeathArea::init((JMapInfoIter const &))
 0002:80021F00       DeathArea::movement((void))
 0002:80021F64       DeathArea::isInVolume(const(JGeometry::TVec3<f> const &))
 0002:80021FC8       DeathArea::getDeathType(const(void))
 0002:80021FE0       DeathArea::~DeathArea((void))
 0002:8002203C       DeathArea::getManagerName(const(void))
 0002:80022048       DepthOfFieldArea::DepthOfFieldArea((int,char const *))
 0002:8002209C       DepthOfFieldArea::init((JMapInfoIter const &))
 0002:800220E0       DepthOfFieldArea::getIntensity(const(void))
 0002:80022128       DepthOfFieldArea::getBlurMaxDist(const(void))
 0002:80022130       DepthOfFieldArea::getBlurMinDist(const(void))
 0002:80022138       DepthOfFieldArea::~DepthOfFieldArea((void))
 0002:80022190       DepthOfFieldArea::isSyncWithPlayer(const(void))
 0002:80022198       DepthOfFieldArea::getManagerName(const(void))
 0002:800221A4       FollowCollisionArea::~FollowCollisionArea((void))
 0002:800221FC       FollowCollisionArea::FollowCollisionArea((JGeometry::TVec3<f> const &,float *[4],float))
 0002:800222DC       FollowCollisionArea::movement((void))
 0002:800224A8       FollowCollisionArea::hitCheck((JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:80022BF8       GlaringLightAreaMgr::GlaringLightAreaMgr((long,char const *))
 0002:80022C34       GlaringLightArea::GlaringLightArea((int,char const *))
 0002:80022C88       GlaringLightArea::init((JMapInfoIter const &))
 0002:80022DE0       GlaringLightArea::movement((void))
 0002:80022E80       GlaringLightArea::getManagerName(const(void))
 0002:80022E8C       HazeCube::HazeCube((int,char const *))
 0002:80022ED0       HazeCube::init((JMapInfoIter const &))
 0002:80022F34       HazeCube::~HazeCube((void))
 0002:80022F90       HazeCube::getManagerName(const(void))
 0002:80022F9C       ImageEffectArea::ImageEffectArea((ImageEffectArea::EImageEffectType,int,char const *))
 0002:80022FF0       ImageEffectAreaMgr::ImageEffectAreaMgr((long,char const *))
 0002:8002302C       ImageEffectAreaMgr::initAfterPlacement((void))
 0002:80023030       ImageEffectAreaMgr::sort((void))
 0002:800230DC       ImageEffectAreaMgr::~ImageEffectAreaMgr((void))
 0002:80023134       LightArea::LightArea((int,char const *))
 0002:80023178       LightArea::init((JMapInfoIter const &))
 0002:800231BC       LightArea::~LightArea((void))
 0002:80023218       LightArea::getManagerName(const(void))
 0002:80023224       LightAreaHolder::LightAreaHolder((long,char const *))
 0002:80023268       LightAreaHolder::tryFindLightID(const(JGeometry::TVec3<f> const &,ZoneLightID *))
 0002:80023308       LightAreaHolder::initAfterPlacement((void))
 0002:8002330C       LightAreaHolder::sort((void))
 0002:800233AC       LightAreaHolder::~LightAreaHolder((void))
 0002:80023404       JGeometry::TVec3<f>::__amu((float))
 0002:8002342C       MercatorTransformCube::MercatorTransformCube((int,char const *))
 0002:80023470       MercatorTransformCube::init((JMapInfoIter const &))
 0002:800234E0       MercatorTransformCube::convertTransAndRotate(const(JGeometry::TVec3<f> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,bool))
 0002:800236D8       MercatorTransformCube::getSphereRadius(const(void))
 0002:80023718       MercatorTransformCube::calcUV(const(JGeometry::TVec2<f> *,JGeometry::TVec3<f> const &))
 0002:800237A8       MercatorTransformCube::calcLocalBoxSize(const(JGeometry::TVec3<f> *))
 0002:80023808       MR::tryFindLinkNamePos((NameObj const *,char const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:8002385C       MR::convertMercatorPlaneToSphereTransAndRotate((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,bool))
 0002:800238E0       MR::initDefaultPosForMercator((LiveActor *,JMapInfoIter const &,bool))
 0002:800239C0       MR::calcNearestRailPosForMercator((JGeometry::TVec3<f> *,LiveActor const *,float))
 0002:80023AB8       MR::calcRailClippingInfoForMercator((JGeometry::TVec3<f> *,float *,LiveActor *,float,float))
 0002:80023D80       MR::initAndSetRailClipping((JGeometry::TVec3<f> *,LiveActor *,float,float))
 0002:80023DD8       MR::calcRailTotalLengthForMercator((LiveActor const *,float))
 0002:80023F20       MR::getDivideMercatorRailPosition((DivideMercatorRailPosInfo *,LiveActor const *,ulong,float,ulong))
 0002:800242DC       MR::createMapPartsRailMoverForMercator((LiveActor *,JMapInfoIter const &,bool))
 0002:80024458       JMASinRadian(float)
 0002:800244C0       MR::min((float,float))
 0002:800244DC       MR::max((float,float))
 0002:800244F0       @unnamed@MercatorTransformCube_cpp@::getMercatorCube((void))
 0002:80024520       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getEuler(const(JGeometry::TVec3<f> &))
 0002:80024620       MessageArea::MessageArea((int,char const *))
 0002:80024664       MessageArea::init((JMapInfoIter const &))
 0002:800246A8       MessageArea::~MessageArea((void))
 0002:80024704       PlayerSeArea::PlayerSeArea((int,char const *))
 0002:80024740       PlayerSeArea::init((JMapInfoIter const &))
 0002:8002477C       PlayerSeArea::~PlayerSeArea((void))
 0002:800247D8       PlayerSeArea::movement((void))
 0002:80024850       PlayerSeArea::getManagerName(const(void))
 0002:8002485C       QuakeEffectArea::QuakeEffectArea((int,char const *))
 0002:8002490C       RestartCube::RestartCube((int,char const *))
 0002:80024960       RestartCube::init((JMapInfoIter const &))
 0002:800249D0       RestartCube::updatePlayerRestartIdInfo((void))
 0002:80024A44       RestartCube::~RestartCube((void))
 0002:80024AA0       RestartCube::changeBgm((void))
 0002:80024C40       ScreenBlurArea::ScreenBlurArea((int,char const *))
 0002:80024C94       ScreenBlurArea::init((JMapInfoIter const &))
 0002:80024CD8       ScreenBlurArea::~ScreenBlurArea((void))
 0002:80024D30       ScreenBlurArea::isSyncWithPlayer(const(void))
 0002:80024D38       ScreenBlurArea::getManagerName(const(void))
 0002:80024D44       SimpleBloomArea::SimpleBloomArea((int,char const *))
 0002:80024DA8       SimpleBloomArea::init((JMapInfoIter const &))
 0002:80024E0C       SimpleBloomArea::~SimpleBloomArea((void))
 0002:80024E64       SimpleBloomArea::getManagerName(const(void))
 0002:80024E70       SoundEmitterCube::~SoundEmitterCube((void))
 0002:80024ECC       SoundEmitterCube::SoundEmitterCube((int,char const *))
 0002:80024F24       SoundEmitterCube::init((JMapInfoIter const &))
 0002:80024FB4       SoundEmitterCube::movement((void))
 0002:800251BC       JGeometry::TBox<Q29JGeometry8TVec3<f>>::extend((JGeometry::TVec3<f> const &))
 0002:80025250       SoundEmitterSphere::~SoundEmitterSphere((void))
 0002:800252AC       SoundEmitterSphere::SoundEmitterSphere((int,char const *))
 0002:80025308       SoundEmitterSphere::init((JMapInfoIter const &))
 0002:8002539C       SoundEmitterSphere::movement((void))
 0002:800254F8       SpinGuidanceArea::SpinGuidanceArea((int,char const *))
 0002:80025534       SpinGuidanceArea::~SpinGuidanceArea((void))
 0002:80025590       SpinGuidanceArea::init((JMapInfoIter const &))
 0002:80025638       SunLightArea::SunLightArea((int,char const *))
 0002:80025674       SunLightArea::~SunLightArea((void))
 0002:800256D0       SunLightArea::getManagerName(const(void))
 0002:800256DC       SwitchArea::SwitchArea((int,char const *))
 0002:80025718       SwitchArea::init((JMapInfoIter const &))
 0002:8002574C       SwitchArea::movement((void))
 0002:80025814       SwitchArea::isUpdate(const(void))
 0002:80025898       SwitchArea::getManagerName(const(void))
 0002:800258A4       WarpCube::~WarpCube((void))
 0002:80025900       WarpCubeMgr::getPairCube((AreaObj const *))
 0002:80025988       WarpCubeMgr::setInvalidateTimer((AreaObj *,ushort))
 0002:80025998       WarpCubeMgr::startEventCamera((AreaObj const *))
 0002:800259E0       WarpCubeMgr::endEventCamera((void))
 0002:80025A30       WarpCube::movement((void))
 0002:80025AA4       WarpCube::draw(const(void))
 0002:80025C10       WarpCube::init((JMapInfoIter const &))
 0002:80025D18       WaterArea::WaterArea((int,char const *))
 0002:80025D5C       WaterArea::init((JMapInfoIter const &))
 0002:80025E00       WaterAreaMgr::WaterAreaMgr((long,char const *))
 0002:80025E3C       WaterArea::~WaterArea((void))
 0002:80025E98       WaterAreaMgr::~WaterAreaMgr((void))
 0002:80025EF0       JASHeap::~JASHeap((void))
 0002:80025FC0       AudNewAudSystem_(JAUSectionHeap *,JKRArchive *,JKRArchive *,JKRArchive *,int)
 0002:80026028       @unnamed@AudSystem_cpp@::init_JAS_JAI_((JKRSolidHeap *))
 0002:80026158       AudNewAudSystem(JKRSolidHeap *,void *,JKRArchive *,JKRArchive *,JKRArchive *,JKRArchive *)
 0002:80026334       AudSystem::AudSystem((JAUSectionHeap *,JKRArchive *,JKRArchive *,JKRArchive *))
 0002:80026A30       JAUSoundMgr::~JAUSoundMgr((void))
 0002:80026B48       JAISeCategoryMgr::~JAISeCategoryMgr((void))
 0002:80026C10       AudSystem::getChordInfo((void))
 0002:80026C14       AudMultiBgm::getRhythmHandle((void))
 0002:80026C24       AudSystem::setSpeakerResource((JKRArchive *))
 0002:80026C34       AudSystem::frameWork((void))
 0002:80026CF0       AudSystem::calc((void))
 0002:80026D54       AudSystem::startSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:80026EC8       AudSystem::startLevelSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:80027024       AudSystem::switchToLuigi((JAISoundID,JAISoundHandle *))
 0002:800270BC       AudSystem::isSubmitSeByVolumeSetting((JAISoundID))
 0002:80027118       AudSystem::updateOutputMode((void))
 0002:80027180       AudSystem::preProcessToReset((void))
 0002:80027210       AudSystem::resetAudio((ulong,bool))
 0002:80027268       AudSystem::resumeReset((void))
 0002:800272E4       AudSystem::hasReset(const(void))
 0002:80027358       AudSystem::initSceneVolume((void))
 0002:800273DC       AudSystem::pause((void))
 0002:8002742C       AudSystem::unpause((void))
 0002:80027470       AudSystem::enterHomeButtonMenu((void))
 0002:800274EC       AudSystem::exitHomeButtonMenu((void))
 0002:80027590       AudSystem::updateHomeButtonMenu((void))
 0002:80027644       AudSystem::isHomeButtonMenuActive(const(void))
 0002:80027668       AudSystem::enterPauseMenu((void))
 0002:800276E4       AudSystem::exitPauseMenu((void))
 0002:80027758       AudSystem::updatePauseMenu((void))
 0002:800277D4       AudSystem::isPauseMenuActive(const(void))
 0002:800277F8       AudSystem::screenSaverProcess((void))
 0002:8002784C       AudSystem::isEnableStartSound((JAISoundID))
 0002:800278C4       AudSystem::doDvdErrorProcess((void))
 0002:80027910       AudSystem::exitDvdErrorProcess((void))
 0002:80027964       AudSystem::getNumOfPlaying((JAISoundID))
 0002:800279B4       AudSystem::getPlayCountMin((JAISoundID))
 0002:80027A10       AudSystem::setMicMtx((float *[4],long))
 0002:80027A94       AudSystem::getMicPos((long))
 0002:80027AA4       AudSystem::setFarCamera((bool))
 0002:80027AAC       AudSystem::recoverSeVolumeSet((ulong))
 0002:80027AD4       AudSystem::initVolumeSetting((void))
 0002:80027B60       AudSystem::initCategoryArrangement((void))
 0002:80027C88       AudSystem::setMeResource((JKRArchive *,ushort,ushort))
 0002:80027D08       AudSystem::seFanfareProcess((void))
 0002:80027D70       def_80027D68
 0002:80027E5C       AudSystem::isFanfareSePlaying((void))
 0002:80027EEC       AudSystem::registerLimitedSound((JAISoundID,long))
 0002:80027FA8       AudSystem::updateLimitedSound((void))
 0002:80027FFC       AudSystem::isRegisteredLimitedSound((JAISoundID))
 0002:80028088       AudSystem::isAlreadyPlayingSoundNear((JAISoundID,JGeometry::TVec3<f> const *,float))
 0002:800281A4       AudSystem::setVolumeZeroForce((long))
 0002:80028218       JAUSectionHeap::getHeap((void))
 0002:800282F4       JAUStdSoundInfo::~JAUStdSoundInfo((void))
 0002:800284CC       AudBgmMgr::~AudBgmMgr((void))
 0002:8002856C       AudBgmVolumeController::~AudBgmVolumeController((void))
 0002:800285D4       AudDopplerAudienceState::resetMtx((float const *[4]))
 0002:8002862C       CameraTargetPlayer::getGroundTriangle(const(void))
 0002:80028634       AudAudience_<4,20AudDopplerAudible<4>,23AudDopplerAudienceState,31AudAudience_withSetting_doppler>::newAudible((JGeometry::TVec3<f> const &,JAISoundID,JGeometry::TVec3<f> const *,ulong))
 0002:80028884       AudDopplerAudienceState::convertAbsToRel((JGeometry::TVec3<f> const &,JAUDopplerAudibleRelPos *))
 0002:800289A8       AudAudience_withSetting::calcDeltaPriority_(const(float,bool,long))
 0002:80028A94       AudAudience_<4,20AudDopplerAudible<4>,23AudDopplerAudienceState,31AudAudience_withSetting_doppler>::deleteAudible((JAIAudible *))
 0002:80028AB8       AudAudience_<4,20AudDopplerAudible<4>,23AudDopplerAudienceState,31AudAudience_withSetting_doppler>::calcPriority((JAIAudible *))
 0002:80028BE4       AudAudience_<4,20AudDopplerAudible<4>,23AudDopplerAudienceState,31AudAudience_withSetting_doppler>::mixChannelOut((JASSoundParams const &,JAIAudible *,int))
 0002:800290EC       AudGenericAudible_<4,24JAUDopplerAudibleChannel,23JAUDopplerAudibleAbsPos>::getOuterParams((int))
 0002:80029108       AudGenericAudible_<4,24JAUDopplerAudibleChannel,23JAUDopplerAudibleAbsPos>::calc((void))
 0002:8002914C       AudFader::~AudFader((void))
 0002:8002918C       AudMultiBgm::~AudMultiBgm((void))
 0002:80029264       AudMeHandle::~AudMeHandle((void))
 0002:800292B8       AudSingleBgm::~AudSingleBgm((void))
 0002:8002932C       JASGlobalInstance<17JAUSoundNameTable>::~JASGlobalInstance<17JAUSoundNameTable>((void))
 0002:800293DC       @unnamed@JAUSectionHeap_cpp@::TPushCurrentHeap::~TPushCurrentHeap((void))
 0002:8002948C       AudDopplerAudible<4>::~AudDopplerAudible<4>((void))
 0002:80029550       JAUDisposerObject_<15JAUStdSoundInfo>::~JAUDisposerObject_<15JAUStdSoundInfo>((void))
 0002:800295B8       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setPositionFromLookAt((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800296E0       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getTrans(const(JGeometry::TVec3<f> &))
 0002:800296F8       std::bitset<2>::reset((ulong))
 0002:8002976C       std::bitset<2>::test(const(ulong))
 0002:800297E0       JAUStreamAramMgrBase_<2>::~JAUStreamAramMgrBase_<2>((void))
 0002:800298E4       JAUStreamStaticAramMgr_<2>::newStreamAram((ulong *))
 0002:80029968       MoviePlayerSimple::control((void))
 0002:8002999C       JAUStreamStaticAramMgr_<2>::deleteStreamAram((ulong))
 0002:80029A6C       AudSystem::~AudSystem((void))
 0002:80029AEC       JASSoundParams::JASSoundParams((void))
 0002:80029B08       JASLfo::setPitch((float))
 0002:80029B10       __sinit__AudSystem_cpp
 0002:80029C14       JASMemPool<10AudMeTrack>::JASMemPool<10AudMeTrack>((void))
 0002:80029C44       JASMemPool<10AudMeTrack>::~JASMemPool<10AudMeTrack>((void))
 0002:80029C9C       JASMemPool<5AudMe>::JASMemPool<5AudMe>((void))
 0002:80029CCC       JASMemPool<5AudMe>::~JASMemPool<5AudMe>((void))
 0002:80029E34       str_80492DC8
 0002:80029E44       str_804A2620
 0002:80029E54       str_8036BAF8
 0002:80029E5C       AudSystemVolumeController::AudSystemVolumeController((AudSystem *))
 0002:80029EA4       AudSystemVolumeController::init((void))
 0002:80029ED0       AudSystemVolumeController::updateSeVolumeSetLevel((void))
 0002:80029ED4       AudSystemVolumeController::setSeVolumeSetTrig((long,ulong))
 0002:80029F18       AudSystemVolumeController::recoverSeVolumeSet((ulong))
 0002:80029F60       AudSystemVolumeController::setSeVolumeSetLevel((long))
 0002:80029FBC       AudSystemVolumeController::updateSeVolumeSetLevel((void))
 0002:8002A024       AudSystemVolumeController::setSeVolumeSetInner((long,ulong))
 0002:8002A0A0       AudSystemVolumeController::pushVolumeSet((void))
 0002:8002A0C4       AudSystemVolumeController::popVolumeSet((void))
 0002:8002A0F8       AudAudience_withSetting::updateSetting((void))
 0002:8002A18C       AudAudience_withSetting::AudAudience_withSetting((void))
 0002:8002A1DC       AudSoundInfo::getSoundSw(const(JAISoundID))
 0002:8002A27C       AudSoundInfo::isLimitNumPlaying(const(JAISoundID))
 0002:8002A2FC       AudSoundInfo::isLimitCountPlaying(const(JAISoundID))
 0002:8002A3A4       AudSoundInfo::getChordResIdBgm(const(JAISoundID))
 0002:8002A41C       __SCFlushSyncCallback
 0002:8002A444       AudSoundInfo::isRhythmBgm(const(JAISoundID))
 0002:8002A4FC       AudSoundInfo::isFanfareSe(const(JAISoundID))
 0002:8002A5B4       AudSoundInfo::isUseFxMix(const(JAISoundID))
 0002:8002A650       AudSoundInfo::isUseLpf(const(JAISoundID))
 0002:8002A6EC       AudWrap::getSystem((void))
 0002:8002A6F4       AudWrap::getSoundInfo((void))
 0002:8002A6FC       AudWrap::getSceneMgr((void))
 0002:8002A708       AudWrap::getBgmMgr((void))
 0002:8002A714       AudWrap::getStageBgm((void))
 0002:8002A720       AudWrap::getSubBgm((void))
 0002:8002A72C       AudWrap::startStageBgm((ulong,bool))
 0002:8002A744       AudWrap::startSubBgm((ulong,bool))
 0002:8002A75C       AudWrap::setNextIdStageBgm((ulong))
 0002:8002A770       AudWrap::startLastStageBgm((void))
 0002:8002A780       AudWrap::getSystemSeObject((void))
 0002:8002A78C       AudWrap::getAtmosphereSeObject((void))
 0002:8002A798       AudWrap::getSoundObjHolder((void))
 0002:8002A7A4       AudWrap::getRhythmMeSystem((void))
 0002:8002A7B0       AudWrap::getSystemMeObject((void))
 0002:8002A7BC       AudWrap::getRemixMgr((void))
 0002:8002A7C8       AudWrap::getRemixSequencer((void))
 0002:8002A7D0       CBGetBytesAvailableForRead
 0002:8002A7D8       AudWrap::getRemixSeqObject((void))
 0002:8002A7E0       JSUFileInputStream::getPosition(const(void))
 0002:8002A7E8       __sinit__AudWrap_cpp
 0002:8002A87C       AudSoundObject::AudSoundObject((JGeometry::TVec3<f> *,uchar,JKRHeap *))
 0002:8002A948       AudSoundObject::~AudSoundObject((void))
 0002:8002A9D0       MR::isMailErrorHappened((char const *))
 0002:8002AA04       JAISeMgr::setStrategyMgr((JAISoundStrategyMgr<5JAISe> *))
 0002:8002AA0C       AudSoundObject::writePort((JAISoundHandle *,ulong,ushort))
 0002:8002AAB4       AudSoundObject::isLimitedSound((JAISoundID))
 0002:8002ABB8       AudSoundObject::startSound((JAISoundID))
 0002:8002ACD8       AudSoundObject::startLevelSound((JAISoundID))
 0002:8002ADE4       AudSoundObject::startLevelSound((char const *))
 0002:8002AE3C       AudSoundObject::startSoundParam((JAISoundID,long,long))
 0002:8002AEE4       AudSoundObject::startLevelSoundParam((JAISoundID,long,long))
 0002:8002AF8C       AudSoundObject::startLevelSoundParam((char const *,long,long))
 0002:8002AFF4       AudSoundObject::modifyLimitedSound((JAISoundID))
 0002:8002B05C       AudSoundObject::isPlayingID((JAISoundID))
 0002:8002B090       AudSoundObject::releaseHandle((JAISoundID))
 0002:8002B0CC       AudSoundObject::setMapCode((long))
 0002:8002B0E0       SuddenDeathMeter::initCount((long))
 0002:8002B0E8       AudSoundObject::setMapCodeExtra((long))
 0002:8002B108       CounterLayoutController::setHPMeter((MarioMeter *))
 0002:8002B110       AudSoundObject::getMapCode(const(void))
 0002:8002B12C       AudSoundObject::clearMapCode((void))
 0002:8002B13C       AudSoundObject::convertNameToLevelSEID((char const *))
 0002:8002B2A0       AudSoundObject::limitVoiceOne((JAISoundID))
 0002:8002B2F8       AudSoundObject::stopCategorySound((ulong,ulong))
 0002:8002B388       AudSoundObject::setMapCodeToPort((JAISoundHandle *,JAISoundID))
 0002:8002B490       AudSoundObject::setCutoffToPort((JAISoundHandle *,JAISoundID))
 0002:8002B608       AudSoundObject::convertSoundIdFromSeVersion(const(JAISoundID))
 0002:8002B7AC       AudSoundObjHashData::AudSoundObjHashData((void))
 0002:8002B7DC       AudSoundObjHashData::init((void))
 0002:8002B7F0       str_80279110
 0002:8002B7F8       AudSoundObject::modifySe_Kawamura((JAISoundHandle *,long))
 0002:8002C0D4       AudSoundObject::modifyLimitedSound_Kawamura((JAISoundID))
 0002:8002C370       AudSoundObject::modifySe_Takezawa((JAISoundHandle *,long,long))
 0002:8002D5B8       AudSoundObject::modifyLimitedSound_Takezawa((JAISoundID))
 0002:8002D68C       AudSoundObject::modifySe_Gohara((JAISoundHandle *,long,long))
 0002:8002D8FC       AudAnmSoundObject::AudAnmSoundObject((JGeometry::TVec3<f> *,uchar,JKRHeap *))
 0002:8002D954       AudAnmSoundObject::update((float))
 0002:8002D96C       AudAnmSoundObject::modifySoundParams((JASSoundParams *,JAUSoundAnimationSound const *,float))
 0002:8002D97C       AudAnmSoundObject::getFreeHandle((JAUSoundAnimationSound const *))
 0002:8002D984       AudAnmSoundObject::playsSound((JAUSoundAnimationSound const *,JGeometry::TVec3<f> const &,float))
 0002:8002DA18       AudAnmSoundObject::getSoundID((JAUSoundAnimationSound const *,JGeometry::TVec3<f> const &,float))
 0002:8002DBDC       AudAnmSoundObject::skip((float))
 0002:8002DE30       AudAnmSoundObject::setStartPos((float))
 0002:8002DEB4       AudAnmSoundObject::updateAnimSound((float,JGeometry::TVec3<f> const &,JAISoundStarter *))
 0002:8002E144       AudAnmSoundObject::startAnimSound((JGeometry::TVec3<f> const &,float,JAISoundStarter *))
 0002:8002E320       AudAnmSoundObject::releaseHandleIfNecessary((JAISoundHandle *,ulong))
 0002:8002E384       JAUSoundAnimation::getNumSounds(const(void))
 0002:8002E3B0       JAUSoundAnimationSound::isNotingOn(const(float,bool))
 0002:8002E3BC       JAUSoundAnimationSound::isNoting(const(float))
 0002:8002E454       JAUSoundAnimation::getSound(const(int))
 0002:8002E470       JKRThread::start((void *))
 0002:8002E488       J3DPEBlockFogOff::getBlend((void))
 0002:8002E4F0       str_8002E86C
 0002:8002E510       AudBgm::AudBgm((void))
 0002:8002E540       AudBgm::resetAuxVolume((void))
 0002:8002E594       AudSingleBgm::AudSingleBgm((void))
 0002:8002E614       AudSingleBgm::init((void))
 0002:8002E620       AudSingleBgm::movement((void))
 0002:8002E694       AudSingleBgm::start((ulong,bool))
 0002:8002E7B8       AudSingleBgm::stop((ulong))
 0002:8002E808       AudSingleBgm::isPreparedPlay((void))
 0002:8002E834       AudSingleBgm::playAfterPrepared((void))
 0002:8002E84C       AudSingleBgm::getRhythmHandle((void))
 0002:8002E870       Swinger::accel((JGeometry::TVec3<f> const &))
 0002:8002E884       AudSingleBgm::moveVolumeForNoteFairy((float,ulong))
 0002:8002E91C       AudSingleBgm::changeTrackMuteState((long,long))
 0002:8002EA3C       AudMultiBgm::initTrackController((void))
 0002:8002EA64       AudSingleBgm::startTrackControl((void))
 0002:8002EABC       AudMultiBgm::updateTrackControl((void))
 0002:8002EB10       AudSingleBgm::updateTrackControl((void))
 0002:8002EB70       AudMultiBgm::AudMultiBgm((void))
 0002:8002EC24       AudMultiBgm::init((void))
 0002:8002EC84       AudMultiBgm::start((ulong,bool))
 0002:8002ECFC       AudMultiBgm::stop((ulong))
 0002:8002ED6C       AudMultiBgm::playAfterPrepared((void))
 0002:8002ED78       AudMultiBgm::sendToSyncStream((void))
 0002:8002EE74       AudMultiBgm::rejectFromSyncStream((void))
 0002:8002EED4       AudMultiBgm::movement((void))
 0002:8002EFF8       AudMultiBgm::moveVolumeForNoteFairy((float,ulong))
 0002:8002F0A8       AudMultiBgm::changeTrackMuteState((long,long))
 0002:8002F2A8       CameraTargetPlayer::getSideVec(const(void))
 0002:8002F2B8       MR::isExistEffectKeeper((LayoutActor const *))
 0002:8002F2C8       AudSingleBgm::pause((bool))
 0002:8002F2E4       NWC24MessengerSub::SendState::isEndSysInfoMini(const(void))
 0002:8002F2FC       AudSingleBgm::isPaused(const(void))
 0002:8002F324       AudSingleBgm::getSoundID(const(void))
 0002:8002F330       JAUStreamFileTable::JAUStreamFileTable((void))
 0002:8002F370       AudMultiBgm::startTrackControl((void))
 0002:8002F41C       AudMultiBgm::prepare((ulong))
 0002:8002F59C       AudMultiBgm::isPrepared((void))
 0002:8002F600       AudMultiBgm::unlock((void))
 0002:8002F664       AudMultiBgm::updateSyncProcess((void))
 0002:8002F6B4       AudMultiBgm::pauseSyncProcess((void))
 0002:8002F748       AudMultiBgm::setStreamVolume((float,float))
 0002:8002F818       JAISound::isStopping(const(void))
 0002:8002F99C       AudBgmKeeper::AudBgmKeeper((void))
 0002:8002FA10       AudBgmKeeper::get((AudBgmKeeper::BgmType))
 0002:8002FA68       AudBgmKeeper::release((AudBgm *))
 0002:8002FB34       AudBgmKeeper::getValidSingleBgm((void))
 0002:8002FB78       AudBgmKeeper::getValidMultiBgm((void))
 0002:8002FBC0       AudBgmMgr::AudBgmMgr((void))
 0002:8002FC48       AudBgmMgr::movement((void))
 0002:8002FD04       AudBgmMgr::start((long,ulong,bool))
 0002:8002FE70       JASBasicBank::setInst((int,JASInst *))
 0002:8002FE80       AudBgmMgr::clearNextBGM((long))
 0002:8002FE94       AudBgmMgr::startLastBGM((long))
 0002:8002FEC0       AudBgmMgr::clearLastBGM((long))
 0002:8002FECC       GXInitTexObjTlut
 0002:8002FED4       AudBgmMgr::pause((void))
 0002:8002FF3C       AudBgmMgr::unpause((void))
 0002:8002FFA4       AudBgmMgr::volDownLevel((bool))
 0002:80030000       AudBgmMgr::volDownStageBgmWhenSubBgmPlaying((void))
 0002:800300AC       AudBgmMgr::startNextBgmWhenStopping((long))
 0002:8003013C       AudBgmMgr::releaseStoppingBgm((long))
 0002:80030200       AudBgmMgr::sendToRhythmSystem((long))
 0002:800302C8       AudBgmMgr::setBgmToRhythmDominant((long))
 0002:8003033C       AudBgmMgr::stopRhythmProcess((long))
 0002:800303F4       AudBgmRhythmStrategy::set((AudBgm *,long))
 0002:800304B8       AudBgmRhythmStrategy::reject((void))
 0002:8003052C       AudBgmRhythmStrategy::setDominant((void))
 0002:80030628       AudBgmRhythmStrategy::isDominant(const(void))
 0002:80030710       AudBgmSetting::getMuteState((JAISoundID,long))
 0002:80030750       AudBgmSetting::getExtraChordNum((JAISoundID,long))
 0002:80030798       RaceManagerFunction::getRaceName((int))
 0002:800307AC       AudBgmSetting::getStreamIdForMultiBgm((ulong))
 0002:800307C4       AudBgmSetting::getBeatMulForMultiBgm((ulong))
 0002:800307DC       RaceManagerFunction::getRaceMessageId((int))
 0002:800307F4       AudBgmSetting::getLoopBeatsForMultiBgm((ulong))
 0002:8003080C       AudBgmSetting::getLoopStartSamplesForMultiBgm((ulong))
 0002:8003081C       GXGetTexObjFmt
 0002:80030824       AudBgmSetting::getLoopEndSamplesForMultiBgm((ulong))
 0002:80030834       GXGetTexObjTlut
 0002:8003083C       AudBgmVolumeController::AudBgmVolumeController((void))
 0002:80030910       AudBgmVolumeController::update((void))
 0002:800309A0       AudBgmVolumeController::getVolume(const(void))
 0002:800309DC       AudBgmVolumeController::volDown((bool))
 0002:80030A4C       AudBgmVolumeController::interruptedByOther((void))
 0002:80030A98       AudBgmVolumeController::moveAuxVolume((float,long))
 0002:80030AA0       AudBgmVolumeController::moveNoteFairyVolume((float,long))
 0002:80030AA8       AudEffector::AudEffector((void))
 0002:80030AE0       AudEffector::initFxLine((JKRHeap *))
 0002:80030B58       AudEffector::setFxSend((float))
 0002:80030B80       AudEffector::setCutoff((long))
 0002:80030BA4       AudEffector::initParams((void))
 0002:80030BC0       AudFader::AudFader((void))
 0002:80030BD8       AudFader::set((float,long))
 0002:80030C30       AudFader::update((void))
 0002:80030C8C       AudLimitedSoundInfo::AudLimitedSoundInfo((void))
 0002:80030CA0       AudLimitedSoundInfo::init((void))
 0002:80030CB4       AudLimitedSoundInfo::set((JAISoundID,long))
 0002:80030CC4       AudLimitedSoundInfo::update((void))
 0002:80030CF8       AudLimitedSoundInfo::isFree((void))
 0002:80030D0C       AudMeNameConverter::AudMeNameConverter((void))
 0002:80030D48       AudMeNameConverter::getMeID(const(char const *))
 0002:80030DDC       AudMeNameConverter::init((void))
 0002:80030E84       __sinit(char ()[udMeNameConverter],**)
 0002:80030F18       AudMicWrap::setMicMtx((float *[4],long))
 0002:80030F5C       AudMicWrap::setMicEnv((void))
 0002:80030FE8       AudMicWrap::getMicPos((void))
 0002:80031010       AudRemixMgr::AudRemixMgr((JKRHeap *))
 0002:80031028       AudRemixMgr::init((void))
 0002:8003109C       MR::isExistNextNode((TalkMessageCtrl const *))
 0002:800310A4       AudRemixMgr::setRemixSeqResource((void *))
 0002:800311A4       AudRemixMgr::getRemixNoteGroupDataFromMelodyNo(const(long))
 0002:800311E0       AudRmxSeqNoteOnTimer::AudRmxSeqNoteOnTimer((void))
 0002:80031228       AudRmxSeqNoteOnTimer::initData((void))
 0002:80031244       AudRmxSeqNoteOnTimer::setData((RemixNoteTrackData const *,RemixNoteData const *))
 0002:800312A0       AudRmxSeqNoteOnTimer::update((float))
 0002:80031444       AudRmxSeqNoteOnTimer::getFreeSeID((void))
 0002:800314D4       AudRemixSequencer::AudRemixSequencer((void))
 0002:80031548       AudRemixSequencer::initNoteOnBuff((void))
 0002:80031598       AudRemixSequencer::update((void))
 0002:80031614       AudRemixSequencer::setTempo((float))
 0002:80031634       AudRemixSequencer::newNoteOnTimer((void))
 0002:80031674       AudRemixSequencer::addNoteData((RemixNoteTrackData const *,RemixNoteData const *))
 0002:800316CC       AudSceneMgr::AudSceneMgr((JAUSectionHeap *))
 0002:800316FC       AudSceneMgr::isLoadDoneSystemInit((void))
 0002:8003170C       AudSceneMgr::loadStaticResource((void))
 0002:800317A0       AudSceneMgr::isLoadDoneStaticResource((void))
 0002:8003190C       AudSceneMgr::loadStageResource((AudSceneSoundInfo const *))
 0002:80031A64       AudSceneMgr::isLoadDoneStageResource((void))
 0002:80031B5C       AudSceneMgr::loadScenarioResource((char const *,char const *,long))
 0002:80031BA4       AudSceneMgr::loadScenarioResource((AudSceneSoundInfo const *,long))
 0002:80031C50       AudSceneMgr::isLoadDoneScenarioResource((void))
 0002:80031CE4       AudSceneMgr::startScene((void))
 0002:80031D60       AudSceneMgr::findSceneSoundInfo((char const *,char const *))
 0002:80031E0C       AudSceneMgr::eraseLastBgmWaveSet((void))
 0002:80031E78       AudSceneMgr::eraseLastSeWaveSet((void))
 0002:80031EE4       AudSceneMgr::eraseLastSeScenarioWaveSet((void))
 0002:80031F58       AudSceneMgr::loadWaveSet((signed char const *,long))
 0002:80031FBC       MultiEventCamera::setEndCameraTypeAtLanding((void))
 0002:80031FC8       DinoPackunStateDamage::setDamageLast((void))
 0002:80031FD4       AudSceneMgr::loadPlayerResource((void))
 0002:80031FF8       MR::setTextBoxVerticalPositionBottomRecursive((LayoutActor *,char const *))
 0002:80032008       GhostPacket::read((ulong *))
 0002:80032018       AudSceneMgr::isPlayerResourceLoaded((void))
 0002:800320F0       AudSeStrategy::calc((JAISe *))
 0002:800322D4       AudSeStrategyMgr::newStrategy((JAISoundID))
 0002:80032320       AudSeStrategyMgr::deleteStrategy((JAISoundStrategy<5JAISe> *))
 0002:8003236C       AudSeStrategy::~AudSeStrategy((void))
 0002:800323FC       __sinit__JAIStreamMgr_cpp
 0002:80032458       AudSoundNameConverter::AudSoundNameConverter((void))
 0002:800324A8       AudSoundNameConverter::getSoundID(const(char const *))
 0002:800324FC       AudSoundNameConverter::getSoundID(const(char const *,ulong))
 0002:80032694       AudSoundNameConverter::init((void))
 0002:80032700       AudSoundNameConverter::initDataTable((JAUSoundNameTable const *))
 0002:8003280C       nullsub_117
 0002:80032810       AudSoundNameConverter::addGroupInfo((JAUSoundNameTable const *,uchar,uchar))
 0002:800328BC       AudSoundNameConverter::addSectionInfo((JAUSoundNameTable const *,uchar))
 0002:8003292C       AudSoundNameConverter::getSoundNameTableNumItem_inSection((JAUSoundNameTable const *,uchar))
 0002:80032A14       AudSoundObjHolder::AudSoundObjHolder((JKRHeap *,long))
 0002:80032A5C       AudSoundObjHolder::update((void))
 0002:80032AB8       AudSoundObjHolder::add((AudSoundObject *))
 0002:80032AE4       AudSoundObjHolder::remove((AudSoundObject *))
 0002:80032B70       AudSoundObjHolder::moveOver((long,long))
 0002:80032BA0       AudSpeakerWrap::getResName((void))
 0002:80032BAC       AudSpeakerWrap::getRequiredHeapSize((void))
 0002:80032BB4       AudSpeakerWrap::start((long,long))
 0002:80032C4C       AudSpeakerWrap::isPlayable((long))
 0002:80032C94       __sinit(char ()[udSpeakerWrap],**)
 0002:80032D88       __arraydtor_2
 0002:80032DC0       AudTrackController::AudTrackController((void))
 0002:80032E18       AudTrackController::start((JAISoundHandle *))
 0002:80032E28       AudTrackController::stop((void))
 0002:80032E38       AudTrackController::mute((void))
 0002:80032E9C       AudTrackController::unmute((void))
 0002:80032F00       AudTrackController::setMuteState((uchar,long,bool))
 0002:80032FA4       AudTrackController::update((void))
 0002:8003304C       AudTrackController::muteIfVolumeZero((void))
 0002:8003313C       AudUtil::linerMax((long,long,float))
 0002:800331BC       AudUtil::linerMinMax((long,long,long,float,float))
 0002:80033238       JASBank::noteOn((JASBank const *,int,uchar,uchar,ushort,void (*)(ulong,JASChannel *,JASDsp::TChannel *,void *),void *))
 0002:800334EC       JASTrack::channelStart((JASTrack::TChannelMgr *,ulong,ulong,ulong))
 0002:8003379C       JASWaveArc::load((JASHeap *))
 0002:8003385C       JASInstParam::JASInstParam((void))
 0002:80033928       JASMemPool_MultiThreaded<10JASChannel>::~JASMemPool_MultiThreaded<10JASChannel>((void))
 0002:80033980       CSSoundNameConverter::CSSoundNameConverter((void))
 0002:800339BC       CSSoundNameConverter::getSoundID(const(char const *))
 0002:80033A50       CSSoundNameConverter::init((void))
 0002:80033A9C       CSSoundNameConverter::initDataTable((SpkTable const *))
 0002:80033B1C       CSSoundNameConverter::makeDataTable((SpkTable const *))
 0002:80033B98       BossAccessor::BossAccessor((void))
 0002:80033BE4       BossAccess::setBossAccessorKoopa((Koopa *))
 0002:80033C24       BossAccess::getBossAccessorKoopa((void))
 0002:80033C4C       JAUAudioArcLoader::endBNKList((void))
 0002:80033CC0       BossBegoman::BossBegoman((char const *))
 0002:80033D98       BossBegoman::init((JMapInfoIter const &))
 0002:80034150       SpaceInner::appear((void))
 0002:80034198       BossBegoman::kill((void))
 0002:800341E0       BossBegoman::control((void))
 0002:80034408       BossBegoman::setStepBackNerve((void))
 0002:8003445C       BossBegoman::onTouchElectric((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8003457C       RailMoveObj::tryStartMove((void))
 0002:800345AC       BossBegoman::addVelocityOnPushedFromElectricRail((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80034664       DeriveActorGroup<4Coin>::getDeadMember(const(void))
 0002:800346A8       BossBegoman::exePreDemoWait((void))
 0002:80034718       BossBegoman::exeFirstContactDemo((void))
 0002:800347C8       BossBegoman::exeReady((void))
 0002:80034874       BossBegoman::exeSignAttack((void))
 0002:800348F4       BossBegoman::exePursue((void))
 0002:80034978       BossBegoman::exeTurn((void))
 0002:80034A5C       BossBegoman::exeOnWeak((void))
 0002:80034C48       BossBegoman::exeStepBack((void))
 0002:80034CC4       BossBegoman::exeTrampleReaction((void))
 0002:80034DF8       BossBegoman::exeAware((void))
 0002:80034E90       BossBegoman::exeBlow((void))
 0002:80034FA8       BossBegoman::exeElectricDeath((void))
 0002:80035220       BossBegoman::edgeRecoverCore((void))
 0002:800352AC       BossBegoman::exeElectricReturn((void))
 0002:800353E8       BossBegoman::exeJumpToInitPos((void))
 0002:80035564       BossBegoman::tryLaunchFollower((void))
 0002:80035644       BossBegoman::killAllFollower((BossBegoman::FollowerKind))
 0002:80035754       BossBegoman::isDeadAllFollower((void))
 0002:80035778       BossBegoman::isDeadAllFollowerCore((BegomanBase **,long))
 0002:800357E4       BossBegoman::attackSensor((HitSensor *,HitSensor *))
 0002:80035A18       BossBegoman::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80035A44       BossBegoman::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80035C44       BossBegoman::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80035E6C       BossBegoman::receiveMsgTrample((HitSensor *,HitSensor *))
 0002:80036068       BossBegoman::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800360F8       BossBegoman::calcAnim((void))
 0002:800361A0       BossBegoman::startRotationLevelSound((void))
 0002:80036338       __sinit__BossBegoman_cpp
 0002:8003657C       NrvBegomanSpring::HostTypeNrvKeepDistance::execute(const(Spine *))
 0002:800365D0       NWC24MessengerSub::@unnamed@NWC24Messenger_cpp@::SendStateNrvWait::execute(const(Spine *))
 0002:800365F0       NrvBegomanSpike::HostTypeNrvHitReaction::execute(const(Spine *))
 0002:8003664C       NrvBossBegoman::HostTypeNrvProvoke::execute(const(Spine *))
 0002:800366A0       NrvBegomanSpring::HostTypeNrvReturn::execute(const(Spine *))
 0002:800366F4       NrvBossBegoman::HostTypeNrvBrake::execute(const(Spine *))
 0002:8003675C       NrvBossBegoman::HostTypeNrvOnWeak::executeOnEnd(const(Spine *))
 0002:80036768       Dodoryu::killAllHillPieces((void))
 0002:80036778       NrvBossBegoman::HostTypeNrvTurn::executeOnEnd(const(Spine *))
 0002:8003679C       NrvBossBegoman::HostTypeNrvWait::execute(const(Spine *))
 0002:800367F8       NrvBossBegoman::HostTypeNrvNoCalcWait::execute(const(Spine *))
 0002:80036870       BossBegomanHead::BossBegomanHead((LiveActor *,float *[4]))
 0002:80036934       BossBegomanHead::init((JMapInfoIter const &))
 0002:80036A44       TripodBossLeg::isStop(const(void))
 0002:80036B7C       BossBegomanHead::exeTurn((void))
 0002:80036C24       BossBegomanHead::exeTurnEnd((void))
 0002:80036C84       BossBegomanHead::calcAndSetBaseMtx((void))
 0002:80036CB8       BossBegomanHead::calcJointEdge((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80036E04       __sinit__SuddenDeathMeter_cpp
 0002:80036EF0       NrvBossBegomanHead::HostTypeNrvSwitchOn::execute(const(Spine *))
 0002:80036F98       NrvRunawayTico::RunawayTicoNrvWait::execute(const(Spine *))
 0002:800370B0       JointControlDelegator<8Tamakoro>::calcJointMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80037118       JointControlDelegator<8Tamakoro>::calcJointMatrixAfterChild((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80037180       BossBegomanHead::~BossBegomanHead((void))
 0002:800371D8       JGeometry::TVec3<f>::TVec3<f>(void *(int,int,int))
 0002:80037238       LiveActor::~LiveActor((void))
 0002:80037290       BossKameck::BossKameck((char const *,char const *))
 0002:8003738C       BossKameck::getMoveRail((long))
 0002:800373CC       BossKameck::startSequence((void))
 0002:80037424       BossKameck::deadKameck((void))
 0002:80037474       BossKameck::getLivingKameckNum(const(void))
 0002:8003748C       BossKameck::appearStarPieceToPlayer((long))
 0002:80037550       BossKameck::control((void))
 0002:800375B4       BossKameck::calcAndSetBaseMtx((void))
 0002:800375F8       BossKameck::attackSensor((HitSensor *,HitSensor *))
 0002:80037604       BinaryDataContentHeaderSerializer::getHeaderSize(const(void))
 0002:80037618       BossKameck::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8003763C       BossKameck::endDemo((void))
 0002:800376A4       BossKameck::setPose((float *[4]))
 0002:80037780       HammerHeadPackun::control((void))
 0002:80037788       BossKameck::updatePose((void))
 0002:8003790C       MR::createBossKameck2((char const *))
 0002:80037988       BossKameck::init((JMapInfoIter const &))
 0002:80037BCC       BossKameck::initKameckHolder((JMapInfoIter const &))
 0002:80037D10       BossKameck::initMoveRail((JMapInfoIter const &))
 0002:80037E34       BossKameck::appearStarPieceToUp((long))
 0002:80037EAC       BossKameck::startDemo((void))
 0002:80037F14       Kameck::hitBeam((long))
 0002:80037FA0       MR::createBossKameck1((char const *))
 0002:8003810C       BossKameckAction::BossKameckAction((char const *,BossKameck *))
 0002:800381B8       GalaxyCometScheduler::activate((void))
 0002:800381C4       GalaxyCometScheduler::deactivate((void))
 0002:80038250       BossKameckBarrier::BossKameckBarrier((char const *,char const *))
 0002:8003829C       BossKameckBarrier::init((JMapInfoIter const &))
 0002:80038370       AstroDome::exeWait((void))
 0002:80038444       BossKameckDemoPosition::BossKameckDemoPosition((void))
 0002:8003849C       BossKameckDemoPosition::init((JMapInfoIter const &))
 0002:80038578       BossKameckBattleDemo::BossKameckBattleDemo((BossKameck *,JMapInfoIter const &))
 0002:80038614       BossKameckBattleDemo::appear((void))
 0002:80038620       JKRHeap::alloc((ulong,int))
 0002:80038630       BossKameckBattleDemo::kill((void))
 0002:8003863C       J3DTevBlock1::patch((void))
 0002:8003864C       DinoPackunDemo::startTryDemo((char const *,Nerve const *))
 0002:800386D4       BossKameckBattleDemo::exeTryStartDemo((void))
 0002:80038730       BossKameckBattleDemo::startDemoAppearVs2((void))
 0002:800387C0       LensFlareRing::appearAnim((void))
 0002:80038800       BossKameckBattleDemo::exeWaitAppearVs2((void))
 0002:80038874       BossKameckBattleDemo::exeAppearVs1((void))
 0002:80038A78       BossKameckBattleDemo::exeAppearVs2((void))
 0002:80038C1C       BossKameckBattleDemo::exePowerUpVs1((void))
 0002:80038D58       BossKameckBattleDemo::exePowerUpVs2((void))
 0002:80038EAC       BossKameckBattleDemo::exeDownVs1((void))
 0002:80039090       BossKameckBattleDemo::exeDownVs2((void))
 0002:80039274       BossKameckBattleDemo::updateCastPose((void))
 0002:800393B4       __sinit__NPCUtil_cpp
 0002:800394F0       BossKameckBattlePattarn::BossKameckBattlePattarn((long *,bool))
 0002:80039538       BossKameckBattlePattarn::initPattarn((long *))
 0002:80039570       BossKameckBattlePattarn::goNextPattarn((void))
 0002:800395A4       BossKameckSequencer::BossKameckSequencer((char const *))
 0002:800395F0       BossKameckSequencer::init((BossKameck *,JMapInfoIter const &))
 0002:8003965C       NerveExecutor::updateNerve((void))
 0002:80039660       DinoPackunSequencer::attackSensor((HitSensor *,HitSensor *))
 0002:8003966C       JKRHeap::destroy((JKRHeap *))
 0002:80039680       DinoPackunSequencer::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800396A4       DinoPackunSequencer::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800396B0       JKRHeap::free((void *))
 0002:800396C8       DinoPackunSequencer::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800396EC       DinoPackunSequencer::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800396F8       JKRHeap::freeTail((void))
 0002:80039768       BossKameckMoveRail::BossKameckMoveRail((char const *))
 0002:800397B0       BossKameckMoveRail::init((JMapInfoIter const &))
 0002:80039868       MR::getMapPartsArgMoveTimeToNextPoint((long *,LiveActor const *))
 0002:80039878       BossKameckMoveRail::calcRandomIndex(const(long))
 0002:800398E0       BossKameckMoveRail::calcRandomStoppableIndex(const(long))
 0002:800399AC       BossKameckMoveRail::~BossKameckMoveRail((void))
 0002:80039A08       BossKameckVs1::BossKameckVs1((void))
 0002:80039A54       BossKameckVs1::init((BossKameck *,JMapInfoIter const &))
 0002:80039AD8       BossKameckVs2::attackSensor((HitSensor *,HitSensor *))
 0002:80039B38       BossKameckVs2::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80039BA8       BossKameckVs2::exePowerUpDemo((void))
 0002:80039C04       BossKameckVs1::exeBattleLv1((void))
 0002:80039C7C       BossKameckVs1::exeBattleLv2((void))
 0002:80039D5C       BossKameckVs1::exeBattleLv3((void))
 0002:80039DE0       BossKameckVs1::exeEndDemo((void))
 0002:80039E28       RunawayRabbit::isChasing(const(void))
 0002:80039EF0       __sinit__BossKameckVs1_cpp
 0002:8003A01C       BossKameckVs2::BossKameckVs2((void))
 0002:8003A06C       BossKameckVs2::init((BossKameck *,JMapInfoIter const &))
 0002:8003A20C       BossKameckVs2::exeOpeningDemo((void))
 0002:8003A27C       BossKameckVs2::exeBattleLv1((void))
 0002:8003A300       BossKameckVs2::exeBattleLv2((void))
 0002:8003A3EC       BossKameckVs2::exeBattleLv3((void))
 0002:8003A470       BossKameckVs2::exeBattleLv4((void))
 0002:8003A500       BossKameckVs2::exeEndDemo((void))
 0002:8003A55C       Tamakoro::isRideRail(const(void))
 0002:8003A638       __sinit__BossKameckVs2_cpp
 0002:8003A784       BossKameckStateBattle::BossKameckStateBattle((BossKameck *))
 0002:8003A824       BossKameckStateBattle::appear((void))
 0002:8003A860       GXInitTexObjUserData
 0002:8003A870       BossKameckStateBattle::attackSensor((HitSensor *,HitSensor *))
 0002:8003A920       BossKameckStateBattle::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8003A9C0       BossKameckStateBattle::requestDamage((HitSensor *,HitSensor *))
 0002:8003AA64       BossKameckStateBattle::requestGuard((HitSensor *,HitSensor *))
 0002:8003AADC       BossKameckStateBattle::tryAttackWait((void))
 0002:8003AB60       BossKameckStateBattle::trySummonKameck((void))
 0002:8003ABD8       BossKameckStateBattle::tryChargeBram((void))
 0002:8003ACB0       BossKameckStateBattle::startMove((void))
 0002:8003ACCC       BossKameckStateBattle::exeWait((void))
 0002:8003AD38       BossKameckStateBattle::exeMove((void))
 0002:8003AE98       BossKameckStateBattle::exeHideMoveStart((void))
 0002:8003AF44       BossKameckStateBattle::exeHideMove((void))
 0002:8003B080       BossKameckStateBattle::exeHideMoveEnd((void))
 0002:8003B170       BossKameckStateBattle::exeSummonKameckWait((void))
 0002:8003B250       BossKameckStateBattle::exeAttackWait((void))
 0002:8003B320       BossKameckStateBattle::exeAttack((void))
 0002:8003B424       BossKameckStateBattle::exeDamage((void))
 0002:8003B514       BossKameckStateBattle::exeRecover((void))
 0002:8003B610       BossKameckStateBattle::exeGuard((void))
 0002:8003B69C       BossKameckStateBattle::selectPosition((void))
 0002:8003B72C       NANDErrorSequence::isEnablePointer(const(void))
 0002:8003B924       __sinit__NANDErrorSequence_cpp
 0002:8003BAC0       JGeometry::TQuat4<f>::getZDir(const(JGeometry::TVec3<f> &))
 0002:8003BB24       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setQuat((JGeometry::TQuat4<f> const &))
 0002:8003BBC4       BossStinkBug::BossStinkBug((char const *))
 0002:8003BD58       Jiraira::kill((void))
 0002:8003BD9C       BossStinkBug::init((JMapInfoIter const &))
 0002:8003C010       BossStinkBug::start((void))
 0002:8003C05C       BossStinkBug::initCamera((JMapInfoIter const &))
 0002:8003C0DC       BossStinkBug::initSensor((void))
 0002:8003C1EC       BossStinkBug::initCollision((void))
 0002:8003C290       PlantStalk::calcPosAndAxisY(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float))
 0002:8003C298       BossStinkBug::reuestMovementOnParts((void))
 0002:8003C2D0       J3DTevBlockPatched::getTevRegOffset(const(void))
 0002:8003C2D8       CoconutTreeLeaf::getBaseMtx(const(void))
 0002:8003C2E0       BossStinkBug::control((void))
 0002:8003C338       BossStinkBug::calcAndSetBaseMtx((void))
 0002:8003C3D4       BossStinkBug::calcUpVec(const(JGeometry::TVec3<f> *))
 0002:8003C44C       BossStinkBug::calcAnim((void))
 0002:8003C4A4       BossStinkBug::attackSensor((HitSensor *,HitSensor *))
 0002:8003C4B8       BossStinkBug::updatePose((void))
 0002:8003C570       BossStinkBug::setPose((float *[4]))
 0002:8003C5D4       BossStinkBug::updateCamera((void))
 0002:8003C5E8       BossStinkBug::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8003C600       BossStinkBug::validateCollisionHitOnly((void))
 0002:8003C6E4       BossStinkBug::invalidateCollision((void))
 0002:8003C738       BossStinkBug::onBindLeg((void))
 0002:8003C7DC       BossStinkBug::offBindLeg((void))
 0002:8003C858       BossStinkBug::isLegInWater(const(void))
 0002:8003C8C0       BossStinkBug::updateJointControl((void))
 0002:8003CAD4       BossStinkBug::appearStarPiece((long))
 0002:8003CBAC       BossStinkBug::startEventCamera((char const *))
 0002:8003CBBC       BossStinkBug::endEventCamera((char const *))
 0002:8003CBD0       BossStinkBug::isSensorBody(const(HitSensor const *))
 0002:8003CC10       BossStinkBug::throwBomb((float,float))
 0002:8003CD24       __sinit__BossStinkBug_cpp
 0002:8003CD3C       JMath::gekko_ps_copy12((void *,void const *))
 0002:8003CE64       BossStinkBugActionBase::BossStinkBugActionBase((char const *,BossStinkBug *))
 0002:8003CF94       BossStinkBugActionBase::updateGroundWalk((float))
 0002:8003D014       BossStinkBugActionBase::updateFlyRollEnd((void))
 0002:8003D09C       BossStinkBugActionBase::updateFlyRollWait((long))
 0002:8003D1BC       BossStinkBugActionBase::updateFlyDash((float))
 0002:8003D2D4       BossStinkBugActionBase::throwBomb((long))
 0002:8003D32C       BossStinkBugActionBase::resetThrowBombTiming((void))
 0002:8003D338       BossStinkBugActionBase::calcShakeOffSignSpeed(const(long))
 0002:8003D398       BossStinkBugActionBase::calcShakeOffEndSpeed(const(void))
 0002:8003D430       BossStinkBugActionBase::calcKeepRollTime(const(long))
 0002:8003D544       BossStinkBugActionBase::calcFlySoundVol(const(void))
 0002:8003D660       BossStinkBugActionBase::calcIIRCutOff(const(void))
 0002:8003D6C0       BossStinkBugActionBase::updateSound((void))
 0002:8003D76C       BossStinkBugActionBase::updateSoundFly((void))
 0002:8003D828       BossStinkBugActionBase::~BossStinkBugActionBase((void))
 0002:8003D880       BossStinkBugActionBase::updateGroundRegainRail((float))
 0002:8003D938       BossStinkBugActionBase::updateGroundFind((void))
 0002:8003D9BC       BossStinkBugActionBase::updateGroundShakeOff((void))
 0002:8003DA44       BossStinkBugActionBase::updateGroundRun((float))
 0002:8003DB18       BossStinkBugActionBase::updateGroundAttackSuccess((void))
 0002:8003DBCC       BossStinkBugActionBase::updateGroundCoolDown((void))
 0002:8003DC9C       BossStinkBugActionBase::updateGroundTurn((void))
 0002:8003DD70       BossStinkBugActionBase::updateGroundDamage((void))
 0002:8003DE68       BossStinkBugActionBase::updateFly((void))
 0002:8003DED8       BossStinkBugActionBase::updateFlyShakeOffSign((long))
 0002:8003DFAC       BossStinkBugActionBase::updateFlyShakeOff((void))
 0002:8003E050       BossStinkBugActionBase::updateFlyShakeOffWait((long))
 0002:8003E0E8       BossStinkBugActionBase::updateFlyShakeOffEnd((void))
 0002:8003E178       BossStinkBugActionBase::updateFlyRollSign((long))
 0002:8003E23C       BossStinkBugActionBase::updateFlyTurnSign((void))
 0002:8003E2DC       BossStinkBugActionBase::updateFlyTurn((void))
 0002:8003E3B0       BossStinkBugActionBase::updateFall((void))
 0002:8003E4A0       BossStinkBugActionBase::updateFallDamage((void))
 0002:8003E59C       BossStinkBugActionBase::updateToGround((void))
 0002:8003E768       BossStinkBugActionBase::updateLand((void))
 0002:8003E7FC       BossStinkBugActionBase::updateToFly((void))
 0002:8003E958       BossStinkBugActionBase::startSoundFly((long))
 0002:8003EBA8       BossStinkBugActionFlyHigh::BossStinkBugActionFlyHigh((BossStinkBug *))
 0002:8003EC34       BossStinkBugActionFlyHigh::appear((void))
 0002:8003ECD0       BossStinkBugActionFlyLow::control((void))
 0002:8003ED20       BossStinkBugActionFlyHigh::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8003EE24       BossStinkBugActionFlyHigh::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8003EFAC       BossStinkBugActionFlyHigh::isValidFollowId(const(long))
 0002:8003F054       BossStinkBugActionFlyHigh::exeFly((void))
 0002:8003F0F0       BossStinkBugActionFlyHigh::exeRollWait((void))
 0002:8003F140       BossStinkBugActionFlyHigh::isEnableHipDrop(const(void))
 0002:8003F27C       Tamakoro::isUseMarioOffset(const(void))
 0002:8003F32C       __sinit__Karikari_cpp
 0002:8003F4F8       NrvBossStinkBugGroundBattle::BossStinkBugActionGroundNrvDamage::execute(const(Spine *))
 0002:8003F544       @unnamed@StorySequenceExecutor_cpp@::StorySequenceExecutorStartSaveAfterSequence::execute(const(Spine *))
 0002:8003F588       NrvBossStinkBugGroundBattle::BossStinkBugActionGroundNrvStart::execute(const(Spine *))
 0002:8003F724       NrvBossStinkBugActionFlyHigh::BossStinkBugActionFlyHighNrvShakeOffEnd::execute(const(Spine *))
 0002:8003F778       NrvBossStinkBugActionFlyHigh::BossStinkBugActionFlyHighNrvShakeOff::execute(const(Spine *))
 0002:8003F7C8       NrvBossStinkBugActionFlyHigh::BossStinkBugActionFlyHighNrvRollSign::execute(const(Spine *))
 0002:8003F868       NrvBossStinkBugActionFlyHigh::BossStinkBugActionFlyHighNrvShakeOffWait::execute(const(Spine *))
 0002:8003F90C       NrvBossStinkBugActionFlyHigh::BossStinkBugActionFlyHighNrvShakeOffSign::execute(const(Spine *))
 0002:8003F9B8       BossStinkBugActionFlyLow::BossStinkBugActionFlyLow((BossStinkBug *))
 0002:8003FA2C       BossStinkBugActionFlyLow::appear((void))
 0002:8003FB28       BossStinkBugActionFlyLow::isValidFollowId(const(long))
 0002:8003FB38       BossStinkBugActionFlyLow::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8003FBFC       BossStinkBugActionFlyLow::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8003FCA8       BossStinkBugActionFlyLow::exeFly((void))
 0002:8003FDAC       CrystalCageMoving::isNerveTypeEnd(const(void))
 0002:8003FF0C       __sinit__PlayerUtil_cpp
 0002:800401BC       NrvDinoPackunBattleVs1Lv2::DinoPackunBattleVs1Lv2NrvCoolDown::execute(const(Spine *))
 0002:80040248       NrvGreenCaterpillarBig::GreenCaterpillarBigNrvEndAdjust::execute(const(Spine *))
 0002:80040298       BossStinkBugActionGround::BossStinkBugActionGround((BossStinkBug *))
 0002:800402EC       BossStinkBugActionGround::appear((void))
 0002:8004037C       BossStinkBugActionGround::control((void))
 0002:800403C4       BossStinkBugActionGround::isValidFollowId(const(long))
 0002:800403D4       BossStinkBugActionGround::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80040488       BossStinkBugActionGround::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800405F4       BossStinkBugActionGround::exeWalk((void))
 0002:80040698       BossStinkBugActionGround::exeCoolDown((void))
 0002:80040700       TrickRabbit::isTumbable(const(void))
 0002:800407BC       Tamakoro::isEnablePushPlayer(const(void))
 0002:800409C4       NrvBossStinkBugGroundBattle::BossStinkBugActionGroundNrvAttackSuccess::executeOnEnd(const(Spine *))
 0002:80040BC8       BossStinkBugActionSequencer::BossStinkBugActionSequencer((BossStinkBug *,JMapInfoIter const &))
 0002:80040D30       BossStinkBugActionSequencer::isValidFollowId(const(long))
 0002:80040D64       BossStinkBugActionSequencer::attackSensor((HitSensor *,HitSensor *))
 0002:80040DCC       SubmarineVolcanoBigColumn::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80040E1C       BossStinkBugActionSequencer::exeOpeningDemo((void))
 0002:80040E68       BossStinkBugActionSequencer::exeGround((void))
 0002:80040EBC       BossStinkBugActionSequencer::exeFlyDemo((void))
 0002:80040F08       BossStinkBugActionSequencer::exeFlyLow((void))
 0002:80040F68       BossStinkBugActionSequencer::exeAngryDemo((void))
 0002:80040FB4       BossStinkBugActionSequencer::exeFlyHigh((void))
 0002:8004100C       BossStinkBugActionSequencer::exeFinishDemo((void))
 0002:800411E4       BossStinkBugAngryDemo::BossStinkBugAngryDemo((BossStinkBug *,JMapInfoIter const &))
 0002:80041278       BossStinkBugOpeningDemo::appear((void))
 0002:800412CC       BossStinkBugAngryDemo::exeDemo((void))
 0002:80041494       BossStinkBugAngryDemo::~BossStinkBugAngryDemo((void))
 0002:800414EC       __sinit__BossStinkBugAngryDemo_cpp
 0002:80041544       BossStinkBugBomb::BossStinkBugBomb((char const *))
 0002:800415A4       BossStinkBugBomb::init((JMapInfoIter const &))
 0002:800416D8       BombBirdBomb::control((void))
 0002:80041704       BrightObj::calcBrightInfo((ushort,BrightCamInfo const &))
 0002:8004170C       KameckFireBall::calcAndSetBaseMtx((void))
 0002:80041748       BossStinkBugBomb::start((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800417D8       BossStinkBugBomb::attackSensor((HitSensor *,HitSensor *))
 0002:80041878       BossStinkBugBomb::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8004190C       BossStinkBugBomb::exeWait((void))
 0002:80041AB4       BossStinkBugBomb::exeExplosion((void))
 0002:80041C78       BossStinkBugBombHolder::BossStinkBugBombHolder((LiveActor *))
 0002:80041E2C       BossStinkBugFinishDemo::BossStinkBugFinishDemo((BossStinkBug *,JMapInfoIter const &))
 0002:80041EC0       BossStinkBugFinishDemo::appear((void))
 0002:80041F14       BossStinkBugFinishDemo::exeDemo((void))
 0002:80042004       BossStinkBugFinishDemo::exeAppearPowerStar((void))
 0002:80042164       __sinit__SaveDataBannerCreator_cpp
 0002:800421DC       BossStinkBugFlyDemo::BossStinkBugFlyDemo((BossStinkBug *,JMapInfoIter const &))
 0002:80042270       BossStinkBugFlyDemo::appear((void))
 0002:800422C4       BossStinkBugFlyDemo::exeDemo((void))
 0002:800425C4       BossStinkBugFunction::addHeightOffset((JGeometry::TVec3<f> *,BossStinkBug const *,float))
 0002:80042654       BossStinkBugFunction::addLocalHeightOffset((JGeometry::TVec3<f> *,BossStinkBug *,float))
 0002:800426D4       BossStinkBugFunction::calcDiffCurrentRailPosition((JGeometry::TVec3<f> *,BossStinkBug *,float,float))
 0002:80042770       BossStinkBugFunction::moveRail((BossStinkBug *,float,float,float))
 0002:80042820       BossStinkBugFunction::turnRailGround((BossStinkBug *,JGeometry::TVec3<f> const &,float,bool))
 0002:800428D8       BossStinkBugFunction::turnRail((BossStinkBug *,JGeometry::TVec3<f> const &,float,float,float,float,float,bool))
 0002:80042AD4       BossStinkBugFunction::regainToRail((BossStinkBug *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:80042C00       BossStinkBugFunction::setFallVelocity((BossStinkBug *,JGeometry::TVec3<f> const &,float,float,float))
 0002:80042CE4       ParabolicPath::getTotalLength(const(long))
 0002:80042CF0       RosettaDemoHeavensDoor1::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80042D34       BossStinkBug::isSensorBody(const(HitSensor const *))
 0002:80042D38       BossStinkBugFunction::isExistPlayerBack((BossStinkBug const *,float))
 0002:80042DD8       BossStinkBugOpeningDemo::BossStinkBugOpeningDemo((BossStinkBug *,JMapInfoIter const &))
 0002:80042EC0       BossStinkBugOpeningDemo::exeDemo((void))
 0002:80043080       JGeometry::TVec4<f>::set<f>(void (JGeometry::TVec4<f> const &))
 0002:800430A4       @unnamed@DinoPackun_cpp@::DinoPackunParam::DinoPackunParam((void))
 0002:80043114       DinoPackun::DinoPackun((char const *))
 0002:800431E0       DinoPackun::init((JMapInfoIter const &))
 0002:80043484       DinoPackun::initTail((void))
 0002:8004364C       DinoPackun::initFootPrint((void))
 0002:800436E8       DinoPackun::initDemoPosition((JMapInfoIter const &))
 0002:80043750       DinoPackun::initEggShell((void))
 0002:800438A0       DinoPackun::initBall((void))
 0002:8004394C       DinoPackun::initCamera((JMapInfoIter const &))
 0002:80043A3C       DinoPackun::initScaleJointController((void))
 0002:80043B38       DinoPackun::makeActorDead((void))
 0002:80043B84       DinoPackun::startHitReaction((void))
 0002:80043BD0       DinoPackun::isHitReaction(const(long))
 0002:80043BE8       DinoPackun::hitScaleJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80043C48       DinoPackun::getEggShell((void))
 0002:80043C50       MR::getDummyDisplayModelId((LiveActor const *))
 0002:80043C58       DinoPackun::getBallModel((void))
 0002:80043C60       DinoPackun::attackSensor((HitSensor *,HitSensor *))
 0002:80043C80       DinoPackun::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80043CA4       DinoPackun::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80043CC8       DinoPackun::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80043CEC       DinoPackun::attackSensorTail((HitSensor *,HitSensor *))
 0002:80043D0C       DinoPackun::receiveMsgPlayerAttackTail((ulong,HitSensor *,HitSensor *))
 0002:80043D30       DinoPackun::startSequence((void))
 0002:80043D84       DinoPackun::control((void))
 0002:80043E18       DinoPackun::calcAndSetBaseMtx((void))
 0002:80043E84       DinoPackun::updatePose((void))
 0002:80043F28       DinoPackun::updateFootPrintNerve((long,long))
 0002:80044114       DinoPackun::updateCameraInfo((void))
 0002:8004425C       DinoPackun::updateNormalVelocity((void))
 0002:800442CC       DinoPackun::updateNormalVelocity((void))
 0002:800442D0       Polta::appearStarPiece((long))
 0002:80044358       DinoPackun::isSensorEgg(const(HitSensor const *))
 0002:80044394       DinoPackun::resetPosition((void))
 0002:80044520       DinoPackun::adjustTailRootPosition((JGeometry::TVec3<f> const &,float))
 0002:800446F4       MR::invalidateLodCtrl((NPCActor const *))
 0002:800446FC       DinoPackun::onMovementParts((void))
 0002:8004476C       DinoPackun::onAimTailBall((long))
 0002:800447C0       DinoPackun::offAimTailBall((long))
 0002:80044810       SleepAlarmHandler
 0002:80044834       DinoPackun::startDemoAndReset((void))
 0002:800448A4       DinoPackun::startDamageCamera((void))
 0002:80044904       DinoPackun::endDamageCamera((void))
 0002:80044954       MR::createDinoPackunVs1((char const *))
 0002:800449C4       MR::createDinoPackunVs2((char const *))
 0002:80044A34       __sinit__DinoPackun_cpp
 0002:80044AD0       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setTrans((JGeometry::TVec3<f> const &))
 0002:80044CF0       DinoPackunAction::DinoPackunAction((char const *,DinoPackun *))
 0002:80044DA0       DinoPackunAction::sendBlowAttackMessage((HitSensor *,HitSensor *,bool))
 0002:80044E88       DinoPackunAction::sendHitAttackMessage((HitSensor *,HitSensor *,bool))
 0002:80044EE0       DinoPackunAction::updateTurn((long,float))
 0002:80044F8C       DinoPackunAction::updateWalk((long,float,long))
 0002:8004504C       DinoPackunAction::updateChase((long,float,float,float,long,long))
 0002:8004513C       DinoPackunAction::selectTurnDirection((void))
 0002:80045184       DinoPackunAction::~DinoPackunAction((void))
 0002:800451DC       DinoPackunAction::updateStart((void))
 0002:80045250       DinoPackunAction::updateFind((long,float))
 0002:80045338       DinoPackunAction::updateCoolDown((long))
 0002:800453B4       DinoPackunAction::updateAttackHit((void))
 0002:80045488       DinoPackunBall::DinoPackunBall((char const *,DinoPackun *))
 0002:80045568       DinoPackunBall::init((JMapInfoIter const &))
 0002:80045660       DinoPackunBall::control((void))
 0002:80045748       DinoPackunBall::calcAndSetBaseMtx((void))
 0002:80045784       DinoPackunBall::addNodeVelocity((JGeometry::TVec3<f> const &))
 0002:80045824       DinoPackunBall::setWeakSensor((HitSensor *))
 0002:80045908       DemoStarter::update((void))
 0002:80045940       DinoPackunBall::requestUnLockPosition((void))
 0002:80045980       DinoPackunBall::addDodgeTargetVelocity((void))
 0002:80045AFC       DinoPackunBall::attackSensor((HitSensor *,HitSensor *))
 0002:80045CA8       DinoPackunBall::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80045D50       JASSeqParser::cmdLoopE((JASTrack *,ulong *))
 0002:80045D78       DinoPackunBall::requestPunch((HitSensor *,HitSensor *))
 0002:80045E08       DinoPackunBall::setDamageFire((void))
 0002:80045E20       DinoPackunBall::setDamageNone((void))
 0002:80045E38       DinoPackunBall::tryRebound((void))
 0002:80045ED4       DinoPackunBall::exeWait((void))
 0002:80045FA8       DinoPackunBall::exeShoot((void))
 0002:80046098       DinoPackunBall::exeCharge((void))
 0002:80046164       DinoPackunBall::exeReverse((void))
 0002:80046228       DinoPackunBall::exeRebound((void))
 0002:80046298       __sinit__DinoPackunBall_cpp
 0002:800462E4       NrvDinoPackunBall::DinoPackunBallNrvWait::DinoPackunBallNrvWait((void))
 0002:800462F4       NrvDinoPackunBall::DinoPackunBallNrvShoot::DinoPackunBallNrvShoot((void))
 0002:80046304       NrvDinoPackunBall::DinoPackunBallNrvCharge::DinoPackunBallNrvCharge((void))
 0002:80046314       NrvDinoPackunBall::DinoPackunBallNrvReverse::DinoPackunBallNrvReverse((void))
 0002:80046324       NrvDinoPackunBall::DinoPackunBallNrvRebound::DinoPackunBallNrvRebound((void))
 0002:80046334       NrvDinoPackunBall::DinoPackunBallNrvLock::DinoPackunBallNrvLock((void))
 0002:80046370       JointControlDelegator<18DinoPackunTailNode>::~JointControlDelegator<18DinoPackunTailNode>((void))
 0002:800463B0       JointControlDelegator<18DinoPackunTailNode>::calcJointMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80046418       JointControlDelegator<18DinoPackunTailNode>::calcJointMatrixAfterChild((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80046480       DinoPackunBall::~DinoPackunBall((void))
 0002:800464D8       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvTurn::DinoPackunBattleEggNrvTurn((void))
 0002:800464E8       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvWalk::DinoPackunBattleEggNrvWalk((void))
 0002:800464F8       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvDamage::DinoPackunBattleEggNrvDamage((void))
 0002:80046508       DinoPackunBattleEgg::DinoPackunBattleEgg((DinoPackun *))
 0002:80046560       DinoPackunBattleEgg::init((void))
 0002:800465B0       DinoPackunBattleEgg::appear((void))
 0002:800465FC       DinoPackunBattleEgg::attackSensor((HitSensor *,HitSensor *))
 0002:8004665C       DinoPackunBattleEgg::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800466B0       DinoPackunBattleEgg::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80046828       DinoPackunBattleVs1Lv2::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800468B8       DinoPackunBattleEgg::exeTurn((void))
 0002:8004696C       DinoPackunBattleEgg::exeWalk((void))
 0002:800469F0       DinoPackunBattleEgg::~DinoPackunBattleEgg((void))
 0002:80046A48       __sinit__DinoPackunBattleEgg_cpp
 0002:80046A94       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvDamage::execute(const(Spine *))
 0002:80046AE4       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvWalk::execute(const(Spine *))
 0002:80046AEC       NrvDinoPackunBattleEgg::DinoPackunBattleEggNrvTurn::execute(const(Spine *))
 0002:80046AF4       NrvDinoPackunBattleEgg::DinoPackunBattleEggVs2NrvTurn::DinoPackunBattleEggVs2NrvTurn((void))
 0002:80046B04       NrvDinoPackunBattleEgg::DinoPackunBattleEggVs2NrvWalk::DinoPackunBattleEggVs2NrvWalk((void))
 0002:80046B14       NrvDinoPackunBattleEgg::DinoPackunBattleEggVs2NrvDamage::DinoPackunBattleEggVs2NrvDamage((void))
 0002:80046B24       DinoPackunBattleEggVs2::DinoPackunBattleEggVs2((DinoPackun *))
 0002:80046B8C       DinoPackunBattleEggVs2::init((void))
 0002:80046C08       DinoPackunBattleEggVs2::appear((void))
 0002:80046C5C       GameSystemObjHolder::drawBeforeEndRender((void))
 0002:80046C70       DinoPackunBattleEggVs2::attackSensor((HitSensor *,HitSensor *))
 0002:80046D14       DinoPackunBattleEggVs2::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80046D60       DinoPackunBattleEggVs2::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80046D6C       DinoPackunBattleEggVs2::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80046E18       DinoPackunBattleEggVs2::exeTurn((void))
 0002:80046ECC       DinoPackunBattleEggVs2::exeWalk((void))
 0002:80046FEC       DinoPackunBattleEggVs2::exeDamage((void))
 0002:80047114       DinoPackunBattleVs1Lv1::DinoPackunBattleVs1Lv1((DinoPackun *))
 0002:8004719C       DinoPackunBattleVs1Lv1::appear((void))
 0002:800471FC       DinoPackunBattleVs1Lv1::attackSensor((HitSensor *,HitSensor *))
 0002:80047364       DinoPackunBattleVs1Lv2::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800474B4       DinoPackunBattleVs2Lv1::tryAwake((void))
 0002:80047514       DinoPackunBattleVs1Lv2::exeStart((void))
 0002:80047578       DinoPackunBattleVs1Lv1::exeTurn((void))
 0002:8004764C       DinoPackunBattleVs1Lv1::exeWalk((void))
 0002:800476CC       DinoPackunBattleVs1Lv1::exeChase((void))
 0002:80047970       NrvLavaSteam::HostTypeSteamEnd::execute(const(Spine *))
 0002:800479C0       NrvDinoPackunBattleVs1Lv2::DinoPackunBattleVs1Lv2NrvFind::execute(const(Spine *))
 0002:80047A24       DinoPackunBattleVs1Lv2::DinoPackunBattleVs1Lv2((DinoPackun *))
 0002:80047AB4       DinoPackunBattleVs1Lv2::appear((void))
 0002:80047B30       DinoPackunBattleVs1Lv2::attackSensor((HitSensor *,HitSensor *))
 0002:80047DF8       NWC24Messenger::draw(const(void))
 0002:80047E08       ShadowVolumeDrawer::onCutDropShadow((void))
 0002:80047E14       ShadowVolumeDrawer::offCutDropShadow((void))
 0002:80047EE4       DinoPackunBattleVs1Lv2::exeTurn((void))
 0002:80048010       DinoPackunBattleVs1Lv2::exeWalk((void))
 0002:8004808C       DinoPackunBattleVs1Lv2::exeChase((void))
 0002:800483E4       DinoPackunBattleVs2Lv1::DinoPackunBattleVs2Lv1((DinoPackun *))
 0002:80048470       J3DColorBlockLightOff::setColorChanOffset((ulong))
 0002:80048478       ShadowVolumeLine::setToShadowController((ShadowController const *))
 0002:80048490       DinoPackunBattleVs2Lv1::init((void))
 0002:8004854C       DinoPackunBattleVs2Lv1::appear((void))
 0002:800485DC       DinoPackunBattleVs2Lv1::control((void))
 0002:800485F0       DinoPackunBattleVs2Lv1::attackSensor((HitSensor *,HitSensor *))
 0002:800487A4       DinoPackunBattleVs2Lv1::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8004884C       DinoPackunBattleVs2Lv1::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80048960       DinoPackunBattleVs2Lv1::exeWalk((void))
 0002:80048AF8       DinoPackunBattleVs2Lv1::endChase((void))
 0002:80048B0C       DinoPackunBattleVs2Lv1::exeTurn((void))
 0002:80048C00       DinoPackunBattleVs2Lv1::exeFindCrazy((void))
 0002:80048CD0       DinoPackunBattleVs2Lv1::exeCrazy((void))
 0002:80048EE0       DinoPackunBattleVs2Lv1::exeChase((void))
 0002:800490D0       DinoPackunBattleVs2Lv1::exeAttackHit((void))
 0002:80049128       DinoPackunBattleVs2Lv1::updateOnOffFireTail((long,long,long))
 0002:800491C8       DinoPackunBattleVs2Lv1::emitFireMouth((void))
 0002:8004931C       DinoPackunBattleVs2Lv1::emitFireTail((void))
 0002:80049440       __sinit__DinoPackunBattleVs2Lv1_cpp
 0002:8004958C       NrvDinoPackunBattleVs2Lv1::DinoPackunBattleVs2Lv1NrvAwake::executeOnEnd(const(Spine *))
 0002:800495A4       NrvPoltaBattleLv1::PoltaBattleLv1NrvGenerateRock::execute(const(Spine *))
 0002:800495F4       DinoPackunDemo::DinoPackunDemo((DinoPackun *))
 0002:80049720       DinoPackunDemo::exeTryStartDemo((void))
 0002:8004977C       DinoPackunDemo::exeOpeningDemo((void))
 0002:80049994       DinoPackunDemo::exeCryDemo((void))
 0002:80049AA4       DinoPackunDemo::exeAngryDemo((void))
 0002:80049C84       DinoPackunDemo::exeDownDemo((void))
 0002:80049DC8       DinoPackunDemo::exeAppearPowerStar((void))
 0002:80049FBC       DinoPackunDemoPosition::DinoPackunDemoPosition((char const *))
 0002:80049FF8       DinoPackunDemoPosition::init((JMapInfoIter const &))
 0002:8004A068       DinoPackunDemoPosition::startOpeningDemo((void))
 0002:8004A0BC       DinoPackunDemoPosition::exeOpeningDemo((void))
 0002:8004A210       DinoPackunEggShell::DinoPackunEggShell((char const *,HitSensor *,float *[4]))
 0002:8004A264       DinoPackunEggShell::init((JMapInfoIter const &))
 0002:8004A30C       DinoPackunEggShell::control((void))
 0002:8004A31C       DinoPackunEggShell::calcAndSetBaseMtx((void))
 0002:8004A558       DinoPackunFireHolder::DinoPackunFireHolder((long))
 0002:8004A654       DinoPackunFire::DinoPackunFire((char const *))
 0002:8004A6A8       DinoPackunFire::init((JMapInfoIter const &))
 0002:8004A7E0       QuestionCoin::startClipped((void))
 0002:8004A820       TrickRabbitFreeRun::calcAndSetBaseMtx((void))
 0002:8004A828       DinoPackunTrackFire::attackSensor((HitSensor *,HitSensor *))
 0002:8004A870       DinoPackunFire::appearShot((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8004A8E4       DinoPackunFire::exeShot((void))
 0002:8004AA50       DinoPackunFire::exeGround((void))
 0002:8004AC00       DinoPackunSequencer::DinoPackunSequencer((char const *,DinoPackun *))
 0002:8004AC54       NerveExecutor::updateNerve((void))
 0002:8004AD08       DinoPackunSequencer::attackSensorTail((HitSensor *,HitSensor *))
 0002:8004AD28       DinoPackunSequencer::receiveMsgPlayerAttackTail((ulong,HitSensor *,HitSensor *))
 0002:8004AD4C       DinoPackunSequencer::receiveOtherMsgTail((ulong,HitSensor *,HitSensor *))
 0002:8004ADC8       DinoPackunStateAwake::DinoPackunStateAwake((DinoPackun *))
 0002:8004AE28       RabbitStateWaitStart::appear((void))
 0002:8004AE38       DinoPackunStateAwake::kill((void))
 0002:8004AE54       DinoPackunStateAwake::exeFind((void))
 0002:8004AF84       __sinit__DinoPackunStateAwake_cpp
 0002:8004AFA4       DinoPackunStateDamage::DinoPackunStateDamage((DinoPackun *))
 0002:8004B024       DinoPackunStateDamage::isDamageMessage(const(ulong))
 0002:8004B034       DinoPackunStateDamage::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8004B13C       MultiEventCamera::setEndCameraTypeSoon((void))
 0002:8004B148       DinoPackunStateDamage::setDamageNormal((void))
 0002:8004B160       DinoPackunStateDamage::exePunched((void))
 0002:8004B220       DinoPackunStateDamage::exePulled((void))
 0002:8004B408       DinoPackunStateDamage::exeEggBroken((void))
 0002:8004B608       DinoPackunStateDamage::exeDamage((void))
 0002:8004B6FC       DinoPackunStateDamage::exeLastDamage((void))
 0002:8004B7F0       DinoPackunStateDamage::updateDamage((void))
 0002:8004B8E8       __sinit__DinoPackunStateDamage_cpp
 0002:8004B9E4       NrvDinoPackunStateDamage::DinoPackunStateDamageNrvTryPulledDemo::execute(const(Spine *))
 0002:8004BA38       DinoPackunStateFire::DinoPackunStateFire((DinoPackun *))
 0002:8004BA8C       DinoPackunStateFire::init((void))
 0002:8004BAE0       DinoPackunStateFire::exeNormal((void))
 0002:8004BB48       DinoPackunStateFire::exeFireSign((void))
 0002:8004BB9C       DinoPackunStateFire::exeCool((void))
 0002:8004BC5C       DinoPackunStateFire::requestFire((void))
 0002:8004BD1C       DinoPackunStateFire::requestCool((void))
 0002:8004BD78       DinoPackunStateFire::setFire((void))
 0002:8004BE18       DinoPackunStateFire::setFireDirect((void))
 0002:8004BF68       __sinit__GameSystemErrorWatcher_cpp
 0002:8004C000       DinoPackunTail::DinoPackunTail((ulong))
 0002:8004C078       DinoPackunTail::addTailNode((DinoPackunTailNode *))
 0002:8004C09C       BinaryDataChunkHolder::addChunk((BinaryDataChunkBase *))
 0002:8004C0B8       DinoPackunTail::activate((void))
 0002:8004C134       DinoPackunTail::deactivate((void))
 0002:8004C1A0       DinoPackunTail::onMovement((void))
 0002:8004C1FC       DinoPackunTail::unlockNodePosition((ulong))
 0002:8004C21C       DinoPackunTail::unlockEndNodePosition((void))
 0002:8004C24C       DinoPackunTail::registerJointCallBack((void))
 0002:8004C31C       DinoPackunTail::updateJoint((void))
 0002:8004C3D4       DinoPackunTail::addAccelKeepBend((void))
 0002:8004C5E0       DinoPackunTail::addAccelKeepDistance((void))
 0002:8004C784       DinoPackunTail::addAccelToBck((void))
 0002:8004C82C       DinoPackunTail::getTailNodePosition(const(JGeometry::TVec3<f> *,long))
 0002:8004C844       DinoPackunTail::getEndTailPosition(const(JGeometry::TVec3<f> *))
 0002:8004C868       DinoPackunTail::getNode(const(ulong))
 0002:8004C878       DinoPackunTailNode::DinoPackunTailNode((char const *,DinoPackun *))
 0002:8004C928       DinoPackunTailNode::createJointController((LiveActor *,char const *))
 0002:8004CA30       DinoPackunTailNode::resetJoint((void))
 0002:8004CA84       DinoPackunTailNode::getLinkLength(const(void))
 0002:8004CA8C       DinoPackunTailNode::getKeepBendPower(const(void))
 0002:8004CA94       DinoPackunTailNode::preCalcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8004CAC4       DinoPackunTailNode::turnJointLocalXDir((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8004CCB4       DinoPackunTailNode::calcJointScale((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8004CD94       ValveSwitch::initAfterPlacement((void))
 0002:8004CD9C       DinoPackunTailNode::registerJointCallBack((void))
 0002:8004CDA4       DinoPackunTailNode::lockPosition((void))
 0002:8004CDF0       DinoPackunTailNode::unLockPosition((void))
 0002:8004CE3C       DinoPackunTailNode::addNodeVelocityHost((JGeometry::TVec3<f> const &))
 0002:8004CE5C       SphereSelectorHandle::getBaseMtx(const(void))
 0002:8004CE64       DinoPackunTailNode::addNodeVelocity((JGeometry::TVec3<f> const &))
 0002:8004CE90       DinoPackunTailPart::DinoPackunTailPart((char const *,DinoPackun *))
 0002:8004CEE4       DinoPackunTailPart::init((JMapInfoIter const &))
 0002:8004D074       DinoPackunTailPart::attackSensor((HitSensor *,HitSensor *))
 0002:8004D154       DinoPackunTailPart::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8004D1F8       BegomanBaby::appear((void))
 0002:8004D238       WipeKoopa::forceOpen((void))
 0002:8004D2C0       NrvDinoPackunTailPart::DinoPackunTailPartNrvWait::execute(const(Spine *))
 0002:8004D36C       DinoPackunTailRoot::DinoPackunTailRoot((char const *,DinoPackun *))
 0002:8004D3A8       DinoPackunTailRoot::init((JMapInfoIter const &))
 0002:8004D3E8       DinoPackunTailRoot::createJointControllerOwn((LiveActor *,char const *))
 0002:8004D4C4       DinoPackunTailRoot::calcJointDirection((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8004D588       DinoPackunTailRoot::addNodeVelocity((JGeometry::TVec3<f> const &))
 0002:8004D58C       JointControlDelegator<18DinoPackunTailRoot>::~JointControlDelegator<18DinoPackunTailRoot>((void))
 0002:8004D6F4       DinoPackunTrackFireHolder::DinoPackunTrackFireHolder((long))
 0002:8004D7F0       InvisiblePolygonObj::InvisiblePolygonObj((char const *))
 0002:8004D834       DinoPackunTrackFire::init((JMapInfoIter const &))
 0002:8004D92C       DinoPackunTrackFire::control((void))
 0002:8004D9FC       DinoPackunTrackFire::appearAndSetPos((JGeometry::TVec3<f> const &))
 0002:8004DA78       DinoPackunTrackFire::exeWait((void))
 0002:8004DB34       DinoPackunTrackFire::exeGround((void))
 0002:8004DCA8       DinoPackunTrackFire::getBaseMtx(const(void))
 0002:8004DCB0       DinoPackunVs1::DinoPackunVs1((DinoPackun *))
 0002:8004DD0C       DinoPackunVs1::init((void))
 0002:8004DDF8       DemoStarter::start((void))
 0002:8004DE3C       DinoPackunVs2::exeCryDemo((void))
 0002:8004DE90       DinoPackunVs2::exeBattleEgg((void))
 0002:8004DF30       DinoPackunVs1::exeBattleLv1((void))
 0002:8004DFDC       DinoPackunVs1::exeBattleLv3((void))
 0002:8004E0AC       DinoPackunVs2::exeDownDemo((void))
 0002:8004E28C       NrvDinoPackunVs1::DinoPackunVs1NrvWaitStart::execute(const(Spine *))
 0002:8004E290       DinoPackunVs1::getVsCount(const(void))
 0002:8004E298       DinoPackunVs1::isUseEggShell(const(void))
 0002:8004E2A0       DinoPackunVs2::DinoPackunVs2((DinoPackun *))
 0002:8004E2FC       DinoPackunVs2::init((void))
 0002:8004E46C       DinoPackunVs2::exeOpeningDemo((void))
 0002:8004E59C       DinoPackunVs2::exeBattleLv1((void))
 0002:8004E638       DinoPackunVs2::exeAngryDemo((void))
 0002:8004E6B4       DinoPackunVs2::exeBattleLv2((void))
 0002:8004E754       DinoPackunVs2::exeBattleLv3((void))
 0002:8004E9C4       NrvDinoPackunVs2::DinoPackunVs2NrvOpeningDemo::execute(const(Spine *))
 0002:8004E9CC       NrvDinoPackunVs2::DinoPackunVs2NrvWaitStart::execute(const(Spine *))
 0002:8004E9D0       DinoPackunVs2::getVsCount(const(void))
 0002:8004E9D8       DinoPackunVs2::isUseEggShell(const(void))
 0002:8004E9E0       JGeometry::TVec3<f>::setAll<f>(void (float))
 0002:8004E9F0       JGeometry::TVec3<f>::TVec3<f>((Vec const &))
 0002:8004EA04       Dodoryu::Dodoryu((char const *))
 0002:8004EB08       Dodoryu::init((JMapInfoIter const &))
 0002:8004ED18       Dodoryu::snapToGround((void))
 0002:8004ED1C       Dodoryu::control((void))
 0002:8004ED8C       Dodoryu::startClipped((void))
 0002:8004EDE0       Dodoryu::endClipped((void))
 0002:8004EE34       Dodoryu::snapToGround((void))
 0002:8004EF18       Dodoryu::snapToWall((void))
 0002:8004F00C       Dodoryu::setMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8004F09C       Dodoryu::notifyOnSwitchA((void))
 0002:8004F0FC       Dodoryu::nextState((void))
 0002:8004F1DC       Dodoryu::pauseOff((void))
 0002:8004F22C       StrayTico::noticeEnd((void))
 0002:8004F2A4       Dodoryu::getPlayerResetMtx(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,ulong))
 0002:8004F2F8       Dodoryu::checkWallWithVelocity((void))
 0002:8004F414       MR::curePlayerElementMode((void))
 0002:8004F41C       Dodoryu::startSpinOutCamera((void))
 0002:8004F460       Dodoryu::endSpinOutCamera((void))
 0002:8004F470       Dodoryu::keepOffFromClosedArea((JGeometry::TVec3<f> *))
 0002:8004F748       Dodoryu::tryRumblePad((void))
 0002:8004F7A8       Dodoryu::validateStarPieceSensor((void))
 0002:8004F7C8       Dodoryu::isHeadNeedle(const(HitSensor *,HitSensor *))
 0002:8004F86C       Dodoryu::setMoveRailSpeed((float))
 0002:8004F8BC       Dodoryu::setHillAppearNumHalf((void))
 0002:8004F8D0       Dodoryu::setHillAppearNumMax((void))
 0002:8004F8E0       Dodoryu::startLeadHillBck((char const *))
 0002:8004F948       Dodoryu::killLeadHill((void))
 0002:8004F95C       Dodoryu::appearBank((void))
 0002:8004F964       Dodoryu::leaveRabbit((void))
 0002:8004F9A8       Dodoryu::resetRabbit((void))
 0002:8004F9B4       Dodoryu::calcRabbitDir(const(JGeometry::TVec3<f> *))
 0002:8004FA34       Dodoryu::displayRabbitMessage((void))
 0002:8004FA44       Dodoryu::calcAndSetBaseMtx((void))
 0002:8004FAA4       Dodoryu::attackSensor((HitSensor *,HitSensor *))
 0002:8004FB4C       Dodoryu::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8004FC4C       Dodoryu::initHitSensor((void))
 0002:8004FE00       Dodoryu::initSwitch((JMapInfoIter const &))
 0002:8004FE84       Dodoryu::createMogucchiHill((void))
 0002:8004FED0       Dodoryu::createDodoryuBank((void))
 0002:8004FF14       Dodoryu::turnUpVecTo((JGeometry::TVec3<f> const &))
 0002:800500E4       Dodoryu::checkHipDrop((void))
 0002:80050138       Dodoryu::initState((void))
 0002:800502E0       Dodoryu::updateRumblePad((void))
 0002:80050304       Dodoryu::updateCameraTarget((void))
 0002:800503B8       DodoryuBank::DodoryuBank((void))
 0002:80050420       ModelObj::~ModelObj((void))
 0002:8005047C       DodoryuBank::init((JMapInfoIter const &))
 0002:800504C0       DodoryuRabbit::DodoryuRabbit((Dodoryu *,JMapInfoIter const &))
 0002:800505B8       DodoryuRabbit::init((JMapInfoIter const &))
 0002:800506D8       DodoryuRabbit::control((void))
 0002:8005082C       DodoryuRabbit::exeEscapeWaiting((void))
 0002:80050888       DodoryuRabbit::exeEscape((void))
 0002:8005093C       DodoryuRabbit::exeEscapeSlow((void))
 0002:80050A14       DodoryuRabbit::exeRest((void))
 0002:80050A98       DodoryuRabbit::exeJump((void))
 0002:80050B10       BegomanSpringHead::exeHopWait((void))
 0002:80050B68       BegomanSpringHead::exeHopJump((void))
 0002:80050BCC       DodoryuRabbit::exePleasure((void))
 0002:80050C44       DodoryuRabbit::attackSensor((HitSensor *,HitSensor *))
 0002:80050CB4       DodoryuRabbit::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80050D5C       DodoryuRabbit::reset((bool))
 0002:80050DC4       DodoryuRabbit::updatePos((float))
 0002:80050F44       DodoryuRabbit::calcCoordDiff(const(void))
 0002:80050FB0       DodoryuRabbit::tryTalk((void))
 0002:80050FCC       DodoryuLeadHill::DodoryuLeadHill((Dodoryu *))
 0002:80051064       DodoryuLeadHill::init((JMapInfoIter const &))
 0002:80051108       DodoryuLeadHill::control((void))
 0002:8005111C       DodoryuLeadHill::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80051268       DodoryuLeadHill::calcAndSetBaseMtx((void))
 0002:800512F4       DodoryuLeadHill::initJoint((void))
 0002:8005153C       @unnamed@Dodoryu_cpp@::DodoryuBankNrvBankAppear::execute(const(Spine *))
 0002:800516C4       MR::Vector<Q22MR34FixedArray<P16DodoryuStateBase,16>>::push_back((DodoryuStateBase *const &))
 0002:800518E0       @unnamed@DodoryuDemo_cpp@::resetCastDisposition((Dodoryu *))
 0002:8005194C       DodoryuDemoDown::DodoryuDemoDown((Dodoryu *,char const *))
 0002:800519A0       DodoryuDemoDown::init((JMapInfoIter const &))
 0002:80051A00       EnableMetroTRKInterrupts
 0002:80051A28       DodoryuDemoOpening::end((void))
 0002:80051AA8       DodoryuDemoOpening::exeDemoWait((void))
 0002:80051BC4       DodoryuDemoOpening::exeUnderground((void))
 0002:80051C58       DodoryuDemoOpening::exeUndergroundHide((void))
 0002:80051CD8       DodoryuDemoOpening::exeAppear((void))
 0002:80051DD0       DodoryuDemoOpening::exeWalk((void))
 0002:80051E88       DodoryuDemoOpening::exeHideReady((void))
 0002:80051F34       DodoryuDemoOpening::exeHide((void))
 0002:80051FAC       DodoryuDemoOpening::tryFinish((void))
 0002:8005201C       DodoryuDemoOpening::turnToRabbit((void))
 0002:8005223C       DodoryuDemoDown::end((void))
 0002:80052294       DodoryuDemoAppear::exeDemoWait((void))
 0002:80052324       DodoryuDemoAppear::exePlay((void))
 0002:80052530       DodoryuDemoAngry::exeDemoWait((void))
 0002:800525B0       DodoryuDemoAngry::exePlay((void))
 0002:800527CC       DodoryuDemoDown::exeDemoWait((void))
 0002:8005284C       DodoryuDemoDown::exePlay((void))
 0002:80052A84       __sinit__SaveDataHandleSequence_cpp
 0002:80052C40       DodoryuStateBase::DodoryuStateBase((Dodoryu *,char const *))
 0002:80052CEC       DodoryuHill::DodoryuHill((Dodoryu *))
 0002:80052E3C       DodoryuSub::MoveState::MoveState((DodoryuSub::MoveStateHolder *))
 0002:80052E60       DodoryuSub::MoveStateHolder::MoveStateHolder((Dodoryu *))
 0002:80052F94       DodoryuSub::MoveStateHolder::execute((void))
 0002:80052FDC       DodoryuSub::MoveStateHolder::shiftRail((float))
 0002:80052FEC       DodoryuSub::MoveStateHolder::shiftChase((float,float,float,float))
 0002:80053038       DodoryuSub::MoveStateHolder::shiftEscape((float,long,long,float,float))
 0002:80053074       DodoryuSub::MoveStateHolder::shiftJumpOut((float,float))
 0002:80053090       ImageEffectDirector::setDepthOfFieldIntensity((float))
 0002:80053098       DodoryuSub::MoveStateHolder::shiftNull((void))
 0002:800530A4       DodoryuSub::MoveStateHolder::brake((void))
 0002:800530D0       J3DPEBlockFull::setAlphaComp((J3DAlphaComp const &))
 0002:800530F0       DodoryuSub::MoveStateHolder::setRailSpeed((float))
 0002:800530FC       DodoryuSub::MoveStateRail::MoveStateRail((DodoryuSub::MoveStateHolder *))
 0002:80053144       DodoryuSub::MoveStateRail::execute((void))
 0002:800532C4       DodoryuSub::MoveStateChase::execute((void))
 0002:80053388       DodoryuSub::MoveStateDetour::execute((void))
 0002:80053494       DodoryuSub::MoveStateDetour::isPlayerOppositeFromWall(const(void))
 0002:800534F4       DodoryuSub::MoveStateEscape::MoveStateEscape((DodoryuSub::MoveStateHolder *))
 0002:80053560       DodoryuSub::MoveStateEscape::execute((void))
 0002:800536A8       DodoryuSub::MoveStateJumpOut::MoveStateJumpOut((DodoryuSub::MoveStateHolder *))
 0002:800536F4       DodoryuSub::MoveStateJumpOut::execute((void))
 0002:800537D0       DodoryuStateBase::calcAttackDir((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800538B4       DodoryuStateBase::calcVerticalizedDir((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80053940       JGeometry::negateInternal((float const *,float *))
 0002:8005395C       DodoryuStateLv1::DodoryuStateLv1((Dodoryu *,char const *))
 0002:80053A2C       DodoryuStateLv1::control((void))
 0002:80053AA8       DodoryuStateLv1::exeHide((void))
 0002:80053BA0       DodoryuStateLv1::exeAppearSign((void))
 0002:80053C04       DodoryuStateLv1::exeAppearStart((void))
 0002:80053CA4       DodoryuStateLv1::exeAppear((void))
 0002:80053D34       DodoryuStateLv1::exeAppearEnd((void))
 0002:80053DA4       DodoryuStateLv1::exeJumpOut((void))
 0002:80053E74       DodoryuStateLv1::exeDamage((void))
 0002:80053F28       DodoryuStateLv1::exeDive((void))
 0002:80053FE4       DodoryuStateLv1::exeSpinOut((void))
 0002:80054144       DodoryuStateLv1::start((void))
 0002:80054194       DodoryuStateLv1::catchAttackSensor((HitSensor *,HitSensor *))
 0002:80054284       DodoryuStateLv1::catchHipDrop((void))
 0002:8005435C       DodoryuStateLv1::catchPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80054564       DodoryuStateLv1::isAttackable(const(void))
 0002:80054628       DodoryuStateLv1::executeHideJump((void))
 0002:800546A4       DodoryuStateLv1::startPop((void))
 0002:800546C0       DodoryuStateLv1::updatePop((void))
 0002:800547CC       DodoryuStateLv1::isHipDropReactionJumpOut(const(void))
 0002:80054868       DodoryuStateLv1::isHipDropReactionPop(const(void))
 0002:800548C0       DodoryuStateLv1::isHipDropReactionNothing(const(void))
 0002:80054970       DodoryuStateLv1::setRailSpeed((float))
 0002:80054988       DodoryuStateLv1::startAnimAppear((void))
 0002:80054A10       DodoryuStateLv1::startAnimWalk((void))
 0002:80054A70       DodoryuStateLv1::startAnimEffectWalkHide((void))
 0002:80054D24       @unnamed@DodoryuStateLv2_cpp@::DodoryuStateLv2NrvChaseAppearStart::executeOnEnd(const(Spine *))
 0002:80054D64       JGeometry::TVec3<f>::scale((float,JGeometry::TVec3<f> const &))
 0002:80054D8C       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::mult33(const(JGeometry::TVec3<f> &))
 0002:80054E00       DodoryuStateLv2::DodoryuStateLv2((Dodoryu *,DodoryuChaseParam *,char const *))
 0002:80054ECC       DodoryuStateLv2::init((JMapInfoIter const &))
 0002:80054F24       DodoryuStateLv2::control((void))
 0002:80054F6C       DodoryuStateLv2::start((void))
 0002:80054FBC       DodoryuStateLv2::exeStart((void))
 0002:8005502C       DodoryuStateLv2::exeReadyChase((void))
 0002:8005510C       DodoryuStateLv2::exeChaseHide((void))
 0002:800551AC       DodoryuStateLv2::exeReadyAppear((void))
 0002:800552A8       DodoryuStateLv2::exeAppearSign((void))
 0002:80055364       DodoryuStateLv2::exeChaseAppearStart((void))
 0002:8005542C       DodoryuStateLv2::exeChaseAppear((void))
 0002:8005549C       DodoryuStateLv2::exeChaseAppearEnd((void))
 0002:80055544       DodoryuStateLv2::exeJumpOut((void))
 0002:80055628       DodoryuStateLv2::exeEscape((void))
 0002:80055710       DodoryuStateLv2::exeEscapeJump((void))
 0002:800557F0       DodoryuStateLv2::exeRecover((void))
 0002:8005587C       DodoryuStateLv2::exeDive((void))
 0002:80055900       DodoryuStateLv2::exeKnockDown((void))
 0002:800559FC       DodoryuStateLv2::exeLaugh((void))
 0002:80055AC0       DodoryuStateLv2::exeLaughEnd((void))
 0002:80055B28       DodoryuStateLv2::exeFindPos((void))
 0002:80055CC4       DodoryuStateLv2::exeHideAttack((void))
 0002:80055D60       DodoryuStateLv2::exeChaseMoreStart((void))
 0002:80055F2C       DodoryuStateLv2::exeChaseMore((void))
 0002:8005609C       DodoryuStateLv2::exeChaseMoreEnd((void))
 0002:80056114       DodoryuStateLv2::catchHipDrop((void))
 0002:800562C8       DodoryuStateLv2::catchAttackSensor((HitSensor *,HitSensor *))
 0002:800563FC       DodoryuStateLv2::catchPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80056590       DodoryuStateLv2::catchSendPlayerFlying((HitSensor *,HitSensor *))
 0002:800565F4       DodoryuStateLv2::knockOver((void))
 0002:800566B0       DodoryuStateLv2::isEnableToCatchHipDrop(const(void))
 0002:8005679C       DodoryuStateLv2::isDown(const(void))
 0002:8005684C       DodoryuStateLv2::isAttackableNerve(const(void))
 0002:8005694C       DodoryuStateLv2::tryShiftToChaseAppear((void))
 0002:800569B8       DodoryuStateLv2::tryShiftToChaseAppearEnd((void))
 0002:80056A2C       DodoryuStateLv2::isEscapeEnd(const(void))
 0002:80056A9C       DodoryuStateLv2::updateHideShake((void))
 0002:80056B00       DodoryuStateLv2::updateChaseHideShake((void))
 0002:80056BE4       DodoryuStateLv2::updateDiveShake((void))
 0002:80056C48       DodoryuStateLv2::calcRandomVelocity((long))
 0002:80056D40       DodoryuStateLv2::keepVerticalizedVelocity((void))
 0002:80056DD0       DodoryuStateLv2::attackStrongToDir((HitSensor *,HitSensor *))
 0002:80056EBC       DodoryuStateLv2::hideJump((void))
 0002:80056F08       DodoryuStateLv2::tryToShiftAppearSign((void))
 0002:80056FBC       DodoryuStateLv2::determinChaseMoreAccelCounter((void))
 0002:80056FF8       DodoryuStateLv2::determinChaseMoreBrakeCounter((void))
 0002:80057034       DodoryuStateLv2::turnToward((JGeometry::TVec3<f> const &,float))
 0002:800570E4       DodoryuStateLv2::addVelocity((bool))
 0002:80057184       DodoryuStateLv2::calcLimitedRotateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80057430       DodoryuStateLv2::shiftChaseUnderground((void))
 0002:8005744C       DodoryuStateLv2::shiftChaseExposingHead((void))
 0002:80057468       DodoryuStateLv2::shiftChaseExposingBust((void))
 0002:80057484       DodoryuStateLv2::shiftChaseInAnger((void))
 0002:800574A0       DodoryuStateLv2::shiftHideAttack((void))
 0002:800574BC       DodoryuStateLv2::startAnim((DodoryuAnimSet const &))
 0002:8005753C       DodoryuStateLv2::startBtk((DodoryuAnimSet const &))
 0002:80057554       DodoryuStateLv2::startBrk((DodoryuAnimSet const &))
 0002:8005756C       DodoryuStateLv2::startBva((DodoryuAnimSet const &))
 0002:80057584       DodoryuStateLv2::startLeadHillBck((DodoryuAnimSet const &))
 0002:800575F8       __sinit__StaffRoll_cpp
 0002:80057874       @unnamed@DodoryuStateLv2_cpp@::DodoryuStateLv2NrvEscapeJump::executeOnEnd(const(Spine *))
 0002:800578A8       @unnamed@DodoryuStateLv2_cpp@::DodoryuStateLv2NrvChaseAppearEnd::executeOnEnd(const(Spine *))
 0002:80057954       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::makeRotate((JGeometry::TVec3<f> const &,float))
 0002:80057A7C       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::zeroTrans((void))
 0002:80057A90       DodoryuStateWait::DodoryuStateWait((Dodoryu *,char const *))
 0002:80057B3C       DodoryuStateWait::exeWait((void))
 0002:80057CD4       DodoryuUtil::calcVerticalizedDir((Dodoryu *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80057D5C       DodoryuUtil::turnToward((Dodoryu *,JGeometry::TVec3<f> const &,float))
 0002:80057FA0       DodoryuUtil::accelerate((Dodoryu *,JGeometry::TVec3<f> const &,float,float,float))
 0002:800580A8       DodoryuUtil::addVelocity((Dodoryu *,bool))
 0002:80058140       DodoryuUtil::rotateVelocityByWall((Dodoryu *))
 0002:80058204       DodoryuUtil::calcEscapeDir((Dodoryu *,JGeometry::TVec3<f> *,float))
 0002:80058404       Koopa::Koopa((char const *,KoopaSequencer *))
 0002:800584A8       Koopa::control((void))
 0002:800584EC       Koopa::calcAndSetBaseMtx((void))
 0002:80058530       TicoRail::control((void))
 0002:80058538       EyeBeamer::draw(const(void))
 0002:8005854C       Koopa::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80058560       Koopa::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80058574       Koopa::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800585E4       Koopa::init((JMapInfoIter const &))
 0002:800587E8       KoopaBattleBase::KoopaBattleBase((char const *,Koopa *))
 0002:800588A4       KoopaBattleBase::init((void))
 0002:80058904       KoopaBattleBase::kill((void))
 0002:80058954       KoopaBattleBase::updateChasePlayer((MR::ActorMoveParam const &))
 0002:80058A24       KoopaBattleBase::updateWander((MR::ActorMoveParam const &))
 0002:80058B38       KoopaBattleBase::updateSearch((void))
 0002:80058BC4       KoopaBattleBase::updateFind((void))
 0002:80058C7C       KoopaBattleBase::updateRecover((Nerve const *))
 0002:80058D5C       MR::moveAndTurnToPlayer((LiveActor *,JGeometry::TVec3<f> *,MR::ActorMoveParam const &))
 0002:80058D70       KoopaBattleMain::KoopaBattleMain((char const *,Koopa *))
 0002:80058DC8       KoopaBattleMain::init((void))
 0002:80058FBC       KoopaBattleMain::appear((void))
 0002:800590B0       KoopaBattleMain::exeChasePlayer((void))
 0002:800591A4       KoopaBattleMain::exeWander((void))
 0002:80059218       KoopaBattleMain::exeSearch((void))
 0002:800592EC       KoopaBattleMain::exeJumpAway((void))
 0002:8005935C       KoopaBattleMain::exeAttackShockWave((void))
 0002:800593DC       KoopaBattleMain::exeAttackFireShort((void))
 0002:800594BC       KoopaBattleMain::exeAttackHipDrop((void))
 0002:80059530       KoopaBattleMain::exeAttackSpin((void))
 0002:80059588       KoopaBattleMain::exeAttackRoll((void))
 0002:800595E4       KoopaBattleMain::exeDamageEscape((void))
 0002:80059638       KoopaBattleMain::tryCalcAndSetBaseMtx((void))
 0002:80059680       KoopaBattleMain::attackSensor((HitSensor *,HitSensor *))
 0002:800597DC       KoopaBattleMain::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800599D8       KoopaBattleMain::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80059A98       KoopaBattleMain::startMainAttack((void))
 0002:80059BD0       KoopaBattleMain::tryJumpAway((void))
 0002:80059E04       @unnamed@GalaxyMapSelectButton_cpp@::GalaxyMapSelectButtonBetweenListToMapFadeout::execute(const(Spine *))
 0002:80059E84       KoopaBattleStairsBase::KoopaBattleStairsBase((Koopa *))
 0002:80059F08       KoopaBattleStairsBase::calcFireStartPos(const(JGeometry::TVec3<f> *,char const *))
 0002:80059F64       NerveExecutor::updateNerve((void))
 0002:80059F68       KoopaBattleStairsBase::end((void))
 0002:80059FD4       KoopaBattleStairsBase::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80059FD8       JPAFieldGravity::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:80059FE4       KoopaBattleStairsBase::calcFireAttackStep(const(KoopaBattleMapStair *,float,long,JGeometry::TVec3<f> const &))
 0002:8005A0DC       KoopaBattleStairsVs1::KoopaBattleStairsVs1((Koopa *))
 0002:8005A1E4       KoopaBattleStairsVs1::registerStair((KoopaBattleMapStair *))
 0002:8005A2E0       KoopaBattleStairsVs1::exeWaitDemo((void))
 0002:8005A368       KoopaBattleStairsVs1::exeDemo((void))
 0002:8005A4EC       KoopaBattleStairsVs1::exeWait((void))
 0002:8005A55C       KoopaBattleStairsVs1::exeAttackFire((void))
 0002:8005A764       KoopaBattleStairsVs1::exeJumpToNextPosStart((void))
 0002:8005A7E4       KoopaBattleStairsVs1::exeJumpToNextPosLoop((void))
 0002:8005AA40       KoopaBattleStairsVs1::exeJumpToNextPosEnd((void))
 0002:8005AB40       KoopaBattleStairsVs1::tryAttackRequest((void))
 0002:8005ABC0       KoopaBattleStairsVs1::tryRequestedToMoveNextPos((void))
 0002:8005ACB0       __sinit__GameSystemStationedArchiveLoader_cpp
 0002:8005ADAC       KoopaBattleStairsVs3::KoopaBattleStairsVs3((Koopa *))
 0002:8005AE28       KoopaBattleStairsVs3::registerStair((KoopaBattleMapStair *))
 0002:8005AE7C       KoopaBattleStairsVs3::exeWaitDemo((void))
 0002:8005AFD8       KoopaBattleStairsVs3::exeDemo((void))
 0002:8005B0B4       KoopaBattleStairsVs3::exeWait((void))
 0002:8005B100       KoopaBattleStairsVs3::tryAttack((void))
 0002:8005B258       KoopaBattleVs3Lv1::KoopaBattleVs3Lv1((Koopa *))
 0002:8005B2AC       KoopaBattleVs3Lv1::init((void))
 0002:8005B3F8       KoopaBattleVs3Lv2::exeAttackFire((void))
 0002:8005B4B0       KoopaBattleVs3Lv2::exeDamageReverse((void))
 0002:8005B580       KoopaBattleVs3Lv2::tryCalcAndSetBaseMtx((void))
 0002:8005B5D4       KoopaBattleVs3Lv1::attackSensor((HitSensor *,HitSensor *))
 0002:8005B6E0       KoopaBattleVs3Lv1::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8005B9EC       KoopaBattleVs3Lv2::KoopaBattleVs3Lv2((Koopa *))
 0002:8005BA3C       KoopaBattleVs3Lv2::init((void))
 0002:8005BD38       KoopaBattleVs3Lv2::attackSensor((HitSensor *,HitSensor *))
 0002:8005BE1C       KoopaBattleVs3Lv2::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8005BF34       KoopaBattleVs3Lv2::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8005C190       KoopaDemoPowerUp::~KoopaDemoPowerUp((void))
 0002:8005C1E8       KoopaDemoPowerUp::KoopaDemoPowerUp((Koopa *))
 0002:8005C23C       KoopaDemoPowerUp::init((void))
 0002:8005C2A4       KoopaDemoPowerUp::kill((void))
 0002:8005C304       KoopaDemoPowerUp::exeWaitDemo((void))
 0002:8005C450       KoopaDemoPowerUp::exeDemo((void))
 0002:8005C61C       KoopaDemoFallToPlanetVs3Lv2::KoopaDemoFallToPlanetVs3Lv2((Koopa *))
 0002:8005C670       KoopaDemoFallToPlanetVs3Lv3::init((void))
 0002:8005C6C4       KoopaDemoFallToPlanetVs3Lv3::appear((void))
 0002:8005C718       KoopaDemoFallToPlanetVs3Lv3::kill((void))
 0002:8005C738       KoopaDemoFallToPlanetVs3Lv2::exeWaitFall((void))
 0002:8005C790       KoopaDemoFallToPlanetVs3Lv2::exeDemoFall((void))
 0002:8005C824       KoopaDemoFallToPlanetVs3Lv2::exeFallToLand((void))
 0002:8005C8F8       KoopaDemoFallToPlanetVs3Lv2::exeLand((void))
 0002:8005C99C       KoopaDemoJumpToPlanet::exeWaitPlayer((void))
 0002:8005CA6C       __sinit__GameSystem_cpp
 0002:8005CB28       KoopaDemoFallToPlanetVs3Lv3::KoopaDemoFallToPlanetVs3Lv3((Koopa *))
 0002:8005CC44       KoopaDemoFallToPlanetVs3Lv3::exeWaitFallDemo((void))
 0002:8005CC9C       KoopaDemoFallToPlanetVs3Lv3::exeFallOutside((void))
 0002:8005CEA0       KoopaDemoFallToPlanetVs3Lv3::exeFallInside((void))
 0002:8005CF14       KoopaDemoFallToPlanetVs3Lv3::exeLand((void))
 0002:8005CFB8       KoopaDemoFallToPlanetVs3Lv3::exeWaitPlayer((void))
 0002:8005D13C       KoopaDemoJumpToPlanet::KoopaDemoJumpToPlanet((Koopa *))
 0002:8005D190       KoopaDemoJumpToPlanet::init((void))
 0002:8005D1F8       KoopaDemoJumpToPlanet::kill((void))
 0002:8005D27C       KoopaDemoJumpToPlanet::exeStart((void))
 0002:8005D300       KoopaDemoJumpToPlanet::exeFall((void))
 0002:8005D410       KoopaDemoJumpToPlanet::exeLand((void))
 0002:8005D620       KoopaFigureBall::~KoopaFigureBall((void))
 0002:8005D67C       KoopaFigureBall::KoopaFigureBall((char const *,Koopa *,float,MR::ActorMoveParam const *))
 0002:8005D708       KoopaFigureBall::init((JMapInfoIter const &))
 0002:8005D764       KoopaFigureBall::makeActorAppeared((void))
 0002:8005D800       KoopaFigureBall::makeActorDead((void))
 0002:8005D840       KoopaFigureBall::control((void))
 0002:8005DA9C       KoopaFigureBall::getBaseMtx(const(void))
 0002:8005DAA4       KoopaFireShort::KoopaFireShort((Koopa const *))
 0002:8005DB14       KoopaFireShort::init((JMapInfoIter const &))
 0002:8005DC80       KoopaFireShort::appear((void))
 0002:8005DDF8       KoopaFireShort::emitFast((void))
 0002:8005DE98       KoopaFireShort::emitCurve((void))
 0002:8005DF04       KoopaFireShort::emitLongTime((void))
 0002:8005DF54       KoopaFireShort::exeFly((void))
 0002:8005E0A4       KoopaFireShort::exeDisappear((void))
 0002:8005E130       KoopaFireShort::exeErase2P((void))
 0002:8005E1D4       KoopaBattleMapPlanet::calcAndSetBaseMtx((void))
 0002:8005E1DC       KoopaFireShort::attackSensor((HitSensor *,HitSensor *))
 0002:8005E2F8       KoopaFireShort::updateFly((void))
 0002:8005E3BC       KoopaFireShort::updateFrontAndVelocity((void))
 0002:8005E500       KoopaFireStairs::~KoopaFireStairs((void))
 0002:8005E55C       KoopaFireStairs::KoopaFireStairs((char const *,bool))
 0002:8005E5E0       KoopaFireStairs::init((JMapInfoIter const &))
 0002:8005E724       KoopaFireStairs::appear((void))
 0002:8005E7B8       KoopaFireStairs::makeActorDead((void))
 0002:8005E7F8       KoopaFireStairs::setInfo((KoopaBattleMapStair const *,JGeometry::TVec3<f> const *))
 0002:8005E99C       KoopaFireStairs::exeFly((void))
 0002:8005EC38       KoopaFireStairs::exeBreak((void))
 0002:8005ECB4       KoopaFireStairs::calcAndSetBaseMtx((void))
 0002:8005ED84       KoopaFunction::createKoopaVs1((char const *))
 0002:8005EDEC       KoopaFunction::createKoopaVs2((char const *))
 0002:8005EE54       KoopaFunction::createKoopaVs3((char const *))
 0002:8005EEBC       RunawayRabbit::setMessage((void))
 0002:8005EEE4       KoopaFunction::registerBattleMapStair((KoopaBattleMapStair *))
 0002:8005EF2C       KoopaFunction::setKoopaPos((Koopa *,char const *))
 0002:8005F020       KoopaFunction::isKoopaSightPlayer((Koopa const *,MR::ActorSightParam const &))
 0002:8005F038       KoopaFunction::moveAndTurnKoopaToPlayer((Koopa *,MR::ActorMoveParam const &))
 0002:8005F098       KoopaFunction::isKoopaVs1((Koopa const *))
 0002:8005F0B0       KoopaFunction::isKoopaVs2((Koopa const *))
 0002:8005F0C8       KoopaFunction::isKoopaVs3((Koopa const *))
 0002:8005F0E0       KoopaFunction::isKoopaLv1((Koopa const *))
 0002:8005F0F8       KoopaFunction::isKoopaLv2((Koopa const *))
 0002:8005F110       KoopaFunction::isKoopaLv3((Koopa const *))
 0002:8005F114       MR::isTalkTalking((TalkMessageCtrl const *))
 0002:8005F128       KoopaFunction::isKoopaAngry((Koopa const *))
 0002:8005F12C       GXGetFifoWrap
 0002:8005F134       KoopaFunction::startKoopaAngry((Koopa *))
 0002:8005F138       ScreenBlurEffect::notifyTurnOn((void))
 0002:8005F144       KoopaFunction::startFaceCtrl((Koopa *))
 0002:8005F148       MR::initFur((LiveActor *))
 0002:8005F150       PoltaFunction::killGroundRock((Polta *))
 0002:8005F158       KoopaFunction::endFaceCtrlDirect((Koopa *))
 0002:8005F164       KoopaFunction::startRecoverKoopaArmor((Koopa *))
 0002:8005F1BC       KoopaFunction::startBreakKoopaTailThorn((Koopa *))
 0002:8005F214       KoopaFunction::startRecoverKoopaTailThorn((Koopa *))
 0002:8005F26C       KoopaFunction::getKoopaRock((Koopa *))
 0002:8005F270       CameraTargetActor::getCubeCameraArea(const(void))
 0002:8005F278       KoopaFunction::getKoopaRockBreak((Koopa *))
 0002:8005F27C       J3DPEBlockFull::getFogOffset(const(void))
 0002:8005F284       KoopaFunction::getKoopaRollBall((Koopa *))
 0002:8005F290       KoopaFunction::emitKoopaFireShortSlow((Koopa *))
 0002:8005F294       TalkBalloon::close((void))
 0002:8005F2A0       KoopaFunction::emitKoopaFireShortFast((Koopa *))
 0002:8005F2B0       KoopaFunction::emitKoopaFireShortCurve((Koopa *))
 0002:8005F2E0       KoopaFunction::getKoopaPlanet((Koopa *))
 0002:8005F2EC       KoopaFunction::getKoopaPlanetLv2((Koopa *))
 0002:8005F2F0       J3DColorBlockLightOn::getMatColorOffset(const(void))
 0002:8005F2F8       KoopaFunction::getKoopaPlanetLv3((Koopa *))
 0002:8005F2FC       J3DColorBlockLightOn::getColorChanOffset(const(void))
 0002:8005F31C       KoopaFunction::getKoopaPlanetShadow((Koopa *))
 0002:8005F320       GXGetFifoCount
 0002:8005F328       KoopaFunction::tryKoopaPushPlayer((HitSensor *,HitSensor *))
 0002:8005F39C       KoopaFunction::tryKoopaBodyAttackPlayerMaximum((HitSensor *,HitSensor *))
 0002:8005F47C       KoopaFunction::tryKoopaAttackPlayerMaximum((HitSensor *,HitSensor *))
 0002:8005F4F0       KoopaFunction::tryKoopaAttackMapObj((HitSensor *,HitSensor *))
 0002:8005F580       KoopaFunction::tryKoopaReflectStarPiece((ulong,HitSensor *,HitSensor *))
 0002:8005F5C8       RFLDrawXlu
 0002:8005F5D4       KoopaFunction::registerKoopaSwitchKeeper((LiveActor *))
 0002:8005F608       KoopaFunction::getKoopaSwitchKeeper((Koopa *))
 0002:8005F60C       GameSceneLayoutHolder::getPurpleCoinCounter(const(void))
 0002:8005F614       KoopaFunction::registerKoopaViewSwitchKeeper((LiveActor *))
 0002:8005F648       KoopaFunction::getKoopaViewSwitchKeeper((Koopa *))
 0002:8005F654       KoopaFunction::registerKoopaPowerUpSwitch((LiveActor *))
 0002:8005F688       KoopaFunction::getKoopaPowerUpSwitch((Koopa *))
 0002:8005F694       @unnamed@KoopaFunction_cpp@::tryStartCameraDemo((Koopa *,char const *,char const *,char const *,bool))
 0002:8005F76C       KoopaFunction::tryStartKoopaAndMarioCameraDemo((Koopa *,char const *,char const *,char const *))
 0002:8005F774       KoopaFunction::tryStartKoopaCameraDemo((Koopa *,char const *,char const *,char const *))
 0002:8005F77C       KoopaFunction::tryEndKoopaCameraDemo((Koopa *,char const *,char const *))
 0002:8005F7FC       KoopaFunction::getKoopaDemoPeach((Koopa *))
 0002:8005F808       KoopaFunction::getKoopaDemoKoopaJr((Koopa *))
 0002:8005F814       KoopaFunction::getKoopaDemoKoopaJrShip((Koopa *))
 0002:8005F820       KoopaFunction::getKoopaDemoMeteor1((Koopa *))
 0002:8005F824       J3DTevBlock2::getTevRegOffset(const(void))
 0002:8005F82C       KoopaFunction::getKoopaDemoMeteor2((Koopa *))
 0002:8005F830       JKRSolidHeap::do_getFreeSize((void))
 0002:8005F838       KoopaFunction::getKoopaDemoMeteor3((Koopa *))
 0002:8005F83C       JKRSolidHeap::do_getMaxFreeBlock((void))
 0002:8005F844       KoopaFunction::endKoopaDemoMeetPeach((Koopa *))
 0002:8005F8F0       KoopaFunction::invalidateKoopaNpcLod((Koopa *))
 0002:8005F93C       KoopaFunction::initKoopaCamera((Koopa *,char const *))
 0002:8005F94C       KoopaFunction::initKoopaAnimCamera((Koopa *,char const *))
 0002:8005F95C       KoopaFunction::startKoopaTargetCamera((Koopa *,char const *))
 0002:8005F984       KoopaFunction::startKoopaAnimCamera((Koopa *,char const *,long))
 0002:8005F9A0       KoopaFunction::endKoopaCamera((Koopa *,char const *,bool,long))
 0002:8005F9C0       KoopaFunction::endKoopaAnimCamera((Koopa *,char const *,long))
 0002:8005F9DC       KoopaFunction::startKoopaPlateDamageAnimPowerStarAppear((Koopa *))
 0002:8005FA2C       gap_btm_cback1
 0002:8005FA38       KoopaFunction::changeBgmStateEscape((void))
 0002:8005FA44       KoopaFunction::changeBgmStateDamageTail((void))
 0002:8005FA50       KoopaFunction::changeBgmStateFlyAway((void))
 0002:8005FA5C       KoopaFunction::tryRestartKoopa((void))
 0002:8005FBA4       KoopaFunction::startBreakKoopaArmor((Koopa *))
 0002:8005FC10       KoopaFunction::tryKoopaShellAttackPlayer((HitSensor *,HitSensor *))
 0002:8005FC88       KoopaFunction::startKoopaSpinHitBlow((Koopa *))
 0002:8005FD18       KoopaParts::KoopaParts((Koopa *,JMapInfoIter const &))
 0002:8005FE00       @unnamed@KoopaParts_cpp@::createKoopaBodyParts((LiveActor *,char const *,char const *,char const *))
 0002:8005FE98       KoopaParts::emitFireStairsToPos((KoopaBattleMapStair const *,JGeometry::TVec3<f> const &,bool))
 0002:8005FF50       KoopaParts::killFireStairsAll((void))
 0002:8005FFC0       KoopaParts::emitFireShort((bool,bool))
 0002:80060028       KoopaParts::emitFireLongTime((void))
 0002:80060058       KoopaParts::emitShockWave((void))
 0002:80060094       KoopaParts::getPlanetPos(const(void))
 0002:80060128       KoopaParts::getPlanetRadius(const(void))
 0002:80060130       KoopaParts::appearHoleSunPlanetInside((void))
 0002:80060144       KoopaParts::appearHoleSunPlanetOutside((void))
 0002:80060158       KoopaParts::killHoleSunPlanetOutside((void))
 0002:8006016C       KoopaParts::createPlanetShadow((void))
 0002:800601C8       KoopaParts::initVs1((void))
 0002:8006026C       KoopaParts::initVs2((void))
 0002:80060300       @unnamed@KoopaParts_cpp@::createDemoNpc((char const *,char const *))
 0002:800603B0       KoopaParts::initVs3((void))
 0002:800606B8       KoopaParts::createRock((void))
 0002:8006073C       KoopaParts::createRollBall((void))
 0002:800607A0       KoopaParts::createCommonParts((void))
 0002:80060928       KoopaParts::createFireStairs((bool))
 0002:800609D0       KoopaPowerUpSwitch::KoopaPowerUpSwitch((char const *))
 0002:80060A0C       KoopaPowerUpSwitch::init((JMapInfoIter const &))
 0002:80060A64       KoopaPowerUpSwitch::initAfterPlacement((void))
 0002:80060A68       KoopaPowerUpSwitch::~KoopaPowerUpSwitch((void))
 0002:80060AC4       KoopaPlanetShadow::~KoopaPlanetShadow((void))
 0002:80060B20       KoopaPlanetShadow::KoopaPlanetShadow((Koopa const *))
 0002:80060B7C       KoopaPlanetShadow::init((JMapInfoIter const &))
 0002:80060BF0       KoopaPlanetShadow::calcAndSetBaseMtx((void))
 0002:80060CC4       KoopaRestarterVs3::KoopaRestarterVs3((char const *))
 0002:80060D00       KoopaRestarterVs3::init((JMapInfoIter const &))
 0002:80060D48       KoopaRestarterVs3::appear((void))
 0002:80060DC8       KoopaRockBreak::KoopaRockBreak((LiveActor *))
 0002:80060E20       KoopaRockBreak::init((JMapInfoIter const &))
 0002:80060E80       KoopaRockBreak::control((void))
 0002:80060EC8       KoopaRockBreak::~KoopaRockBreak((void))
 0002:80060F20       KoopaSensorCtrl::KoopaSensorCtrl((Koopa *))
 0002:80060F28       KoopaSensorCtrl::update((HitSensor *))
 0002:80060F2C       KoopaSensorCtrl::initSensor((void))
 0002:80061524       KoopaSequencer::KoopaSequencer((char const *,long))
 0002:80061590       KoopaSequencer::init((Koopa *,JMapInfoIter const &))
 0002:80061614       NerveExecutor::updateNerve((void))
 0002:80061618       KoopaSequencer::calcAndSetBaseMtx((void))
 0002:80061624       KoopaSequencer::startBattleLevel2((void))
 0002:80061638       KoopaSequencer::startBattleLevel3((void))
 0002:8006164C       KoopaSequencer::~KoopaSequencer((void))
 0002:800616A4       KoopaSubSequenceBattle::KoopaSubSequenceBattle((Koopa *,KoopaSequencer *,KoopaBattleBase *))
 0002:80061714       KoopaSubSequenceBattle::kill((void))
 0002:80061724       KoopaSubSequenceBattle::isDemo(const(void))
 0002:8006177C       KoopaSubSequenceBattle::exeDemoStartLv2((void))
 0002:800617CC       KoopaSubSequenceBattle::exeDemoStartLv3((void))
 0002:8006181C       KoopaSubSequenceBattle::~KoopaSubSequenceBattle((void))
 0002:80061874       __sinit__KoopaSubSequenceBattle_cpp
 0002:80061908       NrvKoopaSubSequenceBattle::KoopaSubSequenceBattleNrvBattleLv3::execute(const(Spine *))
 0002:80061960       NrvKoopaSequencerVs3::KoopaSequencerVs3NrvDemoJumpToPlanet::execute(const(Spine *))
 0002:80061970       NrvKoopaSubSequenceBattle::KoopaSubSequenceBattleNrvDemoStartLv2::execute(const(Spine *))
 0002:80061978       NrvKoopaSubSequenceBattle::KoopaSubSequenceBattleNrvBattleLv1::execute(const(Spine *))
 0002:80061988       KoopaSequencerVs1::KoopaSequencerVs1((void))
 0002:800619DC       KoopaSequencerVs1::init((Koopa *,JMapInfoIter const &))
 0002:80061AEC       KoopaSequencerVs1::exeBattleStairs((void))
 0002:80061BA0       KoopaSequencerVs1::exeDemoBattleStart((void))
 0002:80061C48       KoopaSequencerVs1::exeWaitDemoBattleEnd((void))
 0002:80061CD0       KoopaSequencerVs1::exeDemoBattleEnd((void))
 0002:80061DC0       KoopaSequencerVs2::attackSensor((HitSensor *,HitSensor *))
 0002:80061E28       KoopaSequencerVs1::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80061ED4       KoopaSequencerVs2::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80062080       NrvPoltaBattleLv2::PoltaBattleLv2NrvGenerateGroundRock::execute(const(Spine *))
 0002:800620B0       KoopaSequencerVs2::KoopaSequencerVs2((void))
 0002:80062104       KoopaSequencerVs2::init((Koopa *,JMapInfoIter const &))
 0002:80062214       KoopaSequencerVs2::exeWaitDemoBattleStart((void))
 0002:80062280       KoopaSequencerVs2::exeDemoBattleStart((void))
 0002:800622E8       KoopaSequencerVs2::exeWaitDemoDown((void))
 0002:80062358       KoopaSequencerVs2::exeDemoDown((void))
 0002:80062714       KoopaSequencerVs3::KoopaSequencerVs3((void))
 0002:80062774       KoopaSequencerVs3::init((Koopa *,JMapInfoIter const &))
 0002:800629A8       KoopaSequencerVs3::exeWaitPlayer((void))
 0002:80062B08       KoopaSequencerVs3::exeBattleStairs((void))
 0002:80062B7C       KoopaSequencerVs3::exeDemoBattleStart((void))
 0002:80062BEC       KoopaSequencerVs3::exeBattleVs3Lv1((void))
 0002:80062C5C       KoopaSequencerVs3::exeFallToPlanetLv2((void))
 0002:80062CE0       KoopaSequencerVs3::exeBattleVs3Lv2((void))
 0002:80062D58       KoopaSequencerVs3::exeFallToPlanetLv3((void))
 0002:80062DDC       KoopaSequencerVs3::exeBattleVs3Lv3((void))
 0002:80062E54       KoopaSequencerVs3::exeBattleFinal((void))
 0002:80062EE4       KoopaSequencerVs3::exeWaitDemoDown((void))
 0002:80062F3C       KoopaSequencerVs3::exeDemoDown((void))
 0002:80063140       KoopaSequencerVs3::calcAndSetBaseMtx((void))
 0002:800631EC       KoopaSequencerVs3::attackSensor((HitSensor *,HitSensor *))
 0002:800632A8       KoopaSequencerVs3::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800633A8       KoopaSequencerVs3::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80063410       KoopaSequencerVs3::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80063520       __sinit__NWC24Messenger_cpp
 0002:800636C4       NrvKoopaSequencerVs3::KoopaSequencerVs3NrvDemoPowerUpFinal::execute(const(Spine *))
 0002:80063724       KoopaShockWave::KoopaShockWave((Koopa *))
 0002:800637C0       KoopaShockWave::init((JMapInfoIter const &))
 0002:8006390C       KoopaShockWave::appear((void))
 0002:80063954       KoopaShockWave::makeActorDead((void))
 0002:800639A8       @unnamed@KoopaShockWave_cpp@::makeShockWaveMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:80063A54       KoopaShockWave::exeWaveAttack((void))
 0002:80063DEC       KoopaShockWave::updateHitSensor((HitSensor *))
 0002:80063F30       KoopaShockWave::calcAndSetBaseMtx((void))
 0002:80063F38       KoopaShockWave::attackSensor((HitSensor *,HitSensor *))
 0002:80064040       KoopaStateAttackFireShort::KoopaStateAttackFireShort((Koopa *))
 0002:800640B4       KoopaStateAttackFireShort::appear((void))
 0002:80064200       KoopaStateAttackFireShort::exeStart((void))
 0002:80064290       KoopaStateAttackFireShort::exeEmit((void))
 0002:8006447C       KoopaStateAttackFireLong::KoopaStateAttackFireLong((Koopa *))
 0002:800644E8       KoopaStateAttackFireLong::appear((void))
 0002:80064538       KoopaStateAttackFireLong::exeStart((void))
 0002:800645C8       KoopaStateAttackFireLong::exeEmit((void))
 0002:80064754       KoopaStateAttackHipDrop::KoopaStateAttackHipDrop((Koopa *))
 0002:800647D4       KoopaStateAttackHipDrop::init((void))
 0002:80064850       KoopaStateAttackHipDrop::appear((void))
 0002:80064968       KoopaStateAttackHipDrop::kill((void))
 0002:800649F0       KoopaStateAttackHipDrop::attackSensor((HitSensor *,HitSensor *))
 0002:80064B38       KoopaStateAttackHipDrop::exeRun((void))
 0002:80064C30       KoopaStateAttackHipDrop::exeJumpStart((void))
 0002:80064CA4       KoopaStateAttackHipDrop::exeJumpUp((void))
 0002:80064D94       KoopaStateAttackHipDrop::exeJumpWaitAir((void))
 0002:80064E1C       KoopaStateAttackHipDrop::exeJumpAttackDown((void))
 0002:80065074       KoopaStateAttackHipDrop::exeLand((void))
 0002:80065274       KoopaStateAttackRoll::KoopaStateAttackRoll((Koopa *))
 0002:800652E8       KoopaStateAttackRoll::init((void))
 0002:80065388       KoopaStateAttackRoll::appear((void))
 0002:8006550C       KoopaStateAttackRoll::kill((void))
 0002:800655B0       KoopaStateChaseRoll::tryCalcAndSetBaseMtx((void))
 0002:8006562C       KoopaStateAttackRoll::attackSensor((HitSensor *,HitSensor *))
 0002:800656E8       KoopaStateAttackRoll::isDamage(const(ulong,HitSensor *,HitSensor *))
 0002:800657C4       KoopaStateChaseRoll::exeWaitToStart((void))
 0002:80065828       KoopaStateAttackRoll::exeStart((void))
 0002:80065920       KoopaStateAttackRoll::exeRollAir((void))
 0002:80065A0C       KoopaStateAttackRoll::exeRollGround((void))
 0002:80065B50       KoopaStateAttackRoll::exeEndAir((void))
 0002:80065C14       TombSpiderStateSwoon::exeEnd((void))
 0002:80065DB0       KoopaStateAttackShockWave::KoopaStateAttackShockWave((Koopa *))
 0002:80065E2C       TombSpiderStateSwoon::init((void))
 0002:80065E70       KoopaStateAttackShockWave::appear((void))
 0002:8006601C       KoopaStateAttackShockWave::kill((void))
 0002:8006605C       KoopaStateAttackShockWave::attackSensor((HitSensor *,HitSensor *))
 0002:80066130       TombSpiderStateSwoon::exeStart((void))
 0002:80066190       KoopaStateAttackShockWave::exeJump((void))
 0002:80066334       KoopaStateAttackShockWave::exeLand((void))
 0002:800664CC       KoopaStateAttackSpin::KoopaStateAttackSpin((Koopa *))
 0002:80066544       KoopaStateAttackSpin::init((void))
 0002:800665BC       KoopaStateAttackSpin::appear((void))
 0002:80066660       KoopaStateAttackSpin::kill((void))
 0002:80066678       KoopaStateAttackSpin::attackSensor((HitSensor *,HitSensor *))
 0002:80066728       KoopaStateAttackSpin::tryDamage((ulong,HitSensor *,HitSensor *))
 0002:80066840       KoopaStateAttackSpin::exeWaitToStart((void))
 0002:800668AC       KoopaStateAttackSpin::exeRun((void))
 0002:8006696C       KoopaStateAttackSpin::exeStart((void))
 0002:800669E4       KoopaStateAttackSpin::exeSpin((void))
 0002:80066AE4       KoopaStateDamageEscape::exeEscapeEnd((void))
 0002:80066B64       KoopaStateAttackSpin::exeEven((void))
 0002:80066D64       KoopaStateChaseRoll::KoopaStateChaseRoll((Koopa *))
 0002:80066DC8       KoopaStateChaseRoll::init((void))
 0002:80066E5C       KoopaStateChaseRoll::appear((void))
 0002:80066F2C       KoopaStateChaseRoll::kill((void))
 0002:80067050       KoopaStateChaseRoll::attackSensor((HitSensor *,HitSensor *))
 0002:80067100       KoopaStateChaseRoll::tryDamage((ulong,HitSensor *,HitSensor *))
 0002:800672C0       KoopaStateChaseRoll::exeStart((void))
 0002:80067430       KoopaStateChaseRoll::exeRollAir((void))
 0002:800674FC       KoopaStateChaseRoll::exeRollGround((void))
 0002:8006760C       KoopaStateChaseRoll::exeEndAir((void))
 0002:800678C0       KoopaStateDamageEscape::KoopaStateDamageEscape((Koopa *))
 0002:80067958       KoopaStateDamageEscape::init((void))
 0002:800679DC       KoopaStateDamageEscape::appear((void))
 0002:80067B84       KoopaStateDamageEscape::kill((void))
 0002:80067C38       KoopaStateDamageEscape::startDamageReverse((void))
 0002:80067C78       KoopaStateDamageEscape::isDownEnd(const(void))
 0002:80067DA8       KoopaStateDamageEscape::tryDamage((ulong,HitSensor *,HitSensor *))
 0002:800680B0       KoopaStateDamageEscape::attackSensor((HitSensor *,HitSensor *))
 0002:8006821C       KoopaStateDamageEscape::exeEscapeStart((void))
 0002:800682DC       KoopaStateDamageEscape::exeEscapeStartLoop((void))
 0002:80068384       KoopaStateDamageEscape::exeEscapeStartLand((void))
 0002:800683F4       KoopaStateDamageEscape::exeEscapeRun((void))
 0002:800684C4       KoopaStateDamageEscape::exeEscapeFind((void))
 0002:80068604       KoopaStateDamageEscape::exeDamageTailRunStart((void))
 0002:80068808       KoopaStateDamageEscape::exeDamageTailRun((void))
 0002:800689A8       KoopaStateDamageEscape::exeDamageTailRunEnd((void))
 0002:80068A4C       KoopaStateDamageEscape::exeDown((void))
 0002:80068C18       KoopaStateDamageEscape::exeDownLand((void))
 0002:80068F50       KoopaStateGuard::KoopaStateGuard((Koopa *))
 0002:80068FA4       KoopaStateGuard::init((void))
 0002:80068FE8       KoopaStateGuard::tryStart((ulong,HitSensor *,HitSensor *))
 0002:80069108       KoopaStateGuard::exeGuardFace((void))
 0002:800691B4       KoopaStateGuard::exeGuardBody((void))
 0002:80069260       KoopaStateGuard::exeGuardTail((void))
 0002:800693CC       KoopaStateJumpAway::KoopaStateJumpAway((Koopa *))
 0002:80069420       KoopaStateJumpAway::init((void))
 0002:80069464       KoopaStateJumpAway::appear((void))
 0002:80069474       KoopaStateJumpAway::exeJumpStart((void))
 0002:800694DC       KoopaStateJumpAway::exeJump((void))
 0002:800696D0       KoopaStateJumpAway::exeLand((void))
 0002:80069858       KoopaSwitchKeeper::KoopaSwitchKeeper((char const *))
 0002:80069894       KoopaSwitchKeeper::init((JMapInfoIter const &))
 0002:80069904       KoopaFunction::registerKoopaSwitchKeeper((LiveActor *))
 0002:80069908       KoopaSwitchKeeper::~KoopaSwitchKeeper((void))
 0002:80069964       KoopaViewSwitchKeeper::KoopaViewSwitchKeeper((char const *))
 0002:800699A0       KoopaViewSwitchKeeper::init((JMapInfoIter const &))
 0002:800699F8       KoopaViewSwitchKeeper::initAfterPlacement((void))
 0002:800699FC       KoopaViewSwitchKeeper::~KoopaViewSwitchKeeper((void))
 0002:80069A58       FireBubble::__defctor((void))
 0002:80069A64       FireBall::__defctor((void))
 0002:80069A70       CocoNutBall::__defctor((void))
 0002:80069B34       FireBubble::~FireBubble((void))
 0002:80069B90       JGeometry::TVec3<f>::set((Vec const &))
 0002:80069BAC       OtaKing::OtaKing((char const *))
 0002:80069C6C       OtaKing::init((JMapInfoIter const &))
 0002:80069E08       OtaKing::movement((void))
 0002:80069E5C       OtaKing::makeActorAppeared((void))
 0002:80069EE0       OtaKing::startAppearDemo((void))
 0002:80069F44       OtaKing::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8006A01C       OtaKing::control((void))
 0002:8006A0C0       OtaKing::calcAndSetBaseMtx((void))
 0002:8006A11C       OtaKing::attackSensor((HitSensor *,HitSensor *))
 0002:8006A1F0       OtaKing::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8006A288       OtaKing::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8006A3C0       OtaKing::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8006A544       OtaKing::initMapToolInfo((JMapInfoIter const &))
 0002:8006A5BC       OtaKing::initModel((JMapInfoIter const &))
 0002:8006A9B0       OtaKing::initSensor((void))
 0002:8006AA6C       OtaKing::dirToPlayer((void))
 0002:8006ABD0       OtaKing::getDisappearedCocoNut((void))
 0002:8006AC3C       OtaKing::getDisappearedFireBall((void))
 0002:8006ACA8       OtaKing::getDisappearedBubble((void))
 0002:8006AD14       OtaKing::getDisappearedCocoNutNum(const(void))
 0002:8006AD7C       OtaKing::getDisappearedFireBallNum(const(void))
 0002:8006ADE4       OtaKing::getDisappearedFireBubbleNum(const(void))
 0002:8006AE4C       OtaKing::isValidThrowCocoNut(const(void))
 0002:8006AF28       OtaKing::isValidThrowFireBall(const(void))
 0002:8006AFC8       OtaKing::isValidBubbleAttack(const(void))
 0002:8006B040       OtaKing::damage((void))
 0002:8006B1B0       OtaKing::throwCocoNut((void))
 0002:8006B2B8       OtaKing::throwFireBall((void))
 0002:8006B45C       OtaKing::startBckWaitIfNotPlaying((void))
 0002:8006B4D8       OtaKing::startBckWithFrontFoot((char const *))
 0002:8006B614       OtaKing::appearBubble((void))
 0002:8006B804       OtaKing::startDemo((void))
 0002:8006B898       OtaKing::appearStarPiece((void))
 0002:8006B90C       OtaKing::initLongFoot((JMapInfoIter const &))
 0002:8006BB00       OtaKing::tryThrowCocoNutOrFireBallIfWait((long))
 0002:8006BBA0       OtaKing::exeWaitOnSwitch((void))
 0002:8006BC68       OtaKing::exeAppearDemo((void))
 0002:8006C018       OtaKing::exeWait((void))
 0002:8006C070       OtaKing::exeThrowCocoNut((void))
 0002:8006C1B8       OtaKing::exeThrowFireBallWait((void))
 0002:8006C224       OtaKing::exeThrowFireBall((void))
 0002:8006C36C       OtaKing::exeDamage((void))
 0002:8006C46C       OtaKing::exePowerUp((void))
 0002:8006C748       OtaKing::exeDown((void))
 0002:8006C950       OtaKing::exeDownDemo((void))
 0002:8006CBCC       OtaKing::exeAppearStar((void))
 0002:8006CCE0       OtaKing::exeHitBack((void))
 0002:8006CDD4       OtaKing::exeNearAttack((void))
 0002:8006CE80       OtaKing::exeBubbleAttack((void))
 0002:8006D134       NrvBigFan::BigFanNrvStop::execute(const(Spine *))
 0002:8006D184       NrvOtaKing::OtaKingNrvDead::execute(const(Spine *))
 0002:8006D214       NrvOtaKing::OtaKingNrvThrowCocoNutWait::execute(const(Spine *))
 0002:8006D278       MR::repeat((float,float,float))
 0002:8006D2C0       FixedPosition::copyTrans(const(JGeometry::TVec3<f> *))
 0002:8006D3CC       OtaKingLongFoot::OtaKingLongFoot((LiveActor *,long,char const *))
 0002:8006D438       OtaKingLongFoot::init((JMapInfoIter const &))
 0002:8006D4B4       OtaKingLongFoot::hide((void))
 0002:8006D51C       OtaKingLongFoot::calcAndSetBaseMtx((void))
 0002:8006D578       OtaKingLongFoot::attackSensor((HitSensor *,HitSensor *))
 0002:8006D610       OtaKingLongFoot::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8006D65C       OtaKingLongFoot::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8006D6A4       OtaKingLongFoot::initSensor((void))
 0002:8006D7DC       OtaKingLongFoot::exeAppearDemo((void))
 0002:8006D928       NrvOtaKingLongFoot::OtaKingLongFootNrvDownDemo::execute(const(Spine *))
 0002:8006D97C       NrvOtaKingLongFoot::OtaKingLongFootNrvDamage::execute(const(Spine *))
 0002:8006D9D0       NrvTicoReading::TicoReadingNrvWait::execute(const(Spine *))
 0002:8006DA24       OtaKingMagma::OtaKingMagma((LiveActor *,long))
 0002:8006DAA0       OtaKingMagma::init((JMapInfoIter const &))
 0002:8006DC2C       OtaKingMagma::control((void))
 0002:8006DC88       OtaKingMagma::exeWait((void))
 0002:8006DD20       OtaKingMagma::exeDown((void))
 0002:8006DDC0       OtaKingMagma::exeAttack((void))
 0002:8006DE60       OtaKingMagma::exeFireAttack((void))
 0002:8006DF00       OtaKingMagma::exeHitBack((void))
 0002:8006DFAC       OtaKingMagma::exeDamage((void))
 0002:8006E0EC       OtaKingMagma::exeEndWait((void))
 0002:8006E16C       OtaKingMagma::~OtaKingMagma((void))
 0002:8006E1C4       __sinit__OtaKingMagma_cpp
 0002:8006E2E0       JGeometry::TQuat4<f>::TQuat4<f>(void *(int,int,int,int))
 0002:8006E350       BombTeresaHolder::BombTeresaHolder((void))
 0002:8006E460       Polta::init((JMapInfoIter const &))
 0002:8006E634       Polta::initArm((void))
 0002:8006E714       Polta::initPartsModel((void))
 0002:8006E7E8       Polta::initCamera((JMapInfoIter const &))
 0002:8006E8A0       GameDataConst::isGrandStar((char const *,long))
 0002:8006E94C       PoltaGroundRockHolder::breakAll((void))
 0002:8006E9A4       Polta::Polta((char const *))
 0002:8006EA6C       Polta::initSensor((void))
 0002:8006EAC8       Polta::initBombTeresaHolder((void))
 0002:8006EB38       Polta::appearBreakModel((JGeometry::TVec3<f> const &,char const *))
 0002:8006EB94       Polta::isEndBreakModel(const(void))
 0002:8006EB9C       Polta::killBreakModel((void))
 0002:8006EBB0       Polta::rotateToPlayer((void))
 0002:8006EBF0       Polta::calcToPlayerRotateSpeed(const(void))
 0002:8006ECDC       LiveActor::makeActorAppeared((void))
 0002:8006ECE0       LiveActor::makeActorDead((void))
 0002:8006ECE4       Polta::kill((void))
 0002:8006ED60       Polta::attackSensor((HitSensor *,HitSensor *))
 0002:8006ED64       LiveActor::calcAnim((void))
 0002:8006ED68       Polta::calcAndSetBaseMtx((void))
 0002:8006ED70       Polta::attackSensor((HitSensor *,HitSensor *))
 0002:8006ED84       Polta::updatePose((float,float))
 0002:8006EE50       Polta::start((void))
 0002:8006EE8C       Polta::setStartPose((void))
 0002:8006EEEC       Polta::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8006F080       PoltaActionBase::PoltaActionBase((char const *,Polta *))
 0002:8006F134       PoltaActionBase::updateScreamSensor((void))
 0002:8006F1F0       PoltaActionBase::updateWait((void))
 0002:8006F268       PoltaActionBase::updateDamageBody((bool))
 0002:8006F3A0       PoltaActionBase::updateBreakBody((void))
 0002:8006F4D4       PoltaActionBase::updateDamageCore((void))
 0002:8006F5B0       PoltaActionSequencer::PoltaActionSequencer((Polta *,JMapInfoIter const &))
 0002:8006F6B4       PoltaActionSequencer::attackSensor((HitSensor *,HitSensor *))
 0002:8006F6D4       PoltaActionSequencer::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8006F6F8       PoltaActionSequencer::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8006F71C       PoltaActionSequencer::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8006F740       PoltaActionSequencer::updateAction((void))
 0002:8006F7A4       PoltaActionSequencer::exeWaitStart((void))
 0002:8006F7F4       PoltaActionSequencer::exePowerUpDemo((void))
 0002:8006F844       PoltaActionSequencer::exeBattleLv1((void))
 0002:8006F900       PoltaActionSequencer::exeBattleLv2((void))
 0002:8006F978       PoltaActionSequencer::exeDownDemo((void))
 0002:8006FA1C       __sinit__PoltaActionSequencer_cpp
 0002:8006FAF8       PoltaArm::~PoltaArm((void))
 0002:8006FB50       PoltaArm::PoltaArm((char const *,char const *,float *[4]))
 0002:8006FC1C       PoltaArm::init((JMapInfoIter const &))
 0002:8006FCB8       PoltaArm::initPartsModel((void))
 0002:8006FD80       PoltaArm::makeActorDead((void))
 0002:8006FDC0       PoltaArm::control((void))
 0002:8006FE1C       PoltaArm::exeDamage((void))
 0002:8006FF2C       PoltaArm::exeBreak((void))
 0002:8006FFCC       AstroDome::exeDisappear((void))
 0002:8007003C       PoltaArm::exeRepair((void))
 0002:8007011C       PoltaArm::exeBroken((void))
 0002:8007014C       PoltaArm::isEnableHitSensor(const(void))
 0002:800701D0       StarPiece::isFloat((void))
 0002:80070218       PoltaArm::isBroken(const(void))
 0002:8007029C       PoltaArm::start((void))
 0002:80070334       PoltaArm::requestBreakBody((void))
 0002:800703B0       PoltaArm::requestDamage((void))
 0002:8007046C       PoltaArm::requestStartControll((void))
 0002:800704E8       PoltaArm::requestControlled((char const *))
 0002:8007055C       PoltaArm::appearBreakModel((void))
 0002:80070614       __sinit__PoltaArm_cpp
 0002:800706F8       NrvPoltaArm::PoltaArmNrvRepair::executeOnEnd(const(Spine *))
 0002:8007073C       PoltaBattleLv1::PoltaBattleLv1((Polta *))
 0002:8007082C       PoltaBattleLv1::appear((void))
 0002:800708C4       PoltaBattleLv2::control((void))
 0002:800709C4       PoltaBattleLv1::attackSensor((HitSensor *,HitSensor *))
 0002:80070A74       PoltaBattleLv2::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80070ABC       PoltaBattleLv1::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80070BAC       PoltaBattleLv1::isEnableSensor(const(HitSensor const *))
 0002:80070C84       PoltaBattleLv1::exeWait((void))
 0002:80070D18       PoltaBattleLv2::exeBreakBody((void))
 0002:80070D74       PoltaBattleLv1::exeStagger((void))
 0002:80070DE8       PoltaBattleLv1::exeDamageCore((void))
 0002:80070EE8       PoltaBattleLv1::addDamageBody((void))
 0002:80070F60       __sinit__PoltaBattleLv1_cpp
 0002:8007102C       NrvPoltaBattleLv2::PoltaBattleLv2NrvStagger::executeOnEnd(const(Spine *))
 0002:80071048       NrvPoltaBattleLv1::PoltaBattleLv1NrvDamageBody::execute(const(Spine *))
 0002:800710AC       NrvPoltaBattleLv1::PoltaBattleLv1NrvGenerateGroundRock::execute(const(Spine *))
 0002:800710C4       PoltaBattleLv2::PoltaBattleLv2((Polta *))
 0002:800711EC       PoltaBattleLv2::appear((void))
 0002:80071370       PoltaBattleLv2::attackSensor((HitSensor *,HitSensor *))
 0002:8007151C       PoltaBattleLv2::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80071654       PoltaBattleLv2::tryAttackGround((void))
 0002:8007179C       PoltaBattleLv2::setNerveGenerateRock((void))
 0002:80071818       PoltaBattleLv2::tryGenerateRock((void))
 0002:800718E4       PoltaBattleLv2::exeStagger((void))
 0002:80071958       PoltaBattleLv2::exeDamageCore((void))
 0002:80071A00       PoltaBattleLv2::isEnableSensor(const(HitSensor const *))
 0002:80071B20       PoltaBattleLv2::isEnableAttack(const(HitSensor const *))
 0002:80071C74       PoltaBattleLv2::addDamageBody((void))
 0002:80071CEC       __sinit__PoltaBattleLv2_cpp
 0002:80071E04       NrvPoltaBattleLv2::PoltaBattleLv2NrvDamageBody::execute(const(Spine *))
 0002:80071E58       NrvPoltaBattleLv2::PoltaBattleLv2NrvGenerateRock::execute(const(Spine *))
 0002:80071E78       NrvPoltaBattleLv2::PoltaBattleLv2NrvAttackGround::execute(const(Spine *))
 0002:80071EBC       NrvPoltaBattleLv2::PoltaBattleLv2NrvPunch::execute(const(Spine *))
 0002:80071F00       NrvPoltaBattleLv2::PoltaBattleLv2NrvWait::execute(const(Spine *))
 0002:80071F48       PoltaDemo::PoltaDemo((Polta *))
 0002:80071FD8       PoltaDemo::startDemoSetting((void))
 0002:80072024       PoltaDemo::startTryDemo((char const *,Nerve const *))
 0002:800720A0       PoltaDemo::exeTryStartDemo((void))
 0002:800720E4       PoltaDemo::exeOpeningDemo((void))
 0002:8007225C       PoltaDemo::exePowerUpDemo((void))
 0002:800724A8       PoltaDemo::exeDownDemo((void))
 0002:800725F8       __sinit__PoltaDemo_cpp
 0002:80072694       PoltaFunction::onMovement((Polta *))
 0002:80072718       nullsub_1
 0002:8007271C       J3DTevBlock4::getTevRegOffset(const(void))
 0002:80072724       PoltaFunction::getRightArmActor((Polta *))
 0002:8007273C       PoltaFunction::isArmSensor((Polta const *,HitSensor const *))
 0002:800727C0       PoltaFunction::attackScreamSensor((Polta *,HitSensor *,HitSensor *))
 0002:8007282C       PoltaFunction::startAction((Polta *,char const *,bool))
 0002:80072884       MR::startAction((LiveActor const *,char const *))
 0002:80072898       ModelObjNpc::control((void))
 0002:80072918       PoltaFunction::killLeftArm((Polta *))
 0002:8007292C       PoltaFunction::killRightArm((Polta *))
 0002:80072960       PoltaFunction::isMaxGenerateBombTeresa((Polta *))
 0002:8007298C       PoltaFunction::getCountDeadGroundRock((Polta *))
 0002:800729C0       PoltaFunction::appearGroundRock((Polta *,float,float))
 0002:80072B00       PoltaFunction::appearRockCircle((Polta *,JGeometry::TVec3<f> const &,float,long,long,long))
 0002:80072D68       PoltaFunction::appearYellowRockCircle((Polta *,JGeometry::TVec3<f> const &,float,long,long))
 0002:80072D70       PoltaFunction::appearBombTeresaFromRoot((Polta *,float,float,long))
 0002:80072DE4       PoltaFunction::appearBombTeresaNormal((Polta *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80072E68       PoltaFunction::setBodyHP((Polta *,long))
 0002:80072F6C       DeriveActorGroup<10BombTeresa>::getDeadMember(const(void))
 0002:80072FB0       PoltaGroundRock::PoltaGroundRock((char const *))
 0002:8007301C       PoltaGroundRock::init((JMapInfoIter const &))
 0002:8007316C       PoltaGroundRock::initBreakModel((void))
 0002:800731EC       KameckTurtle::calcAndSetBaseMtx((void))
 0002:80073228       PoltaGroundRock::start((LiveActor *,JGeometry::TVec3<f> const &))
 0002:80073340       PoltaGroundRock::attackSensor((HitSensor *,HitSensor *))
 0002:800733B0       PoltaGroundRock::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8007343C       PoltaGroundRock::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800734D8       PoltaGroundRock::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80073550       PoltaGroundRock::exeSign((void))
 0002:800735D0       PoltaGroundRock::exeJut((void))
 0002:80073684       PoltaGroundRock::exeWait((void))
 0002:800736D4       PoltaGroundRock::exeBreak((void))
 0002:800737BC       SaveDataHandleSequence::isActive(const(void))
 0002:800738E0       PoltaGroundRockHolder::PoltaGroundRockHolder((void))
 0002:80073A84       PoltaRock::PoltaRock((char const *))
 0002:80073AFC       PoltaRock::init((JMapInfoIter const &))
 0002:80073C08       PoltaRock::kill((void))
 0002:80073CA4       PoltaRock::calcAndSetBaseMtx((void))
 0002:80073CE0       PoltaRock::start((Polta *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80073D58       PoltaRock::setColorWhite((void))
 0002:80073DA0       PoltaRock::setColorBlack((void))
 0002:80073DE8       PoltaRock::setColorYellow((void))
 0002:80073E30       PoltaRock::attackSensor((HitSensor *,HitSensor *))
 0002:80073EB4       PoltaRock::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80073F64       PoltaRock::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80073FC8       PoltaRock::exeFloat((void))
 0002:800740D8       PoltaRock::exeSign((void))
 0002:800741A4       PoltaRock::exeMove((void))
 0002:80074374       PoltaRock::generateKill((void))
 0002:80074418       PoltaRock::isEnableExplosion(const(void))
 0002:80074548       PoltaRockHolder::PoltaRockHolder((void))
 0002:800745E0       DeriveActorGroup<9PoltaRock>::~DeriveActorGroup<9PoltaRock>((void))
 0002:8007463C       PoltaRockHolder::~PoltaRockHolder((void))
 0002:80074694       PoltaSensorCtrl::PoltaSensorCtrl((Polta *))
 0002:800746B8       PoltaSensorCtrl::getSensorCount(const(void))
 0002:800746C0       PoltaSensorCtrl::setScreamSensorSize((float))
 0002:800746D4       PoltaSensorCtrl::initSensor((void))
 0002:80074938       PoltaSensorCtrl::isCoreSensor(const(HitSensor const *))
 0002:80074958       PoltaSensorCtrl::isBodySensor(const(HitSensor const *))
 0002:8007498C       PoltaSensorCtrl::isLeftArmSensor(const(HitSensor const *))
 0002:800749C0       PoltaSensorCtrl::isRightArmSensor(const(HitSensor const *))
 0002:800749F4       PoltaSensorCtrl::isHeadSensor(const(HitSensor const *))
 0002:80074A08       PoltaSensorCtrl::isScreamSensor(const(HitSensor const *))
 0002:80074A1C       PoltaStateAttackGround::PoltaStateAttackGround((Polta *))
 0002:80074AC4       PoltaStateAttackGround::appear((void))
 0002:80074ADC       PoltaStateAttackGround::exeStart((void))
 0002:80074BD4       PoltaStateAttackGround::exeAttack((void))
 0002:80074CCC       PoltaStateAttackGround::exeToWait((void))
 0002:80074D3C       PoltaStateAttackGround::isEnableAttack(const(HitSensor const *))
 0002:80074E5C       PoltaStateGenerateRock::PoltaStateGenerateRock((Polta *))
 0002:80074ED8       PoltaStateGenerateRock::appear((void))
 0002:80074F1C       PoltaStateGroundRockAttack::exeSign((void))
 0002:80074FA8       PoltaStateGenerateRock::exeGenerate((void))
 0002:80075114       PoltaStateGenerateRock::exeEnd((void))
 0002:80075274       PoltaStateGroundRockAttack::PoltaStateGroundRockAttack((Polta *))
 0002:80075380       PoltaStateGroundRockAttack::exeGenerate((void))
 0002:8007555C       PoltaStateGroundRockAttack::exeEnd((void))
 0002:8007569C       PoltaStatePunch::PoltaStatePunch((Polta *))
 0002:80075708       PoltaStatePunch::appear((void))
 0002:80075720       PoltaStatePunch::isEnablePunchArm(const(void))
 0002:8007573C       PoltaStatePunch::exeStart((void))
 0002:80075820       PoltaStatePunch::exeAttack((void))
 0002:800758F4       PoltaStatePunch::exeToWait((void))
 0002:800759BC       PoltaStatePunch::isEnableAttack(const(HitSensor const *))
 0002:80075B20       PoltaStateStagger::PoltaStateStagger((Polta *))
 0002:80075BAC       PoltaStateStagger::exeWait((void))
 0002:80075DF0       PoltaWaitStart::PoltaWaitStart((Polta *))
 0002:80075E38       PoltaWaitStart::appear((void))
 0002:80075ED8       JMapInfoIter::isValid(const(void))
 0002:80075F34       SkeletalFishBaby::SkeletalFishBaby((char const *))
 0002:80075FF0       SkeletalFishBaby::init((JMapInfoIter const &))
 0002:8007620C       SkeletalFishBaby::makeActorAppeared((void))
 0002:80076264       SkeletalFishBaby::kill((void))
 0002:800762C0       SkeletalFishBaby::control((void))
 0002:80076344       LiveActor::calcAnim((void))
 0002:80076348       SkeletalFishBaby::attackSensor((HitSensor *,HitSensor *))
 0002:800763C8       SkeletalFishBaby::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80076450       SkeletalFishBaby::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800764A0       SkeletalFishBaby::exeSwim((void))
 0002:80076524       SkeletalFishBaby::exeBind((void))
 0002:800765A0       SkeletalFishBaby::exeBreak((void))
 0002:80076640       SkeletalFishBaby::exeDead((void))
 0002:800766D0       SkeletalFishBaby::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8007672C       SkeletalFishBaby::damage((JGeometry::TVec3<f> const &,bool))
 0002:800767D0       SkeletalFishBaby::calcAndSetBaseMtx((void))
 0002:800768BC       SkeletalFishBaby::initRail((JMapInfoIter const &))
 0002:80076938       SkeletalFishBaby::initJoint((void))
 0002:80076AA4       SkeletalFishBaby::initSensor((void))
 0002:80076BA4       SkeletalFishBaby::isAttackable(const(void))
 0002:80076C18       SkeletalFishBaby::isStarPointerPointing(const(void))
 0002:80076D18       @unnamed@SkeletalFishBaby_cpp@::SkeletalFishBabyNrvBind::executeOnEnd(const(Spine *))
 0002:80076ED4       SkeletalFishBabyRail::SkeletalFishBabyRail((char const *))
 0002:80076F18       SkeletalFishBabyRail::init((JMapInfoIter const &))
 0002:80076F88       SkeletalFishBabyRail::~SkeletalFishBabyRail((void))
 0002:80076FE4       SkeletalFishBabyRailGroupNode::SkeletalFishBabyRailGroupNode((long))
 0002:80077060       SkeletalFishBabyRailGroupNode::addChild((SkeletalFishBabyRail *))
 0002:800770F8       SkeletalFishBabyRailGroupNode::tidy((void))
 0002:800771CC       SkeletalFishBabyRailGroupNode::createChild((void))
 0002:80077228       CoinReplica::CoinReplica((char const *))
 0002:8007726C       SkeletalFishBabyRailHolder::initAfterPlacement((void))
 0002:800772AC       SkeletalFishBabyRailHolder::add((SkeletalFishBabyRail *))
 0002:80077318       SkeletalFishBabyRailHolder::createGroup((long))
 0002:8007737C       MR::getSkeletalFishBabyRailHolder((void))
 0002:800773A4       MR::createSkeletalFishBabyRailHolder((void))
 0002:80077404       SkeletalFishBabyRailSetLinkNode::SkeletalFishBabyRailSetLinkNode((void))
 0002:80077420       JGeometry::TVec3<f>::negate((void))
 0002:8007743C       JGeometry::TVec3<f>::squared(const(void))
 0002:80077454       SkeletalFishBoss::SkeletalFishBoss((char const *))
 0002:80077568       SkeletalFishBoss::init((JMapInfoIter const &))
 0002:8007777C       SkeletalFishBoss::initAfterPlacement((void))
 0002:800777DC       SkeletalFishBoss::makeActorAppeared((void))
 0002:80077820       TimeLimitLayout::appear((void))
 0002:80077860       SkeletalFishBoss::kill((void))
 0002:800778A8       SkeletalFishBoss::control((void))
 0002:800779F0       SkeletalFishBoss::calcAnim((void))
 0002:80077B40       SkeletalFishBoss::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80077B9C       SkeletalFishBoss::damage((HitSensor const *,JGeometry::TVec3<f> const &))
 0002:80077CD0       SkeletalFishBoss::exeSwim((void))
 0002:80077DC0       SkeletalFishBoss::exeOpen((void))
 0002:80077E84       SkeletalFishBoss::exeOpenWait((void))
 0002:80077F24       SkeletalFishBoss::exeClose((void))
 0002:80077FE8       SkeletalFishBoss::exeBite((void))
 0002:80078098       SkeletalFishBoss::exeDamage((void))
 0002:800781D4       SkeletalFishBoss::exeDown((void))
 0002:800782E4       SkeletalFishBoss::exeDeadDamage((void))
 0002:800783EC       SkeletalFishBoss::exeDead((void))
 0002:8007848C       SkeletalFishBoss::exeAppearWait((void))
 0002:80078500       SkeletalFishBoss::exeAppearDemo((void))
 0002:800785FC       SkeletalFishBoss::exePowerUpDemo((void))
 0002:80078770       SkeletalFishBoss::exeDeadDemo((void))
 0002:80078894       SkeletalFishBoss::exeBreakDemo((void))
 0002:80078A2C       SkeletalFishBoss::exeDemoWait((void))
 0002:80078AA0       SkeletalFishBoss::notifyAttack((SkeletalFishGuard *))
 0002:80078AA8       SkeletalFishBoss::getCurrentBossRail((void))
 0002:80078AAC       ARCGetLength
 0002:80078ABC       SkeletalFishBoss::getHeadActor(const(void))
 0002:80078AC4       SkeletalFishBoss::calcAndSetBaseMtx((void))
 0002:80078BD8       SkeletalFishBoss::initLevelStatus((void))
 0002:80078C2C       SkeletalFishBoss::initJoint((void))
 0002:80078D98       SkeletalFishBoss::initCollision((void))
 0002:80078E4C       SkeletalFishBoss::initHead((void))
 0002:80078E9C       SkeletalFishBoss::initScarFlash((void))
 0002:80078EE4       SkeletalFishBoss::initBreakModel((void))
 0002:80078F70       SkeletalFishBoss::initSwitch((JMapInfoIter const &))
 0002:80079008       SkeletalFishBoss::createGuards((void))
 0002:80079058       SkeletalFishBoss::initShadow((void))
 0002:800790E4       SkeletalFishBoss::initCamera((void))
 0002:800791FC       SkeletalFishBoss::updateCollision((void))
 0002:800792CC       SkeletalFishBoss::getMouthSensorCenterPos(const(JGeometry::TVec3<f> &,float))
 0002:800793A8       SkeletalFishBoss::powerUp((void))
 0002:800793F4       SkeletalFishBoss::startDamageAnim((void))
 0002:80079458       SkeletalFishBoss::calcPlanetCenterPosition((void))
 0002:800794CC       SkeletalFishBoss::calcGravityCenter((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8007968C       SkeletalFishBoss::resetRail((void))
 0002:80079704       SkeletalFishBoss::updateBgm((void))
 0002:800797A4       SkeletalFishBoss::stopScene((char const *,Nerve const *,void (SkeletalFishBoss::)(void const *,void *)))
 0002:80079808       SkeletalFishBoss::startCamera((char const *))
 0002:80079878       SkeletalFishBoss::resetCamera((void))
 0002:80079944       SkeletalFishBoss::playDamageBrk((void))
 0002:800799AC       SkeletalFishBoss::startAppearDemo((void))
 0002:80079A48       SkeletalFishBoss::endAppearDemo((void))
 0002:80079B18       SkeletalFishBoss::startPowerUpDemo((void))
 0002:80079B8C       SkeletalFishBoss::endPowerUpDemo((void))
 0002:80079CB0       SkeletalFishBoss::startDeadDemo((void))
 0002:80079CF4       SkeletalFishBoss::endBreakDemo((void))
 0002:80079E80       SkeletalFishBossHead::SkeletalFishBossHead((LiveActor *))
 0002:8007A000       SkeletalFishBossHead::movement((void))
 0002:8007A11C       SkeletalFishBossHead::calcAnim((void))
 0002:8007A1A4       SkeletalFishBossHead::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8007A210       SkeletalFishBossHead::attackSensor((HitSensor *,HitSensor *))
 0002:8007A378       SkeletalFishBossHead::updateCollisionMtx((void))
 0002:8007A3D0       SkeletalFishBossHead::createSubModel((void))
 0002:8007A4F8       SkeletalFishBossScarFlash::SkeletalFishBossScarFlash((LiveActor *))
 0002:8007A564       PlantLeafDrawInit::init((JMapInfoIter const &))
 0002:8007A5A4       SkeletalFishBossScarFlash::appear((void))
 0002:8007AAF0       SkeletalFishBossBattleDirector::SkeletalFishBossBattleDirector((SkeletalFishBoss *))
 0002:8007ABFC       SkeletalFishBossBattleDirector::initiate((void))
 0002:8007AD44       SkeletalFishBossBattleDirector::startPowerUpDemo1((void))
 0002:8007AD54       SkeletalFishBossBattleDirector::startPowerUpDemo2((void))
 0002:8007AD64       SkeletalFishBossBattleDirector::playGuardAnim((char const *,long))
 0002:8007AE24       SkeletalFishBossBattleDirector::tryColumnCollision((HitSensor *))
 0002:8007AED8       SkeletalFishBossBattleDirector::pauseOffCast((void))
 0002:8007AF90       SkeletalFishBossBattleDirector::killGuard((void))
 0002:8007AF98       SkeletalFishBossBattleDirector::killGuard((void))
 0002:8007AFF8       SkeletalFishBossBattleDirector::appearBirdLouse((void))
 0002:8007B060       SkeletalFishBossBattleDirector::killBirdLouse((void))
 0002:8007B120       SkeletalFishBossFunc::getNearestGuardPosID((JGeometry::TVec3<f> const &))
 0002:8007B1D0       SkeletalFishBossFunc::copyGuardPos((JGeometry::TVec3<f> *,long))
 0002:8007B228       SkeletalFishBossInfo::SkeletalFishBossInfo((SkeletalFishBoss *,long,long,char const *))
 0002:8007B298       SkeletalFishBossInfo::init((JMapInfoIter const &))
 0002:8007B300       SkeletalFishBossInfo::getLevelStatus(const(long))
 0002:8007B310       SkeletalFishBossInfo::createLevelStatus((void))
 0002:8007B470       nullsub_118
 0002:8007B474       SkeletalFishBossInfo::loadLevelStatus((JMapInfoIter const &))
 0002:8007B614       SkeletalFishBossInfo::loadGuardStatus((JMapInfoIter const &,long,long))
 0002:8007B744       SkeletalFishBossRail::SkeletalFishBossRail((char const *))
 0002:8007B79C       SkeletalFishBossRail::init((JMapInfoIter const &))
 0002:8007B81C       SkeletalFishBossRail::linkFillUpNamePosID((void))
 0002:8007B820       SkeletalFishBossRail::isFillUpPoint(const(long))
 0002:8007B82C       SkeletalFishBossRail::getFillUpNamePos(const(long))
 0002:8007B83C       SkeletalFishBossRail::createFillUpFlag((void))
 0002:8007B8CC       SkeletalFishBossRail::createFillUpNamePosID((void))
 0002:8007B93C       SkeletalFishBossRail::linkFillUpNamePosID((void))
 0002:8007BA0C       SkeletalFishBossRailHolder::SkeletalFishBossRailHolder((char const *))
 0002:8007BA6C       SkeletalFishBossRailHolder::add((SkeletalFishBossRail *))
 0002:8007BA88       SkeletalFishBossRailHolder::getInOrder(const(long))
 0002:8007BA98       SkeletalFishBossRailHolder::getByID(const(long))
 0002:8007BAD8       MR::getSkeletalFishBossRailHolder((void))
 0002:8007BB00       MR::createSkeletalFishBossRailHolder((void))
 0002:8007BB08       SkeletalFishBossRailHolder::~SkeletalFishBossRailHolder((void))
 0002:8007BB60       JGeometry::TQuat4<f>::transform(const(JGeometry::TVec3<f> &))
 0002:8007BC84       JGeometry::TVec3<f>::cubic<f>(void (JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:8007BD90       JGeometry::TVec3<f>::angle(const(JGeometry::TVec3<f> const &))
 0002:8007BE0C       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setXDir((JGeometry::TVec3<f> const &))
 0002:8007BE28       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setYDir((JGeometry::TVec3<f> const &))
 0002:8007BE44       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setZDir((JGeometry::TVec3<f> const &))
 0002:8007BEFC       SkeletalFishGuard::SkeletalFishGuard((SkeletalFishBoss *,char const *))
 0002:8007BFFC       SkeletalFishGuard::init((JMapInfoIter const &))
 0002:8007C1A4       SkeletalFishGuard::control((void))
 0002:8007C244       SkeletalFishGuard::exeAppear((void))
 0002:8007C6C8       SkeletalFishGuard::exeNormal((void))
 0002:8007C738       SkeletalFishGuard::exeApart((void))
 0002:8007CA00       SkeletalFishGuard::exeFollow((void))
 0002:8007CBD4       SkeletalFishGuard::exeStraight((void))
 0002:8007CD04       SkeletalFishGuard::exeKill((void))
 0002:8007CDA4       SkeletalFishGuard::exeNumb((void))
 0002:8007CE3C       SkeletalFishGuard::appearNaturally((void))
 0002:8007CE88       SkeletalFishGuard::appearForce((void))
 0002:8007CEEC       SkeletalFishGuard::killNaturally((void))
 0002:8007CF6C       SkeletalFishGuard::waitAttack((long))
 0002:8007CF74       SkeletalFishGuard::calcAndSetBaseMtx((void))
 0002:8007D1C0       SkeletalFishGuard::attackSensor((HitSensor *,HitSensor *))
 0002:8007D26C       SkeletalFishGuard::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8007D358       SkeletalFishGuard::initSensor((void))
 0002:8007D3F8       SkeletalFishGuard::calcTransAndFront((void))
 0002:8007D45C       SkeletalFishGuard::rotateHorizontal((JGeometry::TVec3<f> const &,float))
 0002:8007D53C       SkeletalFishGuard::rotateVertical((JGeometry::TVec3<f> const &,float))
 0002:8007D648       SkeletalFishGuard::tryShiftApart((void))
 0002:8007D6E4       SkeletalFishGuard::tryShiftStraight((void))
 0002:8007D75C       SkeletalFishGuard::tryShiftKill((void))
 0002:8007D7B8       SkeletalFishGuard::turn((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:8007D8DC       SkeletalFishGuard::lookToPlayer((float,float))
 0002:8007D988       SkeletalFishGuard::calcTarget((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,long))
 0002:8007DAEC       SkeletalFishGuard::isInScreen(const(void))
 0002:8007DB18       SkeletalFishGuard::isPlayerInAttackRange(const(void))
 0002:8007DC18       SkeletalFishGuard::isLineOfSightClear(const(void))
 0002:8007DDA8       SkeletalFishGuard::tryShiftNumb((Nerve const *))
 0002:8007DF60       @unnamed@SkeletalFishGuard_cpp@::SkeletalFishGuardNrvNumb::executeOnEnd(const(Spine *))
 0002:8007DFDC       @unnamed@SkeletalFishGuard_cpp@::SkeletalFishGuardNrvWait::execute(const(Spine *))
 0002:8007DFEC       JMathInlineVEC::PSVECAdd((Vec const *,Vec const *,Vec *))
 0002:8007E010       SkeletalFishGuardHolder::SkeletalFishGuardHolder((SkeletalFishBoss *,long,char const *))
 0002:8007E08C       SkeletalFishGuardHolder::movement((void))
 0002:8007E0E0       SkeletalFishGuardHolder::forceAppearAll((void))
 0002:8007E1B0       SkeletalFishGuardHolder::forceKillAll((void))
 0002:8007E218       SkeletalFishGuardHolder::killAll((void))
 0002:8007E274       SkeletalFishGuardHolder::notifyAttack((SkeletalFishGuard *))
 0002:8007E2E0       ScreenBlurEffect::calcAnimSub((void))
 0002:8007E2EC       SkeletalFishGuardHolder::validate((void))
 0002:8007E338       SkeletalFishGuardHolder::checkRailChangedAndReset((void))
 0002:8007E390       SkeletalFishGuardHolder::countAppearableGuard(const(void))
 0002:8007E3EC       SkeletalFishGuardHolder::countGuardAlive(const(void))
 0002:8007E45C       SkeletalFishGuardHolder::checkDistanceAndAppear((long))
 0002:8007E5AC       SkeletalFishGuardHolder::appearGuard((long,long))
 0002:8007E70C       SkeletalFishGuardHolder::createAndInitGuard((void))
 0002:8007E7A0       SkeletalFishJointCalc::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *,SkeletalFishRailControl *,JointControllerInfo const &))
 0002:8007E864       SkeletalFishRailControl::SkeletalFishRailControl((void))
 0002:8007E890       SkeletalFishRailControl::setRailActor((LiveActor *,LiveActor *,bool))
 0002:8007E918       SkeletalFishRailControl::update((void))
 0002:8007EAD4       SkeletalFishRailControl::getRailInfo((SkeletalFishRailInfo *,float))
 0002:8007EBBC       SkeletalFishRailControl::getPos((JGeometry::TVec3<f> *,float))
 0002:8007EC58       SkeletalFishRailControl::getMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,float))
 0002:8007EE1C       TombSpider::TombSpider((char const *))
 0002:8007EE80       TombSpider::init((JMapInfoIter const &))
 0002:8007F07C       TombSpider::exeWaitPlayer((void))
 0002:8007F16C       TombSpider::exeDemoGateOpen((void))
 0002:8007F1D8       TombSpider::exeActionCocoon((void))
 0002:8007F234       TombSpider::exeDemoBattle1stStart((void))
 0002:8007F294       TombSpider::exeAction1st((void))
 0002:8007F2F0       TombSpider::exeDemoBattle2ndStart((void))
 0002:8007F364       TombSpider::exeAction2nd((void))
 0002:8007F3C0       TombSpider::exeDemoDeath((void))
 0002:8007F428       BattleShipElevator::control((void))
 0002:8007F470       TombSpider::attackSensor((HitSensor *,HitSensor *))
 0002:8007F53C       rfc_process_test_rsp
 0002:8007F544       TombSpider::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8007F7DC       NrvTombSpider::TombSpiderNrvDemoCocoonBreak::execute(const(Spine *))
 0002:8007F8D0       TombSpiderAcid::TombSpiderAcid((TombSpider *))
 0002:8007F9A8       TombSpiderAcid::start((void))
 0002:8007F9C0       TombSpiderAcid::startGland((void))
 0002:8007F9D4       TombSpiderAcid::end((void))
 0002:8007F9E8       TombSpiderAcid::update((void))
 0002:8007FB4C       TombSpiderAcid::updateEmitAcid((void))
 0002:8007FC50       TombSpiderAcid::updateDeleteAcid((void))
 0002:8007FCF8       TombSpiderAcid::updateGroundMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,float *[4]))
 0002:8007FE48       TombSpiderAction1st::TombSpiderAction1st((TombSpider *))
 0002:8007FE8C       TombSpiderActionBase::~TombSpiderActionBase((void))
 0002:8007FF64       TombSpiderAction1st::appear((void))
 0002:8008003C       TombSpiderAction2nd::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800801D0       TombSpiderAction2nd::exeDamageHip((void))
 0002:80080230       TombSpiderAction1st::exeChanceWait((void))
 0002:800802EC       __sinit__TombSpiderAction1st_cpp
 0002:800804A0       NrvTombSpiderAction2nd::TombSpiderAction2ndNrvChanceDamageLast::execute(const(Spine *))
 0002:8008053C       NrvTombSpiderAction1st::TombSpiderAction1stNrvChanceStart::execute(const(Spine *))
 0002:80080580       NrvTombSpiderAction1st::TombSpiderAction1stNrvSwoon::execute(const(Spine *))
 0002:8008058C       NrvTombSpiderAction1st::TombSpiderAction1stNrvDamageGland::execute(const(Spine *))
 0002:800805D0       NrvTombSpiderAction1st::TombSpiderAction1stNrvDamageHip::execute(const(Spine *))
 0002:800805D8       NrvTombSpiderAction1st::TombSpiderAction1stNrvDamageEye::execute(const(Spine *))
 0002:8008061C       NrvTombSpiderAction1st::TombSpiderAction1stNrvAttackEnd::execute(const(Spine *))
 0002:80080660       NrvTombSpiderAction1st::TombSpiderAction1stNrvAttackLoop::execute(const(Spine *))
 0002:800806B4       NrvTombSpiderAction1st::TombSpiderAction1stNrvAttackStart::execute(const(Spine *))
 0002:800806F8       NrvTombSpiderAction1st::TombSpiderAction1stNrvWait::execute(const(Spine *))
 0002:80080744       TombSpiderAction2nd::TombSpiderAction2nd((TombSpider *))
 0002:80080788       TombSpiderAction2nd::init((void))
 0002:80080800       TombSpiderAction2nd::appear((void))
 0002:8008083C       TombSpiderAction2nd::attackSensor((HitSensor *,HitSensor *))
 0002:80080ACC       TombSpiderAction2nd::exeChanceWait((void))
 0002:80080B88       __sinit__TombSpiderAction2nd_cpp
 0002:80080EFC       NrvTombSpiderAction2nd::TombSpiderAction2ndNrvAttackLoop::execute(const(Spine *))
 0002:80080F94       NrvTombSpiderAction2nd::TombSpiderAction2ndNrvWait::execute(const(Spine *))
 0002:80080FE0       TombSpiderActionBase::TombSpiderActionBase((TombSpider *,char const *))
 0002:800810C4       TombSpiderActionBase::init((void))
 0002:800810D4       TombSpiderActionBase::appear((void))
 0002:800810F4       TombSpiderActionBase::updateChanceEnd((void))
 0002:8008111C       TombSpiderActionBase::tryWaitChanceEndDemo((Nerve const *))
 0002:800811B4       TombSpiderActionBase::startChanceDamage((void))
 0002:80081220       TombSpiderActionBase::updateWait((long,long))
 0002:80081340       TombSpiderActionBase::updateDamageHip((void))
 0002:80081448       TombSpiderActionBase::updateDamageGland((void))
 0002:800814D4       TombSpiderActionBase::updateAttackStart((void))
 0002:800815FC       TombSpiderActionBase::updateAttackLoop((long,long,float,float))
 0002:80081870       TombSpiderActionBase::updateAttackEnd((void))
 0002:800818E8       TombSpiderActionBase::updateChanceStartNoDemo((void))
 0002:800819B4       TombSpiderActionBase::updateChanceStartDemo((void))
 0002:80081A90       TombSpiderActionBase::updateChanceWait((long))
 0002:80081B8C       TombSpiderActionBase::updateChanceDamage((void))
 0002:80081C00       TombSpiderActionBase::updateChanceEndNoDemo((void))
 0002:80081CB0       TombSpiderActionBase::updateChanceEndDemo((void))
 0002:80081DB8       TombSpiderActionCocoon::TombSpiderActionCocoon((TombSpider *))
 0002:80081DFC       TombSpiderActionCocoon::init((void))
 0002:80081E34       TombSpiderActionCocoon::attackSensor((HitSensor *,HitSensor *))
 0002:80081E80       TombSpiderActionCocoon::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80081F70       TombSpiderActionCocoon::exeWait((void))
 0002:80081FD0       TombSpiderActionCocoon::exeBreak((void))
 0002:800820A0       __sinit__TombSpiderActionCocoon_cpp
 0002:800820FC       TombSpiderDemo::TombSpiderDemo((TombSpider *))
 0002:800821C4       TombSpiderDemo::updateGateOpen((void))
 0002:8008250C       TombSpiderDemo::updateCocoonBreak((void))
 0002:80082640       TombSpiderDemo::updateBattle1stStart((void))
 0002:800826C0       TombSpiderDemo::updateBattle1stEnd((void))
 0002:8008278C       TombSpiderDemo::updateBattle2ndStart((void))
 0002:80082964       TombSpiderDemo::updateDeath((void))
 0002:80082B10       TombSpiderDemo::updateJumpRotateToPlayer((void))
 0002:80082BC0       TombSpiderDemo::isStartDemoGateOpen(const(void))
 0002:80082C08       TombSpiderDemo::updateBattle1stStartJumpToPlayer((void))
 0002:80082CE4       TombSpiderEnvironment::TombSpiderEnvironment((LiveActor *))
 0002:80082E44       TombSpiderFunction::getGlandFrontL((TombSpider const *))
 0002:80082E50       TombSpiderFunction::getGlandFrontR((TombSpider const *))
 0002:80082E5C       TombSpiderFunction::getGlandRearL((TombSpider const *))
 0002:80082E68       TombSpiderFunction::getGlandRearR((TombSpider const *))
 0002:80082E74       TombSpiderFunction::getVitalSpotC((TombSpider const *))
 0002:80082E80       TombSpiderFunction::getVitalSpotL((TombSpider const *))
 0002:80082E8C       TombSpiderFunction::getVitalSpotR((TombSpider const *))
 0002:80082E98       TombSpiderFunction::getMtxEye((TombSpider const *))
 0002:80082EA4       TombSpiderFunction::getMtxMouth((TombSpider const *))
 0002:80082EB0       TombSpiderFunction::getMtxHip((TombSpider const *))
 0002:80082EBC       TombSpiderFunction::getMtxGlandFrontL((TombSpider const *))
 0002:80082EC8       TombSpiderFunction::getMtxGlandFrontR((TombSpider const *))
 0002:80082ECC       CameraTargetPlayer::getCubeCameraArea(const(void))
 0002:80082ED4       TombSpiderFunction::getMtxGlandRearL((TombSpider const *))
 0002:80082EE0       TombSpiderFunction::getMtxGlandRearR((TombSpider const *))
 0002:80082F30       TombSpiderFunction::updateAcid((TombSpider *))
 0002:80082F34       GameDataHolder::makeFileBinary((uchar *,ulong))
 0002:80082F3C       TombSpiderFunction::endAcid((TombSpider *))
 0002:80083020       TombSpiderFunction::isAttackEnable((TombSpiderGland const *))
 0002:80083070       TombSpiderFunction::isAttackDirection((HitSensor *,HitSensor *))
 0002:800830D0       TombSpiderFunction::tryDamageEye((HitSensor *,HitSensor *))
 0002:80083138       TombSpiderFunction::tryDamageHip((HitSensor *,HitSensor *))
 0002:800831A0       @unnamed@TombSpiderFunction_cpp@::tryDamageVitalSpotEach((TombSpiderVitalSpot *,ulong,HitSensor *,HitSensor *))
 0002:800832B0       TombSpiderFunction::tryDamageVitalSpot((TombSpider *,HitSensor *,HitSensor *))
 0002:800833F8       TombSpiderFunction::invalidateGlandSensor((TombSpider *))
 0002:8008346C       TombSpiderFunction::validateVitalSpotSensor((TombSpider *))
 0002:800834D0       TombSpiderFunction::invalidateAttackSensor((TombSpider *))
 0002:80083554       TombSpiderFunction::isSpringAttacker((HitSensor const *))
 0002:8008355C       MR::isSensorEnemyAttack((HitSensor const *))
 0002:80083564       TombSpiderFunction::isSpiderBody((HitSensor const *))
 0002:8008356C       TombSpiderFunction::isSpiderAttack((HitSensor const *))
 0002:80083600       TombSpiderFunction::getPlanet((TombSpider const *))
 0002:8008360C       TombSpiderFunction::getCocoon((TombSpider const *))
 0002:80083618       TombSpiderFunction::startTombSpiderDemo((TombSpider *,char const *,char const *))
 0002:80083690       TombSpiderFunction::startTombSpiderAnimCameraDemo((TombSpider *,char const *,char const *,long))
 0002:80083704       TombSpiderFunction::endTombSpiderDemo((TombSpider *,char const *,char const *))
 0002:80083764       TombSpiderFunction::endTombSpiderAnimCameraDemo((TombSpider *,char const *,char const *))
 0002:800837C8       TombSpiderFunction::pauseOffTombSpiderParts((TombSpider const *))
 0002:80083868       TombSpiderFunction::resetPlayerPosTombSpider((TombSpider const *,bool))
 0002:800839B0       TombSpiderFunction::isRotateLeftToPlayer((TombSpider const *))
 0002:80083A58       TombSpiderFunction::calcRotateSpeedToPlayer((TombSpider *,long))
 0002:80083B80       TombSpiderFunction::emitAcidMouth((TombSpider *))
 0002:80083BC0       TombSpiderFunction::emitAcidGland((TombSpider *))
 0002:80083CD4       TombSpiderFunction::tryDamageGland((TombSpider *,HitSensor *,HitSensor *))
 0002:80083E30       TombSpiderFunction::validateMainPartsSensor((TombSpider *))
 0002:80083E9C       TombSpiderFunction::validateGlandSensor((TombSpider *))
 0002:80083FC8       TombSpiderFunction::validateAttackSensor((TombSpider *))
 0002:8008409C       TombSpiderGland::TombSpiderGland((LiveActor *,char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:8008411C       TombSpiderGland::init((JMapInfoIter const &))
 0002:80084164       TombSpiderGland::startActive((void))
 0002:8008420C       Syati::exeReachToEnd((void))
 0002:800842C8       __sinit__TombSpiderGland_cpp
 0002:80084344       NrvTombSpiderGland::TombSpiderGlandNrvDamageWait::execute(const(Spine *))
 0002:80084398       NrvTombSpiderGland::TombSpiderGlandNrvActiveWait::execute(const(Spine *))
 0002:800843E4       NrvTombSpiderGland::TombSpiderGlandNrvWait::execute(const(Spine *))
 0002:80084430       TombSpiderParts::TombSpiderParts((TombSpider *))
 0002:80084494       TombSpiderParts::appearThreadAttacherAll((void))
 0002:80084548       TombSpiderParts::killThreadAttacherAll((void))
 0002:800845FC       TombSpiderParts::pauseOffThreadAttacherAll((void))
 0002:8008465C       TombSpiderParts::init((void))
 0002:800846A8       TombSpiderParts::initParts((void))
 0002:80084C60       TombSpiderSensorCtrl::TombSpiderSensorCtrl((TombSpider *))
 0002:80084C68       TombSpiderSensorCtrl::update((HitSensor *))
 0002:80084CE0       TombSpiderSensorCtrl::updateMainParts((HitSensor *))
 0002:80084DD0       TombSpiderSensorCtrl::updateGland((HitSensor *))
 0002:80084F38       TombSpiderSensorCtrl::updateVitalSpot((HitSensor *))
 0002:80085054       @unnamed@TombSpiderSensorCtrl_cpp@::updateAttackSensorPos((HitSensor *,LiveActor const *))
 0002:80085110       TombSpiderSensorCtrl::updateAttackSensor((HitSensor *))
 0002:800852CC       TombSpiderSensorCtrl::initSensor((void))
 0002:800854D4       JGeometry::TVec2<f>::TVec2<f>(void *(float,float))
 0002:800854E0       TombSpiderStateSwoon::TombSpiderStateSwoon((TombSpider *))
 0002:800855E8       TombSpiderStateSwoon::exeLoop((void))
 0002:8008570C       __sinit__TombSpiderStateSwoon_cpp
 0002:80085788       TombSpiderThreadAttacher::TombSpiderThreadAttacher((LiveActor *,char const *,float,float))
 0002:80085814       MogucchiHill::init((JMapInfoIter const &))
 0002:80085868       TombSpiderThreadAttacher::exeFree((void))
 0002:80085914       __sinit__TombSpiderThreadAttacher_cpp
 0002:8008596C       TombSpiderVitalSpot::TombSpiderVitalSpot((LiveActor *,char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:800859EC       TombSpiderVitalSpot::init((JMapInfoIter const &))
 0002:80085A38       TombSpiderVitalSpot::startChance((void))
 0002:80085A7C       TombSpiderVitalSpot::endChance((void))
 0002:80085AC0       TombSpiderVitalSpot::startDamage((void))
 0002:80085AC8       TombSpiderVitalSpot::recover((void))
 0002:80085AD0       TombSpiderVitalSpot::isDamage(const(void))
 0002:80085B28       TombSpiderVitalSpot::exeChanceWait((void))
 0002:80085B80       TombSpiderVitalSpot::exeDamageStart((void))
 0002:80085BF4       Kanina::exeVauntAttackSuccess((void))
 0002:80085CC0       __sinit__TombSpiderVitalSpot_cpp
 0002:80085E04       TripodBoss::TripodBoss((char const *))
 0002:80085FBC       TripodBoss::init((JMapInfoIter const &))
 0002:80086288       TripodBoss::initAfterPlacement((void))
 0002:80086294       TripodBoss::initEventCamera((JMapInfoIter const &))
 0002:800862F0       TripodBoss::initLeg((JMapInfoIter const &))
 0002:80086400       TripodBoss::initLegIKPlacement((void))
 0002:800867D0       TripodBoss::initMovableArea((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80086874       TripodBoss::initBodyPosition((void))
 0002:80086918       TripodBoss::initBoneInfo((void))
 0002:80086AE8       TripodBoss::initPose((void))
 0002:80086B5C       TripodBoss::kill((void))
 0002:80086BEC       TripodBoss::control((void))
 0002:80086CA4       LiveActor::calcAndSetBaseMtx((void))
 0002:80086CA8       TripodBoss::tryStartStep((void))
 0002:80086D2C       TripodBoss::tryChangeSequence((void))
 0002:80086E60       TripodBoss::tryEndSequence((void))
 0002:80086EA4       TripodBoss::tryNextSequence((void))
 0002:80086F14       TripodBoss::tryWaitStep((void))
 0002:80086FD4       TripodBoss::tryNextStep((void))
 0002:80087098       TripodBoss::tryLeaveLegOutOfPlayer((void))
 0002:80087134       SphereSelectorHandle::tryRelease((void))
 0002:80087180       TripodBoss::tryEndDamage((void))
 0002:800871D0       TripodBoss::tryBreak((void))
 0002:80087270       TripodBoss::requestOpeningDemo((void))
 0002:800872FC       TripodBoss::tryDamageDemo((void))
 0002:8008735C       TripodBoss::requestEndDamageDemo((void))
 0002:800873F4       TripodBoss::exeChangeSequence((void))
 0002:80087460       TripodBoss::exeStep((void))
 0002:8008754C       TripodBoss::exeWaitStep((void))
 0002:80087654       TripodBoss::exeLeaveLegOutOfPlayer((void))
 0002:800876AC       TripodBoss::exeDamage((void))
 0002:800877B4       TripodBoss::exeStartDemo((void))
 0002:80087904       TripodBoss::exeDamageDemo((void))
 0002:800879B8       TripodBoss::exePainDemo((void))
 0002:80087BE8       TripodBoss::exeBreakDownDemo((void))
 0002:80087C64       TripodBoss::exeExplosionDemo((void))
 0002:80087D28       TripodBoss::isStopLeg(const(long))
 0002:80087D60       TripodBoss::isStopAllLeg(const(void))
 0002:80087DF4       MR::isBinded((LiveActor const *))
 0002:80087F3C       TripodBoss::isRideMario(const(void))
 0002:80087F5C       TripodBoss::isLeaveMarioNow(const(void))
 0002:80087F70       TripodBoss::setJointAttachBaseMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,long))
 0002:80087F80       TripodBoss::addStepPoint((TripodBossStepPoint *))
 0002:80088044       TripodBoss::getBodyMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:80088054       TripodBoss::getJointMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,long))
 0002:8008806C       TripodBoss::getJointAttachMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,long))
 0002:80088088       TripodBoss::requestStartStepSequence((long))
 0002:80088118       TripodBoss::getCurrentStepSequence((void))
 0002:8008813C       TripodBoss::getNextStepSequence((void))
 0002:80088160       TripodBoss::calcLegUpVector((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:800881F8       TripodBoss::calcDemoMovement((void))
 0002:80088360       TripodBoss::calcBodyMovement((void))
 0002:800883D0       TripodBoss::calcLegMovement((void))
 0002:80088430       TripodBoss::addAccelToWeightPosition((void))
 0002:80088658       TripodBoss::calcClippingSphere((void))
 0002:800886E0       TripodBoss::clippingModel((void))
 0002:800887EC       TripodBoss::startDemo((void))
 0002:8008885C       TripodBoss::endDemo((char const *))
 0002:800888BC       TripodBoss::checkRideMario((void))
 0002:800889C4       TripodBoss::getLegMatrixPtr(const(TripodBoss::PART_ID,TripodBoss::SUB_PART_ID))
 0002:80088A7C       def_80088A08
 0002:80088A84       TripodBoss::changeBgmState((void))
 0002:80088B48       TripodBoss::getPartIDFromBoneID((long))
 0002:80088B8C       J3DAnmCluster::getKind(const(void))
 0002:80088B94       udp_cc_initialize
 0002:80088B9C       TripodBossBone::setAttachBaseMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80088D14       MR::createTripod2Boss((char const *))
 0002:80088D94       __sinit__TripodBoss_cpp
 0002:80089088       @unnamed@TripodBossAccesser_cpp@::convertBoneIDToIndex((long))
 0002:800890B8       TripodBossAccesser::TripodBossAccesser((char const *))
 0002:80089100       JAISeMgr::setAudience((JAIAudience *))
 0002:80089108       TripodBossAccesser::addTripodBossParts((LiveActor *))
 0002:80089128       TripodBossAccesser::showTripodBossParts((void))
 0002:800891A0       TripodBossAccesser::hideTripodBossParts((void))
 0002:80089218       TripodBossAccesser::activeTripodBossParts((void))
 0002:8008929C       TripodBossAccesser::isTripoddBossParts(const(NameObj const *))
 0002:800892F4       TripodBossAccesser::createSceneObj((void))
 0002:800892FC       MR::addTripodBossParts((LiveActor *))
 0002:80089348       MR::addTripodBossPartsMovement((NameObj *))
 0002:8008935C       MR::isTripoddBossParts((NameObj const *))
 0002:80089398       MR::activeTripodBossParts((void))
 0002:8008941C       MR::isCreatedTripodBoss((void))
 0002:80089468       MR::requestEndDamageDemoTripodBoss((void))
 0002:80089648       MR::getTripodBossGravityHostID((void))
 0002:80089670       MR::getTripodBossAttachJointMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,long))
 0002:800896CC       MR::addTripodBossStepPoint((TripodBossStepPoint *))
 0002:80089804       MR::concatTripodBossAttachJointMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,long))
 0002:80089860       MR::isSteppingTripodBossLegID((long))
 0002:800898A8       MR::isSteppingTripodBossJointID((long))
 0002:80089950       TripodBossBaseJointPosition::TripodBossBaseJointPosition((char const *))
 0002:8008999C       TripodBossBaseJointPosition::init((JMapInfoIter const &))
 0002:80089A2C       TripodBossBaseJointPosition::initAfterPlacement((void))
 0002:80089A78       TripodBossBaseJointPosition::control((void))
 0002:80089B34       TripodBossBaseJointPosition::getBaseMtx(const(void))
 0002:80089B3C       TripodBossBreakMovement::TripodBossBreakMovement((char const *))
 0002:80089C40       TripodBossBreakMovement::start((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,long))
 0002:80089E20       LiveActor::movement((void))
 0002:80089E24       TripodBossBreakMovement::setBreakDownLevel((long))
 0002:80089EA0       TripodBossBreakMovement::exeStartBreak((void))
 0002:80089F50       TripodBossBreakMovement::exeBreak((void))
 0002:8008A09C       __sinit__TripodBossBreakMovement_cpp
 0002:8008A114       TripodBossCoin::TripodBossCoin((char const *))
 0002:8008A16C       TripodBossCoin::init((JMapInfoIter const &))
 0002:8008A208       TripodBossCoin::exeNonActive((void))
 0002:8008A254       TripodBossCoin::exeActive((void))
 0002:8008A398       __sinit__TripodBossCoin_cpp
 0002:8008A410       TripodBossCore::TripodBossCore((char const *))
 0002:8008A458       TripodBossFixPartsBase::~TripodBossFixPartsBase((void))
 0002:8008A4B4       TripodBossCore::init((JMapInfoIter const &))
 0002:8008A6A4       TripodBossShell::kill((void))
 0002:8008A6E4       Kanina::receiveTrample((HitSensor *,HitSensor *))
 0002:8008A734       TripodBossCore::activateTripodBoss((void))
 0002:8008A79C       TripodBossCore::exeWait((void))
 0002:8008A868       TripodBossCore::exeDamageDemo((void))
 0002:8008A92C       TripodBossCore::exeWarning((void))
 0002:8008A9B4       TripodBossCore::exeBreak((void))
 0002:8008AB44       __sinit__TripodBossCore_cpp
 0002:8008ABFC       Color8::Color8((_GXColor))
 0002:8008AC38       TripodBossFixParts::TripodBossFixParts((char const *))
 0002:8008AC9C       TripodBossFixParts::init((JMapInfoIter const &))
 0002:8008AED0       TripodBossFixParts::initSensor((JMapInfoIter const &))
 0002:8008AF30       TripodBossFixParts::kill((void))
 0002:8008B044       TripodBossFixParts::activateTripodBoss((void))
 0002:8008B0DC       TripodBossFixParts::exeStartDemo((void))
 0002:8008B140       TripodBossFixParts::exeWait((void))
 0002:8008B2AC       TripodBossFixParts::exeBreak((void))
 0002:8008B384       __sinit__TripodBossFixParts_cpp
 0002:8008B420       TripodBossFixPartsBase::TripodBossFixPartsBase((char const *))
 0002:8008B49C       TripodBossFixPartsBase::init((JMapInfoIter const &))
 0002:8008B4FC       TripodBossFixPartsBase::initAfterPlacement((void))
 0002:8008B544       TripodBossFixPartsBase::initClippingSphere((void))
 0002:8008B5F4       TripodBossFixPartsBase::setClippingSphere((JGeometry::TVec3<f> const &,float))
 0002:8008B634       TripodBossFixPartsBase::makeActorDead((void))
 0002:8008B684       TripodBossFixPartsBase::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8008B6C4       TripodBossFixPartsBase::calcTripodLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8008B6DC       TripodBossFixPartsBase::startBreakMovement((void))
 0002:8008B754       TripodBossFixPartsBase::updateBreakMovementMatrix((void))
 0002:8008B7C4       TripodBossFixPartsBase::updateTripodMatrix((void))
 0002:8008B85C       TripodBossFixPartsBase::initBreakMovement((long))
 0002:8008B8B8       TripodBossGuardWall::TripodBossGuardWall((char const *))
 0002:8008B940       TripodBossGuardWallPart::__defctor((void))
 0002:8008B94C       TripodBossGuardWallPart::~TripodBossGuardWallPart((void))
 0002:8008B9A8       LiveActor::makeActorAppeared((void))
 0002:8008B9AC       TripodBossGuardWall::makeActorDead((void))
 0002:8008BA10       TripodBossGuardWall::kill((void))
 0002:8008BA74       TripodBossGuardWall::init((JMapInfoIter const &))
 0002:8008BBC0       TripodBossGuardWall::initParts((void))
 0002:8008BC50       TripodBossGuardWall::updateMatrix((void))
 0002:8008BC54       TripodBossGuardWall::calcAndSetBaseMtx((void))
 0002:8008BC5C       TripodBossGuardWall::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8008BCCC       TripodBossGuardWall::requestStart((void))
 0002:8008BD14       TripodBossGuardWall::exeDemo((void))
 0002:8008BE88       TripodBossGuardWall::exeRotate((void))
 0002:8008BF28       TripodBossGuardWall::updateMatrix((void))
 0002:8008BF80       TripodBossGuardWall::updateCameraTarget((void))
 0002:8008C0A4       __sinit__TripodBossGuardWall_cpp
 0002:8008C130       @unnamed@GameSequenceProgress_cpp@::GameSequenceProgressWaitGoToFirstScene::execute(const(Spine *))
 0002:8008C174       TripodBossGuardWall::getBaseMtx(const(void))
 0002:8008C214       TripodBossGuardWall::~TripodBossGuardWall((void))
 0002:8008C290       TripodBossGuardWallPart::TripodBossGuardWallPart((char const *))
 0002:8008C2E0       TripodBossGuardWallPart::init((JMapInfoIter const &))
 0002:8008C430       HeatHazeEffect::appear((void))
 0002:8008C46C       TripodBossGuardWallPart::control((void))
 0002:8008C484       TripodBossGuardWallPart::calcAndSetBaseMtx((void))
 0002:8008C544       TripodBossGuardWallPart::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8008C5B4       TripodBossGuardWallPart::requestBreak((void))
 0002:8008C61C       TripodBossGuardWallPart::exeBreak((void))
 0002:8008C6DC       TripodBossGuardWallPart::exeRepair((void))
 0002:8008C774       Coin::setHostInfo((CoinHostInfo *))
 0002:8008C77C       TripodBossGuardWallPart::setPlacementAngle((float))
 0002:8008C7D8       BigBubble::setHost((LiveActor *))
 0002:8008C7E0       __sinit__TripodBossGuardWallPart_cpp
 0002:8008C888       NrvMeteorStrikeLauncher::MeteorStrikeLauncherNrvInterval::execute(const(Spine *))
 0002:8008C8D4       JGeometry::SMatrix34C<f>::set((JGeometry::SMatrix34C<f> const &))
 0002:8008C908       TripodBossKillerGenerater::TripodBossKillerGenerater((char const *))
 0002:8008C96C       TripodBossKillerGenerater::init((JMapInfoIter const &))
 0002:8008CB84       RabbitStateWaitStart::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8008CBCC       TripodBossKillerGenerater::calcTripodLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8008CBDC       TripodBossKillerGenerater::activateTripodBoss((void))
 0002:8008CC64       TripodBossKillerGenerater::setLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8008CC6C       TripodBossKillerGenerater::setActiveLebel((long))
 0002:8008CC74       TripodBossKillerGenerater::setHasCollision((bool))
 0002:8008CC7C       TripodBossKillerGenerater::tryShootSetting((void))
 0002:8008CD54       TripodBossKillerGenerater::tryCoolDown((void))
 0002:8008CE44       Pole::tryHandstandTurn((void))
 0002:8008CE90       TripodBossKillerGenerater::tryAbort((void))
 0002:8008CF0C       TripodBossKillerGenerater::requestBreak((void))
 0002:8008D004       TripodBossKillerGenerater::exeShowDemo((void))
 0002:8008D0B8       TripodBossKillerGenerater::exeCoolDown((void))
 0002:8008D110       TripodBossKillerGenerater::exeShootSetting((void))
 0002:8008D1A4       TripodBossKillerGenerater::exeShoot((void))
 0002:8008D288       TripodBossKillerGenerater::exeStop((void))
 0002:8008D320       TripodBossKillerGenerater::exeRestart((void))
 0002:8008D3FC       TripodBossKillerGenerater::exeBreak((void))
 0002:8008D4C0       __sinit__TripodBossKillerGenerater_cpp
 0002:8008D60C       NrvTripodBossKillerGenerater::TripodBossKillerGeneraterNrvHide::execute(const(Spine *))
 0002:8008D658       TripodBossKillerGeneraterCircle::~TripodBossKillerGeneraterCircle((void))
 0002:8008D6B0       TripodBossKillerGeneraterCircle::TripodBossKillerGeneraterCircle((char const *))
 0002:8008D720       TripodBossKillerGeneraterCircle::init((JMapInfoIter const &))
 0002:8008D884       TripodBossKillerGeneraterCircle::placementGenerater((void))
 0002:8008DB10       TripodBossKinokoOneUp::TripodBossKinokoOneUp((char const *))
 0002:8008DB6C       TripodBossKinokoOneUp::init((JMapInfoIter const &))
 0002:8008DCA4       TripodBossKinokoOneUp::exeActive((void))
 0002:8008DE40       TripodBossKinokoOneUp::getBaseMtx(const(void))
 0002:8008DE48       __sinit__TripodBossKinokoOneUp_cpp
 0002:8008DF3C       NrvBenefitItemObj::HostTypeNrvCatch::execute(const(Spine *))
 0002:8008DF58       NrvBenefitItemObj::HostTypeNrvWait::execute(const(Spine *))
 0002:8008DF60       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setXDir((float,float,float))
 0002:8008DF70       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setYDir((float,float,float))
 0002:8008DF80       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setZDir((float,float,float))
 0002:8008DFEC       JGeometry::TVec4<f>::scale((float))
 0002:8008E020       JGeometry::TQuat4<f>::normalize((void))
 0002:8008E088       JGeometry::TQuat4<f>::slerp((JGeometry::TQuat4<f> const &,JGeometry::TQuat4<f> const &,float))
 0002:8008E0B4       TripodBossLeg::TripodBossLeg((char const *))
 0002:8008E208       TripodBossLeg::init((JMapInfoIter const &))
 0002:8008E33C       TripodBossLeg::initShadow((char const *))
 0002:8008E37C       LiveActor::makeActorAppeared((void))
 0002:8008E380       LiveActor::makeActorDead((void))
 0002:8008E384       TripodBossLeg::control((void))
 0002:8008E3FC       TripodBossLeg::attackSensor((HitSensor *,HitSensor *))
 0002:8008E474       J3DTevBlock4::setTevRegOffset((ulong))
 0002:8008E47C       TripodBossLeg::setIKParam((float,float,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8008E588       TripodBossLeg::setStepTarget((TripodBossStepPoint *))
 0002:8008E5F8       TripodBossLeg::setForceEndPoint((JGeometry::TVec3<f> const &))
 0002:8008E614       TripodBossLeg::setDemoEffectTiming((bool))
 0002:8008E64C       TripodBossLeg::getRootJointMatrix(const(void))
 0002:8008E650       J3DPEBlockFull::getAlphaComp((void))
 0002:8008E658       TripodBossLeg::getMiddleJointMatrix(const(void))
 0002:8008E664       TripodBossLeg::getEndJointMatrix(const(void))
 0002:8008E66C       TripodBossLeg::getRootLocalYMatrix(const(void))
 0002:8008E674       TripodBossLeg::getRootLocalYZMatrix(const(void))
 0002:8008E67C       TripodBossLeg::getAnkleLocalXMatrix(const(void))
 0002:8008E684       TripodBossLeg::getAnkleLocalXZMatrix(const(void))
 0002:8008E68C       TripodBossLeg::requestStepTarget((TripodBossStepPoint *))
 0002:8008E738       SurfingGuidance::deactivate((void))
 0002:8008E77C       TripodBossLeg::requestStartDemo((void))
 0002:8008E78C       TripodBossLeg::requestEndDemo((void))
 0002:8008E7A4       GameSystemStationedArchiveLoader::isPreparedReset(const(void))
 0002:8008E894       TripodBossLeg::isPressPlayer(const(void))
 0002:8008E89C       TripodBossLeg::canCancelStep(const(void))
 0002:8008E95C       TripodBossLeg::canWeighting(const(void))
 0002:8008E9E4       TripodBossLeg::exeDemo((void))
 0002:8008EA60       TripodBossLeg::exeUp((void))
 0002:8008EB30       TripodBossLeg::exeLeaveOut((void))
 0002:8008ECB8       TripodBossLeg::exeMove((void))
 0002:8008ED48       TripodBossLeg::exeMoveToLandingPos((void))
 0002:8008EE6C       TripodBossLeg::exeStampSign((void))
 0002:8008F020       TripodBossLeg::exeLanding((void))
 0002:8008F2AC       TripodBossLeg::exeDamageVibration((void))
 0002:8008F3C8       TripodBossLeg::exeBreak((void))
 0002:8008F420       TripodBossLeg::addToTargetPower((JGeometry::TVec3<f> const &,float))
 0002:8008F51C       TripodBossLeg::addIKLimitPower((void))
 0002:8008F674       TripodBossLeg::addAccelUpLeg((TripodBossStepPoint *,float))
 0002:8008F724       TripodBossLeg::calcLegHeight(const(TripodBossStepPoint *))
 0002:8008F774       TripodBossLeg::updatePose((void))
 0002:8008F7C4       TripodBossLeg::updateIKPose((void))
 0002:8008F86C       TripodBossLeg::bindEndPosition((void))
 0002:8008F948       TripodBossLeg::separateLocalAxisRootJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8008F9E4       TripodBossLeg::separateAnkleJointLocalAxis((void))
 0002:8008FA3C       TripodBossLeg::updateAnkleUp((float))
 0002:8008FB24       TripodBossLeg::updateAnkleSlerpToBasePose((void))
 0002:8008FBE8       TripodBossLeg::updateAnkleLanding((void))
 0002:8008FC90       TripodBossLeg::updateAnkleShadowMatrix((void))
 0002:8008FDE4       MR::separateMatrixRotateYZX((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80090068       __sinit__TripodBossLeg_cpp
 0002:800901DC       NrvTripodBossLeg::TripodBossLegNrvHold::execute(const(Spine *))
 0002:80090224       MR::setMtxTrans((float *[4],float,float,float))
 0002:80090234       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::makeQuat((JGeometry::TQuat4<f> const &))
 0002:800902E4       MR::clamp((float,float,float))
 0002:8009030C       JGeometry::TVec3<f>::set<i>(void (int,int,int))
 0002:8009036C       HitResult::HitResult((void))
 0002:800903C8       TripodBossMovableArea::TripodBossMovableArea((void))
 0002:80090418       TripodBossMovableArea::setCenter((JGeometry::TVec3<f> const &))
 0002:80090420       TripodBossMovableArea::setBaseAxis((JGeometry::TVec3<f> const &))
 0002:80090458       TripodBossMovableArea::setFrontVector((JGeometry::TVec3<f> const &))
 0002:80090490       ShadowVolumeLine::setToWidth((float))
 0002:80090498       TripodBossMovableArea::collideSphere(const(HitResult *,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const &))
 0002:800906F0       TripodBossMovableArea::calcNearLandingPosition(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:800908B4       TripodBossMovableArea::calcLandingNormal(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80090934       TripodBossMovableArea::calcLandingFront(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80090A34       __sinit__TripodBossMovableArea_cpp
 0002:80090A9C       MR::sqrt<f>(float (float))
 0002:80090AD8       TripodBossRailMoveParts::TripodBossRailMoveParts((char const *))
 0002:80090B1C       TripodBossRailMoveParts::init((JMapInfoIter const &))
 0002:80090B90       TripodBossRotateParts::makeActorDead((void))
 0002:80090BFC       TripodBossRailMoveParts::activateTripodBoss((void))
 0002:80090C40       TripodBossRailMoveParts::calcTripodLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:80090C58       TripodBossRailMoveParts::exeWaitOwn((void))
 0002:80090CC4       TripodBossRotateParts::TripodBossRotateParts((char const *))
 0002:80090D08       TripodBossRotateParts::init((JMapInfoIter const &))
 0002:80090DDC       TripodBossRotateParts::activateTripodBoss((void))
 0002:80090E1C       TripodBossRotateParts::calcTripodLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:80090F34       CameraTargetMtx::getFrontVec(const(void))
 0002:80090F3C       TripodBossRotateParts::exeWaitOwn((void))
 0002:80090F94       TripodBossShell::~TripodBossShell((void))
 0002:80090FEC       TripodBossShell::TripodBossShell((char const *))
 0002:80091030       TripodBossShell::init((JMapInfoIter const &))
 0002:80091210       TripodBossShell::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80091284       TripodBossShell::activateTripodBoss((void))
 0002:800912D8       TripodBossShell::exeBreak((void))
 0002:8009149C       __sinit__TripodBossShell_cpp
 0002:80091510       NrvTripodBossShell::TripodBossShellNrvNonActive::execute(const(Spine *))
 0002:80091514       TripodBossStepPoint::TripodBossStepPoint((char const *))
 0002:800915A8       TripodBossStepPoint::init((JMapInfoIter const &))
 0002:80091678       TripodBossStepPoint::initAfterPlacement((void))
 0002:80091694       TripodBossStepPoint::setStepNormal((JGeometry::TVec3<f> const &))
 0002:800916CC       TripodBossStepPoint::setStepFront((JGeometry::TVec3<f> const &))
 0002:80091760       TripodBossStepSequence::TripodBossStepSequence((void))
 0002:80091790       TripodBossStepSequence::addStepPoint((TripodBossStepPoint *))
 0002:800917E0       TripodBossStepSequence::getCurrentLeg(const(void))
 0002:800917F4       TripodBossStepSequence::getCurrentWaitTime(const(void))
 0002:80091808       TripodBossStepSequence::getCurrentStepPoint((void))
 0002:80091818       TripodBossStepSequence::nextStep((void))
 0002:8009183C       TripodBossStepSequence::isEmpty(const(void))
 0002:80091854       TripodBossStepSequence::reset((void))
 0002:80091860       TripodBossStepStartArea::TripodBossStepStartArea((int,char const *))
 0002:800918A4       TripodBossStepStartArea::init((JMapInfoIter const &))
 0002:800918E0       TripodBossStepStartArea::movement((void))
 0002:80091934       TripodBossStepStartArea::~TripodBossStepStartArea((void))
 0002:80091990       TripodBossStepStartArea::getManagerName(const(void))
 0002:8009199C       CamHeliEffector::CamHeliEffector((void))
 0002:800919B0       CamHeliEffector::update((CameraMan *))
 0002:80091CCC       CameraTargetObj::isCameraStateOn(const(ulong))
 0002:80091CD4       __sinit__CamHeliEffector_cpp
 0002:80091D40       NrvMarioActor::MarioActorNrvWait::MarioActorNrvWait((void))
 0002:80091D50       NrvMarioActor::MarioActorNrvGameOver::MarioActorNrvGameOver((void))
 0002:80091DE0       NrvMarioActor::MarioActorNrvNoRush::execute(const(Spine *))
 0002:80091DE8       NrvMarioActor::MarioActorNrvTimeWait::execute(const(Spine *))
 0002:80091DF0       NrvMarioActor::MarioActorNrvGameOverSink::execute(const(Spine *))
 0002:80091DF8       NrvMarioActor::MarioActorNrvGameOverNonStop::execute(const(Spine *))
 0002:80091E30       JMACosRadian(float)
 0002:80091E74       CamKarikariEffector::CamKarikariEffector((void))
 0002:80091E80       CamKarikariEffector::update((CameraMan *))
 0002:800922D4       JGeometry::TQuat4<f>::setRotate((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:800923D0       JGeometry::TQuat4<f>::transform(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> &))
 0002:80092508       CamTranslatorAnim::setParam((CameraParamChunk const *))
 0002:80092524       CamTranslatorAnim::getAnimFrame(const(CameraParamChunk const *))
 0002:80092528       WPad::getBattery(const(void))
 0002:80092530       CamTranslatorBehind::setParam((CameraParamChunk const *))
 0002:8009258C       CamTranslatorBlackHole::setParam((CameraParamChunk const *))
 0002:800925FC       CamTranslatorCharmedFix::setParam((CameraParamChunk const *))
 0002:800926A8       CamTranslatorCharmedTripodBoss::setParam((CameraParamChunk const *))
 0002:80092758       CamTranslatorCharmedVecReg::setParam((CameraParamChunk const *))
 0002:8009283C       CamTranslatorCharmedVecRegTower::setParam((CameraParamChunk const *))
 0002:8009293C       CamTranslatorCubePlanet::setParam((CameraParamChunk const *))
 0002:80092968       CamTranslatorDPD::setParam((CameraParamChunk const *))
 0002:800929D0       MarioMove::MarioMove((MarioActor *))
 0002:800929E4       CamTranslatorDead::setParam((CameraParamChunk const *))
 0002:80092A00       J3DTexGenBlockPatched::setTexMtxOffset((ulong))
 0002:80092A10       CamTranslatorFix::setParam((CameraParamChunk const *))
 0002:80092AA0       CamTranslatorFixedPoint::setParam((CameraParamChunk const *))
 0002:80092ABC       CamTranslatorFixedThere::setParam((CameraParamChunk const *))
 0002:80092B00       CamTranslatorFollow::setParam((CameraParamChunk const *))
 0002:80092B4C       CamTranslatorWaterFollow::setParam((CameraParamChunk const *))
 0002:80092B8C       CamTranslatorWonderPlanet::setParam((CameraParamChunk const *))
 0002:80092BB8       CamTranslatorFrontAndBack::setParam((CameraParamChunk const *))
 0002:80092CB8       CamTranslatorGround::setParam((CameraParamChunk const *))
 0002:80092D0C       CamTranslatorInnerCylinder::setParam((CameraParamChunk const *))
 0002:80092DFC       CamTranslatorInwardSphere::setParam((CameraParamChunk const *))
 0002:80092E28       CamTranslatorInwardTower::setParam((CameraParamChunk const *))
 0002:80092F14       CamTranslatorMedianPlanet::setParam((CameraParamChunk const *))
 0002:80093000       CamTranslatorMedianTower::setParam((CameraParamChunk const *))
 0002:800930C4       CamTranslatorMtxRegParallel::setParam((CameraParamChunk const *))
 0002:80093158       CamTranslatorObjParallel::setParam((CameraParamChunk const *))
 0002:80093184       CamTranslatorParallel::setParam((CameraParamChunk const *))
 0002:800931EC       CamTranslatorRaceFollow::setParam((CameraParamChunk const *))
 0002:80093240       CamTranslatorRailDemo::setParam((CameraParamChunk const *))
 0002:800932A4       CamTranslatorRailFollow::setParam((CameraParamChunk const *))
 0002:80093308       CamTranslatorRailWatch::setParam((CameraParamChunk const *))
 0002:8009336C       CamTranslatorSlide::setParam((CameraParamChunk const *))
 0002:8009359C       CamTranslatorSpiral::setParam((CameraParamChunk const *))
 0002:800935F8       CamTranslatorTalk::setParam((CameraParamChunk const *))
 0002:8009361C       CamTranslatorTower::setParam((CameraParamChunk const *))
 0002:800936C0       CamTranslatorTowerPos::setParam((CameraParamChunk const *))
 0002:8009377C       CamTranslatorTripodBoss::setParam((CameraParamChunk const *))
 0002:80093810       CamTranslatorTripodBossJoint::setParam((CameraParamChunk const *))
 0002:80093884       CamTranslatorTripodPlanet::setParam((CameraParamChunk const *))
 0002:8009395C       CamTranslatorTrundle::setParam((CameraParamChunk const *))
 0002:80093A44       CamTranslatorTwistedPassage::setParam((CameraParamChunk const *))
 0002:80093B34       CamTranslatorWaterPlanetBoss::setParam((CameraParamChunk const *))
 0002:80093BFC       Camera::Camera((char const *))
 0002:80093C64       Camera::setZoneMtx((long))
 0002:80093D4C       Camera::createVPanObj((void))
 0002:80093E40       GameCameraCreator::initCameraCodeCollection((char const *,long))
 0002:80093E4C       CamAnmDataAccessor::getPos(const(JGeometry::TVec3<f> *,float))
 0002:80093EE4       CamAnmDataAccessor::getWatchPos(const(JGeometry::TVec3<f> *,float))
 0002:80093F7C       CamAnmDataAccessor::getTwist(const(float))
 0002:80093F8C       CamAnmDataAccessor::getFovy(const(float))
 0002:80093F9C       CamAnmDataAccessor::get(const(float,ulong,ulong))
 0002:800940B0       KeyCamAnmDataAccessor::getPos(const(JGeometry::TVec3<f> *,float))
 0002:80094154       KeyCamAnmDataAccessor::getWatchPos(const(JGeometry::TVec3<f> *,float))
 0002:800941F8       KeyCamAnmDataAccessor::getTwist(const(float))
 0002:8009420C       KeyCamAnmDataAccessor::getFovy(const(float))
 0002:80094220       KeyCamAnmDataAccessor::get(const(float,ulong,ulong,ulong))
 0002:8009424C       KeyCamAnmDataAccessor::searchKeyFrameIndex(const(float,ulong,ulong,ulong))
 0002:800942A8       KeyCamAnmDataAccessor::get3f(const(float,ulong,ulong))
 0002:8009432C       KeyCamAnmDataAccessor::get4f(const(float,ulong,ulong))
 0002:800943B0       KeyCamAnmDataAccessor::calcHermite(const(float,float,float,float,float,float,float))
 0002:800943F4       CameraAnim::CameraAnim((char const *))
 0002:800944C4       CameraAnim::reset((void))
 0002:80094548       CameraAnim::calc((void))
 0002:80094804       CameraAnim::setParam((uchar *,float))
 0002:80094850       CameraAnim::isAnimEnd(const(void))
 0002:800948A8       CameraAnim::getAnimFrame((uchar *))
 0002:800949B8       CameraAnim::loadBin((uchar *))
 0002:80094C48       CameraBehind::CameraBehind((char const *))
 0002:80094CA4       CameraBehind::reset((void))
 0002:80094CF4       CameraBehind::calc((void))
 0002:80094D94       CameraBehind::calcPosAndUp((float))
 0002:80094FAC       CameraBlackHole::CameraBlackHole((char const *))
 0002:80095010       CameraBlackHole::reset((void))
 0002:80095260       CameraBlackHole::calc((void))
 0002:80095354       JGeometry::TUtil<f>::acos((float))
 0002:800953FC       MR::crossToPolar((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float *,float *,float *))
 0002:800954E0       MR::polarToCrossDegree((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float,float,float))
 0002:800956B0       MR::diffRadian((float,float))
 0002:8009576C       MR::diffRadianAroundAxis((float *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800958A0       MR::projectVecOnPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80095950       JMACosDegree(float)
 0002:80095994       JMASinDegree(float)
 0002:800959FC       CameraFrontAndBack::CameraFrontAndBack((char const *))
 0002:80095A68       CameraCharmedVecRegTower::reset((void))
 0002:80095ACC       CameraCharmedFix::calc((void))
 0002:80095E44       CameraCharmedTripodBoss::CameraCharmedTripodBoss((char const *))
 0002:80095F18       CameraCharmedTripodBoss::calc((void))
 0002:80096288       CameraCharmedTripodBoss::setParam((long,JGeometry::TVec3<f>,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &))
 0002:80096390       CameraCharmedVecReg::CameraCharmedVecReg((char const *))
 0002:800963FC       CameraCharmedVecReg::reset((void))
 0002:80096470       CameraCharmedVecReg::calc((void))
 0002:80096978       CameraCharmedVecRegTower::CameraCharmedVecRegTower((char const *))
 0002:80096A20       CameraCharmedVecRegTower::calc((void))
 0002:80096FA8       CameraContext::CameraContext((void))
 0002:80096FF4       CameraContext::initParams((void))
 0002:80097278       J3DPEBlockFogOff::getZMode((void))
 0002:80097280       FloaterFloatingForceTypeSpring::getCurrentVelocity(const(void))
 0002:80097288       CameraContext::getAspect(const(void))
 0002:8009731C       CameraContext::setViewMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,bool,bool,JGeometry::TVec3<f> const &))
 0002:80097364       CameraContext::setNearZ((float))
 0002:8009736C       CameraContext::setFovy((float))
 0002:80097374       CameraContext::setShakeOffset((float,float))
 0002:80097380       CameraContext::updateProjectionMtx((void))
 0002:80097654       MR::getFrameBufferHeight((void))
 0002:8009765C       J3DShapeMtxMulti::getUseMtxNum(const(void))
 0002:8009766C       CameraCover::CameraCover((char const *))
 0002:8009771C       CameraCover::movement((void))
 0002:800977B8       CameraCover::draw(const(void))
 0002:80097830       CameraCover::cover((ulong))
 0002:80097840       CameraCover::isCameraHopping(const(void))
 0002:8009785C       CameraCover::copyCamera((void))
 0002:80097910       __sinit__CameraCover_cpp
 0002:80097944       CameraCubePlanet::CameraCubePlanet((char const *))
 0002:800979AC       CameraCubePlanet::reset((void))
 0002:80097A00       CameraCubePlanet::calc((void))
 0002:80097D70       CameraDPD::CameraDPD((char const *))
 0002:80097E10       CameraDPD::reset((void))
 0002:80098208       CameraDPD::calc((void))
 0002:80098870       JGeometry::TVec2<f>::__ml(const(float))
 0002:8009889C       JGeometry::TVec2<f>::__pl(const(JGeometry::TVec2<f> const &))
 0002:800988D0       CameraDead::CameraDead((char const *))
 0002:80098924       CameraDead::reset((void))
 0002:80098B44       CameraDead::calc((void))
 0002:80098E98       CameraDirector::CameraDirector((char const *))
 0002:800991C0       CameraDirector::movement((void))
 0002:80099294       GameDataHolder::isCompleteMarioAndLuigi(const(void))
 0002:800992A4       CameraDirector::push((CameraMan *))
 0002:80099328       CameraDirector::pop((void))
 0002:800993B0       CameraDirector::backLastMtx((void))
 0002:80099418       CameraDirector::getCurrentCameraMan(const(void))
 0002:80099434       CameraDirector::updateCameraMan((void))
 0002:800994A8       CameraDirector::calcPose((void))
 0002:8009957C       CameraDirector::calcSubjective((void))
 0002:800998DC       CameraDirector::isInterpolationOff((void))
 0002:80099944       CameraDirector::switchAntiOscillation((void))
 0002:80099994       CameraDirector::createViewMtx((void))
 0002:800999FC       CameraDirector::checkStartCondition((void))
 0002:80099A74       CameraDirector::startEvent((long,char const *,CameraTargetArg const &,long))
 0002:80099B44       CameraDirector::endEvent((long,char const *,bool,long))
 0002:80099C18       CameraDirector::endEventAtLanding((long,char const *,long))
 0002:80099CA8       CameraDirector::getEventParameter((long,char const *))
 0002:80099D10       CameraDirector::requestToResetCameraMan((void))
 0002:80099D1C       CameraDirector::setInterpolation((ulong))
 0002:80099D8C       CameraDirector::closeCreatingCameraChunk((void))
 0002:80099E08       GameSystem::prepareReset((void))
 0002:80099E20       CameraDirector::declareEvent((long,char const *))
 0002:80099E8C       CameraDirector::started((void))
 0002:80099E94       MR::calcAnimModelManager((LiveActor *))
 0002:80099EAC       CameraDirector::isRotatingHard(const(void))
 0002:80099EB8       CameraDirector::isSubjectiveCamera(const(void))
 0002:80099EC0       CameraDirector::isEnableToControl(const(void))
 0002:80099F5C       CameraDirector::isEnableToRoundLeft(const(void))
 0002:80099F8C       CameraDirector::isEnableToRoundRight(const(void))
 0002:80099FBC       CameraDirector::isEnableToReset(const(void))
 0002:80099FEC       CameraDirector::getAnimCameraFrame(const(long,char const *))
 0002:8009A048       CameraDirector::isEventCameraActive(const(void))
 0002:8009A084       CameraDirector::startStartPosCamera((bool))
 0002:8009A094       CameraDirector::isInterpolatingNearlyEnd(const(void))
 0002:8009A0F4       CameraDirector::isForceCameraChange(const(void))
 0002:8009A108       CameraDirector::startStartAnimCamera((void))
 0002:8009A178       CameraDirector::isStartAnimCameraEnd(const(void))
 0002:8009A198       CameraDirector::getStartAnimCameraFrame(const(void))
 0002:8009A1B8       CameraDirector::endStartAnimCamera((void))
 0002:8009A1F8       CameraDirector::startTalkCamera((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,long))
 0002:8009A304       CameraDirector::endTalkCamera((bool,long))
 0002:8009A318       CameraDirector::startSubjectiveCamera((long))
 0002:8009A3B8       CameraDirector::endSubjectiveCamera((long))
 0002:8009A450       CameraDirector::isAnimCameraEnd(const(long,char const *))
 0002:8009A508       CameraDirector::pauseOffAnimCamera((long,char const *))
 0002:8009A5C0       CameraDirector::checkEndOfEventCamera((void))
 0002:8009A650       CameraDirector::controlCameraSE((void))
 0002:8009A944       CameraDirector::removeEndEventAtLanding((long,char const *))
 0002:8009AA34       CameraDirector::calcViewMtxFromPoseParam((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,CameraPoseParam const *))
 0002:8009AC38       CameraDirector::isPlayableCameraSE((bool))
 0002:8009AD28       CameraDirector::resetCameraMan((void))
 0002:8009AEA8       CameraDirector::createStartAnimCamera((void))
 0002:8009AF1C       CameraDirector::createSubjectiveCamera((void))
 0002:8009B08C       MR::getCameraDirector((void))
 0002:8009B0B4       CameraPoseParam::copyFrom((CameraPoseParam const &))
 0002:8009B25C       CameraFix::CameraFix((char const *))
 0002:8009B2F8       CameraFix::calc((void))
 0002:8009B4B8       CameraFix::setParam((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8009B5B4       CameraFixedPoint::CameraFixedPoint((char const *))
 0002:8009B600       CameraFixedPoint::reset((void))
 0002:8009B68C       CameraFixedPoint::calc((void))
 0002:8009B9D8       CameraFixedPoint::setParam((JGeometry::TVec3<f> const &,ulong))
 0002:8009BA54       CameraFixedThere::CameraFixedThere((char const *))
 0002:8009BAC0       CameraFixedThere::reset((void))
 0002:8009BB24       CameraFixedThere::calc((void))
 0002:8009BC2C       CameraFixedThere::copyStatusFromPrevCamera((void))
 0002:8009BD80       CameraFixedThere::calcEyeDir((JGeometry::TVec3<f> *))
 0002:8009BE08       CameraFixedThere::makeAxisAndRoll((void))
 0002:8009BF60       CameraFixedThere::updateUpVec((JGeometry::TVec3<f> const &))
 0002:8009BFE0       CameraFixedThere::updateNormalUpVec((JGeometry::TVec3<f> const &))
 0002:8009C21C       CameraFollow::CameraFollow((char const *))
 0002:8009C2C8       CameraFollow::reset((void))
 0002:8009C3E0       CameraFollow::calc((void))
 0002:8009C480       CameraFollow::setParam((float,float,float,float,float,bool))
 0002:8009C4DC       CameraTower::isEnableToRoundLeft(const(void))
 0002:8009C51C       CameraTower::isEnableToRoundRight(const(void))
 0002:8009C55C       CameraFollow::calcIdealPos((void))
 0002:8009C9B0       CameraFollow::constrainAngleX((float *))
 0002:8009CA04       CameraFollow::constrainAngleY((float *,JGeometry::TVec3<f> const &,float))
 0002:8009CAD4       CameraFollow::getMagnitudeOfMovingRound(const(void))
 0002:8009CBC0       CameraFollow::checkShiftStateToRound((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8009CCE0       CameraFollow::arrangeHeight((void))
 0002:8009CDC0       CameraFollow::reflectRotOffset((void))
 0002:8009CE5C       CameraFollow::isWallForward(const(void))
 0002:8009CF30       CameraFollow::arrangeLookUp((void))
 0002:8009CF8C       CameraFollow::checkDescent(const(JGeometry::TVec3<f> *))
 0002:8009D0CC       CameraFollow::arrangeLookDown((void))
 0002:8009D2C8       CameraFollow::startRound((float,float))
 0002:8009D33C       CameraFollow::checkValidityOfRound((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8009D4DC       CameraTower::isUpsideDownByRoll(const(void))
 0002:8009D5A0       __sinit__CameraFollow_cpp
 0002:8009D5F4       CameraFooFighter::CameraFooFighter((char const *))
 0002:8009D664       CameraFooFighter::reset((void))
 0002:8009D6E8       CameraFooFighter::calc((void))
 0002:8009DED4       CameraWaterPlanet::CameraWaterPlanet((char const *))
 0002:8009DF28       CameraWaterPlanet::reset((void))
 0002:8009E0B8       CameraFooFighterPlanet::calc((void))
 0002:8009E4AC       CameraFooFighterPlanet::goRoundBehind((JGeometry::TVec3<f> &,JGeometry::TVec3<f> &,JGeometry::TVec3<f> &))
 0002:8009E83C       CameraFrontAndBack::calc((void))
 0002:8009EB58       CameraFrontAndBack::calcBaseQuat((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &))
 0002:8009EC08       CameraFrontAndBack::calcDipQuat((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8009ED68       CameraGround::CameraGround((char const *))
 0002:8009EDDC       ShadowController::onFollowHostScale((void))
 0002:8009EDE8       CameraGround::calc((void))
 0002:8009F13C       CameraHeightArrange::CameraHeightArrange((Camera *))
 0002:8009F280       CameraHeightArrange::updateJump((void))
 0002:8009F354       CameraHeightArrange::calcWatchPos((CameraTargetObj *))
 0002:8009F434       CameraHeightArrange::arrange((void))
 0002:8009F4C8       CameraHeightArrange::resetJump((void))
 0002:8009F4DC       CameraHeightArrange::reset((void))
 0002:8009F624       CameraHeightArrange::resetParameter((void))
 0002:8009F69C       CameraHeightArrange::checkState((void))
 0002:8009F7E4       CameraHeightArrange::arrangeHeight((void))
 0002:8009F908       CameraHeightArrange::arrangeVPan((void))
 0002:8009F9FC       CameraHeightArrange::calcPose((void))
 0002:8009FB10       CameraHeightArrange::updateUpper((void))
 0002:8009FD2C       CameraHeightArrange::updateLower((void))
 0002:8009FED8       CameraHeightArrange::calcOffset((float))
 0002:800A00A0       CameraHeightArrange::chase((void))
 0002:800A0144       CameraHeightArrange::updateHeightAndOffset((void))
 0002:800A0214       CameraHeightArrange::getGlobalAxis((void))
 0002:800A0350       MR::tan((float))
 0002:800A03C0       @unnamed@CameraHolder_cpp@::createCamera<19CameraCharmedVecReg>(Camera *(void))
 0002:800A03F8       @unnamed@CameraHolder_cpp@::createCamera<16CameraSubjective>(Camera *(void))
 0002:800A0468       @unnamed@CameraHolder_cpp@::createCamera<16CameraRaceFollow>(Camera *(void))
 0002:800A04A0       @unnamed@CameraHolder_cpp@::createCamera<12CameraSpiral>(Camera *(void))
 0002:800A04D8       @unnamed@CameraHolder_cpp@::createCamera<20CameraTwistedPassage>(Camera *(void))
 0002:800A0548       @unnamed@CameraHolder_cpp@::createCamera<19CameraInnerCylinder>(Camera *(void))
 0002:800A0580       @unnamed@CameraHolder_cpp@::createCamera<18CameraFrontAndBack>(Camera *(void))
 0002:800A05B8       @unnamed@CameraHolder_cpp@::createCamera<16CameraTripodBoss>(Camera *(void))
 0002:800A05F0       @unnamed@CameraHolder_cpp@::createCamera<21CameraWaterPlanetBoss>(Camera *(void))
 0002:800A0698       @unnamed@CameraHolder_cpp@::createCamera<18CameraInwardSphere>(Camera *(void))
 0002:800A06D0       @unnamed@CameraHolder_cpp@::createCamera<15CameraRailWatch>(Camera *(void))
 0002:800A07B0       @unnamed@CameraHolder_cpp@::createCamera<17CameraWaterPlanet>(Camera *(void))
 0002:800A09E0       @unnamed@CameraHolder_cpp@::createCamera<15CameraBlackHole>(Camera *(void))
 0002:800A0A88       @unnamed@CameraHolder_cpp@::createCamera<11CameraSlide>(Camera *(void))
 0002:800A0C10       @unnamed@CameraHolder_cpp@::createCamera<17CameraWaterFollow>(Camera *(void))
 0002:800A0C48       @unnamed@CameraHolder_cpp@::createCamera<9CameraDPD>(Camera *(void))
 0002:800A0D98       CameraHolder::CameraHolder((char const *))
 0002:800A0DFC       LiveActorGroup::getActor(const(int))
 0002:800A0E0C       CameraHolder::getIndexOf(const(char const *))
 0002:800A0E7C       CameraHolder::getDefaultCamera((void))
 0002:800A0E98       CameraHolder::getIndexOf(const(Camera *))
 0002:800A0ED4       CameraHolder::createCameras((void))
 0002:800A0F7C       CameraHolder::getCameraInner(const(long))
 0002:800A0FE4       CameraInnerCylinder::CameraInnerCylinder((char const *))
 0002:800A105C       CameraInnerCylinder::reset((void))
 0002:800A1068       CameraInnerCylinder::calc((void))
 0002:800A1778       CameraInwardSphere::CameraInwardSphere((char const *))
 0002:800A17E8       CameraInwardSphere::reset((void))
 0002:800A18C8       CameraInwardSphere::calc((void))
 0002:800A1D7C       CameraInwardSphere::calcGravityCenter((void))
 0002:800A2020       TriangleFilterFunc::isInvalidTriangle(const(Triangle const *))
 0002:800A2090       CameraInwardTower::CameraInwardTower((char const *))
 0002:800A2120       CameraInwardTower::reset((void))
 0002:800A21C4       CameraInwardTower::calc((void))
 0002:800A2274       CameraInwardTower::calcIdealPose((void))
 0002:800A2648       ModelManager::getBvaCtrl(const(void))
 0002:800A2654       CameraLocalUtil::getPos((Camera const *))
 0002:800A2660       CameraLocalUtil::getUpVec((Camera const *))
 0002:800A2674       CameraLocalUtil::getFovy((Camera const *))
 0002:800A2678       MR::getJointTransY((J3DJoint const *))
 0002:800A2680       CameraLocalUtil::getGlobalOffset((Camera const *))
 0002:800A2684       J3DPEBlockFull::getBlend((void))
 0002:800A268C       CameraLocalUtil::getLocalOffset((Camera const *))
 0002:800A2690       CameraTargetMtx::getGroundPos(const(void))
 0002:800A2698       CameraLocalUtil::getRoll((Camera const *))
 0002:800A269C       MarioFoo::getBlurOffset(const(void))
 0002:800A26A4       CameraLocalUtil::setWatchPos((Camera *,JGeometry::TVec3<f> const &))
 0002:800A26B0       CameraLocalUtil::setPos((Camera *,JGeometry::TVec3<f> const &))
 0002:800A26BC       CameraLocalUtil::setUpVec((Camera *,JGeometry::TVec3<f> const &))
 0002:800A26C0       LayoutHolder::getResOtherName(const(ulong))
 0002:800A26D0       CameraLocalUtil::setFovy((Camera *,float))
 0002:800A26DC       CameraLocalUtil::setGlobalOffset((Camera *,JGeometry::TVec3<f> const &))
 0002:800A26E8       CameraLocalUtil::setLocalOffset((Camera *,JGeometry::TVec3<f> const &))
 0002:800A26EC       DiskTorusGravity::setDirection((JGeometry::TVec3<f> const &))
 0002:800A26F4       CameraLocalUtil::setFrontOffset((Camera *,float))
 0002:800A2700       CameraLocalUtil::setUpperOffset((Camera *,float))
 0002:800A270C       CameraLocalUtil::setRoll((Camera *,float))
 0002:800A2710       MapObjActorInitInfo::setupClippingRadius((float))
 0002:800A2720       CameraLocalUtil::getVecReg((char const *))
 0002:800A2790       CameraLocalUtil::getDummyVecRegName((void))
 0002:800A27DC       MR::getCameraDirector((void))
 0002:800A27E0       CameraLocalUtil::setUsedTarget((CameraMan const *,CameraTargetObj *))
 0002:800A27EC       CameraLocalUtil::getTarget((Camera const *))
 0002:800A2880       CameraLocalUtil::setUpVecAndWatchUpVec((Camera *,JGeometry::TVec3<f> const &))
 0002:800A2910       CameraLocalUtil::recalcUpVec((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:800A296C       CameraLocalUtil::makeWatchOffset((JGeometry::TVec3<f> *,Camera *,CameraTargetObj *,float))
 0002:800A2B2C       CameraLocalUtil::makeWatchPointImm((JGeometry::TVec3<f> *,Camera *,CameraTargetObj *))
 0002:800A2B84       CameraLocalUtil::makeWatchOffsetImm((JGeometry::TVec3<f> *,Camera *,CameraTargetObj *))
 0002:800A2CF4       CameraLocalUtil::tryCameraReset((void))
 0002:800A2D2C       CameraLocalUtil::tryCameraResetTrigger((void))
 0002:800A2D7C       CameraLocalUtil::testCameraPadTriggerReset((void))
 0002:800A2DF4       CameraLocalUtil::testCameraPadTriggerRoundRight((void))
 0002:800A2E8C       CameraLocalUtil::slerpCamera((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TQuat4<f> const &,float,bool))
 0002:800A300C       CameraLocalUtil::makeTowerCameraMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A3114       CameraLocalUtil::arrangeDistanceByFovy((Camera *,JGeometry::TVec3<f>,float))
 0002:800A3310       CameraLocalUtil::arrangeDistanceByPushAndPull((Camera *,float,float))
 0002:800A3418       CameraLocalUtil::calcSafePose((CameraMan *,Camera *))
 0002:800A37E0       CameraMan::CameraMan((char const *))
 0002:800A3858       DemoCameraKeeper::start((void))
 0002:800A3864       CameraMan::activate((CameraDirector *))
 0002:800A387C       CameraMan::deactivate((CameraDirector *))
 0002:800A3894       CameraMan::movement((void))
 0002:800A3948       CameraManEvent::CameraManEvent((CameraHolder *,CameraParamChunkHolder *,char const *))
 0002:800A39FC       CameraManEvent::ChunkFIFOItem::ChunkFIFOItem((void))
 0002:800A3A18       CameraManEvent::calc((void))
 0002:800A3A84       CameraManEvent::start((long,char const *,CameraTargetArg const &,long))
 0002:800A3AE0       CameraManEvent::end((long,char const *,long))
 0002:800A3B68       CameraManEvent::isEventActive(const(long,char const *))
 0002:800A3C60       CameraManEvent::isInterpolationOff(const(void))
 0002:800A3CDC       CameraManEvent::isCollisionOff(const(void))
 0002:800A3D58       CameraManGame::isZeroFrameMoveOff(const(void))
 0002:800A3D7C       CameraManEvent::doesNextChunkHaveInterpolation(const(void))
 0002:800A3DFC       CameraManGame::isCorrectingErpPositionOff(const(void))
 0002:800A3E50       CameraManEvent::getAnimCameraFrame(const(long,char const *))
 0002:800A3EC0       CameraManEvent::pauseOnAnimCamera((long,char const *))
 0002:800A3F38       CameraManEvent::pauseOffAnimCamera((long,char const *))
 0002:800A3FB0       CameraManEvent::updateChunkFIFO((void))
 0002:800A400C       CameraManEvent::applyChunk((void))
 0002:800A4080       CameraManEvent::checkReset((CameraManEvent::ChunkFIFOItem *))
 0002:800A4104       CameraManEvent::changeCamera((void))
 0002:800A4174       CameraManEvent::setExtraParam((void))
 0002:800A4264       CameraManEvent::setVPanParam((void))
 0002:800A4344       CameraManEvent::resetCameraIfRequested((void))
 0002:800A439C       CameraManEvent::setSafePose((void))
 0002:800A474C       CameraManEvent::findChunk(const(long,char const *))
 0002:800A47B4       CameraManEvent::requestChunk((CameraParamChunkEvent *,CameraManEvent::EPriority,CameraTargetArg const &,long))
 0002:800A47E8       CameraManEvent::cleanChunkFIFO((CameraParamChunk *))
 0002:800A4868       CameraManEvent::isChunkFIFOEmpty(const(void))
 0002:800A48B0       CameraManEvent::sendStartInterpolateFrame((CameraParamChunkEvent *,long))
 0002:800A48F8       CameraManEvent::getInterpolateFrame(const(CameraParamChunkEvent *,long))
 0002:800A4928       SphereSelectorFunction::getSelectStartFrame((void))
 0002:800A4930       CameraManEvent::sendFinishInterpolateFrame((CameraParamChunkEvent *,long))
 0002:800A4984       CameraManEvent::searchPriority(const(CameraParamChunk *))
 0002:800A49C4       CameraManEvent::isInFIFO(const(CameraParamChunk *))
 0002:800A4A04       CameraManEvent::notifyActivate((void))
 0002:800A4A10       CameraSpiral::reset((void))
 0002:800A4A78       CameraManEvent::isAnimCameraEnd(const(long,char const *))
 0002:800A4B14       CameraManGame::CameraManGame((CameraHolder *,CameraParamChunkHolder *,char const *))
 0002:800A4BF0       CameraManGame::calc((void))
 0002:800A4C64       CameraManGame::notifyActivate((void))
 0002:800A4C70       CameraManGame::closeCreatingCameraChunk((void))
 0002:800A4CC4       CameraManGame::startStartPosCamera((bool))
 0002:800A4CE4       CameraManGame::endStartPosCamera((void))
 0002:800A4CF4       CameraManGame::zoomIn((void))
 0002:800A4DB0       CameraManGame::zoomOut((void))
 0002:800A4DBC       CameraManGame::isInterpolationOff(const(void))
 0002:800A4E38       CameraManGame::isCollisionOff(const(void))
 0002:800A4ED8       CameraManGame::isSubjectiveCameraOff(const(void))
 0002:800A4FA8       CameraManGame::isEnableToRoundLeft(const(void))
 0002:800A4FCC       CameraManGame::isEnableToRoundRight(const(void))
 0002:800A4FF0       CameraManGame::isEnableToReset(const(void))
 0002:800A5014       CameraManGame::selectCameraChunk((void))
 0002:800A50D0       CameraManGame::setChunk((CameraParamChunkID const &))
 0002:800A514C       CameraManGame::setNullCamera((void))
 0002:800A5220       CameraManGame::tryToReplaceChunkToDefault((CameraParamChunk *))
 0002:800A52C8       CameraManGame::requestResetIfNecessary((CameraParamChunk *))
 0002:800A5364       CameraManGame::isNecessaryToReset(const(CameraParamChunk *))
 0002:800A5408       CameraManGame::isCurrentChunkEnableEndInterp(const(void))
 0002:800A5490       CameraManGame::replaceCurrentChunkAndCamera((CameraParamChunk *))
 0002:800A54D8       CameraManGame::applyParameter((void))
 0002:800A56B4       CameraManGame::checkReset((void))
 0002:800A5724       CameraManGame::setSafePose((void))
 0002:800A5860       CameraManGame::keepAwayWatchPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:800A5968       CameraManGame::calcSafeUpVec((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A5B84       CameraManGame::createDefaultCamera((void))
 0002:800A5BE0       CameraManGame::createDefaultFooFighterCamera((void))
 0002:800A5CAC       CameraManGame::createDefaultWaterSurfaceCamera((void))
 0002:800A5E68       CameraManGame::createStartAnimCamera((void))
 0002:800A5F0C       CameraManGame::createZoomCamera((void))
 0002:800A5FF0       CameraManGame::checkStateShift((void))
 0002:800A604C       CameraManGame::tryShiftToGCapture((void))
 0002:800A6094       CameraManGame::tryShiftToSwimOrWaterSurface((void))
 0002:800A6118       CameraManGame::tryShiftToFooFighter((void))
 0002:800A6170       CameraManGame::updateNormal((void))
 0002:800A6274       CameraManGame::updateSwim((void))
 0002:800A62DC       CameraManGame::updateWaterSurface((void))
 0002:800A6344       CameraManGame::updateGCapture((void))
 0002:800A63F8       CameraManGame::updateFooFighter((void))
 0002:800A6460       CameraManGame::setCubeChunk((CubeCameraArea::ECategory))
 0002:800A64FC       CameraManGame::tryStartPosCamera((void))
 0002:800A65D4       CameraManGame::tryZoomCamera((void))
 0002:800A6648       CameraManGame::isZoomCamera(const(void))
 0002:800A6748       CameraManPause::CameraManPause((char const *))
 0002:800A67C4       CameraManPause::calc((void))
 0002:800A6B7C       CameraManPause::notifyActivate((void))
 0002:800A6D34       MR::clampBoth((float *,float,float))
 0002:800A6D58       LodCtrl::setDistanceToMiddle((float))
 0002:800A6D70       CameraManSubjective::CameraManSubjective((char const *))
 0002:800A6DDC       CameraManSubjective::calc((void))
 0002:800A6E24       CameraManSubjective::notifyActivate((void))
 0002:800A6EF4       CameraMedianPlanet::CameraMedianPlanet((char const *))
 0002:800A6F70       CameraMedianPlanet::reset((void))
 0002:800A6FF8       CameraMedianPlanet::calc((void))
 0002:800A7108       CameraMedianPlanet::getPrevFront((JGeometry::TVec3<f> *))
 0002:800A7154       CameraMedianPlanet::constrainDipAngle((JGeometry::TVec3<f> *))
 0002:800A727C       CameraMedianPlanet::makeTargetMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:800A7368       CameraMedianPlanet::peepMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:800A7474       CameraMedianPlanet::rotate33((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,float))
 0002:800A75DC       CameraMedianPlanet::constrainLength((JGeometry::TVec3<f> *))
 0002:800A76E8       CameraMedianPlanet::getMaxRate((void))
 0002:800A77AC       CameraMedianPlanet::getRegisterUpVec((JGeometry::TVec3<f> *))
 0002:800A7844       CameraMedianPlanet::calcWatchPos((JGeometry::TVec3<f> *))
 0002:800A7950       CameraMedianPlanet::calcUpVec((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A7AFC       CameraMedianTower::CameraMedianTower((char const *))
 0002:800A7B98       CameraMedianTower::reset((void))
 0002:800A7C04       CameraMedianTower::calc((void))
 0002:800A7FDC       CameraMedianTower::calcFovyPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A8138       CameraMedianTower::limitAngularVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A8390       CameraMedianTower::calcDistance((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:800A8530       CameraMedianTower::updateReset((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800A87E0       CameraMtxRegParallel::CameraMtxRegParallel((char const *))
 0002:800A8844       CameraMtxRegParallel::calcIdealPose((void))
 0002:800A88C4       CameraMtxRegParallel::calcIdealPose((void))
 0002:800A8A30       CameraObjParallel::CameraObjParallel((char const *))
 0002:800A8A84       CameraObjParallel::calc((void))
 0002:800A8D58       CameraParallel::CameraParallel((char const *))
 0002:800A8DC8       CameraParallel::reset((void))
 0002:800A8E30       CameraParallel::calc((void))
 0002:800A8ECC       J3DTevBlock16::getTevStageNum(const(void))
 0002:800A8EE4       CameraParallel::calcIdealPose((void))
 0002:800A9058       CameraParallel::calcRound((void))
 0002:800A9348       CameraGeneralParam::__as((CameraGeneralParam const &))
 0002:800A93D8       CameraParamChunk::CameraParamChunk((CameraHolder *,CameraParamChunkID const &))
 0002:800A9470       CameraParamChunk::getZoneID(const(void))
 0002:800A9480       CameraParamChunk::isOnNoReset(const(void))
 0002:800A948C       CameraParamChunk::isOnUseFovy(const(void))
 0002:800A9498       CameraParamChunk::isLOfsErpOff(const(void))
 0002:800A94A4       CameraParamChunk::isAntiBlurOff(const(void))
 0002:800A94B0       CameraParamChunk::isCollisionOff(const(void))
 0002:800A94BC       CameraParamChunk::isSubjectiveCameraOff(const(void))
 0002:800A94C8       CameraParamChunk::getVPanAxis(const(JGeometry::TVec3<f> *))
 0002:800A9538       CameraParamChunk::setCameraType((char const *,CameraHolder const *))
 0002:800A956C       CameraParamChunk::setUseFovy((bool))
 0002:800A9590       CameraParamChunk::setLOfsErpOff((bool))
 0002:800A95B4       CameraParamChunk::setCollisionOff((bool))
 0002:800A95D8       CameraParamChunk::copy((CameraParamChunk const *))
 0002:800A96B0       CameraParamChunk::load((DotCamReader *,CameraHolder *))
 0002:800A9AE0       CameraParamChunk::initiate((void))
 0002:800A9B24       CameraParamChunk::arrangeCamTypeName((ulong,char const **))
 0002:800A9C24       CameraParamChunkGame::CameraParamChunkGame((CameraHolder *,CameraParamChunkID const &))
 0002:800A9C78       CameraParamChunkGame::load((DotCamReader *,CameraHolder *))
 0002:800A9D48       CameraParamChunkGame::initiate((void))
 0002:800A9D98       CameraParamChunk::copy((CameraParamChunk const *))
 0002:800A9D9C       CameraParamChunkEvent::CameraParamChunkEvent((CameraHolder *,CameraParamChunkID const &))
 0002:800A9DF8       CameraParamChunkEvent::load((DotCamReader *,CameraHolder *))
 0002:800A9F14       CameraParamChunkEvent::initiate((void))
 0002:800A9F6C       CameraParamChunk::copy((CameraParamChunk const *))
 0002:800A9F70       JASPortCmd::execAllCommand((void))
 0002:800A9FA4       CameraGeneralParam::CameraGeneralParam((void))
 0002:800AA024       CameraParamChunk::ExParam::init((void))
 0002:800AA0D0       nullsub_2
 0002:800AA0EC       CameraParamChunkHolder::CameraParamChunkHolder((CameraHolder *,char const *))
 0002:800AA1B4       CameraParamChunkHolder::createChunk((CameraParamChunkID const &,JKRHeap *))
 0002:800AA2B8       CameraParamChunkHolder::getChunk((CameraParamChunkID const &))
 0002:800AA2D4       CameraParamChunkHolder::sort((void))
 0002:800AA3A0       CameraParamChunkHolder::loadCameraParameters((void))
 0002:800AA3F4       CameraParamChunkHolder::isNewAttribute((CameraParamChunkID const &))
 0002:800AA470       CameraParamChunkHolder::findChunk((CameraParamChunkID const &))
 0002:800AA57C       CameraParamChunkHolder::findChunk((long,char const *))
 0002:800AA604       CameraParamChunkHolder::loadFile((long))
 0002:800AA70C       CameraParamChunkHolder::arrangeChunk((CameraParamChunk *))
 0002:800AAB4C       CameraParamChunkID::CameraParamChunkID((void))
 0002:800AAB68       CameraParamChunkID::CameraParamChunkID((CameraParamChunkID const &))
 0002:800AABE8       CameraParamChunkID::__gt(const(CameraParamChunkID const &))
 0002:800AAC90       CameraParamChunkID::__eq(const(CameraParamChunkID const &))
 0002:800AAD40       CameraParamChunkID::equals(const(long,char const *))
 0002:800AADB0       CameraParamChunkID::createCubeID((long,ushort))
 0002:800AAE1C       CameraParamChunkID::createGroupID((long,char const *,ulong,ulong))
 0002:800AAEB0       CameraParamChunkID::createStartID((long,ushort))
 0002:800AB048       CameraParamString::__as((CameraParamString const &))
 0002:800AB07C       CameraParamString::copy((char const *))
 0002:800AB088       CameraParamString::copy((char const *))
 0002:800AB14C       CameraPoseParam::CameraPoseParam((void))
 0002:800AB1B4       CameraRaceFollow::CameraRaceFollow((char const *))
 0002:800AB218       CameraRaceFollow::reset((void))
 0002:800AB28C       CameraRaceFollow::calc((void))
 0002:800AB644       CameraRaceFollow::goRound((void))
 0002:800AB7DC       CameraRailDemo::reset((void))
 0002:800AB7F0       CameraRailDemo::calc((void))
 0002:800AB864       CameraRailDemo::setParam((long,long,long,long,float))
 0002:800AB91C       CameraRailDemo::calcLinear((void))
 0002:800ABA30       CameraRailDemo::calcEaseInOut((void))
 0002:800ABB54       CameraRailDemo::calcDamp((void))
 0002:800ABC68       CameraRailFollow::CameraRailFollow((char const *))
 0002:800ABCCC       CameraRailFollow::reset((void))
 0002:800ABD20       CameraRailFollow::calc((void))
 0002:800AC0B4       CameraRailFollow::setParam((long,long,float,float,float,long))
 0002:800AC1D8       CameraRailHolder::CameraRailHolder((char const *))
 0002:800AC4A4       OSCreateAlarm
 0002:800AC4B4       J3DGXColorS10::__as((_GXColorS10 const &))
 0002:800AC4C8       CameraRailHolder::getRider(const(long,long))
 0002:800AC52C       CameraRailHolder::find(const(long,long))
 0002:800AC5F0       CameraRailWatch::CameraRailWatch((char const *))
 0002:800AC650       CameraRailWatch::reset((void))
 0002:800AC708       CameraRailWatch::calc((void))
 0002:800ACB4C       CameraRailWatch::setParam((long,long,long,float,float,float))
 0002:800ACC70       CameraRegisterHolder::CameraRegisterHolder((char const *))
 0002:800ACCCC       CameraRegisterHolder::declareMtxReg((char const *,float *[4]))
 0002:800ACCFC       CameraRegisterHolder::getMtx(const(char const *))
 0002:800ACD4C       CameraRegisterHolder::declareVecReg((char const *,JGeometry::TVec3<f> const *))
 0002:800ACD7C       CameraRegisterHolder::getVec(const(char const *))
 0002:800ACDCC       CameraRegisterHolder::declareFloatReg((char const *,float const *))
 0002:800ACE04       CameraRegisterHolder::initMtx((void))
 0002:800ACE30       CameraRegisterHolder::initVec((void))
 0002:800ACE5C       CameraRegisterHolder::initFloat((void))
 0002:800ACE88       CameraRegisterHolder::initDummyRegister((void))
 0002:800ACF00       CameraRegisterHolder::searchName(const(char const *const *,ulong,char const *))
 0002:800AD0B4       CameraRotChecker::update((void))
 0002:800AD1B4       __sinit__CameraRotChecker_cpp
 0002:800AD1E0       CameraShakePatternSingly::CameraShakePatternSingly((float))
 0002:800AD20C       CameraShakePatternSingly::isEnd(const(void))
 0002:800AD224       GCaptureTarget::getTargetPosition((JGeometry::TVec3<f> *))
 0002:800AD234       CameraShakePatternSingly::start((void))
 0002:800AD244       CameraShakePatternSingly::update((void))
 0002:800AD338       CameraShakePatternSingly::setDirection((JGeometry::TVec2<f> const &))
 0002:800AD370       CameraShakePatternVerticalSin::CameraShakePatternVerticalSin((float,float))
 0002:800AD39C       CameraShakePatternVerticalSin::isEnd(const(void))
 0002:800AD3DC       CameraShakePatternVerticalSin::getOffset(const(JGeometry::TVec2<f> *))
 0002:800AD3EC       CameraShakePatternVerticalSin::start((void))
 0002:800AD3FC       CameraShakePatternVerticalSin::update((void))
 0002:800AD524       CameraShakeTask::CameraShakeTask((CameraShakePattern *))
 0002:800AD548       CameraShakeTask::start((ulong,ulong))
 0002:800AD55C       CameraShakeTask::startInfinity((ulong))
 0002:800AD568       MapObjActorInitInfo::setupHitSensor((void))
 0002:800AD574       CameraShakeTask::movement((void))
 0002:800AD5F0       CameraShakeTask::getOffset(const(JGeometry::TVec2<f> *))
 0002:800AD674       J3DIndBlockFull::getIndTexStageNum(const(void))
 0002:800AD67C       CameraShakeTask::startCommon((ulong))
 0002:800AD6A4       CameraShakeTask::updatePattern((void))
 0002:800AD72C       CameraShakeTask::updateInterval((void))
 0002:800AD784       CameraShaker::CameraShaker((char const *))
 0002:800AD7D8       CameraShaker::movement((void))
 0002:800AD81C       CameraShaker::shakeVertical((CameraShaker::ESinglyVerticalPower))
 0002:800AD868       CameraShaker::shakeInfinity((NameObj *,float,float))
 0002:800AD900       CameraShaker::stopShakingInfinity((NameObj *))
 0002:800AD95C       CameraShaker::createSinglyVerticalTask((void))
 0002:800AD9EC       CameraShaker::createSinglyHorizontalTask((void))
 0002:800ADAB8       CameraShaker::createInfinityTask((void))
 0002:800ADB4C       CameraShaker::updateSinglyVerticalTask((void))
 0002:800ADBA0       CameraShaker::updateSinglyHorizontalTask((void))
 0002:800ADBF4       CameraShaker::updateInfinityTask((void))
 0002:800ADC48       CameraShaker::setOffset((void))
 0002:800ADCB4       CameraShaker::addSinglyVerticalTaskOffset((JGeometry::TVec2<f> *))
 0002:800ADD40       CameraShaker::addSinglyHorizontalTaskOffset((JGeometry::TVec2<f> *))
 0002:800ADDCC       CameraShaker::addInfinityTaskOffset((JGeometry::TVec2<f> *))
 0002:800ADE58       CameraShaker::adjustOffsetToScreen((JGeometry::TVec2<f> *))
 0002:800ADEF8       CameraShaker::startInfinity((ulong,float,float))
 0002:800ADF74       CameraSlide::CameraSlide((char const *))
 0002:800ADFEC       CameraSlide::calc((void))
 0002:800AE3C0       CameraSpiral::CameraSpiral((char const *))
 0002:800AE434       CameraSpiral::calc((void))
 0002:800AE9C4       CameraSubjective::CameraSubjective((char const *))
 0002:800AEA1C       CameraSubjective::reset((void))
 0002:800AEB94       CameraSubjective::calc((void))
 0002:800AEF98       CameraTalk::CameraTalk((char const *))
 0002:800AF00C       CameraTalk::reset((void))
 0002:800AF05C       CameraTalk::calc((void))
 0002:800AF628       CameraTalk::setParam((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:800AF734       CameraTargetArg::CameraTargetArg((LiveActor const *))
 0002:800AF74C       CameraTargetArg::setTarget(const(void))
 0002:800AF85C       CameraTargetHolder::CameraTargetHolder((void))
 0002:800AF8DC       CameraTargetHolder::movement((void))
 0002:800AF900       CameraTargetHolder::set((LiveActor const *))
 0002:800AF914       CameraTargetHolder::set((MarioActor const *))
 0002:800AF928       CameraTargetHolder::isOnGround(const(void))
 0002:800AF9B8       CameraTargetHolder::isMoving(const(void))
 0002:800AFA3C       CameraTargetMtx::CameraTargetMtx((char const *))
 0002:800AFAE8       CameraTargetMtx::getUpVec(const(void))
 0002:800AFAF8       CameraTargetMtx::getSideVec(const(void))
 0002:800AFB00       CameraTargetMtx::getLastMove(const(void))
 0002:800AFB10       CameraTargetMtx::getGravityVector(const(void))
 0002:800AFB18       CameraTargetMtx::getCubeCameraArea(const(void))
 0002:800AFB20       CameraTargetMtx::invalidateLastMove((void))
 0002:800AFBF4       CameraTargetObj::disableCameraWall((void))
 0002:800AFC00       ImageEffectDirector::setAuto((void))
 0002:800AFC38       CameraTargetMtx::movement((void))
 0002:800AFD50       CameraTargetObj::CameraTargetObj((char const *))
 0002:800AFD94       CameraTargetActor::CameraTargetActor((char const *))
 0002:800AFE08       CameraTargetActor::movement((void))
 0002:800AFF14       CameraTargetPlayer::getUpVec(const(void))
 0002:800AFF1C       MR::getMessageBalloonFollowOffset((TalkMessageCtrl const *))
 0002:800AFF24       CameraTargetActor::getLastMove(const(void))
 0002:800AFF3C       CameraTargetActor::getGravityVector(const(void))
 0002:800AFFA8       CameraTargetPlayer::CameraTargetPlayer((char const *))
 0002:800B001C       CameraTargetPlayer::movement((void))
 0002:800B01DC       CameraTargetPlayer::getGroundPos(const(void))
 0002:800B01E4       J3DPEBlockFull::getZMode((void))
 0002:800B01EC       CameraTargetPlayer::getLastMove(const(void))
 0002:800B0264       j_MarioAccess::isInWaterMode((void))
 0002:800B0268       j_MarioAccess::isOnWaterSurface((void))
 0002:800B026C       j_MarioAccess::isFlying((void))
 0002:800B02A8       CameraTargetDemoActor::CameraTargetDemoActor((float *[4],char const *))
 0002:800B0340       CameraTargetDemoActor::setTargetMtx((float *[4]))
 0002:800B04B4       __sinit__CameraTargetObj_cpp
 0002:800B0538       JGeometry::TQuat4<f>::setRotate((JGeometry::TVec3<f> const &,float))
 0002:800B05AC       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::identity33((void))
 0002:800B05DC       CameraTower::CameraTower((char const *))
 0002:800B0674       CameraTower::reset((void))
 0002:800B0810       CameraTower::calc((void))
 0002:800B0AA8       CameraTower::calcIdealPos((void))
 0002:800B0D3C       CameraTower::arrangeRoundingPose((void))
 0002:800B0E94       CameraTower::arrangeHorizontalPose((void))
 0002:800B1220       CameraTower::arrangeRound((void))
 0002:800B12D0       __sinit__CameraTower_cpp
 0002:800B1360       CameraTowerBase::CameraTowerBase((char const *))
 0002:800B13C8       CameraTowerBase::reset((void))
 0002:800B1488       CameraTowerBase::calc((void))
 0002:800B1540       CameraTowerBase::calcIdealPoseOfTowerBase((void))
 0002:800B1858       CameraTowerPos::CameraTowerPos((char const *))
 0002:800B18E0       CameraTowerPos::calc((void))
 0002:800B1918       CameraTowerPos::calcIdealPose((bool))
 0002:800B1CE8       CameraTowerPos::arrangeHorizontalPose((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> &))
 0002:800B1E48       CameraTowerPos::arrangeWatchPos((JGeometry::TVec3<f> &,JGeometry::TVec3<f> const &))
 0002:800B20F4       HeatHazeEffect::HeatHazeEffect((char const *))
 0002:800B2180       CameraTripodBoss::arrangeRound((void))
 0002:800B23E0       CameraTripodBossJoint::CameraTripodBossJoint((char const *))
 0002:800B2440       CameraTripodBossJoint::reset((void))
 0002:800B2524       CameraTripodBossJoint::calcIdealPose((void))
 0002:800B28CC       CameraTripodPlanet::CameraTripodPlanet((char const *))
 0002:800B293C       CameraTripodPlanet::calc((void))
 0002:800B2D94       CameraTrundle::CameraTrundle((char const *))
 0002:800B2E08       CameraTrundle::calc((void))
 0002:800B3154       CameraTwistedPassage::CameraTwistedPassage((char const *))
 0002:800B31AC       CameraTwistedPassage::reset((void))
 0002:800B324C       CameraTwistedPassage::calc((void))
 0002:800B349C       CameraTwistedPassage::setParam((long,long,float,float))
 0002:800B3554       CameraTwistedPassage::initStartPos((void))
 0002:800B35D4       CameraTwistedPassage::calcNearestCoord(const(JGeometry::TVec3<f> const &))
 0002:800B36A4       CameraTwistedPassage::calcNearestCoordBetweenTwoRailCoord(const(float,float,JGeometry::TVec3<f> const &))
 0002:800B37D8       CameraViewInterpolator::CameraViewInterpolator((void))
 0002:800B38F4       CameraViewInterpolator::updateCameraMtx((float *[4],JGeometry::TVec3<f> const &,CameraTargetObj const *,float))
 0002:800B3A2C       CameraViewInterpolator::setInterpolation((ulong))
 0002:800B3A7C       CameraViewInterpolator::isInterpolating(const(void))
 0002:800B3AA4       CameraViewInterpolator::isInterpolatingNearlyEnd(const(void))
 0002:800B3AE4       CameraViewInterpolator::lookAtCenter((void))
 0002:800B3BA8       CameraViewInterpolator::calcCollision((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800B3E40       CameraViewInterpolator::calcBinder((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800B4024       CameraViewInterpolator::reduceOscillation((void))
 0002:800B4178       CameraViewInterpolator::updateCalcState((CameraTargetObj const *))
 0002:800B4278       CameraViewInterpolator::interpolateCameraSwitching((float *[4],JGeometry::TVec3<f> const &,float))
 0002:800B44CC       CameraViewInterpolator::checkNearlyEnd((float *[4]))
 0002:800B4604       CameraViewInterpolator::translateByRepulsion((void))
 0002:800B469C       CameraWaterFollow::CameraWaterFollow((char const *))
 0002:800B4724       CameraWaterFollow::reset((void))
 0002:800B47AC       CameraWaterFollow::calc((void))
 0002:800B5044       CameraWaterPlanet::calc((void))
 0002:800B5498       CameraWaterPlanetBoss::CameraWaterPlanetBoss((char const *))
 0002:800B5540       CameraWaterPlanetBoss::reset((void))
 0002:800B55C8       CameraWaterPlanetBoss::calc((void))
 0002:800B5E54       CameraWonderPlanet::CameraWonderPlanet((char const *))
 0002:800B5EB4       CameraWonderPlanet::reset((void))
 0002:800B5FCC       CameraWonderPlanet::calc((void))
 0002:800B6324       CameraWonderPlanet::updateCameraReset((void))
 0002:800B6338       CameraWonderPlanet::rotateCamera((void))
 0002:800B6358       CameraWonderPlanet::checkReset((void))
 0002:800B65D4       DotCamReaderInBin::DotCamReaderInBin((void const *))
 0002:800B6644       DotCamReaderInBin::~DotCamReaderInBin((void))
 0002:800B66C0       DotCamReaderInBin::hasMoreChunk(const(void))
 0002:800B6778       DotCamReaderInBin::nextToChunk((void))
 0002:800B67CC       DotCamReaderInBin::getValueString((char const *,char const **))
 0002:800B6878       DotCamReaderInBin::init((void const *))
 0002:800B6908       DotCamReaderInBin::getValueVec((char const *,JGeometry::TVec3<f> *))
 0002:800B69F8       GameCameraCreator::GameCameraCreator((CameraParamChunkHolder *))
 0002:800B6A54       GameCameraCreator::registerCameraCode((ulong))
 0002:800B6A6C       GameCameraCreator::termCameraCodeCollection((void))
 0002:800B6B10       GameCameraCreator::scanStartPos((void))
 0002:800B6BA8       GameCameraCreator::scanArea((void))
 0002:800B6C68       OnlyCamera::OnlyCamera((char const *))
 0002:800B6D00       OnlyCamera::calcPose((CameraMan *))
 0002:800B6D74       OnlyCamera::calcStartPose((CameraMan *))
 0002:800B6FC4       OnlyCamera::calcSafePose((CameraMan *))
 0002:800B7250       OnlyCamera::moveToIdealPosition((JGeometry::TVec3<f> *))
 0002:800B7434       AstroDomeDemoStarter::AstroDomeDemoStarter((char const *))
 0002:800B7490       AstroDomeDemoStarter::init((JMapInfoIter const &))
 0002:800B7634       AstroDomeDemoStarter::startJumpOut((void))
 0002:800B76DC       AstroDomeDemoStarter::movePlayer((void))
 0002:800B78A0       AstroDomeDemoStarter::exeSpinDriverAppear((void))
 0002:800B7A30       AstroDomeDemoStarter::exeSpinDriverStart((void))
 0002:800B7B0C       AstroDomeDemoStarter::exeSpinDriverShoot((void))
 0002:800B7C5C       AstroDomeDemoStarter::exeJumpOut((void))
 0002:800B7D20       AstroDomeDemoStarter::exeWhiteOut((void))
 0002:800B7E38       AstroDomeDemoStarter::getBaseMtx(const(void))
 0002:800B7F34       MR::calcOpenedAstroDomeNum((void))
 0002:800B7F4C       AstroDemoFunction::getActiveGrandStarReturnDemoIndex((void))
 0002:800B7FB4       AstroDemoFunction::tryRegisterDemo((LiveActor *,char const *,JMapInfoIter const &))
 0002:800B8020       AstroDemoFunction::tryRegisterAstroDemoAll((LiveActor *,JMapInfoIter const &))
 0002:800B83E0       AstroDemoFunction::tryRegisterGrandStarReturn((LiveActor *,JMapInfoIter const &))
 0002:800B846C       AstroDemoFunction::tryRegisterGrandStarReturnWithFunction((LiveActor *,JMapInfoIter const &,MR::FunctorBase const &))
 0002:800B856C       AstroDemoFunction::tryRegisterSimpleCastIfAstroGalaxy((LiveActor *))
 0002:800B85BC       AstroDemoFunction::tryRegisterDemoForTico((LiveActor *,JMapInfoIter const &))
 0002:800B8690       AstroDemoFunction::tryRegisterDemoForLuigiAndKinopio((LiveActor *,JMapInfoIter const &))
 0002:800B8778       JMapInfo::getValue<PCc>(bool const const(int,char const *,char const **))
 0002:800B8840       @unnamed@DemoActionKeeper_cpp@::findTalkMessageCtrl((LiveActor *))
 0002:800B8884       @unnamed@DemoActionKeeper_cpp@::setTalkAnimCtrlInterpole((LiveActor *,long))
 0002:800B88DC       DemoActionInfo::DemoActionInfo((void))
 0002:800B89B0       WaterAreaHolder::entryOceanSphere((OceanSphere *))
 0002:800B89D0       DemoActionInfo::registerFunctor((LiveActor const *,MR::FunctorBase const &))
 0002:800B8A50       DemoActionInfo::registerNerve((LiveActor const *,Nerve const *))
 0002:800B8A8C       DemoActionInfo::executeActionFirst(const(void))
 0002:800B8C84       DemoActionInfo::executeActionLast(const(void))
 0002:800B8D0C       DemoActionKeeper::initCast((LiveActor *,JMapInfoIter const &))
 0002:800B8DA4       DemoActionKeeper::registerNerve((LiveActor const *,Nerve const *,char const *))
 0002:800B8F44       DemoActionKeeper::update((void))
 0002:800B8FF4       DemoActionKeeper::isRegisteredDemoActionNerve(const(LiveActor const *))
 0002:800B8FFC       DemoActionKeeper::isRegisteredDemoAction(const(LiveActor const *,long))
 0002:800B906C       DemoActionKeeper::DemoActionKeeper((DemoExecutor const *))
 0002:800B9194       DemoCameraFunction::isCameraTargetMario((DemoCameraInfo const *))
 0002:800B91E4       DemoCameraFunction::setStringNullIfEmpty((char const **))
 0002:800B921C       DemoCameraFunction::makeAnimCameraName((char *,ulong,DemoCameraInfo const *))
 0002:800B9224       DemoCameraInfo::DemoCameraInfo((void))
 0002:800B9250       JAUDynamicSeqDataBlocks::setSeqDataArchive((JKRArchive *))
 0002:800B9258       DemoCameraKeeper::initCast((LiveActor *,JMapInfoIter const &))
 0002:800B92F4       DemoCameraKeeper::update((void))
 0002:800B9370       DemoCameraKeeper::end((void))
 0002:800B93A4       DemoCameraKeeper::initActorCamera((DemoCameraInfo *,JMapInfoIter const &))
 0002:800B9444       DemoCameraKeeper::executeType((DemoCameraInfo const *))
 0002:800B94CC       DemoCameraKeeper::executeFirst((DemoCameraInfo const *))
 0002:800B958C       DemoCameraKeeper::executeLast((DemoCameraInfo const *))
 0002:800B95E4       DemoCameraKeeper::endCurrentCamera((void))
 0002:800B963C       DemoCameraKeeper::DemoCameraKeeper((DemoExecutor *,JMapInfoIter const &))
 0002:800B9830       PurpleCoinStarter::PurpleCoinStarter((char const *))
 0002:800B9878       DemoCastGroup::tryRegisterDemoActor((LiveActor *,JMapInfoIter const &,JMapIdInfo const &))
 0002:800B98F0       DemoCastGroup::tryRegisterDemoActor((LiveActor *,char const *,JMapInfoIter const &))
 0002:800B99C4       DemoCastGroup::init((JMapInfoIter const &))
 0002:800B9A68       JMapIdInfo::__eq(const(JMapIdInfo const &))
 0002:800B9A98       BigFanHolder::BigFanHolder((void))
 0002:800B9AE0       DemoCastGroupHolder::tryRegisterDemoActor(const(LiveActor *,JMapInfoIter const &,JMapIdInfo const &))
 0002:800B9B74       DemoCastGroupHolder::tryRegisterDemoActor(const(LiveActor *,char const *,JMapInfoIter const &))
 0002:800B9C18       DemoCastGroupHolder::findCastGroup(const(char const *))
 0002:800B9CEC       DemoCastSubGroup::DemoCastSubGroup((char const *))
 0002:800B9D30       GameSequenceFunction::reserveUserName((wchar_t const *))
 0002:800B9D68       DemoCastSubGroup::tryRegisterDemoActor((LiveActor *,JMapInfoIter const &,JMapIdInfo const &))
 0002:800B9E54       DemoCtrlBase::DemoCtrlBase((LiveActor *,char const *))
 0002:800B9E74       DemoCtrlBase::init((JMapInfoIter const &))
 0002:800B9E84       DemoCtrlBase::end((void))
 0002:800B9F00       DemoCtrlBase::update((void))
 0002:800B9FA4       DemoCtrlBase::isDone(const(void))
 0002:800B9FB0       DemoCtrlBase::isExistEndFrame(const(void))
 0002:800B9FE8       DemoCtrlBase::tryStart((void))
 0002:800BA0C4       DemoDirector::DemoDirector((char const *))
 0002:800BA1CC       DemoDirector::movement((void))
 0002:800BA258       DemoDirector::startDemo((NameObj *,char const *,bool,long))
 0002:800BA25C       DemoDirector::startDemoTimeKeep((NameObj *,char const *,long,bool,char const *))
 0002:800BA2C0       DemoDirector::startDemoExecutor((NameObj *,char const *,long,char const *))
 0002:800BA33C       DemoDirector::getCurrentDemoName(const(void))
 0002:800BA358       DemoDirector::endDemo((NameObj *,char const *,bool))
 0002:800BA438       DemoDirector::isExistTimeKeepDemo(const(char const *))
 0002:800BA4AC       DemoDirector::registerDemoCast((LiveActor *,JMapInfoIter const &))
 0002:800BA570       DemoDirector::registerDemoCast((LiveActor *,char const *,JMapInfoIter const &))
 0002:800BA5F0       DemoDirector::tryStartDemoRequested((void))
 0002:800BA650       DemoDirector::startDemo((NameObj *,char const *,bool,long))
 0002:800BA690       DemoDirector::startDemoRequested((void))
 0002:800BA700       DemoDirector::doDemoEndRequest((void))
 0002:800BA7CC       DemoExecutor::DemoExecutor((char const *))
 0002:800BA854       DemoExecutor::init((JMapInfoIter const &))
 0002:800BA9D8       DemoExecutor::registerDemoActor((LiveActor *,JMapInfoIter const &))
 0002:800BAA74       DemoExecutor::movement((void))
 0002:800BAB9C       DemoExecutor::start((NameObj *,char const *,long))
 0002:800BACF8       DemoExecutor::startPart((NameObj *,char const *,char const *,long))
 0002:800BADA8       DemoExecutor::tryStartProperDemoSystem((void))
 0002:800BADD0       DemoExecutor::startDemoSystemPart((char const *,long))
 0002:800BAEC8       DemoExecutor::tryStartDemoSystemPart((char const *,long))
 0002:800BAFB0       DemoExecutor::tryStartProperDemoSystemPart((char const *))
 0002:800BAFC4       J3DTevBlockNull::indexToPtr((void))
 0002:800BAFD4       DemoExecutor::pause((void))
 0002:800BAFD8       MarioHang::forceDrop((void))
 0002:800BAFE4       DemoExecutor::resume((void))
 0002:800BAFF4       DemoExecutor::addTalkAnimCtrl((DemoTalkAnimCtrl *))
 0002:800BB010       DemoExecutor::addTalkMessageCtrl((LiveActor *,TalkMessageCtrl *))
 0002:800BB030       DemoExecutor::findTalkMessageCtrl(const(LiveActor const *))
 0002:800BB070       DemoExecutor::setTalkMessageCtrl((LiveActor const *,TalkMessageCtrl *))
 0002:800BB0AC       DemoExecutor::end((void))
 0002:800BB1F4       std::for_each<PP15DrawBufferGroup,Q23std30mem_fun_t<v,15DrawBufferGroup>>(std::mem_fun_t<v,15DrawBufferGroup> (DrawBufferGroup **,DrawBufferGroup **,std::mem_fun_t<v,15DrawBufferGroup>))
 0002:800BB268       std::for_each<PP12MultiEmitter,Q23std51binder2nd<Q23std30mem_fun1_t<v,12MultiEmitter,l>,l>>(std::binder2nd<Q23std30mem_fun1_t<v,12MultiEmitter,l>,l> (MultiEmitter **,MultiEmitter **,std::binder2nd<Q23std30mem_fun1_t<v,12MultiEmitter,l>,l>))
 0002:800BB2E8       MR::Vector<Q22MR22FixedArray<P6Kameck,2>>::push_back((Kameck *const &))
 0002:800BB408       GCapture::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800BB45C       DemoExecutorFunction::isExistDemoPartMain((DemoExecutor const *,char const *))
 0002:800BB4D4       DemoExecutorFunction::isExistDemoPartSub((DemoExecutor const *,char const *))
 0002:800BB54C       DemoExecutorFunction::isRegisteredDemoCast((DemoExecutor const *,LiveActor const *))
 0002:800BB5D8       DemoExecutorFunction::tryCreateDemoTalkAnimCtrlForActor((DemoExecutor *,LiveActor *,char const *,char const *))
 0002:800BB658       DemoExecutorFunction::tryCreateDemoTalkAnimCtrlForScene((DemoExecutor *,LiveActor *,JMapInfoIter const &,char const *,char const *,long,long))
 0002:800BB6F4       DemoExecutor::addTalkMessageCtrl((LiveActor *,TalkMessageCtrl *))
 0002:800BB6F8       DemoExecutor::setTalkMessageCtrl((LiveActor const *,TalkMessageCtrl *))
 0002:800BB6FC       DemoExecutor::pause((void))
 0002:800BB700       DemoExecutor::resume((void))
 0002:800BB704       DemoExecutorFunction::isPauseTimeKeepDemo((DemoExecutor const *))
 0002:800BB708       MR::isDead((LayoutActor const *))
 0002:800BB710       DemoFunction::getDemoDirector((void))
 0002:800BB738       DemoFunction::getDemoCastSubGroupHolder((void))
 0002:800BB764       DemoFunction::registerDemoSimpleCastAllFunction((NameObj *))
 0002:800BB818       MR::startFunctionAsyncExecute((MR::FunctorBase const &,int,char const *))
 0002:800BB864       DemoFunction::registerDemoActionFunctorFunction((LiveActor const *,MR::FunctorBase const &,char const *,char const *))
 0002:800BB900       DemoFunction::tryStartDemoRegistered((LiveActor *,char const *))
 0002:800BB954       DemoFunction::tryStartDemoRegisteredMarioPuppetable((LiveActor *,char const *))
 0002:800BB9B4       DemoFunction::registerDemoExecutor((DemoExecutor *))
 0002:800BB9F4       DemoFunction::findDemoExecutor((char const *))
 0002:800BBA40       DemoFunction::findDemoExecutor((LiveActor const *))
 0002:800BBAD0       DemoFunction::findDemoExecutorActive((LiveActor const *))
 0002:800BBB70       DemoExecutorFunction::isRegisteredDemoCast((DemoExecutor const *,LiveActor const *))
 0002:800BBB74       GCapture::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800BBB78       @unnamed@DemoFunction_cpp@::getCurrentTimeKeeper((void))
 0002:800BBBA8       @unnamed@DemoFunction_cpp@::getCurrentSubPartKeeper((void))
 0002:800BBBD8       @unnamed@DemoFunction_cpp@::isCurrentMainPart((char const *))
 0002:800BBC18       DemoFunction::isDemoPartActiveFunction((char const *))
 0002:800BBC78       DemoFunction::getDemoPartStepFunction((char const *))
 0002:800BBCC4       DemoFunction::getDemoPartTotalStepFunction((char const *))
 0002:800BBD14       DemoFunction::isDemoLastPartLastStep((void))
 0002:800BBD7C       DemoFunction::isDemoSuspendOrLastPartLastStep((void))
 0002:800BBDF8       DemoFunction::getCurrentDemoPartNameMain((char const *))
 0002:800BBE44       DemoFunction::isTargetDemoCast((LiveActor *,JMapInfoIter const &,char const *,long))
 0002:800BBF2C       DemoFunction::isRegisteredDemoActionFunctor((LiveActor const *,char const *))
 0002:800BBF98       DemoFunction::requestDemoCastMovementOn((LiveActor *))
 0002:800BBFD4       DemoFunction::isRegisteredDemoCast((LiveActor const *,char const *))
 0002:800BC140       DemoFunction::tryCreateDemoTalkAnimCtrlForActorDirect((LiveActor *,char const *,char const *,char const *))
 0002:800BC190       DemoFunction::tryCreateDemoTalkAnimCtrlForScene((LiveActor *,JMapInfoIter const &,char const *,char const *,long,long))
 0002:800BC1F4       DemoFunction::tryCreateDemoTalkAnimCtrlForSceneDirect((LiveActor *,char const *,JMapInfoIter const &,char const *,char const *,long,long))
 0002:800BC2A0       MR::tryRumblePad((void const *,char const *,long))
 0002:800BC330       LightFunction::loadLightArchive((void))
 0002:800BC36C       DemoFunction::createSheetParser((DemoExecutor const *,char const *,JMapInfo **))
 0002:800BC404       KeySwitch::KeySwitch((char const *))
 0002:800BC450       DemoKoopaJrShip::init((JMapInfoIter const &))
 0002:800BC518       DemoKoopaJrShip::appear((void))
 0002:800BC574       DemoKoopaJrShip::exeAppear((void))
 0002:800BC690       DemoKoopaJrShip::exeTalk((void))
 0002:800BC728       DemoKoopaJrShip::exeFlyAway((void))
 0002:800BC7F4       DemoKoopaJrShip::control((void))
 0002:800BC8B0       DemoKoopaJrShip::initAnimID((JMapInfoIter const &))
 0002:800BC958       DemoKoopaJrShip::createKoopaJrObj((JMapInfoIter const &))
 0002:800BC9D4       SIRefreshSamplingRate
 0002:800BC9DC       DemoKoopaJrShip::startEntryAnim((void))
 0002:800BCA74       DemoKoopaJrShip::startLeaveAnim((void))
 0002:800BCC34       DemoPadRumbler::DemoPadRumbler((char const *))
 0002:800BCD18       DemoPadRumbler::update((long))
 0002:800BCD90       @unnamed@DemoParamCommonDataTable_cpp@::getParam((char const *))
 0002:800BCE04       MR::Demo::getCameraShakeIntensity((char const *))
 0002:800BCE28       MR::Demo::getCameraShakeSpeed((char const *))
 0002:800BCE4C       MR::getStarPointerViewMtx((void))
 0002:800BCE70       MR::Demo::isExistCameraShaking((char const *))
 0002:800BCEA4       MR::Demo::isExistPadRumble((char const *))
 0002:800BCEDC       DemoPlayerKeeper::DemoPlayerKeeper((DemoExecutor const *))
 0002:800BCFE0       DemoPlayerKeeper::update((void))
 0002:800BD054       DemoPlayerKeeper::isExistPosName(const(void))
 0002:800BD094       DemoPlayerKeeper::executePlayer(const(DemoPlayerInfo const *))
 0002:800BD0E0       DemoPositionController::DemoPositionController((char const *,JMapInfoIter const &))
 0002:800BD1A4       DemoPositionController::initAnimCamera((char const *))
 0002:800BD1B0       DemoPositionController::startDemo((char const *))
 0002:800BD21C       DemoPositionController::endDemo((char const *))
 0002:800BD2C8       DemoSimpleCastHolder::DemoSimpleCastHolder((long,long,long))
 0002:800BD37C       DemoSimpleCastHolder::registerActor((LayoutActor *))
 0002:800BD398       DemoSimpleCastHolder::registerNameObj((NameObj *))
 0002:800BD3B4       DemoSimpleCastHolder::movementOnAllCasts((void))
 0002:800BD4C8       DemoSoundInfo::DemoSoundInfo((void))
 0002:800BD4EC       DemoSoundKeeper::DemoSoundKeeper((DemoExecutor *))
 0002:800BD634       DemoSoundKeeper::update((void))
 0002:800BD6A0       DemoSoundKeeper::executeType((DemoSoundInfo const *))
 0002:800BD788       DemoSoundKeeper::isPermitBgmChange((void))
 0002:800BD7E4       MR::Vector<Q22MR32AssignableArray<13DemoSoundInfo>>::push_back((DemoSoundInfo const &))
 0002:800BD82C       DemoStartInfo::DemoStartInfo((void))
 0002:800BD86C       DemoStartInfo::__as((DemoStartInfo const &))
 0002:800BD908       DemoStartRequestHolder::pushRequest((NameObj *,char const *))
 0002:800BDA48       DemoStartRequestHolder::popRequest((void))
 0002:800BDAEC       DemoStartRequestHolder::isExistRequest(const(void))
 0002:800BDAFC       DemoStartRequestHolder::getCurrentInfo(const(void))
 0002:800BDB1C       MR::getResTIMG((LiveActor const *,int))
 0002:800BDB50       DemoStartRequestHolder::find(const(LiveActor const *,char const *))
 0002:800BDBD8       DemoStartRequestHolder::find(const(LayoutActor const *,char const *))
 0002:800BDC60       DemoStartRequestHolder::find(const(NerveExecutor const *,char const *))
 0002:800BDCE8       DemoStartRequestHolder::find(const(NameObj const *,char const *))
 0002:800BDD70       DemoStartRequestHolder::findEmpty(const(void))
 0002:800BDDF4       DemoStartRequestHolder::DemoStartRequestHolder((void))
 0002:800BDEAC       MR::FixedRingBuffer<PC13DemoStartInfo,16>::iterator::iterator((DemoStartInfo const **,DemoStartInfo const **))
 0002:800BDEC0       MR::FixedRingBuffer<PC13DemoStartInfo,16>::push_back((DemoStartInfo const *const &))
 0002:800BDF10       MR::FixedRingBuffer<PC13DemoStartInfo,16>::iterator::__pp((void))
 0002:800BDF34       DemoStartRequestUtil::startDemoSystem((NameObj *,char const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType,char const *))
 0002:800BE0D4       DemoStartRequestUtil::requestStartDemo((LiveActor *,char const *,Nerve const *,Nerve const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE204       DemoStartRequestUtil::requestStartDemo((LayoutActor *,char const *,Nerve const *,Nerve const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE334       DemoStartRequestUtil::requestStartDemo((NerveExecutor *,LiveActor *,char const *,Nerve const *,Nerve const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE450       DemoStartRequestUtil::requestStartTimeKeepDemo((LiveActor *,char const *,char const *,Nerve const *,Nerve const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE568       DemoStartRequestUtil::requestStartTimeKeepDemo((NerveExecutor *,LiveActor *,char const *,char const *,Nerve const *,Nerve const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE688       DemoStartRequestUtil::requestStartTimeKeepDemo((NameObj *,char const *,char const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE764       DemoStartRequestUtil::startDemo((DemoStartInfo const *))
 0002:800BE8F0       DemoStartRequestUtil::startDemo((DemoStartRequestHolder *))
 0002:800BE930       DemoStartRequestUtil::popStartDemoRequest((DemoStartRequestHolder *))
 0002:800BE978       @unnamed@DemoStartRequestUtil_cpp@::setDemoStartInfoCommon((DemoStartInfo *,char const *,char const *,long,DemoStartInfo::DemoType,DemoStartInfo::CinemaFrameType,DemoStartInfo::StarPointerType,DemoStartInfo::DeleteEffectType))
 0002:800BE9D4       DemoStartRequestHolder::isExistRequest(const(void))
 0002:800BE9D8       DemoStartRequestUtil::getDemoStarter((DemoStartInfo const &))
 0002:800BEA30       DemoStartRequestUtil::setNerveToStarter((DemoStartInfo const *))
 0002:800BEA7C       DemoStartRequestUtil::requestMovementOn((DemoStartInfo const *))
 0002:800BEAE8       DemoStartRequestUtil::isEmpty((DemoStartInfo const *))
 0002:800BEB34       DemoStartRequestUtil::startDemoExecutorIfExist((DemoStartInfo const &))
 0002:800BEBC0       DemoSubPartKeeper::DemoSubPartKeeper((DemoExecutor const *))
 0002:800BECC4       DemoSubPartInfo::DemoSubPartInfo((void))
 0002:800BECE8       DemoSubPartKeeper::update((void))
 0002:800BED7C       DemoSubPartKeeper::end((void))
 0002:800BEDB0       DemoSubPartKeeper::isDemoPartActive(const(char const *))
 0002:800BEDF0       DemoSubPartKeeper::getDemoPartStep(const(char const *))
 0002:800BEE40       DemoSubPartKeeper::findSubPart(const(char const *))
 0002:800BEEBC       DemoTalkAnimCtrl::DemoTalkAnimCtrl((LiveActor *,char const *,char const *))
 0002:800BEF84       DemoTalkAnimCtrl::initForScene((char const *,char const *,JMapInfoIter const &))
 0002:800BF054       DemoTalkAnimCtrl::updateCamera((void))
 0002:800BF0CC       DemoTalkAnimCtrl::createBckCtrlData(const(BckCtrlData *,long))
 0002:800BF1C8       DemoTalkAnimCtrl::initForActor((char const *))
 0002:800BF28C       DemoTalkAnimCtrl::startDemo((void))
 0002:800BF2C8       DemoTalkAnimCtrl::updateDemo((void))
 0002:800BF490       DemoTalkAnimCtrl::startAnim((void))
 0002:800BF548       DemoTalkAnimCtrl::startCamera((void))
 0002:800BF564       DemoTalkAnimCtrl::updateAnim((BckCtrlData const &))
 0002:800BF6E4       DemoTalkAnimCtrl::updatePause((void))
 0002:800BF770       DemoTalkAnimCtrl::endCamera((void))
 0002:800BF78C       DemoTalkAnimCtrl::setupStartDemoPart((char const *))
 0002:800BF828       DemoTimeKeeper::DemoTimeKeeper((DemoExecutor const *))
 0002:800BF948       DemoTimePartInfo::DemoTimePartInfo((void))
 0002:800BF960       DemoTimeKeeper::start((void))
 0002:800BF97C       DemoTimeKeeper::update((void))
 0002:800BFA1C       DemoTimeKeeper::end((void))
 0002:800BFA38       DemoTimeKeeper::isDemoEnd(const(void))
 0002:800BFAA4       DemoTimeKeeper::setCurrentPart((char const *))
 0002:800BFAA8       DemoTimeKeeper::isExistSuspendFlagCurrentPart(const(void))
 0002:800BFAB4       DemoTimeKeeper::isPartLast(const(void))
 0002:800BFAE4       DemoTimeKeeper::setCurrentPart((char const *))
 0002:800BFB6C       DemoTimeKeeper::isCurrentDemoPartLastStep(const(void))
 0002:800BFB90       DemoWipeInfo::DemoWipeInfo((void))
 0002:800BFBB4       DemoWipeKeeper::DemoWipeKeeper((DemoExecutor *))
 0002:800BFCEC       DemoWipeKeeper::update((void))
 0002:800BFD58       DemoWipeKeeper::executeType((DemoWipeInfo const *))
 0002:800BFE04       MR::Vector<Q22MR31AssignableArray<12DemoWipeInfo>>::push_back((DemoWipeInfo const &))
 0002:800BFE48       JGeometry::TVec3<f>::add((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800BFE6C       GrandStarReturnDemoStarter::GrandStarReturnDemoStarter((char const *))
 0002:800BFEF8       GrandStarReturnDemoStarter::init((JMapInfoIter const &))
 0002:800C00CC       GrandStarReturnDemoStarter::appear((void))
 0002:800C0144       GrandStarReturnDemoStarter::control((void))
 0002:800C01E0       GrandStarReturnDemoStarter::calcOffsetStarToCore(const(JGeometry::TVec3<f> *))
 0002:800C025C       GrandStarReturnDemoStarter::updateRailMoveEndDir((void))
 0002:800C02B0       GrandStarReturnDemoStarter::emitEffectRush((void))
 0002:800C0330       GrandStarReturnDemoStarter::updateRushStarPos((JGeometry::TVec3<f> const &,long))
 0002:800C03C0       GrandStarReturnDemoStarter::tryStartStageResult((char const *))
 0002:800C0434       GrandStarReturnDemoStarter::exeMove((void))
 0002:800C055C       GrandStarReturnDemoStarter::exeFlyWait((void))
 0002:800C0604       GrandStarReturnDemoStarter::exeRushToCore((void))
 0002:800C070C       GrandStarReturnDemoStarter::exeRevival((void))
 0002:800C08A0       GrandStarReturnDemoStarter::exeFadeOut((void))
 0002:800C0910       GrandStarReturnDemoStarter::exeWaitDemoEnd((void))
 0002:800C0B44       NrvGrandStarReturnDemoStarter::GrandStarReturnDemoStarterNrvStageResult::execute(const(Spine *))
 0002:800C0BA8       PrologueDirector::PrologueDirector((char const *))
 0002:800C0C08       PrologueDirector::init((JMapInfoIter const &))
 0002:800C0CB4       PrologueDirector::initAfterPlacement((void))
 0002:800C0CC8       PrologueDirector::appear((void))
 0002:800C0D1C       PrologueDirector::kill((void))
 0002:800C0D5C       PrologueDirector::exeWait((void))
 0002:800C0DBC       PrologueDirector::exePictureBook((void))
 0002:800C0EC4       PrologueDirector::exePeachLetterStart((void))
 0002:800C0F20       PrologueDirector::exePeachLetter((void))
 0002:800C0FCC       PrologueDirector::exePeachLetterEnd((void))
 0002:800C1060       PrologueDirector::exeBindWait((void))
 0002:800C113C       PrologueDirector::exeArrive((void))
 0002:800C1294       PrologueDirector::exeGameStart((void))
 0002:800C1314       PrologueDirector::createPictureBook((void))
 0002:800C136C       PrologueDirector::createLetter((void))
 0002:800C13B8       PrologueDirector::createScenery((void))
 0002:800C1468       PrologueDirector::createMarioPosDummyModel((void))
 0002:800C1524       PrologueDirector::createCameraTarget((void))
 0002:800C1578       PrologueDirector::pauseOff((void))
 0002:800C1604       MR::startPrologue((void))
 0002:800C1808       NrvFlipPanel::FlipPanelNrvEndPrepare::execute(const(Spine *))
 0002:800C1870       @unnamed@ReturnDemoRailMove_cpp@::setResultFlyStartFrame((LiveActor *,long))
 0002:800C18EC       ReturnDemoRailMove::ReturnDemoRailMove((LiveActor *,LiveActor *,JMapInfoIter const &,bool,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:800C19B0       ReturnDemoRailMove::posToStart((void))
 0002:800C1A2C       ReturnDemoRailMove::posToEnd((void))
 0002:800C1AA8       ReturnDemoRailMove::offPathDraw((void))
 0002:800C1ABC       ReturnDemoRailMove::getDemoFlyBrakeFrame(const(void))
 0002:800C1AD4       ReturnDemoRailMove::calcPathPosDir(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float))
 0002:800C1B48       ReturnDemoRailMove::setupPathDrawForGraneStarReturnDemo((void))
 0002:800C1B88       ReturnDemoRailMove::start((void))
 0002:800C1C10       ReturnDemoRailMove::update((long,long))
 0002:800C1EA0       ScenarioStarter::ScenarioStarter((char const *))
 0002:800C1F88       ScenarioStarter::init((JMapInfoIter const &))
 0002:800C2118       ScenarioStarter::exeWaitToStart((void))
 0002:800C2158       ScenarioStarter::exeCinemaFrameBlank((void))
 0002:800C21DC       ScenarioStarter::exeRailMove((void))
 0002:800C250C       ScenarioStarter::exeRailMoveCanceled((void))
 0002:800C25B8       ScenarioStarter::exeShowWelcomeLayout((void))
 0002:800C269C       ScenarioStarter::initShootPath((JMapInfoIter const &))
 0002:800C2720       ScenarioStarter::updateBindPosition((void))
 0002:800C27DC       ScenarioStarter::updateBindActorMtx((void))
 0002:800C29E4       ScenarioStarter::updateShootMotion((void))
 0002:800C2AD8       ScenarioStarter::turnBindHead((JGeometry::TVec3<f> const &,float))
 0002:800C2C98       ScenarioStarter::calcShootMotionTime((void))
 0002:800C2E20       ScenarioStarter::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800C2ED8       ScenarioStarter::trySkipTrigger(const(void))
 0002:800C2F5C       ScenarioStarter::isStartBgmOnWelcome((void))
 0002:800C3148       NrvWaterCameraFilter::WaterCameraFilterNrvWater::execute(const(Spine *))
 0002:800C3188       StarReturnDemoStarter::StarReturnDemoStarter((char const *))
 0002:800C3200       StarReturnDemoStarter::init((JMapInfoIter const &))
 0002:800C335C       StarReturnDemoStarter::appear((void))
 0002:800C33C4       StarReturnDemoStarter::kill((void))
 0002:800C3430       StarReturnDemoStarter::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:800C34A4       StarReturnDemoStarter::control((void))
 0002:800C34E4       StarReturnDemoStarter::createSubModel((char const *,char const *,bool))
 0002:800C3578       StarReturnDemoStarter::tryRegisterDemo((char const *,JMapInfoIter const &))
 0002:800C3610       StarReturnDemoStarter::tryStartStageResult((void))
 0002:800C3684       StarReturnDemoStarter::tryStartResultWait((void))
 0002:800C3714       StarReturnDemoStarter::exeAppearWait((void))
 0002:800C37D8       StarReturnDemoStarter::exeMove((void))
 0002:800C3894       StarReturnDemoStarter::exeFlyWaitPowerStar((void))
 0002:800C3960       StarReturnDemoStarter::exeFlyWaitGrandStar((void))
 0002:800C3A4C       StarReturnDemoStarter::exeFall((void))
 0002:800C3BCC       StarReturnDemoStarter::exeLand((void))
 0002:800C3CA4       StarReturnDemoStarter::exeWait((void))
 0002:800C3D34       StarReturnDemoStarter::exeStageResult((void))
 0002:800C3DB0       StarReturnDemoStarter::exeFadeOut((void))
 0002:800C3E04       StarReturnDemoStarter::exeStageResultAfter((void))
 0002:800C4044       AstroEffectObj::AstroEffectObj((char const *))
 0002:800C40E4       AstroEffectObj::init((JMapInfoIter const &))
 0002:800C4154       AstroEffectObj::setStateMove((void))
 0002:800C4198       AstroEffectObj::selectNrvWait((void))
 0002:800C4248       SimpleEffectObj::getClippingCenterOffset(const(void))
 0002:800C4278       AutoEffectGroup::AutoEffectGroup((char const *,int))
 0002:800C42D4       AutoEffectGroup::add((JMapInfoIter const &))
 0002:800C4348       MR::Effect::addAutoEffectsFromGroup((AutoEffectGroup const *,MultiSceneEffectKeeper *,MultiSceneActor const *))
 0002:800C448C       MR::Effect::createAutoEffectGroup((char const *))
 0002:800C4628       AutoEffectGroupHolder::AutoEffectGroupHolder((void))
 0002:800C4634       AutoEffectGroupHolder::find(const(char const *))
 0002:800C4694       AutoEffectGroupHolder::isExist(const(char const *))
 0002:800C46EC       MR::Effect::createAndAddAutoEffectGroup((AutoEffectGroupHolder *,char const *))
 0002:800C4764       MR::Effect::registerAutoEffectInfos((AutoEffectGroupHolder *,MultiSceneEffectKeeper *,MultiSceneActor const *,char const *))
 0002:800C4854       std::find_if<PCP15AutoEffectGroup,Q22MR31eq_ptr_case<P15AutoEffectGroup>>(AutoEffectGroup *const *(AutoEffectGroup *const *,AutoEffectGroup *const *,MR::eq_ptr_case<P15AutoEffectGroup>))
 0002:800C4920       @unnamed@AutoEffectInfo_cpp@::str2Color((char const *))
 0002:800C4950       @unnamed@AutoEffectInfo_cpp@::isValueOnR((JMapInfoIter const &,char const *))
 0002:800C4990       @unnamed@AutoEffectInfo_cpp@::isValueOnS((JMapInfoIter const &,char const *))
 0002:800C49D0       @unnamed@AutoEffectInfo_cpp@::getStringValue((JMapInfoIter const &,char const *))
 0002:800C4A1C       AutoEffectInfo::AutoEffectInfo((void))
 0002:800C4A78       AutoEffectInfo::init((JMapInfoIter const &))
 0002:800C4E38       GameSystemFontHolder::getMessageFont(const(void))
 0002:800C4E54       @unnamed@AutoEffectInfo_cpp@::isValueOnT((JMapInfoIter const &,char const *))
 0002:800C4EB8       EffectObjGravityDust::EffectObjGravityDust((char const *))
 0002:800C4F04       EffectObjGravityDust::init((JMapInfoIter const &))
 0002:800C4F90       EffectObjGravityDust::endClipped((void))
 0002:800C4FCC       EffectObjGravityDust::getClippingRadius(const(void))
 0002:800C4FF8       EffectObjGravityDust::getClippingCenterOffset(const(void))
 0002:800C508C       EffectSystem::EffectSystem((char const *,bool))
 0002:800C5148       EffectSystem::createEmitter((ushort,uchar,uchar))
 0002:800C51F4       EffectSystem::forceDeleteEmitter(const(ParticleEmitter *))
 0002:800C5260       EffectSystem::forceDeleteSingleEmitter(const(SingleEmitter *))
 0002:800C52AC       EffectSystem::createSingleEmitter((SingleEmitter *,MultiEmitterCallBackBase *,MultiEmitterParticleCallBack *))
 0002:800C535C       MR::getEffectSystem((void))
 0002:800C53DC       EffectSystem::entry((ParticleResourceHolder *,ulong,ulong))
 0002:800C549C       @unnamed@EffectSystemUtil_cpp@::setupMultiEmitter((MultiEmitter *,AutoEffectInfo const *))
 0002:800C55B0       MR::Effect::requestMovementOnAllEmitters((void))
 0002:800C55E4       MR::isDeadInformationMessage((void))
 0002:800C560C       WPad::getRumbleInstance(const(void))
 0002:800C5634       MR::Effect::isExistInResource((ushort *,char const *))
 0002:800C5678       MR::Effect::isEffect2D((MultiEmitter const *))
 0002:800C56AC       MR::Effect::addEffectSyncBck((MultiEmitter *,ModelManager const *,char const *))
 0002:800C5714       MR::Effect::setupMultiEmitter((EffectKeeper *,ModelManager const *,AutoEffectInfo const *))
 0002:800C57AC       MR::Effect::setupMultiEmitterSyncBck((EffectKeeper *,ModelManager const *,AutoEffectInfo const *))
 0002:800C59EC       MR::Effect::registerAutoEffectInfoGroup((EffectKeeper *,LiveActor const *,char const *))
 0002:800C5A4C       MR::Effect::requestMovementOn((EffectKeeper *))
 0002:800C5AC4       MR::Effect::registerAutoEffectInfoGroup((PaneEffectKeeper *,LayoutActor const *,char const *))
 0002:800C5B24       MR::Effect::registerAutoEffectInfoGroup((MultiSceneEffectKeeper *,EffectSystem const *,MultiSceneActor const *,char const *))
 0002:800C5B80       MR::Effect::addAutoEffect((EffectKeeper *,LiveActor const *,AutoEffectInfo const *))
 0002:800C5C70       MR::Effect::addAutoEffect((PaneEffectKeeper *,LayoutActor const *,AutoEffectInfo const *))
 0002:800C5CC8       MR::Effect::addAutoEffect((MultiSceneEffectKeeper *,MultiSceneActor const *,AutoEffectInfo const *))
 0002:800C5DBC       MR::Effect::deleteParticleEmitter((ParticleEmitter *))
 0002:800C5DF0       MR::Effect::setLinkSingleEmitter((ParticleEmitter *,SingleEmitter *))
 0002:800C5DFC       MR::Effect::getLinkSingleEmitter((JPABaseEmitter const *))
 0002:800C5E2C       MR::Effect::createParticleEmitter((ParticleEmitter *,JPAEmitterManager *,JGeometry::TVec3<f> const &,ushort,uchar,uchar))
 0002:800C5E98       MR::Effect::isExistInResource((ushort *,char const *,long))
 0002:800C5EF0       MR::Effect::getEffectAttributeName((long))
 0002:800C5F44       def_800C5F18
 0002:800C5F4C       MR::Effect::createAutoEffect((char const *,char const *))
 0002:800C6080       TrampleStar::Surface::set((ushort,ushort,ushort))
 0002:800C6090       MultiEmitter::MultiEmitter((char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:800C615C       MultiEmitter::MultiEmitter((char const *,float *[4],JGeometry::TVec3<f> const &))
 0002:800C6218       MultiEmitter::MultiEmitter((char const *,float *[4],JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:800C62DC       MultiEmitter::MultiEmitter((char const *))
 0002:800C63D4       MultiEmitter::createEmitterWithCallBack((MultiEmitterCallBackBase *))
 0002:800C64A8       MultiEmitter::deleteEmitter((void))
 0002:800C6578       MultiEmitter::forceDeleteEmitter((void))
 0002:800C6620       MultiEmitter::forceDelete((EffectSystem *))
 0002:800C66EC       MultiEmitter::deleteForeverEmitter((void))
 0002:800C67B0       MultiEmitter::playCalcAndDeleteForeverEmitter((void))
 0002:800C67E8       MultiEmitter::isExistOneTimeEmitter(const(void))
 0002:800C68C8       GameSystemObjHolder::captureIfAllowForScreenPreserver((void))
 0002:800C68D8       MultiEmitter::setOffset((JGeometry::TVec3<f> const &))
 0002:800C6900       MultiEmitter::setName((char const *))
 0002:800C6934       MultiEmitter::isEqualName(const(ushort))
 0002:800C6948       MultiEmitter::getParticleEmitter(const(int))
 0002:800C6994       MultiEmitter::create((EffectSystem *))
 0002:800C6A38       MultiEmitter::scanParticleEmitter((EffectSystem *))
 0002:800C6AE0       MultiEmitter::initSyncBck((XanimePlayer *,char const *,long,float))
 0002:800C6B64       MultiEmitter::onDeleteSyncBck((bool,float))
 0002:800C6B78       MultiEmitter::setContinueBckEnd((bool))
 0002:800C6B7C       J3DColorBlockLightOn::setColorChanNum((uchar))
 0002:800C6B84       MultiEmitter::onCreateSyncClipping((void))
 0002:800C6B94       MultiEmitter::onForceDeleteSyncClipping((void))
 0002:800C6BA4       MultiEmitter::stopEmitterOnClipped((void))
 0002:800C6C8C       MultiEmitter::playEmitterOffClipped((void))
 0002:800C6D6C       MultiEmitter::setDrawOrder((long))
 0002:800C6E00       MultiEmitter::addChildEmitter((MultiEmitter *))
 0002:800C6E1C       MultiEmitter::setGlobalRotationDegree((JGeometry::TVec3<f> const &,long))
 0002:800C6EB4       MultiEmitter::allocateEmitter((char const *))
 0002:800C7064       MultiEmitter::getValidEmitter((long,bool))
 0002:800C70B0       MultiEmitter::createOneTimeEmitter((void))
 0002:800C7128       MultiEmitter::createForeverEmitter((void))
 0002:800C7214       SingleEmitter::setGroupID((uchar))
 0002:800C721C       MR::Vector<Q22MR17FixedArray<Us,32>>::push_back((ushort const &))
 0002:800C7238       MultiEmitter::setGlobalSRTMatrix((float const *[4],long))
 0002:800C72D4       MultiEmitter::setGlobalTranslation((JGeometry::TVec3<f> const &,long))
 0002:800C74B8       MultiEmitter::setGlobalPrmColor((uchar,uchar,uchar,long))
 0002:800C75AC       MultiEmitter::setGlobalEnvColor((uchar,uchar,uchar,long))
 0002:800C76A0       MultiEmitter::setLocalScale((JGeometry::TVec3<f> const &,long))
 0002:800C7744       MultiEmitter::setDirectionalSpeed((float,long))
 0002:800C77E4       MultiEmitter::setRate((float,long))
 0002:800C7884       MultiEmitter::stopCalcEmitter((long))
 0002:800C7928       MultiEmitter::playCalcEmitter((long))
 0002:800C79CC       MultiEmitter::stopDrawParticle((long))
 0002:800C7A70       MultiEmitter::playDrawParticle((long))
 0002:800C7B14       MultiEmitter::setParticleCallBackPtr((JPAParticleCallBack *,long))
 0002:800C7BB0       MultiEmitter::pauseOff((long))
 0002:800C7C3C       ParticleEmitter::setGlobalRotation((JGeometry::TVec3<s> const &))
 0002:800C7C58       ParticleEmitter::setGlobalScale((JGeometry::TVec3<f> const &))
 0002:800C7CA4       ParticleEmitter::setGlobalSRTMatrix((float const *[4]))
 0002:800C7CF4       ParticleEmitter::setGlobalPrmColor((uchar,uchar,uchar))
 0002:800C7CF8       JPABaseEmitter::setGlobalPrmColor((uchar,uchar,uchar))
 0002:800C7D08       ParticleEmitter::setGlobalEnvColor((uchar,uchar,uchar))
 0002:800C7D0C       JPABaseEmitter::setGlobalEnvColor((uchar,uchar,uchar))
 0002:800C7D3C       JGeometry::TVec3<f>::mul((JGeometry::TVec3<f> const &))
 0002:800C7D60       @unnamed@MultiEmitterCallBack_cpp@::getSyntheticColor((Color8 const &,Color8 const &))
 0002:800C7DD0       MultiEmitterCallBack::MultiEmitterCallBack((MultiEmitter const *,JGeometry::TVec3<f> const &))
 0002:800C7EE4       MultiEmitterCallBack::MultiEmitterCallBack((MultiEmitter const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:800C7F9C       MultiEmitterCallBack::MultiEmitterCallBack((MultiEmitter const *,float *[4],JGeometry::TVec3<f> const &))
 0002:800C804C       MultiEmitterCallBack::MultiEmitterCallBack((MultiEmitter const *,float *[4],JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:800C8100       MultiEmitterCallBack::execute((JPABaseEmitter *))
 0002:800C8154       MultiEmitterCallBack::setHostSRT((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *))
 0002:800C816C       MultiEmitterCallBack::setHostMtx((float *[4]))
 0002:800C8184       MultiEmitterCallBack::setBaseScale((float))
 0002:800C81A0       ShadowVolumeLine::setFromWidth((float))
 0002:800C81A8       MultiEmitterCallBack::forceFollowOn((void))
 0002:800C81B8       MultiEmitterCallBack::forceFollowOff((void))
 0002:800C81C8       MultiEmitterCallBack::forceScaleOn((void))
 0002:800C81D8       MultiEmitterCallBack::resetFollowCurrent((void))
 0002:800C81F0       MultiEmitterCallBack::setSRTFromHostMtx((JPABaseEmitter *,float *[4],MultiEmitterCallBack::FlagSRT const &,bool))
 0002:800C8370       MultiEmitterCallBack::setSRTFromHostSRT((JPABaseEmitter *,MultiEmitterCallBack::FlagSRT const &,bool))
 0002:800C85F8       MultiEmitterCallBack::setScaleFromHostScale((JPABaseEmitter *,JGeometry::TVec3<f> const &,bool,bool))
 0002:800C86B8       MultiEmitterCallBack::effectLight((JPABaseEmitter *))
 0002:800C86E4       MultiEmitterCallBack::followSRT((JPABaseEmitter *,bool))
 0002:800C87A0       MultiEmitterCallBack::setColor((JPABaseEmitter *))
 0002:800C88D0       MultiEmitterCallBack::isFollowSRT(const(MultiEmitterCallBack::FlagSRT *,bool))
 0002:800C8A98       JPABaseEmitter::setGlobalScale((JGeometry::TVec3<f> const &))
 0002:800C8B04       _GXColor::__as((_GXColor const &))
 0002:800C8B28       JPAEmitterCallBack::drawAfter((JPABaseEmitter *))
 0002:800C8B2C       JPAEmitterCallBack::draw((JPABaseEmitter *))
 0002:800C8B30       nullsub_74
 0002:800C8B34       nullsub_77
 0002:800C8B38       nullsub_78
 0002:800C8B3C       MultiEmitterCallBack::~MultiEmitterCallBack((void))
 0002:800C8B98       MultiEmitterParticleCallBack::MultiEmitterParticleCallBack((void))
 0002:800C8BA8       MultiEmitterParticleCallBack::~MultiEmitterParticleCallBack((void))
 0002:800C8C00       JPAParticleCallBack::draw((JPABaseEmitter *,JPABaseParticle *))
 0002:800C8C04       JPAParticleCallBack::execute((JPABaseEmitter *,JPABaseParticle *))
 0002:800C8C08       ParticleCalcExecutor::ParticleCalcExecutor((EffectSystem const *,bool))
 0002:800C8C64       ParticleCalcExecutor::movementNormal((void))
 0002:800C8D4C       ParticleCalcExecutor::movementIgnorePause3D((void))
 0002:800C8DA0       ParticleCalcExecutor::movementIgnorePause2D((void))
 0002:800C8DF4       ParticleCalcExecutor::movementCheckUpdate((void))
 0002:800C8E00       ParticleCalcExecutor::requestMovementOnPauseIgnore((void))
 0002:800C8E40       ParticleCalcExecutor::initMovementAdaptor((void))
 0002:800C9038       MR::Functor<20ParticleCalcExecutor>(MR::FunctorV0M<P20ParticleCalcExecutor,M20ParticleCalcExecutorFPCvPv_v> (ParticleCalcExecutor *,void (ParticleCalcExecutor::)(void const *,void *)))
 0002:800C9078       MR::FunctorV0M<P20ParticleCalcExecutor,M20ParticleCalcExecutorFPCvPv_v>::__cl(const(void))
 0002:800C90A8       MR::FunctorV0M<P20ParticleCalcExecutor,M20ParticleCalcExecutorFPCvPv_v>::clone(const(JKRHeap *))
 0002:800C9110       @unnamed@ParticleDrawExecutor_cpp@::connectToSceneDrawAdaptor((NameObjAdaptor *,MR::FunctorBase const &,int))
 0002:800C9184       ParticleDrawExecutor::ParticleDrawExecutor((EffectSystem const *,bool))
 0002:800C91EC       ParticleDrawExecutor::initDraw((void))
 0002:800C9248       ParticleDrawExecutor::draw3D(const(void))
 0002:800C9280       ParticleDrawExecutor::draw2D(const(void))
 0002:800C9404       ParticleDrawExecutor::drawIndirect(const(void))
 0002:800C94EC       ParticleDrawExecutor::drawFor2DModel(const(void))
 0002:800C95C4       ParticleDrawExecutor::drawWithViewMtx3D(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800C9644       ParticleDrawExecutor::drawWithViewMtxAfterIndirect(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800C96A8       ParticleDrawExecutor::drawWithViewMtxForBloomEffect(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800C970C       ParticleDrawExecutor::drawWithViewMtxAfterImageEffect(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:800C9770       ParticleDrawExecutor::initDrawAdaptor((void))
 0002:800C9A50       MR::FunctorV0F::clone(const(JKRHeap *))
 0002:800C9AA0       MR::FunctorV0F::__cl(const(void))
 0002:800C9B44       ParticleEmitter::ParticleEmitter((void))
 0002:800C9B64       ParticleEmitter::init((ushort))
 0002:800C9B84       ParticleEmitter::pauseOn((void))
 0002:800C9BC4       ParticleEmitter::pauseOff((void))
 0002:800C9BEC       ParticleEmitterHolder::ParticleEmitterHolder((EffectSystem const *,int))
 0002:800C9C60       ParticleEmitterHolder::update((bool))
 0002:800C9D54       ParticleEmitterHolder::forceDeleteAllOneTimeEmitters((void))
 0002:800C9DD0       ParticleEmitterHolder::forceDeleteAllEmitters((void))
 0002:800C9E30       ParticleEmitterHolder::requestMovementOnAllEmitters((void))
 0002:800C9EAC       ParticleEmitterHolder::findAvailableParticleEmitter((void))
 0002:800C9F60       ParticleEmitterHolder::requestMovementOffAllLoopEmitters((void))
 0002:800C9FD8       CometEventKeeper::isStartTimeLimitEvent(const(void))
 0002:800C9FE8       ParticleEmitter::isContinuousParticle(const(void))
 0002:800CA00C       ParticleResourceHolder::ParticleResourceHolder((char const *))
 0002:800CA138       ParticleResourceHolder::getUserIndex(const(char const *))
 0002:800CA25C       ParticleResourceHolder::countAutoEffectNum((void))
 0002:800CA3DC       ParticleResourceHolder::isExistInResource(const(char const *,ushort *))
 0002:800CA434       ParticleResourceHolder::getAutoEffectNum(const(char const *))
 0002:800CA4C4       RandomEffectObj::RandomEffectObj((char const *))
 0002:800CA520       RandomEffectObj::init((JMapInfoIter const &))
 0002:800CA57C       RandomEffectObj::appear((void))
 0002:800CA5B4       RandomEffectObj::getRandomTime(const(void))
 0002:800CA63C       RandomEffectObj::control((void))
 0002:800CA7A0       @unnamed@SimpleEffectObj_cpp@::findDataElement((char const *))
 0002:800CA814       FireMarioBall::FireMarioBall((char const *))
 0002:800CA858       SimpleEffectObj::init((JMapInfoIter const &))
 0002:800CAA94       SimpleEffectObj::startClipped((void))
 0002:800CAAF8       SimpleEffectObj::endClipped((void))
 0002:800CAB60       SimpleEffectObj::setStateWait((void))
 0002:800CABA4       SimpleEffectObj::exeMove((void))
 0002:800CAE38       SingleEmitter::SingleEmitter((void))
 0002:800CAE54       JASDSPChannel::setPriority((uchar))
 0002:800CAE5C       SingleEmitter::deleteEmitter((void))
 0002:800CAE98       SingleEmitter::scanParticleEmitter((EffectSystem *))
 0002:800CAF0C       SingleEmitter::isOneTime(const(void))
 0002:800CAF58       SingleEmitter::isValid(const(void))
 0002:800CAF7C       SingleEmitter::link((ParticleEmitter *))
 0002:800CAF90       SingleEmitter::unlink((void))
 0002:800CAFCC       SpinPullParticleCallBack::SpinPullParticleCallBack((void))
 0002:800CB010       SpinPullParticleCallBack::execute((JPABaseEmitter *,JPABaseParticle *))
 0002:800CB0C8       MerameraParticleCallBack::execute((JPABaseEmitter *,JPABaseParticle *))
 0002:800CB200       SyncBckEffectChecker::SyncBckEffectChecker((XanimePlayer *))
 0002:800CB220       SyncBckEffectChecker::updateBefore((void))
 0002:800CB2B4       SyncBckEffectChecker::updateAfter((void))
 0002:800CB2D8       SyncBckEffectChecker::reset((void))
 0002:800CB2EC       SyncBckEffectChecker::isCreate(const(SyncBckEffectInfo const *,bool))
 0002:800CB3D4       SyncBckEffectChecker::isDelete(const(SyncBckEffectInfo const *))
 0002:800CB4D0       SyncBckEffectChecker::checkPass(const(float))
 0002:800CB520       SyncBckEffectChecker::checkPassIfRate0(const(float))
 0002:800CB614       SyncBckEffectInfo::BckResourceInfo::BckResourceInfo((XanimePlayer const *,char const *))
 0002:800CB65C       SyncBckEffectInfo::BckResourceInfo::isLoop(const(void))
 0002:800CB680       SyncBckEffectInfo::SyncBckEffectInfo((XanimePlayer const *,char const *,long,float,float,bool))
 0002:800CB6FC       SyncBckEffectInfo::addBck((XanimePlayer const *,char const *))
 0002:800CB768       SyncBckEffectInfo::isRegisteredBck(const(char const *))
 0002:800CB7F4       SyncBckEffectInfo::isBckLoop(const(char const *))
 0002:800CB898       MR::Effect::isExistSyncBckDeleteFrame((SyncBckEffectInfo const *))
 0002:800CB8B4       @unnamed@AnimScaleController_cpp@::AnimScaleDefaultParam::AnimScaleDefaultParam((void))
 0002:800CB91C       AnimScaleParam::AnimScaleParam((void))
 0002:800CB97C       AnimScaleController::AnimScaleController((AnimScaleParam *))
 0002:800CBA08       AnimScaleController::setParamTight((void))
 0002:800CBA34       AnimScaleController::startAndAddScaleVelocityY((float))
 0002:800CBA50       AnimScaleController::stopAndReset((void))
 0002:800CBA90       AnimScaleController::resetScale((void))
 0002:800CBAAC       AnimScaleController::exeAnim((void))
 0002:800CBAEC       AnimScaleController::exeHitReaction((void))
 0002:800CBB50       AnimScaleController::exeDpdVibration((void))
 0002:800CBBD4       AnimScaleController::exeCrush((void))
 0002:800CBC6C       AnimScaleController::isHitReaction(const(long))
 0002:800CBCD4       AnimScaleController::tryStop((void))
 0002:800CBD44       NerveExecutor::updateNerve((void))
 0002:800CBD48       AnimScaleController::updateScale((float,float))
 0002:800CBE3C       __sinit(char ()[nimScaleController],**)
 0002:800CBF00       AnimStampController::AnimStampController((void))
 0002:800CBF7C       AnimStampController::init((long,float,float,float,float,float,float))
 0002:800CBFD4       AnimStampController::startAnim((JGeometry::TVec3<f> const &))
 0002:800CC024       AnimStampController::exeAnim((void))
 0002:800CC22C       BallBeamer::BallBeamer((char const *))
 0002:800CC27C       BallBeamer::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:800CC2F8       BallBeamer::init((JMapInfoIter const &))
 0002:800CC648       BallBeamer::syncSwitchOnA((void))
 0002:800CC654       PowerStar::offAppearDemo((void))
 0002:800CC660       BallBeamer::syncSwitchOnB((void))
 0002:800CC6F8       BallBeamer::setupAttack((void))
 0002:800CC764       BallBeamer::tryAttack((void))
 0002:800CC7E4       BallBeamer::exeWait((void))
 0002:800CC84C       BallBeamer::exeAttack((void))
 0002:800CC96C       BallBeamer::exeInter((void))
 0002:800CCB9C       Balloonfish::Balloonfish((char const *))
 0002:800CCC00       Balloonfish::init((JMapInfoIter const &))
 0002:800CCDF4       BegomanSpring::kill((void))
 0002:800CCEA4       Balloonfish::exeWait((void))
 0002:800CD068       Balloonfish::exeDash((void))
 0002:800CD314       Balloonfish::exeStarPointerBind((void))
 0002:800CD3A8       Balloonfish::attackSensor((HitSensor *,HitSensor *))
 0002:800CD45C       Balloonfish::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800CD4F4       Balloonfish::calcAndSetBaseMtx((void))
 0002:800CD7A8       NrvBalloonfish::HostTypeNrvStarPointerBind::executeOnEnd(const(Spine *))
 0002:800CD908       BasaBasa::BasaBasa((char const *))
 0002:800CD9AC       BasaBasa::init((JMapInfoIter const &))
 0002:800CDC60       BasaBasa::exeWait((void))
 0002:800CDD04       BasaBasa::exeAirWait((void))
 0002:800CDDCC       BasaBasa::exeChaseStart((void))
 0002:800CDEB4       BasaBasa::exeChase((void))
 0002:800CE02C       BasaBasa::exeQuickTurnStart((void))
 0002:800CE094       BasaBasa::exeQuickTurn((void))
 0002:800CE118       BasaBasa::exeTrampleDown((void))
 0002:800CE1DC       BasaBasa::exePunchDown((void))
 0002:800CE268       BasaBasa::exeAttackStart((void))
 0002:800CE354       BasaBasa::exeAttack((void))
 0002:800CE4F0       BasaBasa::exeAttackEnd((void))
 0002:800CE5A4       BasaBasa::exeAttackEndRecover((void))
 0002:800CE658       BasaBasa::exeHitBack((void))
 0002:800CE770       BasaBasa::exeHitBackEnd((void))
 0002:800CE7E0       BasaBasa::exeComeHome((void))
 0002:800CE8F8       BasaBasa::exeAttachCelling((void))
 0002:800CEA08       BasaBasa::exeDPDSwoon((void))
 0002:800CEA90       BasaBasa::exeStun((void))
 0002:800CEB20       BasaBasa::initAfterPlacement((void))
 0002:800CEBC4       BasaBasa::kill((void))
 0002:800CEC2C       BasaBasa::control((void))
 0002:800CEC94       BasaBasa::calcAndSetBaseMtx((void))
 0002:800CED3C       BasaBasa::attackSensor((HitSensor *,HitSensor *))
 0002:800CEF10       BasaBasa::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800CF0D0       BasaBasa::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800CF194       BasaBasa::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800CF25C       BasaBasa::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800CF31C       BasaBasa::initHangModel((void))
 0002:800CF3A0       BasaBasa::tryClippingAndResetPos((void))
 0002:800CF4B4       Petari::reflectStarPointer2P((void))
 0002:800CF50C       BasaBasa::tryComeHome((void))
 0002:800CF574       BasaBasa::updateRailType((void))
 0002:800CF5E4       BasaBasa::controlVelocity((void))
 0002:800CF7E0       BasaBasa::tuneHeight((void))
 0002:800CF8C8       BasaBasa::isNearTarget(const(float))
 0002:800CF934       BasaBasa::isNrvEnableStun(const(void))
 0002:800CFC04       NrvBasaBasa::BasaBasaNrvDPDSwoon::executeOnEnd(const(Spine *))
 0002:800CFCCC       BegomanBaby::BegomanBaby((char const *))
 0002:800CFD20       BegomanBaby::BegomanBaby((NameObj *,char const *))
 0002:800CFD84       BegomanBaby::init((JMapInfoIter const &))
 0002:800CFF9C       BegomanBaby::appearFromLaunch((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D00E0       BegomanBaby::killWithGenItem((void))
 0002:800D01B4       BegomanBaby::control((void))
 0002:800D0464       BegomanBaby::exeSignAttack((void))
 0002:800D0508       BegomanBaby::exePursue((void))
 0002:800D05A8       BegomanBaby::exeTrample((void))
 0002:800D0670       BegomanBaby::exeBlow((void))
 0002:800D077C       BegomanBaby::exeAfterLaunch((void))
 0002:800D0920       BegomanBaby::exeAfterLaunchOnGround((void))
 0002:800D09B0       BegomanBaby::exeLaunchTurn((void))
 0002:800D0A4C       BegomanBaby::exeInWater((void))
 0002:800D0B3C       BegomanBaby::attackSensor((HitSensor *,HitSensor *))
 0002:800D0CB8       BegomanBaby::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800D0F98       BegomanBaby::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800D1104       BegomanBaby::receiveMsgTrample((HitSensor *,HitSensor *))
 0002:800D1184       BegomanBaby::onTouchElectric((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D1290       BegomanBaby::calcHeadJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800D131C       BegomanBaby::calcAndSetBaseMtx((void))
 0002:800D1350       __sinit__Tamakoro_cpp
 0002:800D15E0       NrvBegomanSpring::HostTypeNrvTired::execute(const(Spine *))
 0002:800D16A4       NrvBegomanSpring::HostTypeNrvProvoke::execute(const(Spine *))
 0002:800D179C       NrvBegomanSpring::HostTypeNrvBrake::execute(const(Spine *))
 0002:800D1818       NrvBegomanBaby::HostTypeNrvTurn::execute(const(Spine *))
 0002:800D18B4       NrvBegomanSpring::HostTypeNrvWait::execute(const(Spine *))
 0002:800D192C       NrvBegomanSpring::HostTypeNrvNoCalcWait::execute(const(Spine *))
 0002:800D1AAC       BegomanBase::BegomanBase((char const *))
 0002:800D1B98       BegomanBase::initCore((JMapInfoIter const &,char const *,bool))
 0002:800D1DC8       BegomanBase::initEffectAndStarPointerBind((void))
 0002:800D1E9C       MR::trySetMoveLimitCollision((LiveActor *))
 0002:800D1EA0       BegomanBase::initShadow((float,char const *))
 0002:800D1F00       BegomanBase::initEffect((long))
 0002:800D1FE4       BegomanBase::initSensor((long,float,float,char const *))
 0002:800D2120       BegomanBase::initUseSwitchB((JMapInfoIter const &,MR::FunctorBase const &))
 0002:800D2188       LiveActor::makeActorDead((void))
 0002:800D218C       BegomanBase::appear((void))
 0002:800D2220       BegomanBase::control((void))
 0002:800D233C       LiveActor::startClipped((void))
 0002:800D2340       BegomanBase::exeNoCalcWaitCore((float,Nerve const *))
 0002:800D2484       BegomanBase::exeWaitCore((MR::ActorMoveParam const &,Nerve const *,Nerve const *,Nerve const *))
 0002:800D2690       BegomanBase::exeSignAttackCore((MR::ActorMoveParam const &,Nerve const *))
 0002:800D2760       BegomanBase::exePursueCore((MR::ActorMoveParam const &,Nerve const *,Nerve const *,BegomanSound const &,float))
 0002:800D2A20       BegomanBase::exeTurnCore((MR::ActorMoveParam const &,Nerve const *,Nerve const *,bool))
 0002:800D2C14       BegomanBase::exeBrakeCore((Nerve const *))
 0002:800D2D88       BegomanBase::exeStepBackCore((MR::ActorMoveParam const &,Nerve const *))
 0002:800D2E00       BegomanBase::exeProvokeCore((MR::ActorMoveParam const &,Nerve const *))
 0002:800D2EC0       BegomanBase::exeHitReactionCore((MR::ActorMoveParam const &,Nerve const *))
 0002:800D2F60       BegomanBase::exeTiredCore((MR::ActorMoveParam const &,Nerve const *))
 0002:800D3004       BegomanBase::exeReturnCore((Nerve const *))
 0002:800D30E8       BegomanBase::exeKeepDistanceCore((Nerve const *,Nerve const *,Nerve const *,float,float))
 0002:800D3284       BegomanBase::addVelocityEscapeToSide((float))
 0002:800D3340       BegomanBase::exeLaunch((void))
 0002:800D33D0       BegomanBase::exeBindStarPointer((void))
 0002:800D3418       BegomanBase::finishBindStarPointer((void))
 0002:800D342C       BegomanBase::tryAndSetStarPointerBind((Nerve const *))
 0002:800D3488       BegomanBase::isNearInitPos(const(void))
 0002:800D34C0       BegomanBase::trySetReturnNerve((void))
 0002:800D3530       BegomanBase::incAndCheckTiredCounter((void))
 0002:800D3548       MR::isMsgFloorTouch((ulong))
 0002:800D3558       BegomanBase::launchBegomanCore((LiveActor *,BegomanBase **,long,float,float,float,JGeometry::TVec3<f> const *))
 0002:800D3864       BegomanBase::launchBegoman((LiveActor *,BegomanBase **,long,float,float,float,JGeometry::TVec3<f> const *))
 0002:800D38E4       BegomanBase::launchBegomanBabyFromGuarder((LiveActor *,BegomanBaby **,long,float,float,float,JGeometry::TVec3<f> const *))
 0002:800D3940       BegomanBase::launchBegomanBabyLauncher((LiveActor *,BegomanBaby **,long,float,float,float,JGeometry::TVec3<f> const *))
 0002:800D39B4       BegomanBase::updateRotateY((float,float))
 0002:800D3A08       BegomanBase::updateTargetVec((void))
 0002:800D3A58       BegomanBase::reboundPlaneWithEffect((JGeometry::TVec3<f> const &,float,float,char const *))
 0002:800D3B24       BegomanBase::reboundWallAndGround((JGeometry::TVec3<f> *,bool))
 0002:800D3C94       BegomanBase::isFallNextMove((float,float))
 0002:800D3D9C       BegomanBase::calcDirectionAwayFromRail((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D3EA0       BegomanBase::addVelocityOnPushedFromElectricRail((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D3F18       BegomanBase::checkTouchElectricRail((bool))
 0002:800D4078       BegomanBase::onTouchElectric((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D412C       BegomanBase::pushedFromElectricRail((HitSensor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,bool))
 0002:800D4228       BegomanBase::preventSwingby((float))
 0002:800D42A4       BegomanBase::preventSlopeBlow((float))
 0002:800D4334       BegomanBase::dampingVerticalAndParallelVelocity((float,float))
 0002:800D4440       BegomanBase::isInWaterAndSetWaterNerve((Nerve const *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:800D44E0       BegomanBase::calcBlowReaction((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:800D4644       BegomanBase::calcAnimCore((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:800D46F8       BegomanBase::calcJointLocator1((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800D4800       BegomanBase::calcAndSetBaseMtx((void))
 0002:800D4888       BegomanBase::requestAttack((void))
 0002:800D48C4       BegomanAttackPermitter::BegomanAttackPermitter((char const *))
 0002:800D4918       BegomanAttackPermitter::init((JMapInfoIter const &))
 0002:800D496C       HitWallTimerSwitch::control((void))
 0002:800D4978       BegomanAttackPermitter::requestAttack((BegomanBase *))
 0002:800D4AD0       BegomanAttackPermitter::exeWait((void))
 0002:800D4B18       BegomanAttackPermitter::exeReceive((void))
 0002:800D4BD8       NrvBegomanAttackPermitter::HostTypeNrvPermit::execute(const(Spine *))
 0002:800D4DA4       JGeometry::TQuat4<f>::rotate(const(JGeometry::TVec3<f> &))
 0002:800D4EC8       BegomanLauncher::BegomanLauncher((char const *))
 0002:800D4F1C       BegomanLauncher::init((JMapInfoIter const &))
 0002:800D52B8       MR::calcGravity((LiveActor *))
 0002:800D52BC       BegomanLauncher::kill((void))
 0002:800D534C       BegomanLauncher::onSwitchAppear((void))
 0002:800D53A0       BegomanLauncher::exeWait((void))
 0002:800D5478       BegomanLauncher::exeLaunch((void))
 0002:800D55F0       BegomanLauncher::exeAppear((void))
 0002:800D5698       BegomanLauncher::exeDisappear((void))
 0002:800D57E8       NrvNoteCounter::NoteCounterNrvShowWait::execute(const(Spine *))
 0002:800D5838       NrvIronCannonLauncher::IronCannonLauncherNrvWait::execute(const(Spine *))
 0002:800D59B4       BegomanSpike::BegomanSpike((char const *))
 0002:800D5A10       BegomanSpike::init((JMapInfoIter const &))
 0002:800D5C70       BegomanSpike::appear((void))
 0002:800D5CD0       BegomanSpike::control((void))
 0002:800D5F74       BegomanSpike::onTouchElectric((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D60C8       BegomanSpike::exeSignAttack((void))
 0002:800D616C       BegomanSpike::exePursue((void))
 0002:800D6244       BegomanSpike::tearDownPursue((void))
 0002:800D62A8       BegomanSpike::exeTurn((void))
 0002:800D635C       BegomanSpring::exeStepBack((void))
 0002:800D63C8       BegomanSpike::exeTrampleReaction((void))
 0002:800D6478       BegomanSpike::exeBlow((void))
 0002:800D65B8       BegomanSpike::exeElectricDeath((void))
 0002:800D6694       BegomanSpike::exeBrokenPiece((void))
 0002:800D6740       BegomanSpike::exeInWater((void))
 0002:800D67F8       Takobo::generateCoin((void))
 0002:800D6860       BegomanSpike::attackSensor((HitSensor *,HitSensor *))
 0002:800D69DC       BegomanSpike::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800D6C20       BegomanSpike::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800D6EEC       BegomanSpike::calcAnim((void))
 0002:800D6F24       __sinit__DharmaSambo_cpp
 0002:800D7204       NrvBegomanSpike::HostTypeNrvSignAttack::executeOnEnd(const(Spine *))
 0002:800D749C       NrvBegomanSpike::HostTypeNrvTurn::executeOnEnd(const(Spine *))
 0002:800D76B0       JGeometry::TVec3<f>::squared(const(JGeometry::TVec3<f> const &))
 0002:800D76D8       BegomanSpring::BegomanSpring((char const *))
 0002:800D7770       BegomanSpring::init((JMapInfoIter const &))
 0002:800D7A3C       BegomanSpring::initEventCameras((JMapInfoIter const &))
 0002:800D7AC8       BegomanSpring::appear((void))
 0002:800D7B30       BegomanSpring::makeActorDead((void))
 0002:800D7BCC       BegomanSpring::control((void))
 0002:800D7EFC       BegomanSpring::onTouchElectric((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800D803C       BegomanSpring::exeSignAttack((void))
 0002:800D80E0       BegomanSpring::exePursue((void))
 0002:800D8194       BegomanSpring::exeTurn((void))
 0002:800D82A0       BegomanSpring::exeShake((void))
 0002:800D84B8       BegomanSpring::exeTrample((void))
 0002:800D85E4       BegomanSpring::exeHitReaction((void))
 0002:800D8644       BegomanSpring::exeBlow((void))
 0002:800D879C       BegomanSpring::exeElectricDeath((void))
 0002:800D8860       BegomanSpring::exeHide((void))
 0002:800D8960       BegomanSpring::exeHop((void))
 0002:800D89FC       BegomanSpring::exeInWater((void))
 0002:800D8B1C       BegomanSpring::startCamera((void))
 0002:800D8B34       BegomanSpring::updateCamera((void))
 0002:800D8BFC       BegomanSpring::endCamera((void))
 0002:800D8C10       BegomanSpring::attackSensor((HitSensor *,HitSensor *))
 0002:800D8D8C       BegomanSpring::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800D9000       BegomanSpring::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800D9328       BegomanSpring::calcAnim((void))
 0002:800D97B0       NrvSpinningBox::HostTypeNrvSliding::executeOnEnd(const(Spine *))
 0002:800D9958       BegomanHead::calcAndSetBaseMtx((void))
 0002:800D99B4       BegomanSpringHead::BegomanSpringHead((LiveActor *,float *[4]))
 0002:800D9A6C       BegomanSpringHead::init((JMapInfoIter const &))
 0002:800D9B7C       BegomanSpringHead::tryHopEnd((void))
 0002:800D9C1C       BegomanSpringHead::forceWaitImmediately((void))
 0002:800D9D84       BegomanSpringHead::exeHopEnd((void))
 0002:800D9F68       Birikyu::Birikyu((char const *))
 0002:800DA004       Birikyu::init((JMapInfoIter const &))
 0002:800DA134       Birikyu::initAfterPlacement((void))
 0002:800DA1F4       FluffWindEffect::makeActorDead((void))
 0002:800DA240       Birikyu::attackSensor((HitSensor *,HitSensor *))
 0002:800DA2F4       Birikyu::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800DA43C       Birikyu::initFromJmpArgs((JMapInfoIter const &))
 0002:800DA4A4       Birikyu::initRail((JMapInfoIter const &))
 0002:800DA50C       Birikyu::initCollision((void))
 0002:800DA5AC       Birikyu::initShadow((void))
 0002:800DA64C       Birikyu::tryStopPointing((void))
 0002:800DA6D0       Birikyu::goMove((void))
 0002:800DA6EC       Birikyu::exeMove((void))
 0002:800DA7A0       Birikyu::exeMoveCircle((void))
 0002:800DA884       Birikyu::exeWaitAtEdge((void))
 0002:800DA8F8       Birikyu::exeAttack((void))
 0002:800DA9AC       Birikyu::exeStopPointing((void))
 0002:800DAA84       DarknessRoomDoor::DarknessRoomDoor((char const *))
 0002:800DAB24       BirikyuWithFace::init((JMapInfoIter const &))
 0002:800DAB84       BirikyuWithFace::calcAndSetBaseMtx((void))
 0002:800DADC4       BombBird::~BombBird((void))
 0002:800DAE20       BombBird::BombBird((char const *))
 0002:800DAE98       BombBird::init((JMapInfoIter const &))
 0002:800DB240       BombBird::startClipped((void))
 0002:800DB298       BombBird::control((void))
 0002:800DB3B0       BombBird::attackSensor((HitSensor *,HitSensor *))
 0002:800DB500       BombBird::exeFlyOnRail((void))
 0002:800DB5EC       BombBird::exeFlyOnRailSearch((void))
 0002:800DB790       BombBird::doFly((void))
 0002:800DB814       BombBird::addVelocityToUpFromGround((float))
 0002:800DB8A0       BombBird::killAllBomb((void))
 0002:800DB914       BombBird::exeFlyWithAttack((void))
 0002:800DBA80       BombBird::exeBlow((void))
 0002:800DBB3C       BombBird::exeEscape((void))
 0002:800DBC50       BombBird::exeDamage((void))
 0002:800DBD10       BombBird::exeFall((void))
 0002:800DBDAC       BombBird::exeSwoonStart((void))
 0002:800DBEA8       BombBird::exeSwoon((void))
 0002:800DBFB8       BombBird::exeSwoonEnd((void))
 0002:800DC108       BombBird::exeTrample((void))
 0002:800DC244       BombBird::exeSinkDown((void))
 0002:800DC32C       BombBird::exeBindStarPointer((void))
 0002:800DC380       BombBird::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800DC5E4       BombBird::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800DC680       BombBird::calcAndSetBaseMtx((void))
 0002:800DC918       NrvBombBird::HostTypeNrvBindStarPointer::executeOnEnd(const(Spine *))
 0002:800DC998       BombBirdBomb::BombBirdBomb((char const *))
 0002:800DC9F8       BombBirdBomb::init((JMapInfoIter const &))
 0002:800DCBF0       BombBirdBomb::hold((JGeometry::TVec3<f> const &))
 0002:800DCC44       BombBirdBomb::start((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800DCCCC       BombBirdBomb::attackSensor((HitSensor *,HitSensor *))
 0002:800DCDB8       BombBirdBomb::exeHold((void))
 0002:800DCE04       BombBirdBomb::exeWait((void))
 0002:800DCF74       BombBirdBomb::exeExplosion((void))
 0002:800DD140       BombHei::BombHei((char const *))
 0002:800DD204       BombHei::init((JMapInfoIter const &))
 0002:800DD628       BombHei::setGroupClipping((JMapInfoIter const &))
 0002:800DD630       MR::trySetMoveLimitCollision((LiveActor *))
 0002:800DD634       BombHei::appear((void))
 0002:800DD6A8       BombHei::kill((void))
 0002:800DD6F4       BombHei::startCountdown((void))
 0002:800DD744       BombHei::endCountdown((void))
 0002:800DD7A4       BombHei::exeLaunch((void))
 0002:800DD9C0       BombHei::exeStarting((void))
 0002:800DDA74       BombHei::exeWait((void))
 0002:800DDBA0       BombHei::exeWalk((void))
 0002:800DDD14       BombHei::exePursue((void))
 0002:800DDE78       BombHei::exePursueHit((void))
 0002:800DDF74       BombHei::exeSpinHit((void))
 0002:800DE0A4       BombHei::exeTrample((void))
 0002:800DE138       BombHei::exePhysics((void))
 0002:800DE358       BombHei::exeStop((void))
 0002:800DE470       BombHei::exeThrown((void))
 0002:800DE660       BombHei::exeTaken((void))
 0002:800DE73C       BombHei::exeExplode((void))
 0002:800DE8BC       BombHei::calcAndSetBaseMtx((void))
 0002:800DE978       BombHei::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800DEB70       BombHei::control((void))
 0002:800DED78       BombHei::attackSensor((HitSensor *,HitSensor *))
 0002:800DEFB8       BombHei::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800DF164       BombHei::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800DF244       BombHei::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800DF2E8       BombHei::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800DF464       BombHei::receiveMsgThrow((HitSensor *,HitSensor *))
 0002:800DF544       BombHei::startBoundSound((void))
 0002:800DF724       NrvShellfish::ShellfishNrvDPDOpen::executeOnEnd(const(Spine *))
 0002:800DF73C       NrvRunawayRabbit::RunawayRabbitNrvBlowDamage::execute(const(Spine *))
 0002:800DF764       NrvTakobo::HostTypeNrvAttack::executeOnEnd(const(Spine *))
 0002:800DF964       BombHeiLauncher::BombHeiLauncher((char const *))
 0002:800DF9D4       BombHeiLauncher::init((JMapInfoIter const &))
 0002:800DFC70       BombHeiLauncher::initAfterPlacement((void))
 0002:800DFD30       BombHeiLauncher::startCountdown((void))
 0002:800DFD48       BombHeiLauncher::onSwitchA((void))
 0002:800DFD60       BombHeiLauncher::offSwitchA((void))
 0002:800DFDCC       BombHeiLauncher::exeLauncherWait((void))
 0002:800DFF10       BombHeiLauncher::exeStop((void))
 0002:800DFF78       ScrewSwitch::calcAndSetBaseMtx((void))
 0002:800DFFAC       BombHeiLauncher::control((void))
 0002:800E0154       BombTeresa::BombTeresa((char const *))
 0002:800E023C       BombTeresa::init((JMapInfoIter const &))
 0002:800E03BC       MR::trySetMoveLimitCollision((LiveActor *))
 0002:800E03C0       BombTeresa::initFromJMapParam((JMapInfoIter const &))
 0002:800E047C       BombTeresa::initTongue((void))
 0002:800E05EC       BombTeresa::initSensor((void))
 0002:800E06C4       BombTeresa::makeActorAppeared((void))
 0002:800E0748       BombTeresa::control((void))
 0002:800E07F8       BombTeresa::calcAndSetBaseMtx((void))
 0002:800E0868       BombTeresa::updateDriftReleaseVelocity((void))
 0002:800E0968       BombTeresa::rootTongueMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800E0A6C       BombTeresa::endTongueMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800E0BF0       BombTeresa::attackSensor((HitSensor *,HitSensor *))
 0002:800E0D40       BombTeresa::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800E0E34       BombTeresa::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800E0EF0       BombTeresa::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800E102C       BombTeresa::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800E10B0       PunchingKinoko::requestCrush((void))
 0002:800E1104       BombTeresa::tryCheseEnd((void))
 0002:800E1178       BombTeresa::tryDirectTackle((void))
 0002:800E11F0       BombTeresa::tryAbortDrift((void))
 0002:800E1254       BombTeresa::tryDriftRelease((void))
 0002:800E1290       BombTeresa::tryDriftReleaseEnd((void))
 0002:800E12F0       BombTeresa::tryExplosion((void))
 0002:800E1378       BombTeresa::tryRevival((void))
 0002:800E13EC       BombTeresa::exeAppear((void))
 0002:800E14B4       BombTeresa::exeShadowAppear((void))
 0002:800E15C4       BombTeresa::exeBallAppear((void))
 0002:800E17F0       BombTeresa::exeWait((void))
 0002:800E18EC       BombTeresa::exeWander((void))
 0002:800E19F8       BombTeresa::exeChase((void))
 0002:800E1ABC       BombTeresa::exeAttackTongueFailed((void))
 0002:800E1B5C       BombTeresa::exeDirectTackleSign((void))
 0002:800E1C1C       BombTeresa::exeDirectTackle((void))
 0002:800E1D04       BombTeresa::exeDrift((void))
 0002:800E2050       BombTeresa::exeDriftRelease((void))
 0002:800E2120       BombTeresa::exeExplosion((void))
 0002:800E21E0       BombTeresa::exeShock((void))
 0002:800E22A0       BombTeresa::exeDisperse((void))
 0002:800E2350       BombTeresa::exeReadyRestart((void))
 0002:800E23EC       BombTeresa::isEnableDrift(const(void))
 0002:800E2578       BombTeresa::isEnableDisperse(const(void))
 0002:800E25C0       BombTeresa::isEnableHitExplosionToPlayer(const(void))
 0002:800E2668       Teresa::isEnableStarPieceStop(const(void))
 0002:800E27E0       StrayTico::isEnableSpin(const(void))
 0002:800E284C       BombTeresa::appearNormal((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800E28EC       BombTeresa::appearShadow((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800E2948       BombTeresa::addTeresaSpinPullVelocity((float))
 0002:800E29D8       BombTeresa::requestDisperse((void))
 0002:800E2A50       __sinit__TrickRabbitSnowCollect_cpp
 0002:800E2C0C       NrvNokonokoLand::HostTypeBindStarPointer::executeOnEnd(const(Spine *))
 0002:800E2C24       NrvKoteBug::HostTypeNrvBindStarPointer::execute(const(Spine *))
 0002:800E2C8C       JointControlDelegator<10BombTeresa>::JointControlDelegator<10BombTeresa>((BombTeresa *,bool (BombTeresa::)(void const *,void *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &),bool (BombTeresa::)(void const *,void *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &)))
 0002:800E2E7C       CannonShellHolder::CannonShellHolder((int))
 0002:800E2EF0       CannonShellHolder::getValidShell(const(void))
 0002:800E2F84       CannonShellHolder::killActiveShells(const(void))
 0002:800E2FFC       CocoNutBall::CocoNutBall((char const *))
 0002:800E30B8       CocoNutBall::init((JMapInfoIter const &))
 0002:800E3210       CocoNutBall::appear((void))
 0002:800E3258       CocoNutBall::kill((void))
 0002:800E3308       CocoNutBall::appearAndThrow((JGeometry::TVec3<f> const &,float))
 0002:800E3398       CocoNutBall::hitBackToPlayer((void))
 0002:800E343C       CocoNutBall::demoBreak((JGeometry::TVec3<f> const &))
 0002:800E34C8       CocoNutBall::calcAndSetBaseMtx((void))
 0002:800E3530       CocoNutBall::attackSensor((HitSensor *,HitSensor *))
 0002:800E370C       CocoNutBall::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800E37B4       FireMarioBall::isBindedAny(const(void))
 0002:800E3830       CocoNutBall::isValidReceivePunch(const(void))
 0002:800E3908       CocoNutBall::calcHitBackVelocitAndGravity((void))
 0002:800E3B20       CocoNutBall::isHitBackRight(const(void))
 0002:800E3BD0       CocoNutBall::isHitBackFront(const(void))
 0002:800E3C78       CocoNutBall::calcHitBackDstPos((JGeometry::TVec3<f> *,bool,bool))
 0002:800E3D88       CocoNutBall::tryToKill((bool))
 0002:800E3E50       CocoNutBall::setVelocityToPlayer((float,float))
 0002:800E414C       CocoNutBall::freeze((void))
 0002:800E41A0       CocoNutBall::processApproachToPlayer((void))
 0002:800E4298       CocoNutBall::exeThrow((void))
 0002:800E4338       CocoNutBall::exeHitBackToHost((void))
 0002:800E449C       CocoNutBall::exeHitBackToPlayer((void))
 0002:800E4528       CocoNutBall::exeRebound((void))
 0002:800E461C       CocoNutBall::exeFreeze((void))
 0002:800E4854       CocoNutBall::exeFreezeRelease((void))
 0002:800E49A4       CocoSamboHead::CocoSamboHead((LiveActor *))
 0002:800E4A10       CocoSamboHead::init((JMapInfoIter const &))
 0002:800E4B1C       CocoSamboHead::kill((void))
 0002:800E4B70       CocoSamboHead::calcAndSetBaseMtx((void))
 0002:800E4C14       CocoSamboHead::attackSensor((HitSensor *,HitSensor *))
 0002:800E4DC8       CocoSamboHead::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800E4EC0       CocoSamboHead::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800E4F68       CocoSamboHead::updateFrontVecToPlayer((JGeometry::TVec3<f> const &))
 0002:800E5034       CocoSamboHead::exeFall((void))
 0002:800E5238       CocoSamboHead::exeFallLand((void))
 0002:800E52B4       NokonokoLand::exeShellWait((void))
 0002:800E531C       CocoSamboHead::exeSwoonEnd((void))
 0002:800E53A8       CocoSamboHead::exeBlow((void))
 0002:800E54CC       CocoSambo::CocoSambo((char const *))
 0002:800E5560       CocoSambo::init((JMapInfoIter const &))
 0002:800E57AC       CocoSambo::kill((void))
 0002:800E5840       CocoSambo::tryToFallHead((HitSensor const *,HitSensor const *))
 0002:800E590C       CocoSambo::tryToBlow((void))
 0002:800E5A14       CocoSambo::tryStarPieceReflect((void))
 0002:800E5AA0       GameSystemSceneController::startScenarioSelectSceneBackground((void))
 0002:800E5AA8       CocoSambo::calcAndSetBaseMtx((void))
 0002:800E5B20       CocoSambo::attackSensor((HitSensor *,HitSensor *))
 0002:800E5C38       CocoSambo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800E5CB8       CocoSambo::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800E5D54       CocoSambo::initMapToolInfo((JMapInfoIter const &))
 0002:800E5DD8       CocoSambo::initSensor((void))
 0002:800E5ED8       CocoSambo::dirToPlayer((float))
 0002:800E5FD8       CocoSambo::tryDpdPointing((Nerve const *))
 0002:800E6034       CocoSambo::isPointing((void))
 0002:800E60A8       CocoSambo::exeHideWait((void))
 0002:800E6140       CocoSambo::exeAppear((void))
 0002:800E627C       CocoSambo::exeWait((void))
 0002:800E6368       CocoSambo::exeHide((void))
 0002:800E642C       CocoSambo::exeAttack((void))
 0002:800E6518       CocoSambo::exeAttackInterval((void))
 0002:800E65AC       CocoSambo::exeFallHead((void))
 0002:800E66E0       CocoSambo::exeFallHeadHide((void))
 0002:800E6744       CocoSambo::exeRecoverWait((void))
 0002:800E67B0       CocoSambo::exeRecover((void))
 0002:800E6838       CocoSambo::exePressY((void))
 0002:800E68D8       CocoSambo::exeBlow((void))
 0002:800E6994       CocoSambo::exeDpdPointing((void))
 0002:800E6A50       CocoSambo::endDpdPointing((void))
 0002:800E6E04       NrvCocoSamboHead::CocoSamboHeadNrvHeadConnectedBody::execute(const(Spine *))
 0002:800E6E08       MR::Vector<Q22MR36AssignableArray<P16DharmaSamboParts>>::~Vector<Q22MR36AssignableArray<P16DharmaSamboParts>>((void))
 0002:800E6E60       MR::Vector<Q22MR33AssignableArray<P13FixedPosition>>::~Vector<Q22MR33AssignableArray<P13FixedPosition>>((void))
 0002:800E6EB8       JGeometry::TVec3<f>::mul((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800E6EDC       DharmaSambo::DharmaSambo((char const *))
 0002:800E6F6C       DharmaSambo::init((JMapInfoIter const &))
 0002:800E7228       MR::trySetMoveLimitCollision((LiveActor *))
 0002:800E722C       DharmaSambo::appear((void))
 0002:800E72A4       DharmaSambo::kill((void))
 0002:800E733C       DharmaSambo::control((void))
 0002:800E77C4       DharmaSambo::exeWaitUnderGround((void))
 0002:800E78B4       DharmaSambo::exeAppear((void))
 0002:800E79B8       DharmaSambo::exePursue((void))
 0002:800E7B64       DharmaSambo::exeAttack((void))
 0002:800E7D38       DharmaSambo::exeSpinHitted((void))
 0002:800E7F04       DharmaSambo::exeStarPointerBind((void))
 0002:800E7FE4       DharmaSambo::tearDownStarPointerBind((void))
 0002:800E8080       DharmaSambo::exeEscapeRun((void))
 0002:800E8270       DharmaSambo::exeEscapeLand((void))
 0002:800E8434       DharmaSambo::exeTrampleDeath((void))
 0002:800E8510       DharmaSambo::exeHide((void))
 0002:800E8638       DharmaSambo::exeHideAppear((void))
 0002:800E8788       DharmaSambo::exeKilled((void))
 0002:800E887C       DharmaSambo::getHeadParts((void))
 0002:800E88BC       DharmaSambo::isActionEndHead((void))
 0002:800E88FC       DharmaSambo::startActionHead((char const *))
 0002:800E8938       DharmaSambo::startBtkAllParts((char const *))
 0002:800E8A00       DharmaSambo::decCountAndTryToHide((bool))
 0002:800E8A4C       DharmaSambo::isStarPointerPointingParts((void))
 0002:800E8ADC       DharmaSamboParts::DharmaSamboParts((DharmaSambo *,char const *,char const *,float *[4],int,int,int))
 0002:800E8B64       DharmaSamboParts::init((JMapInfoIter const &))
 0002:800E8C4C       DharmaSamboParts::appear((void))
 0002:800E8C8C       DharmaSamboParts::kill((void))
 0002:800E8D2C       DharmaSamboParts::control((void))
 0002:800E8D3C       DharmaSamboParts::exeBlow((void))
 0002:800E8DC4       DharmaSamboParts::exeStarPointerBind((void))
 0002:800E8E20       DharmaSamboParts::setHead((bool))
 0002:800E8EC0       DharmaSambo::calcAndSetBaseMtx((void))
 0002:800E8F18       DharmaSamboParts::calcAndSetBaseMtx((void))
 0002:800E8FC4       DharmaSamboParts::attackSensor((HitSensor *,HitSensor *))
 0002:800E92A8       DharmaSamboParts::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800E9654       NrvHanachan::HanachanPartsNrvStarPointerBind::executeOnEnd(const(Spine *))
 0002:800E9748       FixedPosition::copyRotate(const(JGeometry::TVec3<f> *))
 0002:800E9868       MR::AssignableArray<P13FixedPosition>::~AssignableArray<P13FixedPosition>((void))
 0002:800E98C8       MR::AssignableArray<P16DharmaSamboParts>::~AssignableArray<P16DharmaSamboParts>((void))
 0002:800E9928       DharmaSambo::~DharmaSambo((void))
 0002:800E99FC       Dossun::Dossun((char const *))
 0002:800E9A7C       Dossun::init((JMapInfoIter const &))
 0002:800E9BC8       Dossun::appear((void))
 0002:800E9C48       Dossun::initMapToolInfo((JMapInfoIter const &))
 0002:800E9CE8       Dossun::initShadow((void))
 0002:800E9D5C       Dossun::calcParameters((void))
 0002:800E9EC8       Dossun::getUpperFrame(const(void))
 0002:800E9F94       Dossun::exeUpper((void))
 0002:800E9FFC       Dossun::exeFallSign((void))
 0002:800EA0B0       Dossun::exeFalling((void))
 0002:800EA16C       Dossun::exeOnGround((void))
 0002:800EA21C       Dossun::exeRising((void))
 0002:800EA488       ElectricPressureBullet::ElectricPressureBullet((char const *))
 0002:800EA4E0       ElectricPressureBullet::init((JMapInfoIter const &))
 0002:800EA5E4       FireMarioBall::kill((void))
 0002:800EA638       ElectricPressureBullet::shotElectricBullet((LiveActor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,float const &))
 0002:800EA6F0       ElectricPressureBullet::exeFly((void))
 0002:800EA888       ElectricPressureBullet::control((void))
 0002:800EA8DC       ElectricPressureBullet::attackSensor((HitSensor *,HitSensor *))
 0002:800EA9C8       JGeometry::TQuat4<f>::getXDir(const(JGeometry::TVec3<f> &))
 0002:800EAA2C       EyeBeamer::EyeBeamer((char const *))
 0002:800EAB28       EyeBeamer::init((JMapInfoIter const &))
 0002:800EAD90       EyeBeamer::initStartNerve((JMapInfoIter const &))
 0002:800EAE14       EyeBeamer::initModel((void))
 0002:800EAF34       EyeBeamer::initAfterPlacement((void))
 0002:800EB094       EyeBeamer::initRailMoveFunction((JMapInfoIter const &))
 0002:800EB130       EyeBeamer::updatePoseAndTrans((void))
 0002:800EB1D8       EyeBeamer::updateWaterSurfaceMtx((void))
 0002:800EB2C0       EyeBeamer::control((void))
 0002:800EB310       EyeBeamer::startClipped((void))
 0002:800EB364       EyeBeamer::endClipped((void))
 0002:800EB3CC       EyeBeamer::calcAnim((void))
 0002:800EB468       EyeBeamer::attackSensor((HitSensor *,HitSensor *))
 0002:800EB4E0       EyeBeamer::requestStartPatrol((void))
 0002:800EB52C       EyeBeamer::tryGotoPatrol((void))
 0002:800EB57C       EyeBeamer::tryPatrol((void))
 0002:800EB5CC       EyeBeamer::exeDemoTurn((void))
 0002:800EB6C8       EyeBeamer::exeDemoGotoPatrol((void))
 0002:800EB740       EyeBeamer::exeTurn((void))
 0002:800EB7E4       EyeBeamer::exeGotoPatrol((void))
 0002:800EB82C       EyeBeamer::exePatrol((void))
 0002:800EB948       EyeBeamer::isInBeamRange(const(JGeometry::TVec3<f> const &))
 0002:800EBCD0       FireBall::FireBall((char const *))
 0002:800EBD28       FireBall::init((JMapInfoIter const &))
 0002:800EBE78       FireBall::kill((void))
 0002:800EBEE0       FireBall::appearAndThrow((JGeometry::TVec3<f> const &,float,float))
 0002:800EC0BC       FireBall::control((void))
 0002:800EC12C       FireBall::calcAndSetBaseMtx((void))
 0002:800EC194       FireBall::attackSensor((HitSensor *,HitSensor *))
 0002:800EC250       FireBall::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800EC374       FireBall::tryToKill((void))
 0002:800EC420       FireBall::setVelocityToPlayer((float))
 0002:800EC4C0       FireBall::calcReflectVelocity((void))
 0002:800EC5A8       FireBall::exeThrow((void))
 0002:800EC6B8       FireBall::exeReflect((void))
 0002:800EC7BC       NrvFireBall::FireBallNrvThrow::execute(const(Spine *))
 0002:800EC7C4       JGeometry::TVec3<f>::negate((JGeometry::TVec3<f> const &))
 0002:800EC7E0       FireBubble::FireBubble((char const *))
 0002:800EC87C       FireBubble::init((JMapInfoIter const &))
 0002:800EC9F8       FireBubble::appear((void))
 0002:800ECA54       FireBubble::appear((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800ECAC0       FireBubble::kill((void))
 0002:800ECB0C       FireBubble::calcAndSetBaseMtx((void))
 0002:800ECBB4       FireBubble::attackSensor((HitSensor *,HitSensor *))
 0002:800ECC50       FireBubble::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800ECCD0       FireBubble::initMapToolInfo((JMapInfoIter const &))
 0002:800ECD70       FireBubble::updateChaseFrontVec((float))
 0002:800ECEB8       FireBubble::updateChaseFrontVecAndVelocity((float))
 0002:800ECF18       FireBubble::calcReflectVelocity(const(JGeometry::TVec3<f> *))
 0002:800ECFB8       FireBubble::tryChaseEnd((void))
 0002:800ED014       FireBubble::tryReflect((void))
 0002:800ED0B0       FireBubble::killOrWaitToApppear((void))
 0002:800ED110       FireBubble::exeAppear((void))
 0002:800ED2B8       FireBubble::exeWait((void))
 0002:800ED3C4       FireBubble::exeChase((void))
 0002:800ED49C       FireBubble::exeReflect((void))
 0002:800ED58C       FireBubble::exeReflectLand((void))
 0002:800ED610       FireBubble::exeReflectWait((void))
 0002:800ED6B0       FireBubble::exeDown((void))
 0002:800ED78C       FireBubble::exeWaitToAppear((void))
 0002:800ED95C       Gesso::Gesso((char const *))
 0002:800ED9F4       Gesso::init((JMapInfoIter const &))
 0002:800EDC18       Jellyfish::kill((void))
 0002:800EDC64       Gesso::control((void))
 0002:800EDE00       Gesso::calcAndSetBaseMtx((void))
 0002:800EDE78       Gesso::exeComeFromBox((void))
 0002:800EDF7C       Gesso::exeWait((void))
 0002:800EE084       Gesso::exeSearch((void))
 0002:800EE188       Gesso::exeWalkCharge((void))
 0002:800EE27C       Gesso::exeWalk((void))
 0002:800EE304       Gesso::exeSink((void))
 0002:800EE3CC       Gesso::exeLostPlayer((void))
 0002:800EE490       Gesso::exeAttack((void))
 0002:800EE5D4       Gesso::exePunchDown((void))
 0002:800EE6B4       Gesso::exeComeBack((void))
 0002:800EE808       Gesso::exeRotate((void))
 0002:800EE88C       Gesso::attackSensor((HitSensor *,HitSensor *))
 0002:800EE96C       Gesso::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800EEA28       Gesso::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800EEACC       Gesso::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800EEB5C       Gesso::selectNextNerve((void))
 0002:800EEC04       Gesso::knockOut((HitSensor *,HitSensor *))
 0002:800EEC84       Gesso::clipAndInitPos((void))
 0002:800EED34       Gesso::calcWalkMove((long))
 0002:800EEF74       Gesso::calcSinkMove((long))
 0002:800EF0C8       Gesso::calcAndSetVelocity((float,float,float))
 0002:800EF168       Gesso::calcAndSetUpVecTarget((float,float,float))
 0002:800EF1B0       Gesso::isMarioUp(const(void))
 0002:800EF210       Gesso::isMarioLeft(const(void))
 0002:800EF270       Gesso::tryChangeHighSpeedMode((void))
 0002:800EF2CC       Snakehead::tryDPDSwoon((void))
 0002:800EF584       HammerHeadPackun::HammerHeadPackun((char const *))
 0002:800EF600       HammerHeadPackun::init((JMapInfoIter const &))
 0002:800EF7A0       HammerHeadPackun::kill((void))
 0002:800EF850       HammerHeadPackun::exeWait((void))
 0002:800EF8E0       HammerHeadPackun::exeSearch((void))
 0002:800EF958       HammerHeadPackun::exeAttack((void))
 0002:800EFA44       HammerHeadPackun::exeRest((void))
 0002:800EFAD0       HammerHeadPackun::exeRecover((void))
 0002:800EFB6C       HammerHeadPackun::exeDamage((void))
 0002:800EFC7C       HammerHeadPackun::exeRise((void))
 0002:800EFD78       HammerHeadPackun::exeCrow((void))
 0002:800EFE1C       HammerHeadPackun::exeSmashKill((void))
 0002:800EFED0       HammerHeadPackun::exeBlowKill((void))
 0002:800EFF90       HammerHeadPackun::exeNumb((void))
 0002:800F0080       HammerHeadPackun::calcAndSetBaseMtx((void))
 0002:800F0124       HammerHeadPackun::attackSensor((HitSensor *,HitSensor *))
 0002:800F033C       HammerHeadPackun::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800F056C       HammerHeadPackun::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800F067C       HammerHeadPackun::initPosture((void))
 0002:800F06D8       HammerHeadPackun::initSensor((void))
 0002:800F0838       HammerHeadPackun::initShadow((void))
 0002:800F0890       HammerHeadPackun::initLeaf((JMapInfoIter const &))
 0002:800F0A08       HammerHeadPackun::isTargetInRange(const(void))
 0002:800F0AD4       HammerHeadPackun::isInFieldOfView(const(JGeometry::TVec3<f> const &))
 0002:800F0B5C       HammerHeadPackun::isAttackSensorValid(const(void))
 0002:800F0C6C       HammerHeadPackun::isChance(const(void))
 0002:800F0D40       HammerHeadPackun::calcPlayerDir(const(JGeometry::TVec3<f> *))
 0002:800F0DDC       HammerHeadPackun::turnTo((JGeometry::TVec3<f> const &,float))
 0002:800F0EB4       HammerHeadPackun::turnToAttackVec((long))
 0002:800F0F6C       HammerHeadPackun::verticalizeFrontVec((void))
 0002:800F0FBC       Kanina::tryPointing((void))
 0002:800F1014       HammerHeadPackun::receiveMsgPlayerAttackChance((ulong,HitSensor *,HitSensor *))
 0002:800F12C8       @unnamed@HammerHeadPackun_cpp@::HammerHeadPackunNrvHit::execute(const(Spine *))
 0002:800F1344       HanachanParts::HanachanParts((Hanachan *,long,char const *,char const *))
 0002:800F1458       HanachanParts::init((JMapInfoIter const &))
 0002:800F1624       HanachanParts::kill((void))
 0002:800F16B8       HanachanParts::getCommonGravity(const(void))
 0002:800F1758       HanachanParts::attackSensor((HitSensor *,HitSensor *))
 0002:800F1914       HanachanParts::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800F1D98       HanachanParts::receiveMsgPush((HitSensor *,HitSensor *))
 0002:800F1EA8       HanachanParts::calcAndSetBaseMtx((void))
 0002:800F1FF0       HanachanParts::exeWalk((void))
 0002:800F2130       HanachanParts::exeTrample((void))
 0002:800F230C       HanachanParts::exeBecomeAngry((void))
 0002:800F2440       HanachanParts::exeAngryPursue((void))
 0002:800F2584       HanachanParts::exeAngryEnd((void))
 0002:800F2730       HanachanParts::exeWallHitEnd((void))
 0002:800F2874       HanachanParts::exeOverturn((void))
 0002:800F29C4       HanachanParts::exeOverturnBound((void))
 0002:800F2AF4       HanachanParts::exeOverturnWait((void))
 0002:800F2BFC       HanachanParts::exeRecover((void))
 0002:800F2DDC       HanachanParts::exeHipDropped((void))
 0002:800F2F9C       HanachanParts::exeBlow((void))
 0002:800F3070       HanachanParts::exeStarPointerBind((void))
 0002:800F30D0       HanachanParts::isHeadHitWall((void))
 0002:800F3150       HanachanParts::changeHeadCalmDown((void))
 0002:800F31F0       Hanachan::Hanachan((char const *))
 0002:800F3264       Hanachan::init((JMapInfoIter const &))
 0002:800F3618       Hanachan::kill((void))
 0002:800F3674       Hanachan::startClipped((void))
 0002:800F36D4       Hanachan::endClipped((void))
 0002:800F3734       Hanachan::control((void))
 0002:800F3878       Hanachan::exeWalk((void))
 0002:800F38D4       Hanachan::exeTrample((void))
 0002:800F39CC       Hanachan::exeBecomeAngry((void))
 0002:800F3ADC       Hanachan::exeAngryPursue((void))
 0002:800F3BB0       Hanachan::exeAngryEnd((void))
 0002:800F3D88       Hanachan::exeWallHitEnd((void))
 0002:800F3F00       Hanachan::exeOverturn((void))
 0002:800F402C       Hanachan::exeOverturnWait((void))
 0002:800F40A0       Hanachan::exeOverturnBound((void))
 0002:800F41B4       Hanachan::exeRecover((void))
 0002:800F4314       Hanachan::exeHipDropped((void))
 0002:800F44BC       Hanachan::exeBlow((void))
 0002:800F4548       Hanachan::exeStarPointerBind((void))
 0002:800F45F8       Hanachan::calcNearestInfectionId((void))
 0002:800F46B0       Hanachan::isOwnSensor((HitSensor *))
 0002:800F471C       Hanachan::setNerveBlow((JGeometry::TVec3<f> const &))
 0002:800F4998       Hanachan::applyPlayerHipDropReaction((void))
 0002:800F4A64       Hanachan::setNerveAllParts((Nerve const *))
 0002:800F4ACC       Hanachan::setDelayAllPartsAtId((long,long,long))
 0002:800F4B34       Hanachan::isStarPointerPointing((void))
 0002:800F4BA8       Hanachan::moveHeadAlongRail((float))
 0002:800F4CD8       Hanachan::moveHeadToPlayer((float,float))
 0002:800F4DBC       Hanachan::moveBodyAlongHead((void))
 0002:800F5014       __sinit__Hanachan_cpp
 0002:800F5320       NrvHanachan::HanachanNrvHanachanStarPointerBind::executeOnEnd(const(Spine *))
 0002:800F5484       @unnamed@HomingKiller_cpp@::isSensorType((HitSensor const *,ulong const *,ulong))
 0002:800F54BC       HomingKiller::HomingKiller((char const *))
 0002:800F55BC       HomingKiller::init((JMapInfoIter const &))
 0002:800F59A4       HomingKiller::appear((void))
 0002:800F5A44       HomingKiller::appear((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:800F5AC8       HomingKiller::isMoveStart(const(void))
 0002:800F5B20       HomingKiller::setChaseStartEndDistance((float,float))
 0002:800F5B2C       HomingKiller::control((void))
 0002:800F5DCC       HomingKiller::calcAndSetBaseMtx((void))
 0002:800F5F2C       HomingKiller::attackSensor((HitSensor *,HitSensor *))
 0002:800F607C       HomingKiller::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800F6154       HomingKiller::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800F61DC       MR::tryForceKillIfMsgStartPowerStarGet((LiveActor *,ulong))
 0002:800F61E0       HomingKiller::initMapToolInfo((JMapInfoIter const &))
 0002:800F62B0       HomingKiller::calcInitPosture((void))
 0002:800F6388       HomingKiller::updateVelocity((void))
 0002:800F63DC       HomingKiller::updateRotateZ((JGeometry::TVec3<f> const &))
 0002:800F653C       HomingKiller::processMove((void))
 0002:800F667C       HomingKiller::processChase((void))
 0002:800F684C       HomingKiller::isChaseStart(const(void))
 0002:800F6934       HomingKiller::tryChaseStart((void))
 0002:800F6A04       HomingKiller::tryFreeze((Nerve const *))
 0002:800F6AAC       HomingKiller::tryBindedBreak((void))
 0002:800F6BEC       HomingKiller::tryToExplosion((HitSensor *,HitSensor *))
 0002:800F6C6C       HomingKiller::sendMsgExplosionToNearActor((void))
 0002:800F6CF8       HomingKiller::isUpdateChaseFrontVec(const(JGeometry::TVec3<f> const &))
 0002:800F6DA0       HomingKiller::calcFrontVecToTarget(const(JGeometry::TVec3<f> *))
 0002:800F6E30       HomingKiller::isValidShowModel(const(void))
 0002:800F6EA8       HomingKiller::isWaterBreak(const(void))
 0002:800F6F1C       HomingKiller::updateBaseMtxNoRotateZ((void))
 0002:800F6F8C       HomingKiller::startMoveLevelSound((bool))
 0002:800F707C       HomingKiller::setBckRate((float,bool))
 0002:800F70EC       HomingKiller::isChasing(const(void))
 0002:800F719C       HomingKiller::exeAppear((void))
 0002:800F7520       HomingKiller::exeMoveStart((void))
 0002:800F7594       HomingKiller::exeMove((void))
 0002:800F760C       HomingKiller::exeChaseStart((void))
 0002:800F76D4       HomingKiller::exeChase((void))
 0002:800F773C       HomingKiller::exeFreeze((void))
 0002:800F7988       HomingKiller::exeBreak((void))
 0002:800F7BBC       HomingKiller::exeGoToTarget((void))
 0002:800F7C6C       HomingKillerLauncher::HomingKillerLauncher((char const *))
 0002:800F7CB8       HomingKillerLauncher::init((JMapInfoIter const &))
 0002:800F7DA4       MR::tryForceKillIfMsgStartPowerStarGet((LiveActor *,ulong))
 0002:800F7DA8       HomingKillerLauncher::exeAppearKiller((void))
 0002:800F8068       NrvHomingKiller::HomingKillerNrvAppear::execute(const(Spine *))
 0002:800F8070       MR::Vector<Q22MR31AssignableArray<P11ThrowingIce>>::~Vector<Q22MR31AssignableArray<P11ThrowingIce>>((void))
 0002:800F80C8       IceMerameraKing::IceMerameraKing((char const *))
 0002:800F81D4       IceMerameraKing::init((JMapInfoIter const &))
 0002:800F8734       IceMerameraKing::initAfterPlacement((void))
 0002:800F87BC       IceMerameraKing::kill((void))
 0002:800F8858       IceMerameraKing::control((void))
 0002:800F8A58       IceMerameraKing::exeSearch((void))
 0002:800F8BA0       IceMerameraKing::exeThrow((void))
 0002:800F8DC8       IceMerameraKing::tearDownThrow((void))
 0002:800F8E3C       IceMerameraKing::exeExtinguish((void))
 0002:800F9014       IceMerameraKing::exeEscape((void))
 0002:800F91E4       IceMerameraKing::exeEscapeJump((void))
 0002:800F9370       IceMerameraKing::exeDamage((void))
 0002:800F94E8       IceMerameraKing::exePreRecover((void))
 0002:800F9664       IceMerameraKing::exeRecover((void))
 0002:800F9760       IceMerameraKing::exePreAttack((void))
 0002:800F9808       IceMerameraKing::exeAttack((void))
 0002:800F98F4       IceMerameraKing::exeAttackAfter((void))
 0002:800F99F0       IceMerameraKing::exeAngryDemo((void))
 0002:800F9C9C       IceMerameraKing::exeDeathDemo((void))
 0002:800F9EBC       IceMerameraKing::attackSensor((HitSensor *,HitSensor *))
 0002:800FA008       IceMerameraKing::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800FA13C       IceMerameraKing::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800FA2BC       IceMerameraKing::addVelocityToInitPos((void))
 0002:800FA388       IceMerameraKing::calcAndSetBaseMtx((void))
 0002:800FA3E0       IceMerameraKing::isDeadAllIce((void))
 0002:800FA450       IceMerameraKing::isEnableThrow((void))
 0002:800FA508       IceMerameraKing::getDeadWeaponAndAppear((void))
 0002:800FA5D4       IceMerameraKing::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:800FA6F0       IceMerameraKingShockWave::IceMerameraKingShockWave((void))
 0002:800FA7BC       IceMerameraKingShockWave::appear((void))
 0002:800FA810       IceMerameraKingShockWave::control((void))
 0002:800FA8D4       IceMerameraKingShockWave::attackSensor((HitSensor *,HitSensor *))
 0002:800FA9F4       __sinit__IceMerameraKing_cpp
 0002:800FABE0       NrvIceMerameraKing::HostTypeNrvDeathDemoWait::execute(const(Spine *))
 0002:800FADD8       MR::AssignableArray<P11ThrowingIce>::~AssignableArray<P11ThrowingIce>((void))
 0002:800FAE38       IceMerameraKing::~IceMerameraKing((void))
 0002:800FAF00       ItemGenerator::ItemGenerator((void))
 0002:800FAF10       ItemGenerator::setTypeNone((void))
 0002:800FAF20       ItemGenerator::setTypeCoin((long))
 0002:800FAF30       ItemGenerator::setTypeStarPeace((long))
 0002:800FAF40       ItemGenerator::generate((LiveActor const *))
 0002:800FB03C       Jellyfish::Jellyfish((char const *))
 0002:800FB0BC       Jellyfish::init((JMapInfoIter const &))
 0002:800FB344       Jellyfish::control((void))
 0002:800FB4B0       JellyfishElectric::calcAndSetBaseMtx((void))
 0002:800FB534       Jellyfish::exeWait((void))
 0002:800FB5C8       Jellyfish::exeFind((void))
 0002:800FB65C       Jellyfish::exeThreat((void))
 0002:800FB6E4       Jellyfish::exeDeath((void))
 0002:800FB7CC       Jellyfish::exeAttack((void))
 0002:800FB87C       Jellyfish::exeRailGoal((void))
 0002:800FB904       Jellyfish::attackSensor((HitSensor *,HitSensor *))
 0002:800FBA08       Jellyfish::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800FBAA8       Jellyfish::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800FBB20       Jellyfish::threatTurn((void))
 0002:800FBBB8       Jellyfish::faceToMario((void))
 0002:800FBD78       Jellyfish::knockOut((HitSensor *,HitSensor *))
 0002:800FBDFC       Jellyfish::selectNerveAfterWait((void))
 0002:800FBEEC       Jellyfish::selectNerveThreat((void))
 0002:800FC054       TeresaWater::tryDPDSwoon((void))
 0002:800FC134       __sinit__Jellyfish_cpp
 0002:800FC2B8       NrvJellyfish::JellyfishNrvWaitWithRightTurn::execute(const(Spine *))
 0002:800FC340       JellyfishElectric::JellyfishElectric((char const *))
 0002:800FC3C8       JellyfishElectric::init((JMapInfoIter const &))
 0002:800FC600       JellyfishElectric::kill((void))
 0002:800FC63C       JellyfishElectric::control((void))
 0002:800FC834       JellyfishElectric::exeWait((void))
 0002:800FC8F4       JellyfishElectric::exeDamage((void))
 0002:800FC9A0       JellyfishElectric::exeDeath((void))
 0002:800FCA6C       JellyfishElectric::exeAttack((void))
 0002:800FCAE8       JellyfishElectric::exeRailGoal((void))
 0002:800FCB78       JellyfishElectric::exeDPDSwoon((void))
 0002:800FCBC4       JellyfishElectric::attackSensor((HitSensor *,HitSensor *))
 0002:800FCC6C       JellyfishElectric::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800FCD50       JellyfishElectric::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800FCDB0       JellyfishElectric::waitTurn((void))
 0002:800FCE70       JellyfishElectric::knockOut((void))
 0002:800FCE8C       JellyfishElectric::tryToAttackElectric((HitSensor *,HitSensor *))
 0002:800FCF1C       JellyfishElectric::tryDPDSwoon((void))
 0002:800FCFF4       JellyfishElectric::selectNerveAfterWait((void))
 0002:800FD0F8       __sinit__JellyfishElectric_cpp
 0002:800FD22C       NrvLavaHomeSeesawRotator::HostTypeMove::execute(const(Spine *))
 0002:800FD2A4       Jiraira::Jiraira((char const *))
 0002:800FD2F0       Jiraira::init((JMapInfoIter const &))
 0002:800FD4F4       MechanicKoopaMini::makeActorAppeared((void))
 0002:800FD580       Jiraira::exeWait((void))
 0002:800FD604       Jiraira::exeStepped((void))
 0002:800FD6BC       Jiraira::exeExplode((void))
 0002:800FD814       Jiraira::exePreRecover((void))
 0002:800FD8AC       Jiraira::exeRecover((void))
 0002:800FD93C       Jiraira::attackSensor((HitSensor *,HitSensor *))
 0002:800FDA50       Jiraira::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800FDB00       Jiraira::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:800FDCB8       NrvJiraira::HostTypeNrvWait::execute(const(Spine *))
 0002:800FDCC0       JumpBeamer::JumpBeamer((char const *))
 0002:800FDCFC       JumpEmitter::~JumpEmitter((void))
 0002:800FDD58       JumpBeamer::control((void))
 0002:800FDDEC       JumpBeamer::init((JMapInfoIter const &))
 0002:800FE144       SignBoard::attackSensor((HitSensor *,HitSensor *))
 0002:800FE194       JumpGuarder::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:800FE2A8       JumpBeamer::syncSwitchOffB((void))
 0002:800FE310       RingBeamer::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:800FE374       JumpBeamer::exeHide((void))
 0002:800FE45C       JumpBeamer::exeUp((void))
 0002:800FE548       JumpBeamer::exeWait((void))
 0002:800FE5F8       JumpGuarder::exeDown((void))
 0002:800FE6D8       JumpBeamer::exeHopStart((void))
 0002:800FE7B0       JumpBeamer::exeHopWait((void))
 0002:800FE854       JumpGuarder::exeHopJump((void))
 0002:800FE8D0       JumpBeamer::exeHopEnd((void))
 0002:800FE9A4       JumpGuarder::exePreOpen((void))
 0002:800FEA38       JumpBeamer::exeOpen((void))
 0002:800FEB50       JumpBeamer::exeClose((void))
 0002:800FEBB4       JumpBeamer::exeInter((void))
 0002:800FEF30       JumpEmitter::JumpEmitter((char const *))
 0002:800FEFD0       JumpEmitter::initEventCamera((JMapInfoIter const &))
 0002:800FF05C       JumpEmitter::startEventCamera((void))
 0002:800FF0B0       JumpEmitter::updateEventCamera((void))
 0002:800FF168       JumpEmitter::endEventCamera((void))
 0002:800FF194       JumpEmitter::updateRotate((void))
 0002:800FF4D4       JumpGuarder::control((void))
 0002:800FF580       JumpGuarder::exeHide((void))
 0002:800FF638       JumpGuarder::exeUp((void))
 0002:800FF71C       JumpGuarder::exeWait((void))
 0002:800FF88C       JumpGuarder::exeHopStart((void))
 0002:800FF9AC       JumpGuarder::exeHopWait((void))
 0002:800FFACC       JumpGuarder::exeHopEnd((void))
 0002:800FFC34       JumpGuarder::exeOpen((void))
 0002:8010003C       JumpGuarder::exeClose((void))
 0002:801000BC       JumpGuarder::exeInter((void))
 0002:8010013C       JumpGuarder::JumpGuarder((char const *))
 0002:801001A0       JumpGuarder::init((JMapInfoIter const &))
 0002:801004CC       NPCDirector::NPCDirector((void))
 0002:80100568       JumpGuarder::attackSensor((HitSensor *,HitSensor *))
 0002:801006AC       JumpGuarder::enableAttack((void))
 0002:80100738       JumpGuarder::isHit(const(LiveActor const *))
 0002:80100774       MR::enableGroupAttack((LiveActor *,float,float))
 0002:80100A68       JumpSpider::JumpSpider((char const *))
 0002:80100AD8       JumpSpider::init((JMapInfoIter const &))
 0002:80100D00       JumpSpider::initAfterPlacement((void))
 0002:80100E04       KoteBug::kill((void))
 0002:80100ED0       JumpSpider::control((void))
 0002:80100FB4       JumpSpider::exeWait((void))
 0002:80101034       JumpSpider::exePreJump((void))
 0002:801010C8       JumpSpider::exeJump((void))
 0002:801011F0       JumpSpider::exeJumpEnd((void))
 0002:80101268       JumpSpider::exeHitToPlayer((void))
 0002:80101344       JumpSpider::exeStampFall((void))
 0002:801013CC       JumpSpider::exeStampDeath((void))
 0002:80101480       JumpSpider::exeHitBlow((void))
 0002:80101520       JumpSpider::exeDpdPointed((void))
 0002:801015B4       JumpSpider::exeNoPowerStart((void))
 0002:801016D0       JumpSpider::exeNoPowerLand((void))
 0002:80101758       JumpSpider::exeNoPowerWait((void))
 0002:801017F0       JumpSpider::exeNoPowerEnd((void))
 0002:80101878       JumpSpider::attackSensor((HitSensor *,HitSensor *))
 0002:80101A68       JumpSpider::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80101BF4       JumpSpider::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80101CA4       JumpSpider::calcAndSetBaseMtx((void))
 0002:80101F2C       NrvJumpSpider::HostTypeNrvDpdPointed::executeOnEnd(const(Spine *))
 0002:80101FCC       Kabokuri::Kabokuri((char const *))
 0002:80102050       Kabokuri::init((JMapInfoIter const &))
 0002:80102328       Kabokuri::initSensor((void))
 0002:801023CC       Kabokuri::control((void))
 0002:80102420       Kabokuri::calcAndSetBaseMtx((void))
 0002:80102480       Kabokuri::updatePose((void))
 0002:80102598       TakoHei::updateSwoonVelocity((void))
 0002:80102608       Kabokuri::addVelocityToRailPoint((float))
 0002:80102754       Kabokuri::attackSensor((HitSensor *,HitSensor *))
 0002:80102848       Kabokuri::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801029B8       Kabokuri::requestHipDropped((void))
 0002:80102A14       Kabokuri::requestHitAttacked((HitSensor *,HitSensor *))
 0002:80102A94       Kabokuri::tryPointBind((void))
 0002:80102AF0       Kabokuri::exeWait((void))
 0002:80102B5C       Kabokuri::exeWalk((void))
 0002:80102C04       Kabokuri::exeDropFire((void))
 0002:80102C7C       Kabokuri::exeStarPieceHitted((void))
 0002:80102CE4       Kabokuri::exeTrampled((void))
 0002:80102DCC       Kabokuri::exeHipDropped((void))
 0002:80102E4C       Kabokuri::exeHitAttacked((void))
 0002:80102F5C       Kabokuri::exeBreak((void))
 0002:801033F4       KabokuriFire::KabokuriFire((char const *))
 0002:80103438       KabokuriFire::init((JMapInfoIter const &))
 0002:801034F0       KabokuriFire::start((JGeometry::TVec3<f> const &,bool))
 0002:8010359C       KabokuriFire::attackSensor((HitSensor *,HitSensor *))
 0002:801035C0       KabokuriFire::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8010363C       KabokuriFire::exeWait((void))
 0002:80103750       KabokuriFireHolder::KabokuriFireHolder((void))
 0002:801037E8       DeriveActorGroup<12KabokuriFire>::~DeriveActorGroup<12KabokuriFire>((void))
 0002:80103844       KabokuriFireHolderFunc::createHolder((void))
 0002:8010384C       KabokuriFireHolderFunc::getDeadMember((void))
 0002:8010389C       KabokuriFireHolderFunc::generateFire((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:80103970       Kameck::Kameck((char const *))
 0002:80103A54       Kameck::init((JMapInfoIter const &))
 0002:80103C58       Kameck::initBeam((void))
 0002:80103CB0       Kameck::initJMapParam((JMapInfoIter const &))
 0002:80103D58       Kameck::initDemo((JMapInfoIter const &))
 0002:80103E9C       Kameck::kill((void))
 0002:80103EE8       Kameck::control((void))
 0002:80103F78       Kameck::calcAndSetBaseMtx((void))
 0002:80103FD8       Kameck::attackSensor((HitSensor *,HitSensor *))
 0002:8010404C       Kameck::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80104160       TrickRabbitSnow::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801041C0       LuigiNPC::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80104218       Kameck::requestAttack((HitSensor *,HitSensor *))
 0002:801042D0       Kameck::requestDown((HitSensor *,HitSensor *))
 0002:80104368       Kameck::requestGuard((HitSensor *,HitSensor *))
 0002:8010442C       ChipBase::requestHide((void))
 0002:80104498       PrizeRing::appear((void))
 0002:801044EC       Kameck::killForce((void))
 0002:80104544       Kameck::makeActorDeadForce((void))
 0002:80104664       Kameck::tryOpeningDemoEnd((void))
 0002:801046AC       Kameck::tryNonActive((void))
 0002:80104708       Kameck::setNonActive((void))
 0002:801047B8       Kameck::tryAppearEnd((void))
 0002:80104814       Kameck::tryAttackWait((void))
 0002:801048C8       SpinDriver::tryEndCoolDown((void))
 0002:80104918       BigBubble::tryAppearEnd((void))
 0002:80104A00       Kameck::tryMoveEnd((void))
 0002:80104A50       Kameck::tryPointBind((void))
 0002:80104AA8       Kameck::exeOpeningDemo((void))
 0002:80104B10       Kameck::exeDemoAppear((void))
 0002:80104C08       Kameck::exeNonActive((void))
 0002:80104C60       Kameck::exeAppear((void))
 0002:80104D3C       Kameck::exeWait((void))
 0002:80104DC0       Kameck::exeAttackWait((void))
 0002:80104E60       Kameck::exeGuard((void))
 0002:80104ED8       Kameck::exeAttack((void))
 0002:80104FA4       Kameck::exeHit((void))
 0002:80105004       Kameck::exeMoveHide((void))
 0002:801050B8       Kameck::exeMove((void))
 0002:801051FC       Kameck::exeDown((void))
 0002:801052CC       Kameck::exePressDown((void))
 0002:80105388       Kameck::resetBeam((void))
 0002:801053D8       BezierSurface::setDivideLevel((long))
 0002:801053E0       Kameck::canNonActive(const(void))
 0002:8010540C       SpaceCocoon::isKinopioAttached(const(void))
 0002:801054A0       Tamakoro::isEnableBallBind(const(void))
 0002:80105548       Kameck::isEnableDown(const(void))
 0002:801055CC       MR::createFireBallBeamKameck((char const *))
 0002:80105614       MR::createTurtleBeamKameck((char const *))
 0002:801057F8       NrvKuribo::KuriboNrvBindStarPointer::executeOnEnd(const(Spine *))
 0002:80105810       NrvKuribo::KuriboNrvBindStarPointer::execute(const(Spine *))
 0002:801059B0       KameckBeamEventListener::KameckBeamEventListener((void))
 0002:801059C0       KameckBeamCollisionFilter::KameckBeamCollisionFilter((JGeometry::TVec3<f> const *,float))
 0002:801059D8       KameckBeamCollisionFilter::isInvalidParts(const(CollisionParts const *))
 0002:80105A60       KameckBeam::KameckBeam((char const *))
 0002:80105B00       KameckBeam::init((JMapInfoIter const &))
 0002:80105CB4       KameckBeam::calcAnim((void))
 0002:80105CD8       KameckBeam::attackSensor((HitSensor *,HitSensor *))
 0002:80105DFC       KameckBeam::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80105E8C       KameckBeam::setWandLocalPosition((JGeometry::TVec3<f> const &))
 0002:80105EA4       KameckBeam::resetBeam((void))
 0002:80105F64       KameckBeam::requestFollowWand((float *[4],float))
 0002:8010603C       KameckBeam::requestShootToPlayerGround((float))
 0002:801060E8       KameckBeam::requestShootToPlayerCenter((float))
 0002:8010618C       KameckBeam::requestShoot((JGeometry::TVec3<f> const &,float))
 0002:80106228       KameckBeam::requestStorm((HitSensor *,HitSensor *))
 0002:801062F0       KameckBeam::tryShootEnd((void))
 0002:80106398       KameckBeam::tryChangeTurtle((void))
 0002:80106428       KameckBeam::tryChangeFire((void))
 0002:801065AC       KameckBeam::exeShoot((void))
 0002:80106694       KameckBeam::exeExplosion((void))
 0002:80106768       KameckBeam::exeJetTurtle((void))
 0002:801067D4       KameckBeam::exeFire((void))
 0002:801068A0       KameckBeam::startBeamLevelSound((void))
 0002:801068BC       MR::startDPDFreezeLevelSound((LiveActor const *))
 0002:801068F0       KameckBeam::emitBeamEffect((void))
 0002:80106960       MR::setKameckBeamCollisionFilter((LiveActor *))
 0002:80106AD0       KameckBeamHolder::KameckBeamHolder((void))
 0002:80106BC4       KameckFireBallHolder::KameckFireBallHolder((void))
 0002:80106CCC       KameckBeamTurtleHolder::KameckBeamTurtleHolder((void))
 0002:80106DD4       MR::createKameckBeamHolder((void))
 0002:80106DDC       MR::createKameckFireBallHolder((void))
 0002:80106DE4       MR::createKameckBeamTurtleHolder((void))
 0002:80106DEC       MR::startFollowKameckBeam((long,float *[4],float,JGeometry::TVec3<f> const &,KameckBeamEventListener *))
 0002:80106E90       MR::getKameckBeam((void))
 0002:80106EE0       MR::getKameckFireBall((void))
 0002:80106F30       MR::getKameckBeamTurtle((void))
 0002:80107088       KameckFireBall::KameckFireBall((char const *))
 0002:801070E4       KameckFireBall::init((JMapInfoIter const &))
 0002:80107208       ItemBlock::kill((void))
 0002:8010729C       KameckFireBall::makeActorDead((void))
 0002:801072D0       KameckFireBall::control((void))
 0002:80107360       KameckFireBall::attackSensor((HitSensor *,HitSensor *))
 0002:80107410       KameckFireBall::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801074F8       KameckFireBall::appearDirection((JGeometry::TVec3<f> const &))
 0002:801075B0       ChipBase::setHost((LiveActor *))
 0002:801075B8       KameckFireBall::exeWait((void))
 0002:8010771C       KameckFireBall::exeSweep((void))
 0002:801077DC       __sinit__KameckFireBall_cpp
 0002:80107850       KameckHolder::KameckHolder((long))
 0002:80107898       DeriveActorGroup<6Kameck>::~DeriveActorGroup<6Kameck>((void))
 0002:801078F4       KameckHolder::startDemoAppear((void))
 0002:80107968       KameckHolder::endDemoAppear((void))
 0002:801079C0       KameckHolder::deadForceAll((void))
 0002:80107A84       KameckTurtle::KameckTurtle((char const *))
 0002:80107AF8       KameckTurtle::init((JMapInfoIter const &))
 0002:80107C20       KameckTurtle::initJetTurtle((void))
 0002:80107C7C       KameckTurtle::makeActorAppeared((void))
 0002:80107CEC       KameckTurtle::makeActorDead((void))
 0002:80107D34       KameckTurtle::control((void))
 0002:80107D88       KameckTurtle::attackSensor((HitSensor *,HitSensor *))
 0002:80107E74       KameckTurtle::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80107ED0       KameckTurtle::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80107F3C       KameckTurtle::appearDirection((JGeometry::TVec3<f> const &))
 0002:80107FE0       KameckTurtle::exeRun((void))
 0002:80108218       KameckTurtle::exeWait((void))
 0002:801082BC       KameckTurtle::isEnableAttack(const(void))
 0002:80108308       KameckTurtle::appearJetTurtle((bool))
 0002:8010845C       @unnamed@Kanina_cpp@::getRunAwayBreakTimeRandom((void))
 0002:801084EC       Kanina::Kanina((char const *))
 0002:8010859C       Kanina::init((JMapInfoIter const &))
 0002:80108808       MR::trySetMoveLimitCollision((LiveActor *))
 0002:80108860       Kanina::appearItemPunch((void))
 0002:801088F0       Kanina::appearItemTrample((void))
 0002:8010895C       Kanina::attackSensor((HitSensor *,HitSensor *))
 0002:80108A34       Kanina::tryAttack((HitSensor *,HitSensor *))
 0002:80108B14       Kanina::tryPushEach((HitSensor *,HitSensor *))
 0002:80108C74       Kanina::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80108DFC       Kanina::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80108ED4       Kanina::receivePunch((HitSensor *,HitSensor *))
 0002:80108FEC       Kanina::receiveInvincibleAttack((HitSensor *,HitSensor *))
 0002:80109054       Kanina::doDamageFireBall((HitSensor *,HitSensor *))
 0002:801090E0       Kanina::startRun((void))
 0002:801093B4       Kanina::startRunAwayLevelSound((void))
 0002:80109438       Kanina::receiveHipDrop((HitSensor *,HitSensor *))
 0002:8010950C       Kanina::calcAndSetBaseMtx((void))
 0002:801095D8       Kanina::control((void))
 0002:80109684       Kanina::isStateStayOnGround(const(void))
 0002:80109710       Kanina::initForType((JMapInfoIter const &,Kanina::KaninaType))
 0002:8010976C       Kanina::isPlayerBackward(const(float))
 0002:801097E0       Kanina::isStatePossibleToAttack(const(void))
 0002:8010989C       Meramera::isAffectedSpin(const(void))
 0002:8010999C       Kanina::updateMovement((void))
 0002:80109AA0       Kanina::tryFindPlayer((void))
 0002:80109B20       Kanina::tryHitWall((void))
 0002:80109BBC       Kanina::tryTurn((void))
 0002:80109C78       Kanina::exeAppear((void))
 0002:80109D14       Kanina::exeWait((void))
 0002:80109E14       Kanina::exeWalk((void))
 0002:80109FCC       Kanina::exeRunAway((void))
 0002:8010A0B8       Kanina::exeRunAwayReboundDirection((void))
 0002:8010A1EC       Kanina::exeRunAwayBreak((void))
 0002:8010A2C4       Kanina::exeAttack((void))
 0002:8010A3C4       Kanina::exeHitWall((void))
 0002:8010A4BC       Kanina::exeReboundEach((void))
 0002:8010A53C       Kanina::exeGuard((void))
 0002:8010A63C       Kanina::exeDamageHipDrop((void))
 0002:8010A720       Kanina::exeDamageFireBall((void))
 0002:8010A7D0       Kanina::exeDig((void))
 0002:8010A854       Kanina::exeWaitUnderGround((void))
 0002:8010A8E8       Kanina::exeFindPlayer((void))
 0002:8010A974       Kanina::exeTurn((void))
 0002:8010A9E8       Kanina::exeTurnEnd((void))
 0002:8010AA50       Kanina::exePointing((void))
 0002:8010AB54       __sinit__StageResultInformer_cpp
 0002:8010AE40       Karikari::Karikari((char const *))
 0002:8010AEB4       Karikari::init((JMapInfoIter const &))
 0002:8010B070       Karikari::applyEnvironmentInfluenceToVelocity((void))
 0002:8010B1E8       Karikari::killedInFrozenState((void))
 0002:8010B284       Karikari::control((void))
 0002:8010B2F8       Karikari::exeFall((void))
 0002:8010B3E4       Karikari::exeLand((void))
 0002:8010B5B0       Karikari::exeNoCalcWait((void))
 0002:8010B634       Karikari::exeWait((void))
 0002:8010B760       Karikari::exePrePursue((void))
 0002:8010B908       Karikari::exePursue((void))
 0002:8010BB5C       Karikari::exeWatchFor((void))
 0002:8010BD18       Karikari::exePreCling((void))
 0002:8010BEB4       Karikari::exeCling((void))
 0002:8010BFAC       Karikari::exeRelease((void))
 0002:8010C070       Karikari::exeSpinAttacked((void))
 0002:8010C180       Karikari::exeDPDAttacked((void))
 0002:8010C2B0       Karikari::exeFrozen((void))
 0002:8010C3D0       Karikari::exeFrozenRecover((void))
 0002:8010C534       Karikari::exeBlowOut((void))
 0002:8010C69C       Karikari::exeInTornado((void))
 0002:8010C7CC       Karikari::exePress((void))
 0002:8010C8C4       Karikari::tryBlowOut((JGeometry::TVec3<f> const &,bool))
 0002:8010CA5C       Karikari::tryElectricKill((void))
 0002:8010CAF0       Karikari::tryHipDropRelease((void))
 0002:8010CB90       Karikari::tryDPDRelease((JGeometry::TVec2<f> const &))
 0002:8010CBCC       Karikari::tryDPDAttacked((void))
 0002:8010CD80       Karikari::setVelocityFromCursorMove((JGeometry::TVec2<f> const &))
 0002:8010CE94       Karikari::makeActorDead((void))
 0002:8010CF68       Karikari::generateItem((long))
 0002:8010D000       Karikari::attackSensor((HitSensor *,HitSensor *))
 0002:8010D178       Karikari::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8010D1F4       Karikari::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8010D2D0       Karikari::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8010D3DC       Karikari::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8010D654       Karikari::tryTurnToDirection((JGeometry::TVec3<f> const &,float))
 0002:8010D830       Karikari::calcAndSetBaseMtx((void))
 0002:8010DB54       JGeometry::TVec2<f>::squared(const(void))
 0002:8010DB6C       KarikariDirector::KarikariDirector((char const *))
 0002:8010DCCC       KarikariDirector::isMaxNumCling(const(void))
 0002:8010DCD0       MR::isMsgPlayerUpperPunch((ulong))
 0002:8010DCE0       KarikariDirector::removeAllClingingKarikari((void))
 0002:8010DD4C       KarikariDirector::blowOutAllClingingKarikari((JGeometry::TVec3<f> const &))
 0002:8010DDB4       KarikariDirector::electricKillAllClingingKarikari((void))
 0002:8010DE10       KarikariDirector::movement((void))
 0002:8010DF60       KarikariDirector::clearScratchInfo((void))
 0002:8010DF88       KarikariDirector::requestRelease((Karikari *,JGeometry::TVec2<f>,float))
 0002:8010DFD0       KarikariDirector::registCling((Karikari *))
 0002:8010E030       KarikariDirector::unregistCling((Karikari *))
 0002:8010E078       MR::getKarikariClingNum((void))
 0002:8010E0BC       MR::getClingNumMax((void))
 0002:8010E100       MR::removeAllClingingKarikari((void))
 0002:8010E198       Karon::Karon((char const *))
 0002:8010E1EC       Karon::init((JMapInfoIter const &))
 0002:8010E464       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8010E468       MechanicKoopaMini::kill((void))
 0002:8010E4D4       Karon::exeFixWait((void))
 0002:8010E578       Karon::exeWait((void))
 0002:8010E6C4       Karon::exeWalk((void))
 0002:8010E7C4       Karon::exeTurn((void))
 0002:8010E8F4       Karon::exeWalkOnRail((void))
 0002:8010E99C       Karon::exeSearch((void))
 0002:8010EA34       Karon::exePursue((void))
 0002:8010EAF0       Karon::exeBroken((void))
 0002:8010EC80       Karon::exeStepBroken((void))
 0002:8010EE10       Karon::exeRecover((void))
 0002:8010EEF4       Karon::exeHitReaction((void))
 0002:8010F088       Karon::exeDeath((void))
 0002:8010F144       Karon::exeSinkDown((void))
 0002:8010F240       Karon::exeBindStarPointer((void))
 0002:8010F278       Karon::control((void))
 0002:8010F48C       Karon::isFallNextMove((bool))
 0002:8010F4F8       Karon::attackSensor((HitSensor *,HitSensor *))
 0002:8010F748       Karon::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8010F958       Karon::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8010F9E4       Karon::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8010FAA4       SpaceMine::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8010FB34       Karon::calcAndSetBaseMtx((void))
 0002:8010FE28       Kiraira::Kiraira((char const *))
 0002:8010FEAC       Kiraira::init((JMapInfoIter const &))
 0002:801100DC       Kiraira::calcAndSetBaseMtx((void))
 0002:80110124       Kiraira::exeWait((void))
 0002:801101B4       Kiraira::exeFaceToMario((void))
 0002:80110270       Kiraira::exeFaceToMarioAndStare((void))
 0002:80110314       Kiraira::exeBeExploded((void))
 0002:8011036C       Kiraira::exeDead((void))
 0002:8011046C       Kiraira::exeRecoverSign((void))
 0002:8011051C       Kiraira::exeRecover((void))
 0002:80110664       Kiraira::attackSensor((HitSensor *,HitSensor *))
 0002:80110834       Kiraira::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011097C       Kiraira::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80110A3C       Kiraira::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80110AF4       Kiraira::openEyes((void))
 0002:80110B68       Kiraira::closeEyes((void))
 0002:80110BC0       Kiraira::drift((void))
 0002:80110D3C       Kiraira::driftOnRail((void))
 0002:80110DA4       Kiraira::explode((void))
 0002:80110FA8       NrvNoteCounter::NoteCounterNrvHide::execute(const(Spine *))
 0002:80111000       KirairaChain::~KirairaChain((void))
 0002:8011105C       KirairaChain::KirairaChain((LiveActor const *))
 0002:801112F0       KirairaChain::init((JMapInfoIter const &))
 0002:801113D4       KirairaChain::initPoints((void))
 0002:80111584       KirairaChain::control((void))
 0002:80111688       KirairaChain::updatePoints((void))
 0002:80111AB8       KirairaChain::restrictPointFromTop((long,long,JGeometry::TVec3<f> const &,float))
 0002:80111BA0       KirairaChain::restrictPointFromBottom((long,long,JGeometry::TVec3<f> const &,float))
 0002:80111C88       KirairaChain::restrictPointFromTopAndCalcAxis((long,long,JGeometry::TVec3<f> const &,float))
 0002:80111D5C       KirairaChain::restrictPointFromBottomAndCalcAxis((long,long,JGeometry::TVec3<f> const &,float))
 0002:80111E30       KirairaChain::draw(const(void))
 0002:80111F28       MR::clamp((long,long,long))
 0002:80111F4C       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setEulerZ((float))
 0002:80111FDC       KoopaJrShip::KoopaJrShip((char const *))
 0002:801120C4       KoopaJrShip::init((JMapInfoIter const &))
 0002:80112310       KoopaJrShip::initAfterPlacement((void))
 0002:80112348       KoopaJrShip::kill((void))
 0002:80112380       KoopaJrShip::control((void))
 0002:8011250C       KoopaJrShip::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80112578       KoopaJrShip::initShells((void))
 0002:801125E8       KoopaJrShip::initKoopaJr((JMapInfoIter const &))
 0002:801126B4       KoopaJrShip::initKameck((JMapInfoIter const &))
 0002:80112734       KoopaJrShip::initKiller((void))
 0002:801127AC       KoopaJrShip::receiveMsgJetTurtleAttack((HitSensor *,HitSensor *))
 0002:8011295C       KoopaJrShip::getNumShootShells(const(void))
 0002:801129B4       KoopaJrShip::getPropellerRotSpeed(const(void))
 0002:80112A68       KoopaJrShip::updateCoordSpeed((void))
 0002:80112B74       KoopaJrShip::calcLauncherInfo(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,long))
 0002:80112BE8       KoopaJrShip::calcLauncherInfoKiller(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,long))
 0002:80112CF4       KoopaJrShip::shootShell((long))
 0002:80112D94       KoopaJrShip::tryShootAllKillers((void))
 0002:80112E58       KoopaJrShip::shootKiller((long))
 0002:80112EE4       KoopaJrShip::shootKillersAfterDamage((void))
 0002:80112F40       KoopaJrShip::isExistActiveKiller(const(void))
 0002:80112FB0       KoopaJrShip::isExistActiveKameck(const(void))
 0002:80113040       KoopaJrShip::shootMainShells((void))
 0002:8011318C       KoopaJrShip::emitDamageSmokeEffect((void))
 0002:801131BC       KoopaJrShip::emitDamageHitEffect((void))
 0002:80113250       KoopaJrShip::updateKoopaJrPos((void))
 0002:80113304       KoopaJrShip::updateKillerPos((void))
 0002:80113398       KoopaJrShip::killAllSubModels((void))
 0002:801133FC       KoopaJrShip::setStateTurnFront((void))
 0002:8011346C       KoopaJrShip::exeAppear((void))
 0002:8011354C       KoopaJrShip::exeMove((void))
 0002:80113670       KoopaJrShip::exeMoveFrontAttack((void))
 0002:8011375C       KoopaJrShip::exeShoot((void))
 0002:80113814       KoopaJrShip::exeShootMain((void))
 0002:801138D4       KoopaJrShip::exeStopAtEnd((void))
 0002:80113954       KoopaJrShip::exePowerUp((void))
 0002:801139A0       KoopaJrShip::exeDamage((void))
 0002:80113AF0       KoopaJrShip::exeBreakStart((void))
 0002:80113CB0       KoopaJrShip::exeBreak((void))
 0002:80113E88       KoopaJrShip::exeTurnFront((void))
 0002:80114174       NrvKoopaJrShip::HostTypeBreakEnd::execute(const(Spine *))
 0002:801142D0       KoopaJrShip::~KoopaJrShip((void))
 0002:8011432C       KoopaJrShipCannonMainShell::KoopaJrShipCannonMainShell((char const *))
 0002:801143DC       KoopaJrShipCannonMainShell::init((JMapInfoIter const &))
 0002:80114544       KoopaJrShipCannonMainShell::kill((void))
 0002:801145A8       KoopaJrShipCannonMainShell::attackSensor((HitSensor *,HitSensor *))
 0002:80114678       KoopaJrShipCannonMainShell::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801146DC       KoopaJrShipCannonMainShell::launch((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801147A0       KoopaJrShipCannonShell::explosion((void))
 0002:80114818       KoopaJrShipCannonMainShell::exeFly((void))
 0002:801148E4       CannonShellUtil::registerKoopaJrShipCannonMainShell((CannonShellHolder *,int))
 0002:80114A28       CannonShellBase::getLifeTime(const(void))
 0002:80114A38       KoopaJrShipCannonShell::KoopaJrShipCannonShell((char const *))
 0002:80114ADC       KoopaJrShipCannonShell::init((JMapInfoIter const &))
 0002:80114C8C       KoopaJrShipCannonShell::kill((void))
 0002:80114CDC       KoopaJrShipCannonShell::attackSensor((HitSensor *,HitSensor *))
 0002:80114DB4       KoopaJrShipCannonShell::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80114EF0       KoopaJrShipCannonShell::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80114F78       KoopaJrShipCannonShell::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80114FE8       KoopaJrShipCannonShell::launch((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801150A0       KoopaJrShipCannonShell::tryFreeze((void))
 0002:8011512C       KoopaJrShipCannonShell::isStateEnableExplosion(const(void))
 0002:80115240       KoopaJrShipCannonShell::misfire((void))
 0002:801152B8       KoopaJrShipCannonShell::exeFly((void))
 0002:80115380       KoopaJrShipCannonShell::exeDown((void))
 0002:8011549C       KoopaJrShipCannonShell::exeFreeze((void))
 0002:80115668       CannonShellUtil::registerKoopaJrShipCannonShell((CannonShellHolder *,int))
 0002:8011580C       KoteBug::KoteBug((char const *))
 0002:80115894       KoteBug::init((JMapInfoIter const &))
 0002:80115C7C       KoteBug::control((void))
 0002:80115EBC       KoteBug::exeNoCalcWait((void))
 0002:80115F3C       KoteBug::exeWait((void))
 0002:8011602C       KoteBug::exeSearch((void))
 0002:801160E4       KoteBug::exeEscapeSearch((void))
 0002:801161BC       KoteBug::exePreEscape((void))
 0002:80116260       KoteBug::exeFlyStart((void))
 0002:8011630C       KoteBug::exeFlyPursue((void))
 0002:801164E0       KoteBug::exeFlyPursueLast((void))
 0002:80116654       KoteBug::exeOverturnFall((void))
 0002:80116734       KoteBug::exeOverturn((void))
 0002:801167E8       KoteBug::exePreRecover((void))
 0002:8011687C       KoteBug::exeRecover((void))
 0002:80116958       KoteBug::exeHitToPlayer((void))
 0002:80116A24       KoteBug::exeBlow((void))
 0002:80116AE8       KoteBug::exeStampDeath((void))
 0002:80116BBC       KoteBug::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80116E98       KoteBug::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80116FA8       KoteBug::setOverturnFall((HitSensor *,HitSensor *))
 0002:80117064       KoteBug::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80117164       KoteBug::attackSensor((HitSensor *,HitSensor *))
 0002:801172BC       KoteBug::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80117374       KoteBug::calcAndSetBaseMtx((void))
 0002:80117444       KoteBug::calcJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8011751C       __sinit__StinkBugParent_cpp
 0002:80117778       NrvKoteBug::HostTypeNrvNoCalcWait::executeOnEnd(const(Spine *))
 0002:80117930       @unnamed@Kuribo_cpp@::KuriboParam::KuriboParam((void))
 0002:801179E4       Kuribo::Kuribo((char const *))
 0002:80117A80       Kuribo::init((JMapInfoIter const &))
 0002:80117D60       Kuribo::initAfterPlacement((void))
 0002:80117DA0       Kuribo::initState((void))
 0002:80117E98       Kuribo::initSensor((void))
 0002:80117F4C       Kuribo::initAppearState((JMapInfoIter const &))
 0002:80117FE8       KuriboMini::makeActorAppeared((void))
 0002:80118020       LiveActor::makeActorDead((void))
 0002:80118024       Kuribo::kill((void))
 0002:801180A8       Kuribo::control((void))
 0002:80118198       KuriboMini::calcAndSetBaseMtx((void))
 0002:801181F8       Kuribo::attackSensor((HitSensor *,HitSensor *))
 0002:80118304       Kuribo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80118454       Kuribo::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8011851C       Kuribo::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801185DC       Kuribo::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80118684       Kuribo::requestDead((void))
 0002:80118730       Kuribo::requestFlatDown((HitSensor *,HitSensor *))
 0002:80118814       Kuribo::requestHipDropDown((HitSensor *,HitSensor *))
 0002:801188E0       Kuribo::requestPressDown((void))
 0002:80118998       Kuribo::requestStagger((HitSensor *,HitSensor *))
 0002:80118A04       Kuribo::requestBlowDown((HitSensor *,HitSensor *))
 0002:80118A90       Kuribo::requestAttackSuccess((void))
 0002:80118AEC       Kuribo::onNoGravitySupport((void))
 0002:80118AF8       Kuribo::setUp((JGeometry::TVec3<f> const &,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &))
 0002:80118B70       Kuribo::appearBlowed((JGeometry::TVec3<f> const &,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &))
 0002:80118BE0       Kuribo::appearHipDropped((JGeometry::TVec3<f> const &,JGeometry::TQuat4<f> const &))
 0002:80118C84       Kuribo::tryNonActive((void))
 0002:80118CF0       TakoHei::tryActive((void))
 0002:80118D40       Kuribo::tryEndBlow((void))
 0002:80118DB8       GCapture::tryRetraction((void))
 0002:80118E08       KuriboMini::tryFind((void))
 0002:80118E58       Kuribo::tryPointBind((void))
 0002:80118EB4       Kuribo::tryDead((void))
 0002:80118F80       Kuribo::exeWander((void))
 0002:80118FCC       Kuribo::exeFindPlayer((void))
 0002:80119030       Kuribo::exeChase((void))
 0002:801190A4       Kuribo::exeStagger((void))
 0002:8011916C       Kuribo::exeNonActive((void))
 0002:801191E0       Kuribo::exeAppearFromBox((void))
 0002:80119254       Kuribo::exeBlow((void))
 0002:801192A4       Kuribo::exeAttackSuccess((void))
 0002:80119324       KuriboMini::exeHipDropDown((void))
 0002:801193A0       KuriboMini::exeFlatDown((void))
 0002:8011941C       KuriboMini::exePressDown((void))
 0002:80119498       KuriboMini::exeBlowDown((void))
 0002:80119558       KuriboMini::calcPassiveMovement((void))
 0002:801195E8       Kuribo::isUpsideDown(const(void))
 0002:80119820       RunawayRabbit::isRunnaway(const(void))
 0002:801198C8       Teresa::isCheckWater(const(void))
 0002:8011995C       Kuribo::isEnablePushMove(const(void))
 0002:801199DC       MR::createNoItemKuriboActor((char const *))
 0002:80119A80       __sinit__Kuribo_cpp
 0002:80119CB0       NrvKuribo::KuriboNrvNonActive::executeOnEnd(const(Spine *))
 0002:80119CFC       @unnamed@KuriboChief_cpp@::KuriboChiefParam::KuriboChiefParam((void))
 0002:80119E38       KuriboChief::KuriboChief((char const *))
 0002:80119EBC       KuriboChief::init((JMapInfoIter const &))
 0002:8011A0AC       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8011A0B0       KuriboChief::initSensor((void))
 0002:8011A20C       KuriboChief::initState((void))
 0002:8011A308       KuriboChief::initKeySwitch((JMapInfoIter const &))
 0002:8011A370       Coin::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8011A3B8       KuriboChief::kill((void))
 0002:8011A420       KuriboChief::control((void))
 0002:8011A474       KuriboChief::calcAndSetBaseMtx((void))
 0002:8011A4D4       KuriboChief::attackSensor((HitSensor *,HitSensor *))
 0002:8011A5A8       KuriboChief::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011A690       KuriboChief::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8011A734       KuriboChief::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8011A820       KuriboChief::requestStagger((HitSensor *,HitSensor *))
 0002:8011A890       KuriboChief::requestBlowDown((HitSensor *,HitSensor *))
 0002:8011A90C       KuriboChief::tryFind((void))
 0002:8011A95C       KuriboChief::tryPointBind((void))
 0002:8011A9AC       KuriboChief::exeWander((void))
 0002:8011A9F8       KuriboChief::exeFindPlayer((void))
 0002:8011AA90       KuriboChief::exeChase((void))
 0002:8011AAE0       KuriboChief::exeStagger((void))
 0002:8011AC00       KuriboChief::exeTrample((void))
 0002:8011AC6C       KuriboChief::exeAttackSuccess((void))
 0002:8011ACF4       KuriboChief::exeBlowDown((void))
 0002:8011ADE4       KuriboChief::exeBlowDownLand((void))
 0002:8011AEF8       KuriboChief::isEnableKick(const(void))
 0002:8011AFF4       __sinit__KuriboChief_cpp
 0002:8011B104       NrvKuriboChief::KuriboChiefNrvBindStarPointer::executeOnEnd(const(Spine *))
 0002:8011B11C       NrvKuriboChief::KuriboChiefNrvBindStarPointer::execute(const(Spine *))
 0002:8011B15C       @unnamed@KuriboMini_cpp@::KuriboMiniParam::KuriboMiniParam((void))
 0002:8011B210       KuriboMini::KuriboMini((char const *))
 0002:8011B290       KuriboMini::init((JMapInfoIter const &))
 0002:8011B504       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8011B508       KuriboMini::initState((void))
 0002:8011B638       KuriboMini::kill((void))
 0002:8011B6B0       KuriboMini::control((void))
 0002:8011B758       KuriboMini::attackSensor((HitSensor *,HitSensor *))
 0002:8011B85C       KuriboMini::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011B9DC       KuriboMini::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8011BAD4       KuriboMini::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8011BBAC       KuriboMini::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8011BC80       KuriboMini::requestHipDropDown((HitSensor *,HitSensor *))
 0002:8011BD20       KuriboMini::requestPressDown((void))
 0002:8011BE18       KuriboMini::requestBlowDown((HitSensor *,HitSensor *))
 0002:8011BEAC       KuriboMini::requestStagger((HitSensor *,HitSensor *))
 0002:8011BF34       KuriboMini::requestAttackSuccess((void))
 0002:8011BFE8       KuriboMini::tryPointBind((void))
 0002:8011C038       KuriboMini::tryDeadMap((void))
 0002:8011C0D0       KuriboMini::exeWander((void))
 0002:8011C12C       KuriboMini::exeFindPlayer((void))
 0002:8011C1AC       KuriboMini::exeChase((void))
 0002:8011C23C       KuriboMini::exeStagger((void))
 0002:8011C310       KuriboMini::exeAttackSuccess((void))
 0002:8011C764       __sinit__RunawayRabbit_cpp
 0002:8011C8A4       NrvKuriboMini::KuriboMiniNrvBindStarPointer::executeOnEnd(const(Spine *))
 0002:8011C8BC       NrvKuriboMini::KuriboMiniNrvBindStarPointer::execute(const(Spine *))
 0002:8011CA18       MechanicKoopaMini::MechanicKoopaMini((char const *))
 0002:8011CA68       MechanicKoopaMini::onAppearSwitchOn((void))
 0002:8011CA84       MechanicKoopaMini::init((JMapInfoIter const &))
 0002:8011CD78       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8011CE28       MechanicKoopaMini::exeWait((void))
 0002:8011CEE4       MechanicKoopaMini::exeWalkOnRail((void))
 0002:8011D068       MechanicKoopaMini::exeTurn((void))
 0002:8011D158       MechanicKoopaMini::exeJumpStart((void))
 0002:8011D258       MechanicKoopaMini::exeFireAttackEnd((void))
 0002:8011D30C       MechanicKoopaMini::exeFind((void))
 0002:8011D3E4       MechanicKoopaMini::exePursue((void))
 0002:8011D564       MechanicKoopaMini::exePreFireAttack((void))
 0002:8011D66C       MechanicKoopaMini::exeFireAttack((void))
 0002:8011D830       MechanicKoopaMini::exeAttackHit((void))
 0002:8011D8F4       MechanicKoopaMini::exeSpinHit((void))
 0002:8011D9FC       MechanicKoopaMini::exeTrample((void))
 0002:8011DAE0       MechanicKoopaMini::exeHipDropped((void))
 0002:8011DB78       MechanicKoopaMini::control((void))
 0002:8011DC64       MechanicKoopaMini::attackSensor((HitSensor *,HitSensor *))
 0002:8011DD98       MechanicKoopaMini::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011DF98       MechanicKoopaMini::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8011E000       WaterPressureBullet::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011E058       MechanicKoopaMini::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8011E0C0       MechanicKoopaMini::updateHitSensor((HitSensor *))
 0002:8011E1E8       MechanicKoopaMini::calcAndSetBaseMtx((void))
 0002:8011E244       __sinit__MechanicKoopaMini_cpp
 0002:8011E3E0       NrvSamboHead::HostTypeNrvBindStarPointer::executeOnEnd(const(Spine *))
 0002:8011E3F8       NrvMetbo::MetboNrvDPDSwoon::execute(const(Spine *))
 0002:8011E430       NrvMechanicKoopaMini::HostTypeNrvFireAttack::executeOnEnd(const(Spine *))
 0002:8011E5B8       Meramera::Meramera((char const *))
 0002:8011E720       Meramera::init((JMapInfoIter const &))
 0002:8011E86C       Meramera::initElementType((JMapInfoIter const &))
 0002:8011E8EC       Meramera::initEffect((void))
 0002:8011E9C4       Meramera::initSensor((void))
 0002:8011EAE8       Meramera::initBind((void))
 0002:8011EB30       Meramera::initShadow((void))
 0002:8011EBBC       Meramera::initAppearState((JMapInfoIter const &))
 0002:8011EC58       LiveActor::makeActorAppeared((void))
 0002:8011EC5C       Meramera::kill((void))
 0002:8011ECF4       Meramera::startClipped((void))
 0002:8011ED68       Meramera::control((void))
 0002:8011EDEC       Meramera::calcAndSetBaseMtx((void))
 0002:8011EE4C       Meramera::attackSensor((HitSensor *,HitSensor *))
 0002:8011EEDC       Meramera::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8011EFD0       Meramera::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8011F0E8       Meramera::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8011F148       Meramera::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8011F1D8       Meramera::requestDamage((HitSensor *,HitSensor *))
 0002:8011F2DC       Meramera::requestFire((HitSensor *,HitSensor *))
 0002:8011F388       Meramera::requestForceRunaway((void))
 0002:8011F3E8       Meramera::requestDownForce((HitSensor *,HitSensor *))
 0002:8011F4A0       Meramera::requestDown((HitSensor *,HitSensor *))
 0002:8011F568       Meramera::requestAttack((HitSensor *,HitSensor *))
 0002:8011F624       Meramera::requestFlatDown((HitSensor *,HitSensor *))
 0002:8011F714       Meramera::sendMsgElementAttack((HitSensor *,HitSensor *))
 0002:8011F750       Meramera::tryWalk((void))
 0002:8011F80C       Meramera::tryWalkEnd((void))
 0002:8011F87C       Meramera::tryEndIgnition((void))
 0002:8011F988       SuperSpinDriver::tryShoot((void))
 0002:8011F9D8       Teresa::tryDriftEnd((void))
 0002:8011FA28       Meramera::tryEndChase((void))
 0002:8011FAA8       Meramera::tryRunaway((void))
 0002:8011FB0C       Meramera::tryStartDiving((void))
 0002:8011FB6C       Meramera::tryDiving((void))
 0002:8011FBBC       TrickRabbit::tryBrakeTurnEnd((void))
 0002:8011FD1C       Meramera::tryForceSink((void))
 0002:8011FD94       Meramera::tryRecovery((void))
 0002:8011FE40       TakoHei::tryRecover((void))
 0002:8011FE90       Meramera::tryPointBind((void))
 0002:8011FFC8       Meramera::exeWait((void))
 0002:8012008C       Meramera::exeWalk((void))
 0002:80120150       Meramera::exeShrink((void))
 0002:80120204       Meramera::exeChaseStart((void))
 0002:80120338       Meramera::exeChaseDash((void))
 0002:80120488       Meramera::exeChaseTurn((void))
 0002:80120564       Meramera::exeDamage((void))
 0002:80120718       Meramera::exeRunaway((void))
 0002:801209D8       Meramera::exeStartDiving((void))
 0002:80120A6C       Meramera::exeDiving((void))
 0002:80120BD4       Meramera::exeSink((void))
 0002:80120D00       Meramera::exeFloat((void))
 0002:80120E38       Meramera::exeIgnition((void))
 0002:80120F38       Meramera::exeIgnitionForce((void))
 0002:80121000       Meramera::exeAttackSuccess((void))
 0002:801210B0       Meramera::exeDown((void))
 0002:8012126C       Meramera::exeFlatDown((void))
 0002:8012143C       StinkBugSmall::isNrvEnableStarPieceAttack(const(void))
 0002:80121630       Meramera::isEnableChase(const(void))
 0002:80121698       Meramera::addToTargetMovingAccel((JGeometry::TVec3<f> const &,float,float))
 0002:80121700       Meramera::addMovingAccel((JGeometry::TVec3<f> const &,float,float))
 0002:80121814       Meramera::addRunawayJumpPower((void))
 0002:801219C8       Meramera::addOverWallAccel((JGeometry::TVec3<f> const &))
 0002:80121A9C       Meramera::updatePose((void))
 0002:80121B70       Meramera::updateExtinguishMtx((void))
 0002:80121CC0       Meramera::checkDirectDivingPoint((void))
 0002:80121D28       Meramera::checkDivingPoint((float,float))
 0002:80121E4C       Meramera::checkDivingPointMore((float))
 0002:80121F40       Meramera::isHitRecover(const(void))
 0002:80121FC0       Meramera::findDivingPoint((JGeometry::TVec3<f>,JGeometry::TVec3<f> const &))
 0002:801220F8       Meramera::resetAppear((void))
 0002:80122204       Meramera::emitEffectHead((long))
 0002:801222B0       Meramera::deleteEffectHead((bool))
 0002:80122358       Meramera::emitEffectHeatBody((void))
 0002:801223B4       Meramera::emitEffectCoolDownBody((void))
 0002:80122410       Meramera::emitEffectColdBody((void))
 0002:8012246C       Meramera::turnFireDirectionToSpin((float))
 0002:801224F8       Meramera::startChaseLevelSound((void))
 0002:801225CC       __sinit__Meramera_cpp
 0002:801227E0       NrvMeramera::MerameraNrvReadyRestart::execute(const(Spine *))
 0002:80122924       Metbo::Metbo((char const *))
 0002:801229A0       Metbo::init((JMapInfoIter const &))
 0002:80122C1C       Metbo::exeNonActive((void))
 0002:80122CD8       Metbo::exeWait((void))
 0002:80122D94       Metbo::exeWalkAround((void))
 0002:80122F18       Metbo::exeRecover((void))
 0002:80122FA8       Metbo::exeChaseStart((void))
 0002:8012304C       Metbo::exeChase((void))
 0002:80123178       Metbo::exeAttack((void))
 0002:801231F0       Metbo::exeTrampleDown((void))
 0002:801232A0       Metbo::exeBlowDown((void))
 0002:8012337C       Metbo::exeRest((void))
 0002:801233F8       Metbo::exeSwoonStart((void))
 0002:8012349C       Metbo::exeSwoonSpin((void))
 0002:801235C4       Metbo::exeSwoonWait((void))
 0002:801236EC       MR::trySetMoveLimitCollision((LiveActor *))
 0002:801236F0       Metbo::kill((void))
 0002:8012375C       Metbo::calcAndSetBaseMtx((void))
 0002:801237F8       Metbo::control((void))
 0002:80123908       Metbo::attackSensor((HitSensor *,HitSensor *))
 0002:80123A18       Metbo::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80123AE4       Metbo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80123EB8       Metbo::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80123FC4       Metbo::moveOrFall((MR::ActorMoveParam const &,JGeometry::TVec3<f> const *))
 0002:8012407C       Metbo::startSwoon((bool))
 0002:801241A4       Metbo::tryNonActive((void))
 0002:80124208       Metbo::trySearch((void))
 0002:80124310       Metbo::tryDPDSwoon((void))
 0002:80124768       NrvMetbo::MetboNrvChase::executeOnEnd(const(Spine *))
 0002:801247A0       NrvMetbo::MetboNrvNonActive::executeOnEnd(const(Spine *))
 0002:801247FC       Mogu::Mogu((char const *))
 0002:80124888       Mogu::init((JMapInfoIter const &))
 0002:80124BF4       Mogu::kill((void))
 0002:80124C50       Mogu::endClipped((void))
 0002:80124C9C       Mogu::exeHideWait((void))
 0002:80124D54       Mogu::exeHide((void))
 0002:80124E74       Mogu::exeAppear((void))
 0002:80124FD4       Mogu::isPlayerExistUp((void))
 0002:80125064       Mogu::exeSearch((void))
 0002:801252F4       Mogu::exeThrow((void))
 0002:8012553C       Mogu::tearDownThrow((void))
 0002:80125588       Mogu::exeSwoonStart((void))
 0002:80125654       Mogu::exeSwoon((void))
 0002:801256F4       Tico::exeGuide0((void))
 0002:80125754       Mogu::exeSwoonEnd((void))
 0002:801257F8       Mogu::exeStampDeath((void))
 0002:801258EC       Mogu::exeHitBlow((void))
 0002:80125A2C       Mogu::isNearPlayerHipDrop((void))
 0002:80125A90       Mogu::attackSensor((HitSensor *,HitSensor *))
 0002:80125B4C       Mogu::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80125D8C       Mogu::tryPunchHitted((HitSensor *,HitSensor *,bool))
 0002:80125EA4       Mogu::calcAndSetBaseMtx((void))
 0002:80126168       Mogucchi::Mogucchi((char const *))
 0002:801261E8       Mogucchi::init((JMapInfoIter const &))
 0002:8012634C       Mogucchi::initAfterPlacement((void))
 0002:801263AC       Mogucchi::makeActorAppeared((void))
 0002:80126410       Mogucchi::kill((void))
 0002:80126484       Mogucchi::control((void))
 0002:801264DC       Mogucchi::exeStroll((void))
 0002:801265EC       Mogucchi::exeAppearDown((void))
 0002:801266F8       Mogucchi::exeDown((void))
 0002:80126790       Mogucchi::exeDive((void))
 0002:80126830       Mogucchi::exeScatter((void))
 0002:80126A5C       Mogucchi::exeDie((void))
 0002:80126B00       Mogucchi::attackSensor((HitSensor *,HitSensor *))
 0002:80126BE8       Mogucchi::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80126C68       Mogucchi::initSensor((void))
 0002:80126D2C       Mogucchi::createMogucchiHill((void))
 0002:80126DD8       Mogucchi::createHole((void))
 0002:80126E40       Mogucchi::updatePosition((void))
 0002:80126ED4       Mogucchi::makeEulerRotation((void))
 0002:80126F5C       Mogucchi::updateReferenceMtx((void))
 0002:801270F4       Mogucchi::checkHipDrop(const(void))
 0002:80127150       Mogucchi::calcAttackDir(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80127248       Mogucchi::calcScatterVec((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801272B8       Mogucchi::receiveAttackBySpinSensor((ulong,HitSensor *,HitSensor *))
 0002:80127400       Mogucchi::receiveAttackByBodySensor((ulong,HitSensor *,HitSensor *))
 0002:801275E8       Mogucchi::updateStrollSpeed((void))
 0002:80127614       Mogucchi::reflectStarPointer2P((void))
 0002:80127804       MogucchiHillPiece::MogucchiHillPiece((char const *))
 0002:80127864       MogucchiHillPiece::init((JMapInfoIter const &))
 0002:80127948       MogucchiHillPiece::control((void))
 0002:801279F4       MogucchiHillPiece::appear((void))
 0002:80127A44       MogucchiHillPiece::initWithModelName((char const *,char const *,char const *,bool))
 0002:80127A58       MogucchiHillPiece::exeAppear((void))
 0002:80127AE0       MogucchiHillPiece::exeWait((void))
 0002:80127B38       MogucchiHillPiece::exeCrumble((void))
 0002:80127BB8       MogucchiHillPiece::crumble((void))
 0002:80127C3C       MogucchiHillPiece::destroy((void))
 0002:80127C94       MogucchiHillPiece::setSize((float))
 0002:80127CF4       MogucchiHillPiece::calcAndSetBaseMtx((void))
 0002:80127CFC       MogucchiHillPiece::attackSensor((HitSensor *,HitSensor *))
 0002:80127E5C       MogucchiHillPiece::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80128084       MogucchiHillPiece::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80128168       MogucchiHillPiece::isTargetGoingAway(const(HitSensor *,HitSensor *))
 0002:801281C8       MogucchiHill::MogucchiHill((LiveActor *,long,char const *))
 0002:801282E8       MogucchiHill::start((void))
 0002:80128354       MogucchiHill::startNaturally((void))
 0002:80128360       MogucchiHill::endNaturally((void))
 0002:8012836C       MogucchiHill::killPieces((MogucchiHillPiece *))
 0002:801283FC       MogucchiHill::pauseOff((void))
 0002:8012845C       MogucchiHill::killAllPieces((void))
 0002:801284C4       MogucchiHill::setAppearNum((long))
 0002:801284CC       MogucchiHill::exeMove((void))
 0002:80128554       MogucchiHill::createPieces((void))
 0002:8012870C       MogucchiHill::appearPiece((void))
 0002:80128884       MogucchiHill::killPieceOverAppear((void))
 0002:801288B4       MogucchiHill::killPieceIfAlive((void))
 0002:80128914       MogucchiHill::getDistanceFromReserveMtx(const(void))
 0002:80128958       MogucchiHill::reserveCurrentMtx((void))
 0002:80128A3C       @unnamed@MogucchiHill_cpp@::MogucchiHillNrvWait::execute(const(Spine *))
 0002:80128A74       MogucchiRefuseTerritory::~MogucchiRefuseTerritory((void))
 0002:80128AD0       MogucchiRefuseTerritory::MogucchiRefuseTerritory((char const *))
 0002:80128B0C       MogucchiRefuseTerritory::init((JMapInfoIter const &))
 0002:80128B98       MogucchiShooter::MogucchiShooter((LiveActor *,char const *))
 0002:80128BF8       MogucchiShooter::init((JMapInfoIter const &))
 0002:80128D54       MogucchiShooter::exeWait((void))
 0002:80128E4C       MogucchiShooter::exeShot((void))
 0002:80128ECC       MogucchiShooter::exeTire((void))
 0002:80128F58       MarioLauncher::exeWait((void))
 0002:80128FAC       MogucchiShooter::exeExplosion((void))
 0002:8012902C       MogucchiShooter::exeLaugh((void))
 0002:801290F0       MogucchiShooter::exePanic((void))
 0002:801291B8       MogucchiShooter::exeStorm((void))
 0002:80129220       MogucchiShooter::exeHitPanic((void))
 0002:80129298       MogucchiShooter::exeAnger((void))
 0002:80129390       MogucchiShooter::calcAndSetBaseMtx((void))
 0002:80129430       MogucchiShooter::resetDirection((void))
 0002:80129480       MogucchiShooter::faceToMario((void))
 0002:801296C4       NrvTrickRabbit::TrickRabbitNrvFallDownLand::execute(const(Spine *))
 0002:8012976C       JGeometry::TVec4<f>::set<i>(void (int,int,int,int))
 0002:801297DC       MoguStone::MoguStone((char const *,char const *))
 0002:8012987C       ThrowingIce::init((JMapInfoIter const &))
 0002:80129994       MoguStone::emit((bool,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80129A6C       MoguStone::doBehavior((void))
 0002:80129B94       MR::startBlowHitSound((LiveActor const *))
 0002:80129BC0       MoguStone::exeThrow((void))
 0002:80129C90       MoguStone::exeFall((void))
 0002:80129D50       MoguStone::attackSensor((HitSensor *,HitSensor *))
 0002:80129DF8       MoguStone::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80129EC4       MoguStone::calcAndSetBaseMtx((void))
 0002:80129FAC       ThrowingIce::ThrowingIce((char const *))
 0002:8012A160       ThrowingIce::emitIce((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const &))
 0002:8012A220       ThrowingIce::doBehavior((void))
 0002:8012A2DC       ThrowingIce::attackSensor((HitSensor *,HitSensor *))
 0002:8012A3AC       ThrowingIce::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8012A430       ThrowingIce::startBreakSound((void))
 0002:8012A448       ThrowingIce::~ThrowingIce((void))
 0002:8012A51C       @unnamed@NokonokoLand_cpp@::startBckBtp((LiveActor *,char const *,char const *))
 0002:8012A588       NokonokoLand::NokonokoLand((char const *))
 0002:8012A658       NokonokoLand::init((JMapInfoIter const &))
 0002:8012A9B0       NokonokoLand::initAfterPlacement((void))
 0002:8012AA3C       NokonokoLand::control((void))
 0002:8012AA98       NokonokoLand::calcAndSetBaseMtx((void))
 0002:8012AB34       NokonokoLand::attackSensor((HitSensor *,HitSensor *))
 0002:8012ACF8       NokonokoLand::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8012AE50       NokonokoLand::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8012AFFC       NokonokoLand::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8012B0BC       NokonokoLand::initJetTurtle((void))
 0002:8012B120       LogoScene::isDisplayStrapRemineder(const(void))
 0002:8012B2A8       NokonokoLand::isLookDirRailDirection(const(void))
 0002:8012B384       NokonokoLand::tryAttack((HitSensor *,HitSensor *))
 0002:8012B458       NokonokoLand::tryJetTurtleTouch((void))
 0002:8012B54C       NokonokoLand::tryRattle((void))
 0002:8012B5C0       NokonokoLand::tryBindStarPointer((void))
 0002:8012B658       NokonokoLand::receiveTrample((HitSensor *,HitSensor *))
 0002:8012B788       NokonokoLand::receivePunch((HitSensor *,HitSensor *))
 0002:8012B888       NokonokoLand::receiveHipDrop((HitSensor *,HitSensor *))
 0002:8012B9E0       NokonokoLand::receiveTurtleAttack((HitSensor *,HitSensor *))
 0002:8012BB1C       NokonokoLand::receiveStorm((HitSensor *,HitSensor *))
 0002:8012BC1C       NokonokoLand::receiveStarPieceAttack((HitSensor *,HitSensor *))
 0002:8012BC80       NokonokoLand::exeAppearStart((void))
 0002:8012BDA0       NokonokoLand::tearAppearStart((void))
 0002:8012BE78       NokonokoLand::exeFlyAway((void))
 0002:8012C038       NokonokoLand::exeDead((void))
 0002:8012C0C4       NokonokoLand::exeWalk((void))
 0002:8012C248       NokonokoLand::exeTurnStart((void))
 0002:8012C2B8       NokonokoLand::exeTurnLoop((void))
 0002:8012C3D0       NokonokoLand::exeTurnEnd((void))
 0002:8012C438       NokonokoLand::exeAttack((void))
 0002:8012C4C0       NokonokoLand::exeRattle((void))
 0002:8012C564       NokonokoLand::exeBindStarPointer((void))
 0002:8012C5D4       NokonokoLand::exeShellStartTrample((void))
 0002:8012C6BC       NokonokoLand::exeShellStartPunch((void))
 0002:8012C884       NokonokoLand::exeShellEnd((void))
 0002:8012C974       NokonokoLand::exeBecomeJetTurtle((void))
 0002:8012CD40       NrvNokonokoLand::HostTypeAppearReady::execute(const(Spine *))
 0002:8012CE24       NokonokoLand::~NokonokoLand((void))
 0002:8012CE80       Onimasu::~Onimasu((void))
 0002:8012CEDC       Onimasu::Onimasu((char const *))
 0002:8012CF94       Onimasu::init((JMapInfoIter const &))
 0002:8012D12C       Onimasu::initAfterPlacement((void))
 0002:8012D234       Onimasu::calcTargetPose((void))
 0002:8012D628       Onimasu::updatePose((void))
 0002:8012D72C       Onimasu::calcAndSetBaseMtx((void))
 0002:8012D81C       Onimasu::land((void))
 0002:8012D8B8       Onimasu::calcTurnDirection(const(float *))
 0002:8012D950       Onimasu::updateStompVelocity((void))
 0002:8012DA3C       Onimasu::calcGravityDir(const(JGeometry::TVec3<f> *))
 0002:8012DA8C       MR::getSafetyVIScreenWidthRatio((void))
 0002:8012DAC0       Onimasu::getTimeToNextPoint(const(void))
 0002:8012DAF0       Onimasu::emitEffectLand((void))
 0002:8012DC38       Onimasu::exeWaitForSwitchOn((void))
 0002:8012DCB4       Onimasu::exeWait((void))
 0002:8012DD30       Onimasu::exeMove((void))
 0002:8012DE58       Onimasu::exeStamp((void))
 0002:8012DF68       OnimasuFunction::getPolygonOnRailPoint((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *,int))
 0002:8012E134       OnimasuJump::OnimasuJump((char const *))
 0002:8012E180       OnimasuJump::calcJumpVelocity((void))
 0002:8012E320       OnimasuJump::getLastPointNo(const(void))
 0002:8012E354       OnimasuPivot::getLastPointNormal(const(void))
 0002:8012E398       OnimasuPivot::getNextPointNormal(const(void))
 0002:8012E3AC       OnimasuJump::initFromRailPoint((void))
 0002:8012E410       OnimasuJump::incrementNextPoint((void))
 0002:8012E45C       OnimasuJump::collectRailPointInfo((void))
 0002:8012E4EC       OnimasuJump::calcJumpVelocity((void))
 0002:8012E4F0       OnimasuJump::updatePoseInner((void))
 0002:8012E540       OnimasuJump::getNextPointNo(const(void))
 0002:8012E548       MR::AssignableArray<Q29JGeometry8TVec3<f>>::~AssignableArray<Q29JGeometry8TVec3<f>>((void))
 0002:8012E5B0       OnimasuJump::~OnimasuJump((void))
 0002:8012E618       OnimasuPivot::OnimasuPivot((char const *))
 0002:8012E694       OnimasuPivot::initFromRailPoint((void))
 0002:8012E6FC       OnimasuPivot::startMoveInner((void))
 0002:8012E8D8       OnimasuPivot::updatePoseInner((void))
 0002:8012EAB8       OnimasuPivot::getNextPointNo(const(void))
 0002:8012EAC4       OnimasuPivot::getLastPointNo(const(void))
 0002:8012EB58       OnimasuPivot::incrementNextPoint((void))
 0002:8012EBAC       OnimasuPivot::collectRailPointInfo((void))
 0002:8012ECA4       OtaRock::OtaRock((char const *))
 0002:8012ED1C       OtaRock::init((JMapInfoIter const &))
 0002:8012EE08       OtaRock::appear((void))
 0002:8012EE5C       Takobo::kill((void))
 0002:8012EEC8       OtaRock::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8012EF20       OtaRock::control((void))
 0002:8012EF28       OtaRock::calcAndSetBaseMtx((void))
 0002:8012EF88       OtaRock::attackSensor((HitSensor *,HitSensor *))
 0002:8012EFFC       OtaRock::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8012F0A0       OtaRock::initModel((void))
 0002:8012F224       OtaRock::initSensor((void))
 0002:8012F2AC       OtaRock::updateBaseMtx((void))
 0002:8012F358       OtaRock::getDisappearedCocoNut((void))
 0002:8012F3C4       OtaRock::getDisappearedFireBall((void))
 0002:8012F430       OtaRock::getDisappearedCocoNutNum(const(void))
 0002:8012F498       OtaRock::getDisappearedFireBallNum(const(void))
 0002:8012F500       OtaRock::throwCocoNut((void))
 0002:8012F59C       OtaRock::throwFireBall((void))
 0002:8012F5FC       OtaRock::tryToHide((void))
 0002:8012F69C       OtaRock::exeWait((void))
 0002:8012F7AC       OtaRock::exeThrowCocoNut((void))
 0002:8012F84C       OtaRock::exeThrowFireBall((void))
 0002:8012F908       OtaRock::exeDown((void))
 0002:8012FA80       OtaRock::exeHide((void))
 0002:8012FAF4       OtaRock::exeHideWait((void))
 0002:8012FB7C       OtaRock::exeShow((void))
 0002:8012FD44       PackunPetit::PackunPetit((char const *))
 0002:8012FDA8       PackunPetit::init((JMapInfoIter const &))
 0002:8012FFAC       MR::initEffectAfterPlacement((LiveActor *))
 0002:8012FFB0       PackunPetit::exeNonActive((void))
 0002:80130024       PackunPetit::exeWait((void))
 0002:801300FC       PackunPetit::exeThreat((void))
 0002:80130210       PackunPetit::exeTurn((void))
 0002:80130308       PackunPetit::exeAttackStart((void))
 0002:80130370       PackunPetit::exeHitWaitForAttack((void))
 0002:801303EC       PackunPetit::exeHit((void))
 0002:80130458       PackunPetit::exeTrampleDown((void))
 0002:801304E4       PackunPetit::exePunchDown((void))
 0002:801306B8       PackunPetit::exeSwoon((void))
 0002:8013079C       PackunPetit::kill((void))
 0002:801308AC       PackunPetit::calcAndSetBaseMtx((void))
 0002:80130938       WormEatenPlanet::endClipped((void))
 0002:80130970       PackunPetit::attackSensor((HitSensor *,HitSensor *))
 0002:80130ABC       PackunPetit::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80130C98       PackunPetit::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80130D6C       PackunPetit::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80130E30       PackunPetit::initBlowModel((void))
 0002:80130EA8       PackunPetit::punchDown((HitSensor *,HitSensor *))
 0002:80130F64       PackunPetit::selectNrvWait((void))
 0002:80130FDC       Sandstorm::tryNonActive((void))
 0002:8013102C       PackunPetit::tryTurn((void))
 0002:801310DC       PackunPetit::tryDPDSwoon((void))
 0002:801313F4       NrvPackunPetit::PackunPetitNrvDPDSwoon::execute(const(Spine *))
 0002:80131470       NrvPackunPetit::PackunPetitNrvAttackBack::execute(const(Spine *))
 0002:801314C0       NrvPackunPetit::PackunPetitNrvAttack::execute(const(Spine *))
 0002:80131538       NrvPackunPetit::PackunPetitNrvNonActive::executeOnEnd(const(Spine *))
 0002:80131588       Petari::Petari((char const *))
 0002:8013161C       Petari::init((JMapInfoIter const &))
 0002:801317EC       MR::trySetMoveLimitCollision((LiveActor *))
 0002:801317F0       Petari::makeActorAppeared((void))
 0002:80131838       Petari::kill((void))
 0002:801318AC       Petari::calcAnim((void))
 0002:80131914       Petari::exeWait((void))
 0002:80131A80       Petari::exeApproach((void))
 0002:80131BA0       Petari::exeEscape((void))
 0002:80131CD4       Petari::exeSwoonStart((void))
 0002:80131DB4       Petari::exeSwoon((void))
 0002:80131E80       Petari::exeSwoonEnd((void))
 0002:80131F98       Petari::exeLand((void))
 0002:80132048       Petari::exeSmash((void))
 0002:80132108       Petari::exeSpinOut((void))
 0002:80132260       Petari::exeFreeze((void))
 0002:80132338       Petari::control((void))
 0002:8013246C       Petari::calcAndSetBaseMtx((void))
 0002:801324B4       Petari::attackSensor((HitSensor *,HitSensor *))
 0002:8013251C       Petari::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801325B4       Petari::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80132660       Petari::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801326DC       Petari::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80132784       Petari::initFootPrint((JMapInfoIter const &))
 0002:8013283C       Petari::initFrontVec((void))
 0002:80132888       Petari::initStarPiece((JMapInfoIter const &))
 0002:801328D0       Petari::tryShiftJumpOut((void))
 0002:80132938       Petari::tryEscapeEnd((void))
 0002:8013298C       Petari::tryShiftEscape((void))
 0002:80132A88       Petari::receivePlayerAttackAtBody((ulong,HitSensor *,HitSensor *))
 0002:80132CDC       Petari::receivePlayerAttackAtSpin((ulong,HitSensor *,HitSensor *))
 0002:80132D9C       Petari::isSolidBody(const(void))
 0002:80132E50       Petari::moveTowardTargetDirection((float,float,float))
 0002:80132EE4       Petari::updateFootPrint((void))
 0002:80132F84       Petari::calcSpinOutVelocity((float))
 0002:80133078       Petari::calcApproachDirection((void))
 0002:801330F0       Petari::calcEscapeDirection((void))
 0002:80133174       Petari::avoidPlayer((void))
 0002:801332CC       Petari::avoidWall((void))
 0002:801334A8       Petari::calcCenter((void))
 0002:8013350C       Petari::meander((void))
 0002:801335B4       Petari::calcBoost(const(float,float,float))
 0002:80133640       Petari::appearStarPieceGradually((void))
 0002:801336E8       Petari::appearStarPieceAll((void))
 0002:801337B0       Petari::calcMouthPos(const(JGeometry::TVec3<f> *))
 0002:80133804       Petari::tryEmitFirstFootPrintEffect((void))
 0002:801339FC       @unnamed@Petari_cpp@::PetariNrvFreeze::executeOnEnd(const(Spine *))
 0002:80133AC4       @unnamed@Petari_cpp@::PetariNrvLurk::execute(const(Spine *))
 0002:80133B0C       MR::clamp01((float *))
 0002:80133B3C       Poihana::Poihana((char const *))
 0002:80133BD8       Poihana::init((JMapInfoIter const &))
 0002:80133EF4       Poihana::initAfterPlacement((void))
 0002:80133F58       Poihana::control((void))
 0002:80133FDC       Poihana::calcAndSetBaseMtx((void))
 0002:80134088       Poihana::exeNonActive((void))
 0002:8013412C       Poihana::endNonActive((void))
 0002:801341C4       Poihana::exeWait((void))
 0002:801342A0       Poihana::exeWalkAround((void))
 0002:801343D8       Poihana::exeSleepStart((void))
 0002:80134468       Poihana::exeSleep((void))
 0002:801344E8       Poihana::exeGetUp((void))
 0002:801345BC       Poihana::exeSearch((void))
 0002:80134650       Poihana::exeChasePlayer((void))
 0002:80134724       Poihana::exeShootUpCharge((void))
 0002:801347AC       Poihana::exeShootUp((void))
 0002:80134900       Poihana::endShootUp((void))
 0002:80134988       Poihana::exeGoBack((void))
 0002:80134A70       Poihana::exeShock((void))
 0002:80134B00       LuigiNPC::exeOnTreeLand((void))
 0002:80134B78       Poihana::exeSwoon((void))
 0002:80134BFC       Poihana::exeRecover((void))
 0002:80134CE0       Poihana::exeShake((void))
 0002:80134DC8       Poihana::exeDrown((void))
 0002:80134E7C       Poihana::exeHide((void))
 0002:80134F00       Poihana::exeAppear((void))
 0002:80135048       Poihana::exeDPDSwoon((void))
 0002:8013509C       Poihana::endDPDSwoon((void))
 0002:80135120       Poihana::attackSensor((HitSensor *,HitSensor *))
 0002:801352A4       Poihana::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8013547C       PenguinStudent::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801354D0       Poihana::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80135560       Poihana::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801356C0       Poihana::tryToStartBind((HitSensor *))
 0002:8013576C       Poihana::updateBindActorMtx((void))
 0002:801357AC       Poihana::endBind((void))
 0002:80135828       Poihana::startBound((void))
 0002:80135844       Poihana::calcBound((void))
 0002:801359B0       Poihana::contactMario((HitSensor *,HitSensor *))
 0002:80135A84       Poihana::controlVelocity((void))
 0002:80135CAC       Poihana::calcMyGravity((void))
 0002:80135D0C       Poihana::tryNonActive((void))
 0002:80135D80       Poihana::tryDrown((void))
 0002:80135E30       Poihana::tryDPDSwoon((void))
 0002:80135E94       Poihana::tryShock((void))
 0002:80135F6C       Poihana::tryHipDropShock((void))
 0002:80136068       Poihana::isNeedForBackHome(const(void))
 0002:8013613C       Poihana::isNeedForGetUp(const(void))
 0002:801361B8       Poihana::isBackAttack(const(HitSensor *))
 0002:80136540       PukupukuStateLanding::PukupukuStateLanding((Pukupuku *))
 0002:801365F8       PukupukuStateLanding::exeLandingMoveLand((void))
 0002:80136714       PukupukuStateLanding::exeLandingJumpFromWater((void))
 0002:80136860       PukupukuStateLanding::exeLandingJumpFromLand((void))
 0002:80136968       PukupukuStateLanding::updatePoseByJumpPath((float))
 0002:80136A10       PukupukuStateLanding::setNerveAfterJumpAccordingToNextPoint((void))
 0002:80136A64       PukupukuStateLanding::setupJumping((float,float))
 0002:80136B94       PukupukuStateLanding::updateJumping((void))
 0002:80136BF0       PukupukuStateLanding::emitWaterColumIfNeed((bool,bool))
 0002:80136D10       PukupukuStateLanding::emitGroundHitEffect((void))
 0002:80136DD4       Pukupuku::Pukupuku((char const *))
 0002:80136E60       Pukupuku::init((JMapInfoIter const &))
 0002:8013707C       Pukupuku::kill((void))
 0002:801371D0       Pukupuku::updatePoseByRailIgnoreUpScale((void))
 0002:8013724C       Pukupuku::rotatePoseByLocalZ((void))
 0002:801372CC       Pukupuku::calcGroundHitMtx(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:80137374       Pukupuku::isReadyToJumpFromLand(const(void))
 0002:801373C8       Pukupuku::exeWait((void))
 0002:801374A0       Pukupuku::exeMoveWater((void))
 0002:801375B4       Pukupuku::exeMoveWaterAfterJump((void))
 0002:8013763C       Pukupuku::exeLanding((void))
 0002:801376A0       Pukupuku::exeTrampled((void))
 0002:801377B8       Pukupuku::exeBlownOff((void))
 0002:801378F0       Pukupuku::exeBindStarPointer((void))
 0002:801379D0       Pukupuku::updatePoseByRail((void))
 0002:80137AA0       Pukupuku::updateMoveWaterAfterJump((void))
 0002:80137AF8       Pukupuku::tryBindStarPointer((void))
 0002:80137BE4       Pukupuku::exeMoveWaterCommon((void))
 0002:80137C80       Pukupuku::getBlownOffSpeedRate(const(void))
 0002:80137CDC       Pukupuku::control((void))
 0002:80137D8C       Pukupuku::attackSensor((HitSensor *,HitSensor *))
 0002:80137EE8       Pukupuku::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80138008       Pukupuku::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801380D0       Pukupuku::calcAndSetBaseMtx((void))
 0002:801383C8       RingBeamShadowDrawer::RingBeamShadowDrawer((LiveActor const *))
 0002:80138424       ShadowVolumeDrawer::~ShadowVolumeDrawer((void))
 0002:80138480       ElectricRailShadowDrawer::loadModelDrawMtx(const(void))
 0002:801384D8       RingBeamShadowDrawer::drawShape(const(void))
 0002:80138A1C       RingBeam::RingBeam((char const *,LiveActor *,bool,bool))
 0002:80138A94       IKJoint::setMiddleBoneLength((float))
 0002:80138A9C       RingBeam::setLife((long))
 0002:80138AA4       RingBeam::init((JMapInfoIter const &))
 0002:80138C94       RingBeam::appear((void))
 0002:80138CD4       RingBeam::kill((void))
 0002:80138D38       RingBeam::startBrk((char const *))
 0002:80138D84       RingBeam::setRadius((float))
 0002:80138FA0       RingBeam::initPos((LiveActor const *))
 0002:80139040       RingBeam::attackSensor((HitSensor *,HitSensor *))
 0002:80139168       RingBeam::exeSpread((void))
 0002:80139608       GXPosition3f32_27
 0002:801396D0       RingBeamer::RingBeamer((char const *))
 0002:80139714       RingBeamer::init((JMapInfoIter const &))
 0002:801399A8       RingBeamer::syncSwitchOffB((void))
 0002:80139A10       RingBeamer::exeWait((void))
 0002:80139A90       RingBeamer::exeAttack((void))
 0002:80139C30       RingBeamer::exeInter((void))
 0002:80139CB0       RingBeamer::attackSensor((HitSensor *,HitSensor *))
 0002:80139D84       PowerStar::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80139F3C       SamboFunction::createAnimScaleController((AnimScaleParam *))
 0002:80139FB0       SamboHead::SamboHead((char const *))
 0002:8013A030       SamboHead::init((JMapInfoIter const &))
 0002:8013A338       SamboHead::kill((void))
 0002:8013A3A4       SamboHead::control((void))
 0002:8013A4C4       SamboHead::exeWaitUnderGround((void))
 0002:8013A5B8       SamboHead::exeHide((void))
 0002:8013A64C       SamboHead::exeAppear((void))
 0002:8013A6F4       SamboHead::exeWait((void))
 0002:8013A854       SamboHead::exePrePursue((void))
 0002:8013A940       SamboHead::exePursue((void))
 0002:8013AA2C       SamboHead::exePursueEnd((void))
 0002:8013AAB8       SamboHead::exeHitToPlayer((void))
 0002:8013ABA0       SamboHead::exeStarPieceHit((void))
 0002:8013AC54       SamboHead::exeStampFall((void))
 0002:8013ACC8       SamboHead::exeStampDeath((void))
 0002:8013AD54       SamboHead::exeHitBlow((void))
 0002:8013ADF4       SamboHead::exeBuryDeath((void))
 0002:8013AE6C       SamboHead::exeBindStarPointer((void))
 0002:8013AEBC       SamboHead::exeBindStarPointerEnd((void))
 0002:8013AF54       SamboHead::attackSensor((HitSensor *,HitSensor *))
 0002:8013B198       SamboHead::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8013B340       SamboHead::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8013B424       SamboHead::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8013B574       SamboHead::calcAndSetBaseMtx((void))
 0002:8013B894       SearchBeamer::SearchBeamer((char const *))
 0002:8013B944       SearchBeamer::init((JMapInfoIter const &))
 0002:8013BCA0       SearchBeamer::exeNonActive((void))
 0002:8013BD0C       SearchBeamer::exeCloseWaitFar((void))
 0002:8013BDC8       SearchBeamer::exeCloseSearch((void))
 0002:8013BE28       SearchBeamer::exeCloseWaitNear((void))
 0002:8013BEE4       SearchBeamer::exeOpenMouth((void))
 0002:8013BF68       SearchBeamer::exeBeamPrepare((void))
 0002:8013BFD0       SearchBeamer::exeBeamStart((void))
 0002:8013C0FC       SearchBeamer::exeBeamAim((void))
 0002:8013C254       SearchBeamer::exeCloseMouth((void))
 0002:8013C354       SearchBeamer::exeStopStart((void))
 0002:8013C400       SearchBeamer::exeStop((void))
 0002:8013C474       SearchBeamer::exeRecover((void))
 0002:8013C4DC       SearchBeamer::exeDPDSwoon((void))
 0002:8013C55C       SearchBeamer::calcAndSetBaseMtx((void))
 0002:8013C5EC       SearchBeamer::control((void))
 0002:8013C62C       SearchBeamer::attackSensor((HitSensor *,HitSensor *))
 0002:8013C6AC       SearchBeamer::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8013C7A8       SearchBeamer::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8013C818       SearchBeamer::updateHitSensor((HitSensor *))
 0002:8013C89C       SearchBeamer::calcJointPropeller((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8013C8CC       SearchBeamer::calcJointBeamStart((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8013C8FC       SearchBeamer::calcJointBeamEnd((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8013C92C       SearchBeamer::updatePropeller((void))
 0002:8013CA04       SearchBeamer::updateBeamEffect((bool))
 0002:8013CAA0       SearchBeamer::updateBeamShadow((void))
 0002:8013CB50       SearchBeamer::initBeamPos((void))
 0002:8013CBA4       SearchBeamer::reformDirection((bool))
 0002:8013CC68       SearchBeamer::bowToPlayer((void))
 0002:8013CD6C       SearchBeamer::checkBeamDistiny(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f>))
 0002:8013CDF8       SearchBeamer::isPlayerInTerritory(const(void))
 0002:8013CED4       SearchBeamer::tryStopStart((void))
 0002:8013CF88       SearchBeamer::tryDPDSwoon((void))
 0002:8013D1E0       NrvSearchBeamer::SearchBeamerNrvStopForPlayerOff::execute(const(Spine *))
 0002:8013D284       NrvSearchBeamer::SearchBeamerNrvNonActive::executeOnEnd(const(Spine *))
 0002:8013D2D4       MR::createJointController<12SearchBeamer>(JointController *(SearchBeamer *,char const *,bool (SearchBeamer::)(void const *,void *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &)))
 0002:8013D518       Snakehead::Snakehead((char const *))
 0002:8013D5A4       Snakehead::init((JMapInfoIter const &))
 0002:8013DA24       Snakehead::initAfterPlacement((void))
 0002:8013DB00       Snakehead::kill((void))
 0002:8013DC10       Snakehead::control((void))
 0002:8013DD18       Snakehead::calcAndSetBaseMtx((void))
 0002:8013DDB4       Snakehead::exeWaylay((void))
 0002:8013DEA4       Snakehead::exeWait((void))
 0002:8013DF50       Snakehead::exeMoveForward((void))
 0002:8013E02C       Snakehead::exeRest((void))
 0002:8013E088       Snakehead::exeMoveBack((void))
 0002:8013E12C       Snakehead::exeTurtleDown((void))
 0002:8013E220       Snakehead::attackSensor((HitSensor *,HitSensor *))
 0002:8013E448       Snakehead::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8013E4F0       Snakehead::choiceAndStartBck((char const *))
 0002:8013E718       Snakehead::isNearPlayerFromRail(const(void))
 0002:8013E8F0       SpinHitController::SpinHitController((NameObj const *,long,bool))
 0002:8013E970       SpinHitController::setParameter((NameObj const *,long,long,long,float,float,float,long,bool))
 0002:8013E994       SpinHitController::start((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8013EA60       LodCtrl::invalidate((void))
 0002:8013EA94       SpinHitController::execute((LiveActor *))
 0002:8013EBE0       SpinHitController::emitItem((LiveActor *))
 0002:8013EC80       StinkBugBase::~StinkBugBase((void))
 0002:8013ECDC       StinkBugBase::StinkBugBase((char const *))
 0002:8013ED5C       StinkBugBase::setDashVelocity((float))
 0002:8013EDDC       StinkBugBase::tryTurnSearch((float))
 0002:8013EE74       StinkBugBase::tryTurnDashSign((float))
 0002:8013EEDC       StinkBugBase::fixInitPos((void))
 0002:8013EEF8       StinkBugBase::isPlayerInTerritory(const(float,float,float,float))
 0002:8013F0F0       StinkBugBase::isHitHorn(const(HitSensor *,HitSensor *,float))
 0002:8013F1C0       StinkBugBase::init((JMapInfoIter const &))
 0002:8013F2BC       @unnamed@StinkBugParent_cpp@::getParam((bool))
 0002:8013F2D8       StinkBugParent::StinkBugParent((char const *))
 0002:8013F324       StinkBugParent::init((JMapInfoIter const &))
 0002:8013F4D4       StinkBugParent::exeWait((void))
 0002:8013F580       StinkBugParent::exeSearch((void))
 0002:8013F644       StinkBugParent::exeDashSign((void))
 0002:8013F6F4       StinkBugParent::exeDash((void))
 0002:8013F7D0       StinkBugSmall::exeAttack((void))
 0002:8013F83C       StinkBugParent::exeBack((void))
 0002:8013F92C       StinkBugParent::exeHipDropDown((void))
 0002:8013FA5C       StinkBugSmall::exeSpinReaction((void))
 0002:8013FAE0       StinkBugParent::exePanic((void))
 0002:8013FBC8       StinkBugSmall::exeRecover((void))
 0002:8013FC34       StinkBugSmall::exeShakeStart((void))
 0002:8013FC9C       StinkBugParent::exeDemoChildDown((void))
 0002:8013FDBC       StinkBugParent::exeDemoAnger((void))
 0002:8013FF28       StinkBugParent::kill((void))
 0002:8013FF78       StinkBugParent::control((void))
 0002:80140044       TicoRail::calcAndSetBaseMtx((void))
 0002:8014008C       StinkBugParent::attackSensor((HitSensor *,HitSensor *))
 0002:801401FC       StinkBugParent::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801403C4       StinkBugParent::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801404FC       StinkBugParent::jumpBackPlayerFromChild(const(void))
 0002:8014058C       StinkBugParent::isShakeChance(const(void))
 0002:80140674       StinkBugParent::isHitChild(const(void))
 0002:801409D4       NrvPlayerMissLeft::HostTypeNrvAppearWait::execute(const(Spine *))
 0002:80140AA8       NrvStinkBugSmall::StinkBugSmallNrvDashSignEnd::execute(const(Spine *))
 0002:80140B08       StinkBugSmall::StinkBugSmall((char const *))
 0002:80140B54       StinkBugSmall::init((JMapInfoIter const &))
 0002:80140D84       StinkBugSmall::exeWait((void))
 0002:80140E44       StinkBugSmall::exeSearch((void))
 0002:80140EE4       StinkBugSmall::exeDashSign((void))
 0002:80140F94       StinkBugSmall::exeDash((void))
 0002:801410D4       StinkBugSmall::exeBack((void))
 0002:801411C0       StinkBugSmall::exeHipDropDown((void))
 0002:801413F0       StinkBugSmall::exePanic((void))
 0002:8014153C       StinkBugSmall::exeDPDSwoon((void))
 0002:801415B4       StinkBugSmall::exeForceFall((void))
 0002:80141614       StinkBugSmall::kill((void))
 0002:801416C8       StinkBugSmall::initAfterPlacement((void))
 0002:80141778       StinkBugSmall::control((void))
 0002:80141910       StinkBugSmall::calcAndSetBaseMtx((void))
 0002:801419AC       StinkBugSmall::attackSensor((HitSensor *,HitSensor *))
 0002:80141AFC       StinkBugSmall::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80141CA8       StinkBugSmall::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80141E04       StinkBugSmall::tryDPDSwoon((void))
 0002:80141E88       StinkBugSmall::tryForceFall((void))
 0002:80141F1C       StinkBugSmall::isShakeChance(const(void))
 0002:80142230       NrvStinkBugSmall::StinkBugSmallNrvDPDSwoon::executeOnEnd(const(Spine *))
 0002:8014233C       StringSpider::StringSpider((char const *))
 0002:801423CC       StringSpider::getSearchToAttackTime((void))
 0002:801423DC       IronCannonShell::getLifeTime(const(void))
 0002:801423E4       StringSpider::init((JMapInfoIter const &))
 0002:801427C8       StringSpider::initAfterPlacement((void))
 0002:801428A8       StringSpider::kill((void))
 0002:80142928       StringSpider::startClipped((void))
 0002:80142978       StringSpider::endClipped((void))
 0002:801429C8       StringSpider::doSwingAction((float,bool))
 0002:80142B94       StringSpider::reactDPD((void))
 0002:80142D1C       StringSpider::reactStringForce((void))
 0002:80142E10       StringSpider::isOverStringLength((JGeometry::TVec3<f> *,float *))
 0002:80142EA0       StringSpider::control((void))
 0002:80143050       StringSpider::calcToRootVector((void))
 0002:8014309C       StringSpider::calcPosture((float,bool))
 0002:801431D0       StringSpider::exeWait((void))
 0002:80143294       StringSpider::exeDownEnd((void))
 0002:8014338C       StringSpider::exeDown((void))
 0002:80143470       StringSpider::exeUp((void))
 0002:80143534       StringSpider::exeSearch((void))
 0002:80143670       StringSpider::exeAttack((void))
 0002:80143730       StringSpider::exeHit((void))
 0002:801437C0       StringSpider::exeSpinned((void))
 0002:801439A4       StringSpider::exeTrampleFall((void))
 0002:80143A78       StringSpider::exeWallHitDeath((void))
 0002:80143AE4       StringSpider::exeBlow((void))
 0002:80143B6C       StringSpider::exeDpdGripped((void))
 0002:80143CFC       StringSpider::tearDownDpdGripped((void))
 0002:80143D58       StringSpider::extendString((void))
 0002:80143DA4       StringSpider::shortenString((float))
 0002:80143DEC       StringSpider::calcAndSetBaseMtx((void))
 0002:80143ECC       StringSpider::calcAnim((void))
 0002:80143F0C       StringSpider::attackSensor((HitSensor *,HitSensor *))
 0002:80144188       StringSpider::reactSpinHit((HitSensor *,HitSensor *))
 0002:80144298       StringSpider::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801443E4       StringSpider::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80144510       StringSpider::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80144874       StringSpider::startSwingLevelSound((void))
 0002:8014494C       StringSpiderString::StringSpiderString((char const *))
 0002:801449EC       StringSpiderString::calcAndSetBaseMtx((void))
 0002:80144DA0       Takobo::Takobo((char const *))
 0002:80144E54       Takobo::init((JMapInfoIter const &))
 0002:8014523C       Takobo::initSensor((void))
 0002:80145360       Takobo::control((void))
 0002:80145548       Takobo::tryPress((void))
 0002:801455B0       Takobo::exeMove((void))
 0002:80145874       Takobo::exeWait((void))
 0002:801458E0       Takobo::exePress((void))
 0002:80145964       Takobo::exeHitPunch((void))
 0002:80145ADC       Takobo::exeAttack((void))
 0002:80145BA0       Takobo::exeStunStart((void))
 0002:80145C40       Takobo::exeStun((void))
 0002:80145CD0       Takobo::exeIce((void))
 0002:80145D50       Takobo::exeDpdPointed((void))
 0002:80145DE4       Takobo::attackSensor((HitSensor *,HitSensor *))
 0002:80145F84       Takobo::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8014600C       Takobo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80146218       Takobo::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8014634C       Takobo::calcAndSetBaseMtx((void))
 0002:80146544       NrvTakobo::HostTypeNrvDpdPointed::executeOnEnd(const(Spine *))
 0002:801465FC       NrvTakobo::HostTypeNrvWait::executeOnEnd(const(Spine *))
 0002:8014667C       TakoHei::TakoHei((char const *))
 0002:80146760       TakoHei::init((JMapInfoIter const &))
 0002:801468D4       TakoHei::initAfterPlacement((void))
 0002:80146918       TakoHei::initSensor((void))
 0002:801469F4       TakoHei::kill((void))
 0002:80146AB0       TakoHei::control((void))
 0002:80146B14       TakoHei::calcAndSetBaseMtx((void))
 0002:80146B74       TakoHei::attackSensor((HitSensor *,HitSensor *))
 0002:80146CBC       TakoHei::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80146DE4       TakoHei::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80146EF0       TakoHei::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80146F88       TakoHei::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80147004       TakoHei::requestFlatDown((void))
 0002:8014717C       TakoHei::requestPunch((HitSensor *,HitSensor *))
 0002:80147208       TakoHei::requestAttackSuccess((HitSensor *,HitSensor *))
 0002:801472D4       TakoHei::tryNonActive((void))
 0002:80147348       TakoHei::tryWalk((void))
 0002:80147398       TakoHei::tryWalkEnd((void))
 0002:801474C0       TrickRabbit::tryEndGetUp((void))
 0002:80147560       TakoHei::tryPursueEnd((void))
 0002:801475DC       TakoHei::tryAttack((void))
 0002:80147654       TakoHei::tryCoolDownEnd((void))
 0002:80147714       TakoHei::tryPointBind((void))
 0002:80147804       TakoHei::tryPressed((void))
 0002:80147864       TakoHei::exeNonActive((void))
 0002:80147918       TakoHei::exeWait((void))
 0002:80147A00       TakoHei::exeWalk((void))
 0002:80147B18       TakoHei::exeFindTurn((void))
 0002:80147BE0       TakoHei::exeFind((void))
 0002:80147C60       TakoHei::exePursue((void))
 0002:80147DB8       TakoHei::exeCoolDown((void))
 0002:80147E60       TakoHei::exeAttackSign((void))
 0002:80147F74       TakoHei::exeAttack((void))
 0002:801480A8       TakoHei::exeAttackSuccess((void))
 0002:80148124       TakoHei::exeSwoon((void))
 0002:801481E0       TakoHei::exeRecover((void))
 0002:80148264       TakoHei::exePressDown((void))
 0002:80148300       TakoHei::exeHipDropDown((void))
 0002:8014839C       TakoHei::exeFlatDown((void))
 0002:80148438       TakoHei::exePunchDown((void))
 0002:80148520       TakoHei::updatePose((void))
 0002:80148674       TakoHei::decideNextTargetPos((void))
 0002:80148788       TakoHei::isPushMovable(const(void))
 0002:801488BC       TakoHei::isFallNextMove(const(void))
 0002:8014893C       TakoHei::isInSightMario(const(void))
 0002:80148A78       __sinit__TakoHei_cpp
 0002:80148CEC       TakoHeiInk::TakoHeiInk((char const *))
 0002:80148D28       TakoHeiInk::init((JMapInfoIter const &))
 0002:80148E60       TakoHeiInk::start((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:80148EE8       TakoHeiInk::attackSensor((HitSensor *,HitSensor *))
 0002:80148F70       TakoHeiInk::exeWait((void))
 0002:801490C8       TakoHeiInkHolder::TakoHeiInkHolder((void))
 0002:801491BC       MR::createTakoHeiInkHolder((void))
 0002:801491C4       MR::spurtTakoHeiInk((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801492A0       Teresa::Teresa((char const *))
 0002:801493B0       Teresa::init((JMapInfoIter const &))
 0002:80149590       Teresa::initDummyModel((JMapInfoIter const &))
 0002:80149674       Teresa::initFromJMapParam((JMapInfoIter const &))
 0002:80149708       Teresa::initSensor((void))
 0002:801497DC       Teresa::initBind((void))
 0002:801498B0       Teresa::appear((void))
 0002:80149964       Teresa::kill((void))
 0002:80149A04       Teresa::control((void))
 0002:80149AE4       Teresa::calcAndSetBaseMtx((void))
 0002:80149B40       Teresa::attackSensor((HitSensor *,HitSensor *))
 0002:80149BC0       Teresa::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80149C7C       Teresa::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80149D38       Teresa::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80149DB0       Teresa::filterBind((Triangle const *))
 0002:80149E44       Teresa::requestAttack((HitSensor *,HitSensor *))
 0002:80149F34       Teresa::requestLoveHit((HitSensor *,HitSensor *))
 0002:80149FF8       Teresa::setStartNerve((void))
 0002:8014A070       Teresa::tryAppearFromGroundEnd((void))
 0002:8014A154       Teresa::tryRailTurnEnd((void))
 0002:8014A1A4       Teresa::tryWalk((void))
 0002:8014A268       Teresa::tryWalkEnd((void))
 0002:8014A2D4       Teresa::tryChase((void))
 0002:8014A34C       Teresa::tryCheseEnd((void))
 0002:8014A3BC       Teresa::tryShay((void))
 0002:8014A44C       Teresa::tryShayEnd((void))
 0002:8014A4F4       Teresa::tryLoveFind((void))
 0002:8014A554       Teresa::tryLoveEnd((void))
 0002:8014A600       Teresa::tryLoveChaseEnd((void))
 0002:8014A698       Teresa::tryAggressiveEnd((void))
 0002:8014A784       Teresa::tryHideWater((void))
 0002:8014A858       Teresa::tryHideWall((void))
 0002:8014A918       Teresa::tryHideWallEnd((void))
 0002:8014A980       Teresa::tryAscension((void))
 0002:8014A9EC       Teresa::endAppear((void))
 0002:8014AA40       Teresa::exeAppearFromWall((void))
 0002:8014ABA0       Teresa::exeAppearFromGround((void))
 0002:8014AD00       Teresa::exeWait((void))
 0002:8014ADBC       Teresa::exeWalk((void))
 0002:8014AE70       Teresa::exeRailWalk((void))
 0002:8014AF78       Teresa::exeRailTurn((void))
 0002:8014B030       Teresa::exeLoveFind((void))
 0002:8014B10C       Teresa::exeLoveChase((void))
 0002:8014B1D4       Teresa::exeLoveHit((void))
 0002:8014B288       Teresa::exeLoveEnd((void))
 0002:8014B308       Teresa::exeChase((void))
 0002:8014B3F8       Teresa::exeShay((void))
 0002:8014B4E0       Teresa::exeAggressive((void))
 0002:8014B57C       Teresa::exeAttackSuccess((void))
 0002:8014B62C       Teresa::exeDrift((void))
 0002:8014B734       Teresa::exeHideWall((void))
 0002:8014B790       Teresa::exeHideWater((void))
 0002:8014B828       Teresa::exeAscension((void))
 0002:8014B8BC       Teresa::exeStop((void))
 0002:8014B940       Teresa::updateNormalVelocity((void))
 0002:8014B9B4       Teresa::addDriftVelocity((void))
 0002:8014BA30       Teresa::updateDriftAnimScale((void))
 0002:8014BAF0       Teresa::updateDriftTransparency((void))
 0002:8014BB7C       Teresa::updateNormalTransparency((void))
 0002:8014BBAC       Teresa::setTransparency((float))
 0002:8014BF18       Teresa::isShay(const(void))
 0002:8014BF9C       __sinit__Teresa_cpp
 0002:8014C088       NrvTeresa::TeresaNrvDrift::executeOnEnd(const(Spine *))
 0002:8014C164       TriangleFilterDelegator<10MarioActor>::isInvalidTriangle(const(Triangle const *))
 0002:8014C320       TeresaWater::TeresaWater((char const *))
 0002:8014C398       TeresaWater::init((JMapInfoIter const &))
 0002:8014C570       TeresaWater::exeMove((void))
 0002:8014C628       TeresaWater::exeHit((void))
 0002:8014C714       TeresaWater::kill((void))
 0002:8014C794       TeresaWater::control((void))
 0002:8014C7FC       TeresaWater::calcAndSetBaseMtx((void))
 0002:8014C898       TeresaWater::attackSensor((HitSensor *,HitSensor *))
 0002:8014C934       TeresaWater::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8014CB68       NrvTeresaWater::TeresaWaterNrvMove::execute(const(Spine *))
 0002:8014CB70       TerritoryMover::TerritoryMover((float))
 0002:8014CB78       TerritoryMover::decideNextTargetPos((LiveActor const *))
 0002:8014CC38       TerritoryMover::isReachedTarget((LiveActor const *,float))
 0002:8014CCDC       Unizo::Unizo((char const *))
 0002:8014CD84       Unizo::initType((JMapInfoIter const &))
 0002:8014CE1C       Unizo::init((JMapInfoIter const &))
 0002:8014D1B0       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8014D1B4       Unizo::control((void))
 0002:8014D258       Unizo::appear((void))
 0002:8014D2A8       Unizo::makeActorAppeared((void))
 0002:8014D464       Unizo::makeActorDead((void))
 0002:8014D4F0       Unizo::calcAndSetBaseMtx((void))
 0002:8014D718       Unizo::exeWait((void))
 0002:8014D7BC       Unizo::exeJump((void))
 0002:8014D87C       Unizo::exeChase((void))
 0002:8014D8F4       Unizo::exeAttack((void))
 0002:8014D994       Unizo::exeCollideEnemy((void))
 0002:8014DA4C       Unizo::exeBreak((void))
 0002:8014DAB8       Unizo::exeFireDown((void))
 0002:8014DBF0       Unizo::exeJumpDown((void))
 0002:8014DCFC       Unizo::attackSensor((HitSensor *,HitSensor *))
 0002:8014DDEC       Unizo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8014DED8       Unizo::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8014DFAC       Unizo::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8014DFF8       Unizo::updateRotate((void))
 0002:8014E048       Unizo::updateVelocity((void))
 0002:8014E270       Unizo::udpateInfluence((void))
 0002:8014E584       Unizo::udpateBlink((void))
 0002:8014E5DC       Unizo::updateSurfaceEffect((void))
 0002:8014E72C       Unizo::deleteEffect((void))
 0002:8014E75C       Unizo::doJump((void))
 0002:8014E838       Unizo::doAttack((HitSensor *))
 0002:8014E8F8       Unizo::doJumpDown((void))
 0002:8014E9B4       Unizo::doFireDown((JGeometry::TVec3<f> const &))
 0002:8014EADC       Unizo::doBreak((void))
 0002:8014EC38       Unizo::doSpin((void))
 0002:8014ED48       Unizo::isBreakGround((void))
 0002:8014EE34       Unizo::tryPointBind((void))
 0002:8014EF38       Unizo::appearBreakModel((void))
 0002:8014F0FC       Unizo::startWallHitSound((void))
 0002:8014F33C       NrvUnizo::UnizoNrvPointing::executeOnEnd(const(Spine *))
 0002:8014F354       NrvUnizo::UnizoNrvPointing::execute(const(Spine *))
 0002:8014F384       NrvUnizo::UnizoNrvCollidePlayer::execute(const(Spine *))
 0002:8014F3F4       Unizo::getBaseMtx(const(void))
 0002:8014F3FC       UnizoLauncher::UnizoLauncher((char const *))
 0002:8014F438       UnizoLauncher::init((JMapInfoIter const &))
 0002:8014F590       UnizoLauncher::exeLaunch((void))
 0002:8014F710       NrvUnizoLauncher::UnizoLauncherNrvWait::execute(const(Spine *))
 0002:8014F760       WalkerStateBindStarPointer::WalkerStateBindStarPointer((LiveActor *,AnimScaleController *))
 0002:8014F86C       WalkerStateBindStarPointer::kill((void))
 0002:8014F8F4       WalkerStateBindStarPointer::tryStartPointBind(const(void))
 0002:8014F908       WalkerStateBindStarPointer::exeBind((void))
 0002:8014FA78       WalkerStateBlowDamage::WalkerStateBlowDamage((LiveActor *,JGeometry::TVec3<f> *,WalkerStateBlowDamageParam *))
 0002:8014FAE8       WalkerStateBlowDamage::appear((void))
 0002:8014FAF8       WalkerStateBlowDamage::exeBlow((void))
 0002:8014FC70       NrvWalkerStateBlowDamage::WalkerStateBlowDamageNrvBlowLand::execute(const(Spine *))
 0002:8014FCC8       WalkerStateChaseParam::WalkerStateChaseParam((void))
 0002:8014FCEC       WalkerStateChase::WalkerStateChase((LiveActor *,JGeometry::TVec3<f> *,WalkerStateParam *,WalkerStateChaseParam *))
 0002:8014FD88       WalkerStateChase::exeStart((void))
 0002:8014FEA8       WalkerStateChase::exeEnd((void))
 0002:8014FF24       WalkerStateChase::isRunning(const(void))
 0002:8014FFD8       __sinit__WalkerStateWander_cpp
 0002:80150040       WalkerStateFindPlayerParam::WalkerStateFindPlayerParam((void))
 0002:8015005C       WalkerStateFindPlayer::WalkerStateFindPlayer((LiveActor *,JGeometry::TVec3<f> *,WalkerStateParam *,WalkerStateFindPlayerParam *))
 0002:801500FC       WalkerStateFindPlayer::exeFind((void))
 0002:80150198       WalkerStateFindPlayer::exeFindJumpStart((void))
 0002:80150204       WalkerStateFindPlayer::exeFindJump((void))
 0002:80150294       WalkerStateFindPlayer::exeFindJumpEnd((void))
 0002:80150308       WalkerStateFindPlayer::isInSightPlayer(const(void))
 0002:8015031C       TakeOutStar::isFirstStep((void))
 0002:8015042C       __sinit__WalkerStateFindPlayer_cpp
 0002:801504D4       WalkerStateFunction::isInSightPlayer((LiveActor const *,JGeometry::TVec3<f> const &,WalkerStateParam const *))
 0002:801504E4       WalkerStateFunction::calcPassiveMovement((LiveActor *,WalkerStateParam const *))
 0002:80150564       WalkerStateParam::WalkerStateParam((void))
 0002:80150598       WalkerStateRunawayParam::WalkerStateRunawayParam((void))
 0002:80150648       WalkerStateRunaway::WalkerStateRunaway((LiveActor *,JGeometry::TVec3<f> *,WalkerStateRunawayParam *))
 0002:801506DC       WalkerStateRunaway::appear((void))
 0002:80150720       WalkerStateRunaway::tryRunaway((void))
 0002:80150778       WalkerStateRunaway::tryWait((void))
 0002:801507D4       WalkerStateRunaway::tryWallJump((void))
 0002:801508E0       WalkerStateRunaway::exeWait((void))
 0002:8015099C       WalkerStateRunaway::exeRunaway((void))
 0002:80150B34       WalkerStateRunaway::exeWallJump((void))
 0002:80150C5C       __sinit__WalkerStateRunaway_cpp
 0002:80150CE4       WalkerStateStaggerParam::WalkerStateStaggerParam((void))
 0002:80150D40       WalkerStateStagger::WalkerStateStagger((LiveActor *,JGeometry::TVec3<f> *,WalkerStateParam *,WalkerStateStaggerParam *))
 0002:80150DF0       WalkerStateStagger::setPunchDirection((HitSensor *,HitSensor *))
 0002:80150E84       WalkerStateStagger::exeStagger((void))
 0002:801510AC       WalkerStateStagger::exeStaggerEnd((void))
 0002:80151120       WalkerStateStagger::reboundWall((void))
 0002:801511D8       WalkerStateStagger::isEnableKick(const(void))
 0002:80151248       WalkerStateStagger::isUpsideDown(const(void))
 0002:801512B4       ButtonPaneController::isTimingForSelectedSe(const(void))
 0002:80151314       WalkerStateStagger::isSwooning(const(long))
 0002:80151378       WalkerStateStagger::isSpinning(const(long,long))
 0002:80151510       WalkerStateWanderParam::WalkerStateWanderParam((void))
 0002:80151538       WalkerStateWander::WalkerStateWander((LiveActor *,JGeometry::TVec3<f> *,WalkerStateParam *,WalkerStateWanderParam *))
 0002:80151610       WalkerStateWander::exeWait((void))
 0002:80151690       WalkerStateWander::exeWalk((void))
 0002:80151868       TerritoryMover::setCenter((JGeometry::TVec3<f> const &))
 0002:80151884       WaterBazooka::WaterBazooka((char const *))
 0002:80151910       WaterBazooka::init((JMapInfoIter const &))
 0002:80151C6C       WaterBazooka::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80151D9C       WaterBazooka::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80151E44       WaterBazooka::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80152024       WaterBazooka::isBazookaPinch(const(void))
 0002:80152040       WaterBazooka::isBazookaLifeOut(const(void))
 0002:80152054       WaterBazooka::exeWaitForBattle((void))
 0002:80152108       WaterBazooka::exeWait((void))
 0002:801521CC       WaterBazooka::exeAim((void))
 0002:801522B0       WaterBazooka::exeAimEnd((void))
 0002:80152380       WaterBazooka::exeShot((void))
 0002:8015249C       WaterBazooka::exeShotNoMotion((void))
 0002:8015257C       WaterBazooka::exeTire((void))
 0002:80152604       WaterBazooka::exeDemoCrackCapsule((void))
 0002:80152704       WaterBazooka::exeDemoAnger((void))
 0002:8015290C       WaterBazooka::exeDemoBreakWait((void))
 0002:80152988       WaterBazooka::exeDemoBreakSign((void))
 0002:80152A74       WaterBazooka::exeDemoBreakExplosion((void))
 0002:80152C24       WaterBazooka::exeDemoBreakEnd((void))
 0002:80152C88       WaterBazooka::exeWaitForLaugh((void))
 0002:80152CD8       WaterBazooka::exePanic((void))
 0002:80152E28       WaterBazooka::exeStorm((void))
 0002:80152F58       WaterBazooka::makeActorDead((void))
 0002:80152FE4       WaterBazooka::kill((void))
 0002:8015303C       WaterBazooka::control((void))
 0002:80153110       WaterBazooka::calcAndSetBaseMtx((void))
 0002:80153144       WaterBazooka::startDemoCrackCapsule((void))
 0002:8015319C       WaterBazooka::startDemoAnger((void))
 0002:80153210       WaterBazooka::startDemoBreakCapsule((void))
 0002:80153270       WaterBazooka::aimAtMario((void))
 0002:80153464       WaterBazooka::switchShowOrHide((void))
 0002:80153504       WaterBazooka::updateElectricLeak((void))
 0002:80153668       WaterBazooka::damageBazooka((HitSensor *,HitSensor *))
 0002:80153750       WaterBazooka::calcJointCannon((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80153780       WaterBazooka::getSmokeLevel(const(void))
 0002:801537C8       WaterBazooka::tryWaitForBattle((void))
 0002:80153854       WaterBazooka::tryPanic((void))
 0002:801539DC       WaterBazooka::isElectricLeakSign(const(void))
 0002:80153A10       WaterBazooka::isElectricLeak(const(void))
 0002:80153A44       WaterBazooka::initShooter((void))
 0002:80153AA4       WaterBazooka::initBazookaCapsule((void))
 0002:80153B00       WaterBazooka::initBreakModel((void))
 0002:80153BB4       WaterBazooka::initCameraTarget((void))
 0002:80153C34       WaterBazooka::initBullet((JMapInfoIter const &))
 0002:80153CE4       WaterBazooka::tryShotBullet((void))
 0002:80153DA8       WaterBazooka::selectBulletElectric((void))
 0002:80153E14       WaterBazooka::tryJumpBackPlayerFromBazooka(const(void))
 0002:80153F1C       WaterBazooka::calcNearDropPoint(const(JGeometry::TVec3<f> *))
 0002:80154060       WaterBazooka::calcGunPointFromCannon((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8015410C       WaterBazooka::setCameraTargetMtx((void))
 0002:80154340       NrvWaterBazooka::WaterBazookaNrvStorm::executeOnEnd(const(Spine *))
 0002:80154580       WaterBazookaCapsule::WaterBazookaCapsule((LiveActor *,char const *))
 0002:801545D0       WaterBazookaCapsule::init((JMapInfoIter const &))
 0002:801546D0       WaterBazookaCapsule::isPlayerOnCapsule(const(void))
 0002:801546F8       WaterBazookaCapsule::exeCrack((void))
 0002:80154770       WaterBazookaCapsule::exeBreak((void))
 0002:801547F0       WaterBazookaCapsule::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80154884       WaterBazookaCapsule::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80154918       WaterBazookaCapsule::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80154AC0       AudCameraWatcher::AudCameraWatcher((void))
 0002:80154B0C       AudCameraWatcher::playAtmosphereSE((void))
 0002:80154B74       AudCameraWatcher::init((JMapInfoIter const &))
 0002:80154B88       AudCameraWatcher::movement((void))
 0002:80154C48       AudStageBgmWrap::changeStageNameToSoundID((char const *,char const *,long))
 0002:80154DA4       AudStageBgmWrap::getCometEventBgm((char const *))
 0002:80154E40       AudStageBgmWrap::getKoopaFortressAppearBgm((char const *))
 0002:80154EA4       AudSeKeeperBox::AudSeKeeperBox((void))
 0002:80154EB8       AudSeKeeperBox::~AudSeKeeperBox((void))
 0002:80154F44       AudSeKeeperBox::update((void))
 0002:80154F8C       AudSeKeeperBox::add((J3DJoint *,ushort))
 0002:80154FFC       AudSeKeeperBox::updateJointPos((void))
 0002:80155048       AudSeKeeper::AudSeKeeper((LiveActor *,int))
 0002:801550D0       AudSeKeeper::~AudSeKeeper((void))
 0002:80155148       AudSeKeeper::update((void))
 0002:801551A4       AudSeKeeper::makeBox((char const *,char const *))
 0002:8015526C       AudSeKeeper::playLevel((char const *,char const *))
 0002:801552D0       AudSeKeeper::getBoxEqualName((char const *))
 0002:80155344       AudTalkSoundData::getSoundIDFromTalkSoundNo((uchar))
 0002:80155370       __sinit(char ()[udTalkSoundData],**)
 0002:80155B50       AudEffectDirector::AudEffectDirector((void))
 0002:80155BA4       AudEffectDirector::init((JMapInfoIter const &))
 0002:80155BB8       AudEffectDirector::movement((void))
 0002:80155C10       AudEffectDirector::setEffectType((long,long))
 0002:80155C40       AudEffectDirector::setAudioEffectParam((long))
 0002:80155D0C       AudEffectDirector::playEffectSound((long))
 0002:80155DA4       AudBgmConductor::AudBgmConductor((void))
 0002:80155E04       AudBgmConductor::init((JMapInfoIter const &))
 0002:80155E70       AudBgmConductor::playPinchEventBgmLevel((bool))
 0002:80155F94       AudBgmConductor::movement((void))
 0002:8015608C       AudBgmConductor::setStateBit((ulong))
 0002:8015609C       AudBgmConductor::stopPinchEventBgmSoon((void))
 0002:801560B0       AudBgmConductor::movementPinchEventBgm((void))
 0002:80156254       @unnamed@AudStageBgmTable_cpp@::findDataElement((char const *))
 0002:801562C8       AudStageBgmTable::getBgmId((char const *,long))
 0002:80156344       AudStageBgmTable::getBgmState((char const *,long))
 0002:801563A4       AudTamakoroBgmCtrl::control((float,bool,long))
 0002:80156534       AudTamakoroBgmCtrl::modifyTempo((JAISoundHandle *,float))
 0002:801565C8       AudTamakoroBgmCtrl::modifyPitch((JAISoundHandle *,float))
 0002:80156660       ConeGravity::ConeGravity((void))
 0002:801566D0       ConeGravity::setLocalMatrix((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80156704       ConeGravity::setEnableBottom((bool))
 0002:8015670C       ConeGravity::setTopCutRate((float))
 0002:80156738       ConeGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80156798       ConeGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:80156CB0       JGeometry::TVec3<f>::isZero(const(void))
 0002:80156CDC       CubeGravity::CubeGravity((void))
 0002:80156D40       ParallelGravity::setRangeBox((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80156D68       CubeGravity::calcGravityArea(const(JGeometry::TVec3<f> const &))
 0002:80156F48       CubeGravity::calcFaceGravity(const(JGeometry::TVec3<f> const &,long,JGeometry::TVec3<f> *,float *))
 0002:8015701C       def_80156F94
 0002:801570A8       CubeGravity::calcEdgeGravity(const(JGeometry::TVec3<f> const &,long,JGeometry::TVec3<f> *,float *))
 0002:801573C0       def_80157134
 0002:8015747C       CubeGravity::calcCornerGravity(const(JGeometry::TVec3<f> const &,long,JGeometry::TVec3<f> *,float *))
 0002:801576D8       def_801574E4
 0002:8015776C       CubeGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:80157870       CubeGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:801578EC       JGeometry::TVec3<f>::normalize((JGeometry::TVec3<f> const &))
 0002:80157954       DiskGravity::DiskGravity((void))
 0002:80157A3C       DiskTorusGravity::setPosition((JGeometry::TVec3<f> const &))
 0002:80157A44       DiskGravity::setLocalDirection((JGeometry::TVec3<f> const &))
 0002:80157A84       DiskGravity::setSideDirection((JGeometry::TVec3<f> const &))
 0002:80157ABC       DiskGravity::setRadius((float))
 0002:80157AC4       DiskGravity::setValidDegee((float))
 0002:80157ACC       DiskGravity::setBothSide((bool))
 0002:80157AD4       DiskGravity::setEnableEdgeGravity((bool))
 0002:80157ADC       DiskGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:80157D04       DiskGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80157D88       DiskGravity::updateLocalParam((void))
 0002:80157F78       DiskTorusGravity::DiskTorusGravity((void))
 0002:80158030       MapObjActorInitInfo::setupFarClipping((float))
 0002:80158038       DiskTorusGravity::setDiskRadius((float))
 0002:80158054       DiskTorusGravity::setEdgeType((long))
 0002:8015805C       DiskTorusGravity::setBothSide((bool))
 0002:80158064       DiskTorusGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8015813C       DiskTorusGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:80158420       GlobalGravityObj::init((JMapInfoIter const &))
 0002:801584E0       GlobalGravityObj::makeActorAppeared((void))
 0002:80158530       GlobalGravityObj::makeActorDead((void))
 0002:80158578       GlobalGravityObj::updateSwitch((void))
 0002:80158638       GlobalGravityObj::updateSwitch((void))
 0002:8015863C       GlobalGravityObj::getGravity((void))
 0002:80158650       MR::createGlobalSegmentGravityObj((char const *))
 0002:80158AF4       MR::createGlobalWireGravityObj((char const *))
 0002:80158BD8       GraviryFollower::GraviryFollower((GlobalGravityObj *,JMapInfoIter const &))
 0002:80158C34       GraviryFollower::setGravityFollowHost((NameObj const *))
 0002:80158C40       GraviryFollower::update((void))
 0002:80158CE4       MR::addBaseMatrixFollowerGravity((GlobalGravityObj *,JMapInfoIter const &))
 0002:80158D64       GravityCreator::createFromJMap((JMapInfoIter const &))
 0002:80158EC0       CubeGravityCreator::createInstance((void))
 0002:80158F00       CubeGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80158FB8       CubeGravityCreator::settingFromJMapArgs((long,long,long))
 0002:8015902C       DiskGravityCreator::createInstance((void))
 0002:8015906C       DiskGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159100       DiskGravityCreator::settingFromJMapArgs((long,long,long))
 0002:801591A0       DiskTorusGravityCreator::createInstance((void))
 0002:801591E0       DiskTorusGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8015925C       DiskTorusGravityCreator::settingFromJMapArgs((long,long,long))
 0002:80159334       ConeGravityCreator::createInstance((void))
 0002:80159374       ConeGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801593DC       ConeGravityCreator::settingFromJMapArgs((long,long,long))
 0002:80159458       PlaneGravityCreator::createInstance((void))
 0002:80159498       PlaneGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801594FC       PlaneInBoxGravityCreator::createInstance((void))
 0002:80159548       PlaneInBoxGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159608       PlaneInBoxGravityCreator::settingFromJMapArgs((long,long,long))
 0002:801596C4       PlaneInCylinderGravityCreator::createInstance((void))
 0002:80159718       PlaneInCylinderGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159790       PlaneInCylinderGravityCreator::settingFromJMapArgs((long,long,long))
 0002:801597D4       PointGravityCreator::createInstance((void))
 0002:80159814       PointGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159848       SegmentGravityCreator::createInstance((void))
 0002:80159888       SegmentGravityCreator::settingFromSRT((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159928       SegmentGravityCreator::settingFromJMapArgs((long,long,long))
 0002:80159A6C       WireGravityCreator::createInstance((void))
 0002:80159AAC       WireGravityCreator::settingFromJMapOtherParam((JMapInfoIter const &))
 0002:80159BE0       GravityInfo::init((void))
 0002:80159C04       ParallelGravity::ParallelGravity((void))
 0002:80159CC8       ParallelGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:80159D38       ParallelGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80159E5C       ParallelGravity::setPlane((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80159EF0       ParallelGravity::setRangeCylinder((float,float))
 0002:80159EFC       ParallelGravity::setRangeType((ParallelGravity::RANGE_TYPE))
 0002:80159F04       ParallelGravity::setBaseDistance((float))
 0002:80159F24       J3DTevBlockPatched::setTevRegOffset((ulong))
 0002:80159F2C       ParallelGravity::isInSphereRange(const(JGeometry::TVec3<f> const &,float *))
 0002:80159FB8       ParallelGravity::isInBoxRange(const(JGeometry::TVec3<f> const &,float *))
 0002:8015A184       ParallelGravity::isInCylinderRange(const(JGeometry::TVec3<f> const &,float *))
 0002:8015A250       ParallelGravity::isInRange(const(JGeometry::TVec3<f> const &,float *))
 0002:8015A28C       PlanetGravity::PlanetGravity((void))
 0002:8015A2E8       PlanetGravity::calcGravity(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:8015A404       PlanetGravity::isInRangeSquare(const(float))
 0002:8015A438       PlanetGravity::isInRangeDistance(const(float))
 0002:8015A468       PlanetGravity::calcGravityFromMassPosition(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8015A524       PlanetGravity::updateIdentityMtx((void))
 0002:8015A56C       PlanetGravityManager::PlanetGravityManager((char const *))
 0002:8015A5B4       PlanetGravityManager::calcTotalGravityVector(const(JGeometry::TVec3<f> *,GravityInfo *,JGeometry::TVec3<f> const &,ulong,ulong))
 0002:8015A78C       PlanetGravityManager::registerGravity((PlanetGravity *))
 0002:8015A84C       PointGravity::PointGravity((void))
 0002:8015A8B0       PointGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:8015A9C4       PointGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8015A9D8       SegmentGravity::SegmentGravity((void))
 0002:8015AAE0       SegmentGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:8015ACE0       SegmentGravity::updateMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8015ADE0       SegmentGravity::setGravityPoint((ulong,JGeometry::TVec3<f> const &))
 0002:8015AE30       SegmentGravity::setSideVector((JGeometry::TVec3<f> const &))
 0002:8015AE70       SegmentGravity::setValidSideDegree((float))
 0002:8015AE78       SegmentGravity::setEdgeValid((ulong,bool))
 0002:8015AE8C       SegmentGravity::updateLocalParam((void))
 0002:8015B0A0       WireGravity::WireGravity((void))
 0002:8015B0EC       WireGravity::setPointListSize((ulong))
 0002:8015B154       WireGravity::addPoint((JGeometry::TVec3<f> const &))
 0002:8015B170       WireGravity::calcOwnGravityVector(const(JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &))
 0002:8015B30C       ActiveActorList::ActiveActorList((int))
 0002:8015B35C       ActiveActorList::isFull(const(void))
 0002:8015B378       ActiveActorList::addActor((LiveActor *))
 0002:8015B3A8       ActiveActorList::removeDeadActor((void))
 0002:8015B44C       ActiveActorList::clear((void))
 0002:8015B478       J3DTevBlockNull::initialize((void))
 0002:8015B484       ActiveActorList::killAll((void))
 0002:8015B514       ActorAnimKeeper::ActorAnimKeeper((LiveActor *))
 0002:8015B578       ActorAnimKeeper::tryCreate((LiveActor *))
 0002:8015B654       @unnamed@ActorAnimKeeper_cpp@::getAnimName((ActorAnimKeeperInfo const *,ActorAnimDataInfo const &))
 0002:8015B66C       ActorAnimKeeper::start((char const *))
 0002:8015B8C4       nullsub_3
 0002:8015B8C8       ActorAnimKeeper::isPlaying(const(char const *))
 0002:8015B92C       @unnamed@ActorAnimKeeper_cpp@::getCsvDataAnimData((ActorAnimDataInfo *,char const *,JMapInfo *,long))
 0002:8015B9F4       ActorAnimKeeper::initAnimData((void))
 0002:8015BB30       ActorAnimKeeper::findAnimInfo(const(char const *))
 0002:8015BBAC       ActorCameraInfo::ActorCameraInfo((JMapInfoIter const &))
 0002:8015BC20       ActorCameraInfo::ActorCameraInfo((long,long))
 0002:8015BC2C       ActorJointCtrl::ActorJointCtrl((LiveActor *))
 0002:8015BCD0       ActorJointCtrl::startDynamicCtrl((char const *,long))
 0002:8015BCD8       ActorJointCtrl::endDynamicCtrl((char const *,long))
 0002:8015BCE0       ActorJointCtrl::resetDynamicCtrl((void))
 0002:8015BCE8       ActorJointCtrl::startFaceCtrl((long))
 0002:8015BCF0       ActorJointCtrl::endFaceCtrl((long))
 0002:8015BCF8       ActorJointCtrl::setIKEndPosition((char const *,JGeometry::TVec3<f> const &,float))
 0002:8015BD00       ActorJointCtrl::setIKEndDirection((char const *,JGeometry::TVec3<f> const &,float))
 0002:8015BD08       ActorJointCtrl::endIKCtrlAll((void))
 0002:8015BD10       ActorJointCtrl::update((void))
 0002:8015BD44       ActorJointCtrl::startUpdate((void))
 0002:8015BDA8       ActorJointCtrl::endUpdate((void))
 0002:8015BE0C       ActorJointCtrl::setCallBackFunction((void))
 0002:8015BE70       ActorLightCtrl::ActorLightCtrl((LiveActor const *))
 0002:8015BED4       ActorLightCtrl::init((int,bool))
 0002:8015BF48       ActorLightInfo::__as((ActorLightInfo const &))
 0002:8015BFCC       ActorLightCtrl::update((bool))
 0002:8015C024       ActorLightCtrl::loadLight(const(void))
 0002:8015C06C       ActorLightCtrl::reset((void))
 0002:8015C100       ActorLightCtrl::copy((ActorLightCtrl const *))
 0002:8015C170       ActorLightCtrl::isSameLight(const(ActorLightCtrl const *))
 0002:8015C19C       ActorLightCtrl::getActorLight(const(void))
 0002:8015C1BC       ActorLightCtrl::initActorLightInfo((void))
 0002:8015C1D4       ActorLightCtrl::tryFindNewAreaLight((bool))
 0002:8015C2B0       ActorLightCtrl::updateLightBlend((void))
 0002:8015C3A0       ActorLightCtrl::resetCurrentLightInfo((void))
 0002:8015C40C       ActorLightCtrl::getTargetActorLight(const(AreaLightInfo const *))
 0002:8015C458       ActorPadAndCameraCtrl::ActorPadAndCameraCtrl((ModelManager const *,JGeometry::TVec3<f> const *))
 0002:8015C674       ActorPadAndCameraCtrl::tryCreate((ModelManager const *,JGeometry::TVec3<f> const *))
 0002:8015C708       ActorPadAndCameraCtrl::update((void))
 0002:8015C81C       ActorPadAndCameraCtrl::updateInfoBck((void))
 0002:8015C8B0       @unnamed@ActorPadAndCameraCtrl_cpp@::tryUpdateCameraShake((char const *))
 0002:8015C9AC       @unnamed@ActorPadAndCameraCtrl_cpp@::isDistanceExistAndFar((float,float))
 0002:8015C9D0       ActorPadAndCameraCtrl::updatePadAndCamera((ActorPadAndCameraCtrlInfo const *))
 0002:8015CAC0       ActorStateBaseInterface::update((void))
 0002:8015CB18       ActorStateKeeper::ActorStateKeeper((int))
 0002:8015CBA0       ActorStateKeeper::addState((ActorStateBaseInterface *,Nerve const *,char const *))
 0002:8015CBC8       ActorStateKeeper::updateCurrentState((void))
 0002:8015CBF4       ActorStateKeeper::startState((Nerve const *))
 0002:8015CC40       ActorStateKeeper::endState((Nerve const *))
 0002:8015CC98       ActorStateKeeper::findStateInfo((Nerve const *))
 0002:8015CCD8       AllLiveActorGroup::AllLiveActorGroup((void))
 0002:8015CD28       AllLiveActorGroup::initActorSystemInfo((JMapInfoIter const &))
 0002:8015CDB8       MR::getAllLiveActorGroup((void))
 0002:8015CDE0       MR::startInitLiveActorSystemInfo((void))
 0002:8015CE10       MR::initLiveActorSystemInfo((JMapInfoIter const &))
 0002:8015CE4C       MR::endInitLiveActorSystemInfo((void))
 0002:8015CED8       AnimationRandomPlayer::AnimationRandomPlayer((LiveActor const *,char const *,char const *,long,float))
 0002:8015CF64       AnimationRandomPlayer::updateStartStep((void))
 0002:8015CFD4       AnimationRandomPlayer::exeWait((void))
 0002:8015D03C       AnimationRandomPlayer::exePlay((void))
 0002:8015D168       Binder::Binder((float *[4],JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,float,float,ulong))
 0002:8015D278       Binder::clear((void))
 0002:8015D298       Binder::getPlane(const(int))
 0002:8015D2A8       Binder::copyPlaneArrayAndSortingSensor((HitInfo **,ulong))
 0002:8015D370       Sky::initModel((char const *))
 0002:8015D3D0       Binder::compSensor((HitInfo const *,HitInfo const *))
 0002:8015D3E8       Binder::bind((JGeometry::TVec3<f> const &))
 0002:8015D88C       Binder::moveAlongHittedPlanes((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,HitInfo *,ulong,bool *))
 0002:8015D990       Binder::findBindedPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,bool *,HitInfo *,ulong,bool,bool))
 0002:8015DB14       Binder::moveWithCollisionParts((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:8015DBA8       Binder::storeCurrentHitInfo((HitInfo *,ulong,bool))
 0002:8015DC8C       HitInfo::__as((HitInfo const &))
 0002:8015DD64       Binder::obtainMomentFixReaction((HitInfo *,ulong,JGeometry::TVec3<f> *,ulong))
 0002:8015DF40       Binder::storeContactPlane((HitInfo *,ulong))
 0002:8015E040       std::sort<PP7HitInfo,PFPC7HitInfoPC7HitInfo_b>(void (HitInfo **,HitInfo **,bool (*)(HitInfo const *,HitInfo const *)))
 0002:8015E328       std::sort<PP13AbstractRacer,RPFPC13AbstractRacerPC13AbstractRacer_b>(void (AbstractRacer **,AbstractRacer **,bool (*&)(AbstractRacer const *,AbstractRacer const *)))
 0002:8015E610       std::swap<P12ScenarioData>(void (ScenarioData *&,ScenarioData *&))
 0002:8015E624       std::__sort132<RPFPC13AbstractRacerPC13AbstractRacer_b,PP13AbstractRacer>(void (AbstractRacer **,AbstractRacer **,AbstractRacer **,bool (*&)(AbstractRacer const *,AbstractRacer const *)))
 0002:8015E714       std::__selection_sort<RPFPC13AbstractRacerPC13AbstractRacer_b,PP13AbstractRacer>(void (AbstractRacer **,AbstractRacer **,bool (*&)(AbstractRacer const *,AbstractRacer const *)))
 0002:8015E7BC       ClippingActorHolder::ClippingActorHolder((void))
 0002:8015E8A4       ClippingActorHolder::movement((void))
 0002:8015E90C       ClippingActorHolder::registerActor((LiveActor *))
 0002:8015E974       ClippingActorHolder::initSystemInfo((LiveActor *,JMapInfoIter const &))
 0002:8015E9E0       ClippingActorHolder::initViewGroupTable((void))
 0002:8015EA50       ClippingActorHolder::validateClipping((LiveActor *))
 0002:8015EAE4       ClippingActorHolder::invalidateClipping((LiveActor *))
 0002:8015EBA4       ClippingActorHolder::addToClippingTarget((LiveActor *))
 0002:8015EC4C       ClippingActorHolder::removeFromClippingTarget((LiveActor *))
 0002:8015ECE4       ClippingActorHolder::startGroupClipping((LiveActor *,JMapInfoIter const &))
 0002:8015EE14       ClippingActorHolder::setFarClipLevel((LiveActor *,long))
 0002:8015EE44       ClippingActorHolder::find(const(LiveActor const *))
 0002:8015EF24       ClippingActorInfo::ClippingActorInfo((LiveActor *))
 0002:8015EF88       ClippingActorInfo::judgeClipping((void))
 0002:8015F008       ClippingActorInfo::isJudgedToClip(const(void))
 0002:8015F078       SaveDataHandleSequence::isInitializedGameDataHolder(const(void))
 0002:8015F088       ClippingActorInfo::setTypeToSphere((float,JGeometry::TVec3<f> const *))
 0002:8015F0AC       ClippingActorInfo::setGroupClippingNo((JMapInfoIter const &))
 0002:8015F110       SpiderThreadRadialLine::SpiderThreadRadialLine((int))
 0002:8015F188       SpiderThreadRadialLine::addPoint((SpiderThreadMainPoint *))
 0002:8015F1A8       ClippingActorInfoList::remove((LiveActor *))
 0002:8015F20C       ClippingActorInfoList::find(const(LiveActor const *,long *))
 0002:8015F268       ClippingActorInfoList::findOrNone(const(LiveActor const *))
 0002:8015F2AC       ClippingActorInfoList::isInList(const(LiveActor const *))
 0002:8015F2EC       ClippingDirector::ClippingDirector((void))
 0002:8015F3BC       ClippingDirector::movement((void))
 0002:8015F430       ClippingDirector::joinToGroupClipping((LiveActor *,JMapInfoIter const &,int))
 0002:8015F4B8       MR::getClippingDirector((void))
 0002:8015F4E0       MR::removeFromClippingTarget((LiveActor *))
 0002:8015F5B8       ClippingInfoGroup::ClippingInfoGroup((char const *,int))
 0002:8015F64C       ClippingInfoGroup::setGroupNo((JMapInfoIter const &))
 0002:8015F6CC       NameObjGroup::registerObj((NameObj *))
 0002:8015F6EC       ClippingInfoGroup::isClippedNowAll(const(void))
 0002:8015F794       ClippingInfoGroup::startClippedAll((void))
 0002:8015F838       ClippingInfoGroup::endClippedAll((void))
 0002:8015F8D8       ClippingGroupHolder::movement((void))
 0002:8015F96C       ClippingGroupHolder::createAndAdd((ClippingActorInfo *,JMapInfoIter const &,int))
 0002:8015F9D4       ClippingGroupHolder::createGroup((ClippingActorInfo *,JMapInfoIter const &,int))
 0002:8015FA64       ClippingGroupHolder::findGroup((JMapInfoIter const &))
 0002:8015FBAC       ClippingGroupHolder::ClippingGroupHolder((void))
 0002:8015FC2C       ClippingJudge::ClippingJudge((char const *))
 0002:8015FCF4       nullsub_4
 0002:8015FCFC       ClippingJudge::movement((void))
 0002:8015FD74       ClippingJudge::isJudgedToClipFrustum(const(JGeometry::TVec3<f> const &,float))
 0002:8015FDA0       ClippingJudge::isJudgedToClipFrustum(const(JGeometry::TVec3<f> const &,float,long))
 0002:8015FDF0       ClippingJudge::calcViewingVolume((JGeometry::THexahedron3<f> *,float))
 0002:801600D4       MR::getClippingJudge((void))
 0002:80160150       JGeometry::THexahedron3<f>::mayIntersectBall3(const(JGeometry::TVec3<f> const &,float))
 0002:801601D4       JGeometry::TPartition3<f>::set((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80160264       JGeometry::TPartition3<f>::set((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801602B4       DisplayListMaker::DisplayListMaker((J3DModel *,ResourceHolder const *))
 0002:80160354       DrawBufferExecuter::calcViewAndEntry((void))
 0002:801603D8       DisplayListMaker::diff((void))
 0002:801604A8       DisplayListMaker::newDifferedDisplayList((void))
 0002:80160538       DisplayListMaker::onPrgFlag((ushort,ulong))
 0002:80160550       DisplayListMaker::onCurFlag((ushort,ulong))
 0002:80160568       DisplayListMaker::getDiffFlag(const(long))
 0002:801605B4       DisplayListMaker::addFogCtrl((bool))
 0002:80160630       DisplayListMaker::addMatColorCtrl((char const *,ulong,J3DGXColor const *))
 0002:801606D0       DisplayListMaker::addTexMtxCtrl((char const *))
 0002:80160760       DisplayListMaker::addProjmapEffectMtxSetter((void))
 0002:801607C4       DisplayListMaker::addMirrorReflectionMtxSetter((void))
 0002:80160828       DisplayListMaker::onCurFlagBpk((J3DAnmBase const *))
 0002:80160898       DisplayListMaker::onBothFlag((ushort,ulong))
 0002:801608C0       DisplayListMaker::onBothFlagAll((ulong))
 0002:80160928       DisplayListMaker::checkMaterial((void))
 0002:801609B0       DisplayListMaker::checkViewProjmapEffectMtx((void))
 0002:80160A70       DisplayListMaker::addViewProjmapEffectMtxSetter((void))
 0002:80160AD4       DisplayListMaker::addMarioShadowProjmapMtxSetter((void))
 0002:80160B44       DisplayListMaker::checkTexture((void))
 0002:80160CC4       DisplayListMaker::isExistDiffMaterial((J3DModelData const *))
 0002:80160D74       J3DTexture::setResTIMG((ushort,ResTIMG const &))
 0002:80160E68       JMapInfo::getValue<f>(bool const const(int,char const *,float *))
 0002:80160EE8       @unnamed@DynamicJointCtrl_cpp@::calcJointChildNum((J3DJoint *))
 0002:80160F20       JointCtrlRate::JointCtrlRate((void))
 0002:80160F40       JointCtrlRate::update((void))
 0002:80161020       JointCtrlRate::startCtrl((long))
 0002:80161048       JointCtrlRate::endCtrl((long))
 0002:80161070       DynamicJointCtrlNode::DynamicJointCtrlNode((DynamicJointCtrl const *,float *[4],float))
 0002:8016111C       DynamicJointCtrlNode::update((LiveActor *,DynamicJointCtrlNode const *))
 0002:801612D4       DynamicJointCtrlNode::reset((void))
 0002:80161324       DynamicJointCtrlNode::updateJointMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80161424       DynamicJointCtrl::DynamicJointCtrl((LiveActor *,char const *,DynamicJointCtrlParam const *))
 0002:80161480       DynamicJointCtrl::init((void))
 0002:801616F4       DynamicJointCtrl::update((void))
 0002:80161770       DynamicJointCtrl::reset((void))
 0002:801617F0       DynamicJointCtrl::setCallBackFunction((void))
 0002:80161854       DynamicJointCtrlKeeper::DynamicJointCtrlKeeper((LiveActor *))
 0002:80161A38       SpiderThreadRadialLine::updatePos((void))
 0002:80161A94       DynamicJointCtrlKeeper::setCallBackFunction((void))
 0002:80161AF0       DynamicJointCtrlKeeper::startCtrl((char const *,long))
 0002:80161B28       DynamicJointCtrlKeeper::endCtrl((char const *,long))
 0002:80161B60       DynamicJointCtrlKeeper::reset((void))
 0002:80161BBC       DynamicJointCtrlKeeper::findJointCtrl((char const *))
 0002:80161CE8       JointControlDelegator<20DynamicJointCtrlNode>::calcJointMatrixAfterChild((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80161D50       @unnamed@EffectKeeper_cpp@::makeAttibuteEffectBaseName((char *,ulong,char const *))
 0002:80161DCC       EffectKeeper::EffectKeeper((char const *,ResourceHolder *,int,char const *))
 0002:80161E78       EffectKeeper::init((LiveActor *))
 0002:80161E8C       EffectKeeper::initAfterPlacementForAttributeEffect((float *[4]))
 0002:80162014       EffectKeeper::setBinder((Binder const *))
 0002:80162028       EffectKeeper::addEffect((char const *,LiveActor *))
 0002:80162074       EffectKeeper::registerEffect((char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,char const *))
 0002:80162114       EffectKeeper::registerEffect((char const *,float *[4],char const *,char const *))
 0002:801621A4       EffectKeeper::registerEffect((char const *,float *[4],JGeometry::TVec3<f> const *,char const *,char const *))
 0002:8016223C       EffectKeeper::registerEffectWithoutSRT((char const *,char const *))
 0002:801622A4       EffectKeeper::registerSyncBckEffect((XanimePlayer *,char const *,char const *,long,float,float,bool))
 0002:8016235C       PaneEffectKeeper::createEmitter((char const *))
 0002:801623D8       EffectKeeper::clear((void))
 0002:801624A0       EffectKeeper::getEmitter(const(char const *))
 0002:801625FC       EffectKeeper::getEmitter(const(long))
 0002:8016260C       EffectKeeper::changeEffectName((char const *,char const *))
 0002:801626A0       EffectKeeper::updateSyncBckEffect((void))
 0002:8016271C       EffectKeeper::syncEffectBck((MultiEmitter *))
 0002:80162814       EffectKeeper::updateAttributeEffect((void))
 0002:80162A28       GameSystemObjHolder::updateAudioSystem((void))
 0002:80162A3C       EffectKeeper::offDraw((void))
 0002:80162B1C       EffectKeeper::enableSort((void))
 0002:80162B68       EffectKeeper::isRegisteredEmitter(const(char const *))
 0002:80162BE8       EffectKeeper::checkExistenceAttributeEffect((void))
 0002:80162C64       EffectKeeper::registMultiEmitter((MultiEmitter *,char const *,char const *))
 0002:80162D04       EffectKeeper::updateFloorCode((void))
 0002:80162DA0       EffectKeeper::updateFloorCode((Triangle const *))
 0002:80162DF4       EffectKeeper::isTypeAttributeEffect(const(char const *))
 0002:80162F18       FaceJointCtrl::FaceJointCtrl((LiveActor *))
 0002:80162F90       FaceJointCtrl::init((void))
 0002:8016313C       FaceJointCtrl::endCtrl((long))
 0002:80163180       FaceJointCtrl::update((void))
 0002:80163198       FaceJointCtrl::setCallBackFunction((void))
 0002:801631AC       FaceJointCtrl::updateJointMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80163398       FlashingCtrl::FlashingCtrl((LiveActor *,bool))
 0002:80163424       FlashingCtrl::movement((void))
 0002:801634E0       FlashingCtrl::start((int))
 0002:801634FC       FlashingCtrl::end((void))
 0002:80163578       FlashingCtrl::getCurrentInterval(const(void))
 0002:80163584       J3DAnmTransformKey::getKind(const(void))
 0002:8016359C       J3DAnmTevRegKey::getKind(const(void))
 0002:801635A4       FlashingCtrl::isNowFlashing(const(void))
 0002:801635C0       FlashingCtrl::isNowOn(const(void))
 0002:80163600       FlashingCtrl::updateFlashing((void))
 0002:801636AC       HitSensor::HitSensor((ulong,ushort,float,LiveActor *))
 0002:80163760       HitSensor::receiveMessage((ulong,HitSensor *))
 0002:80163778       HitSensor::setType((ulong))
 0002:80163808       HitSensor::isType(const(ulong))
 0002:8016381C       HitSensor::validate((void))
 0002:80163858       HitSensor::invalidate((void))
 0002:801638C0       HitSensor::validateBySystem((void))
 0002:80163920       HitSensor::invalidateBySystem((void))
 0002:80163984       HitSensor::addHitSensor((HitSensor *))
 0002:801639B0       HitSensorInfo::HitSensorInfo((char const *,HitSensor *,JGeometry::TVec3<f> const *,float *[4],JGeometry::TVec3<f> const &,bool))
 0002:80163A28       HitSensorInfo::update((void))
 0002:80163C84       HitSensorInfo::doObjCol((void))
 0002:80163D10       HitSensorKeeper::HitSensorKeeper((int))
 0002:80163D90       HitSensorKeeper::add((char const *,ulong,ushort,float,LiveActor *,JGeometry::TVec3<f> const &))
 0002:80163E50       HitSensorKeeper::addPos((char const *,ulong,ushort,float,LiveActor *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:80163F14       HitSensorKeeper::addMtx((char const *,ulong,ushort,float,LiveActor *,float *[4],JGeometry::TVec3<f> const &))
 0002:80163FD8       HitSensorKeeper::addCallback((char const *,ulong,ushort,float,LiveActor *))
 0002:801640B0       HitSensorKeeper::getSensor(const(char const *))
 0002:80164168       HitSensorKeeper::doObjCol((void))
 0002:80164220       HitSensorKeeper::clear((void))
 0002:80164258       HitSensorKeeper::invalidateBySystem((void))
 0002:801643D8       GameDataAllGalaxyStorage::getGalaxyStorage((int))
 0002:801643E8       HitSensorKeeper::getSensorInfo(const(char const *))
 0002:80164410       GameSystemStationedArchiveLoader::startToLoadStationedArchivePlayer((bool))
 0002:80164498       HitSensorKeeper::registHitSensorInfo((HitSensorInfo *))
 0002:801644BC       IKJointCtrl::IKJointCtrl((LiveActor *))
 0002:80164570       IKJointCtrl::init((IKJointCtrlParam const &))
 0002:8016473C       IKJointCtrl::setEndPosition((JGeometry::TVec3<f> const &,float))
 0002:801647E8       IKJointCtrl::setEndDirection((JGeometry::TVec3<f> const &,float))
 0002:8016484C       IKJointCtrl::endCtrl((void))
 0002:8016485C       IKJointCtrl::setCallBackFunction((void))
 0002:801648D4       IKJointCtrl::updateRootJointCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8016490C       IKJointCtrl::updateMiddleJointCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80164944       IKJointCtrl::updateEndJointCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80164A0C       IKJointCtrlHolder::IKJointCtrlHolder((LiveActor *,ulong))
 0002:80164A70       IKJointCtrlHolder::addCtrl((IKJointCtrlParam const &))
 0002:80164AF8       IKJointCtrlHolder::startUpdate((void))
 0002:80164B64       IKJointCtrlHolder::setEndPosition((char const *,JGeometry::TVec3<f> const &,float))
 0002:80164BA8       IKJointCtrlHolder::setEndDirection((char const *,JGeometry::TVec3<f> const &,float))
 0002:80164BEC       IKJointCtrlHolder::endUpdate((void))
 0002:80164C60       DrawBufferGroup::allocateActorListBuffer((void))
 0002:80164CC4       IKJointCtrlHolder::setCallBackFunction((void))
 0002:80164D34       IKJointCtrlHolder::findIKJointCtrl((char const *))
 0002:80164DB4       ActorJoint::createIKJointCtrlHolder((LiveActor *))
 0002:80164F8C       MR::createJointController<13TurnJointCtrl>(JointController *(TurnJointCtrl *,LiveActor const *,char const *,bool (TurnJointCtrl::)(void const *,void *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &),bool (TurnJointCtrl::)(void const *,void *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &)))
 0002:80165178       IKJointCtrl::disableCallBack((void))
 0002:80165184       IKJointCtrl::enableCallBack((void))
 0002:80165204       LiveActor::LiveActor((char const *))
 0002:801652EC       nullsub_5
 0002:801652F0       LiveActor::appear((void))
 0002:80165300       LiveActor::makeActorAppeared((void))
 0002:801653C4       LiveActor::kill((void))
 0002:801653D4       LiveActor::makeActorDead((void))
 0002:80165478       LiveActor::movement((void))
 0002:80165594       LiveActor::calcAnim((void))
 0002:801655E0       LiveActor::calcAnmMtx((void))
 0002:8016563C       LiveActor::calcViewAndEntry((void))
 0002:80165660       LiveActor::receiveMessage((ulong,HitSensor *,HitSensor *))
 0002:80165760       J2DPane::setAnimationVF((J2DAnmVisibilityFull *))
 0002:80165770       LiveActor::calcAndSetBaseMtx((void))
 0002:80165814       LiveActor::getTakingMtx(const(void))
 0002:80165824       LiveActor::setNerve((Nerve const *))
 0002:8016582C       LiveActor::isNerve(const(Nerve const *))
 0002:80165868       LiveActor::getNerveStep(const(void))
 0002:80165874       LiveActor::getSensor(const(char const *))
 0002:8016588C       LiveActor::getBaseMtx(const(void))
 0002:801658D4       LiveActor::startClipped((void))
 0002:80165948       LiveActor::endClipped((void))
 0002:801659C4       LiveActor::initModelManagerWithAnm((char const *,char const *,bool))
 0002:80165A64       LiveActor::initNerve((Nerve const *))
 0002:80165AB8       LiveActor::initHitSensor((int))
 0002:80165B08       LiveActor::initBinder((float,float,ulong))
 0002:80165BC0       LiveActor::initRailRider((JMapInfoIter const &))
 0002:80165C10       LiveActor::initEffectKeeper((int,char const *,bool))
 0002:80165CBC       LiveActor::initSound((int,bool))
 0002:80165D64       LiveActor::initShadowControllerList((ulong))
 0002:80165DB8       LiveActor::initActorCollisionParts((char const *,HitSensor *,ResourceHolder *,float *[4],bool,bool))
 0002:80165ECC       LiveActor::initStageSwitch((JMapInfoIter const &))
 0002:80165EFC       LiveActor::initActorStarPointerTarget((float,JGeometry::TVec3<f> const *,float *[4],JGeometry::TVec3<f>))
 0002:80165F84       LiveActor::initActorLightCtrl((void))
 0002:80165FC8       LiveActor::attackSensor((HitSensor *,HitSensor *))
 0002:80165FCC       LiveActor::receiveMsgApart((HitSensor *,HitSensor *))
 0002:80165FF8       LiveActor::addToSoundObjHolder((void))
 0002:80166000       LiveActor::updateBinder((void))
 0002:80166084       J3DModel::setBaseScale((Vec const &))
 0002:801660A0       LiveActorFlag::LiveActorFlag((void))
 0002:801660D0       LiveActorGroup::LiveActorGroup((char const *,int))
 0002:8016610C       LiveActorGroup::registerActor((LiveActor *))
 0002:80166120       LiveActorGroup::getDeadActor(const(void))
 0002:80166194       LiveActorGroup::getLivingActorNum(const(void))
 0002:80166204       LiveActorGroup::appearAll((void))
 0002:80166280       LiveActorGroup::killAll((void))
 0002:801662E8       MsgSharedGroup::MsgSharedGroup((char const *,long,JMapInfoIter const &))
 0002:80166390       MsgSharedGroup::init((JMapInfoIter const &))
 0002:801663A4       MsgSharedGroup::movement((void))
 0002:80166428       MsgSharedGroup::sendMsgToGroupMember((ulong,HitSensor *,char const *))
 0002:80166480       LiveActorGroupArray::findGroup(const(LiveActor const *))
 0002:80166484       LiveActorGroupArray::createGroup((JMapInfoIter const &,char const *,long))
 0002:8016650C       LiveActorGroupArray::findGroup(const(JMapInfoIter const &))
 0002:801665C0       LiveActorGroupArray::findGroup(const(LiveActor const *))
 0002:80166690       LiveActorGroupArray::entry((LiveActor *,JMapInfoIter const &,char const *,long))
 0002:80166800       LodCtrl::LodCtrl((LiveActor *,JMapInfoIter const &))
 0002:801668AC       LodCtrl::offSyncShadowHost((void))
 0002:801668E4       LodCtrl::appear((void))
 0002:8016698C       LodCtrl::kill((void))
 0002:80166A30       LodCtrl::validate((void))
 0002:80166A98       LodCtrl::update((void))
 0002:80166C3C       LodCtrl::isShowLowModel(const(void))
 0002:80166C6C       LodCtrl::calcDistanceToCamera(const(void))
 0002:80166CAC       @unnamed@LodCtrl_cpp@::LodFuntionCall<f>(void (LodCtrl *,void (*)(LiveActor *,float),float))
 0002:80166D4C       @unnamed@LodCtrl_cpp@::LodFuntionCall((LodCtrl *,void (*)(LiveActor *)))
 0002:80166DC0       LodCtrl::showHighModel((void))
 0002:80166E84       LodCtrl::showMiddleModel((void))
 0002:80166F48       LodCtrl::showLowModel((void))
 0002:8016700C       LodCtrl::hideAllModel((void))
 0002:801670AC       LodCtrl::setViewCtrlPtr((bool const *,bool const *,bool const *,bool const *))
 0002:801670C0       LodCtrl::createLodModel((int,int,int))
 0002:8016715C       LodCtrl::syncJointAnimation((void))
 0002:80167204       LodCtrl::initLightCtrl((void))
 0002:80167250       LodCtrl::initLodModel(const(int,int,int,bool))
 0002:801673F8       MaterialCtrl::MaterialCtrl((J3DModelData *,char const *))
 0002:80167454       MaterialCtrl::update((void))
 0002:801674E4       FogCtrl::FogCtrl((J3DModelData *,bool))
 0002:80167654       FogCtrl::update((void))
 0002:801676F4       MatColorCtrl::MatColorCtrl((J3DModelData *,char const *,ulong,J3DGXColor const *))
 0002:80167748       MatColorCtrl::updateMaterial((J3DMaterial *))
 0002:80167768       ViewProjmapEffectMtxSetter::ViewProjmapEffectMtxSetter((J3DModelData *))
 0002:80167880       ViewProjmapEffectMtxSetter::update((void))
 0002:80167934       ProjmapEffectMtxSetter::ProjmapEffectMtxSetter((J3DModel *,ResourceHolder const *))
 0002:80167B14       ProjmapEffectMtxSetter::update((void))
 0002:80167B88       ProjmapEffectMtxSetter::getBaseTrans(const(JGeometry::TVec3<f> *))
 0002:80167BA4       ProjmapEffectMtxSetter::updateMtxUseBaseMtx((void))
 0002:80167BE8       ProjmapEffectMtxSetter::updateMtxUseBaseMtxWithLocalOffset((JGeometry::TVec3<f> const &))
 0002:80167C88       MirrorReflectionMtxSetter::MirrorReflectionMtxSetter((J3DModel *,ResourceHolder const *))
 0002:80167D0C       MirrorReflectionMtxSetter::addUpdatingTexMtxFromTexNo((J3DModelData *,ushort))
 0002:80167D8C       MirrorReflectionMtxSetter::addUpdatingTexMtxFromTexCoord((J3DMaterial *))
 0002:80167E24       MirrorReflectionMtxSetter::addUpdatingTexMtx((J3DTexMtx *))
 0002:80167E44       MirrorReflectionMtxSetter::update((void))
 0002:80167EA8       MarioShadowProjmapMtxSetter::MarioShadowProjmapMtxSetter((J3DModel *,ResourceHolder const *))
 0002:80167F24       MarioShadowProjmapMtxSetter::update((void))
 0002:80168098       TexMtxCtrl::TexMtxCtrl((J3DModelData *,char const *))
 0002:801680F4       JASBasicInst::setOsc((int,JASOscillator::Data const *))
 0002:80168104       TexMtxCtrl::updateMaterial((J3DMaterial *))
 0002:8016819C       nullsub_120
 0002:801681A0       MirrorReflectionMtxSetter::addUpdatingTexMtxFromName((J3DModelData *))
 0002:80168224       MessageSensorHolder::MessageSensorHolder((char const *))
 0002:80168260       MessageSensorHolder::init((JMapInfoIter const &))
 0002:801682B8       MessageSensorHolder::~MessageSensorHolder((void))
 0002:80168314       MirrorActor::~MirrorActor((void))
 0002:80168370       MirrorActor::MirrorActor((LiveActor *,char const *,char const *))
 0002:801683E0       MirrorActor::init((JMapInfoIter const &))
 0002:801684B0       MirrorActor::movement((void))
 0002:80168588       PhantomTorch::endClipped((void))
 0002:801685C8       MirrorActor::isHostInTheOtherSideOfMirror(const(void))
 0002:80168628       MirrorActor::getHostCenterPos(const(void))
 0002:80168684       MirrorCamera::MirrorCamera((char const *))
 0002:801686F4       MirrorCamera::init((JMapInfoIter const &))
 0002:80168708       @unnamed@MirrorCamera_cpp@::getVertexFormat((J3DModelData const *,_GXAttr))
 0002:80168730       MirrorCamera::setMirrorMapInfo((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8016878C       MirrorCamera::setMirrorMapInfo((J3DModelData *))
 0002:80168890       MirrorCamera::updateViewMtx((void))
 0002:80168A30       MirrorCamera::updateModelTexMtx((void))
 0002:80168ADC       MirrorCamera::getDistance(const(JGeometry::TVec3<f> const &))
 0002:80168B40       MR::getMirrorCamera((void))
 0002:80168B68       MR::getDistanceToMirror((JGeometry::TVec3<f> const &))
 0002:80168BFC       MirrorCamera::movement((void))
 0002:80168C48       MirrorReflectionModel::MirrorReflectionModel((LiveActor const *,char const *,char const *,float *[4]))
 0002:80168D18       MirrorReflectionModel::init((JMapInfoIter const &))
 0002:80168D68       MirrorReflectionModel::movement((void))
 0002:80168E24       MirrorReflectionModel::calcAnim((void))
 0002:80168E90       MirrorReflectionModel::calcViewAndEntry((void))
 0002:80168EA4       MirrorReflectionModel::calcAndSetBaseMtx((void))
 0002:80168F5C       ModelManager::ModelManager((void))
 0002:80168F8C       ModelManager::update((void))
 0002:80169028       StarPieceGroup::makeActorDead((void))
 0002:80169060       ModelManager::calcView((void))
 0002:80169090       ModelManager::entry((void))
 0002:801690C8       ModelManager::updateDL((bool))
 0002:801691F4       ModelManager::startBck((char const *,char const *))
 0002:80169254       ModelManager::startBckWithInterpole((char const *,long))
 0002:801692A8       ModelManager::startBtk((char const *))
 0002:801692FC       ModelManager::startBrk((char const *))
 0002:80169350       ModelManager::startBtp((char const *))
 0002:801693A4       ModelManager::startBpk((char const *))
 0002:801693F8       ModelManager::startBva((char const *))
 0002:8016943C       ModelManager::stopBtk((void))
 0002:80169484       ModelManager::stopBrk((void))
 0002:801694CC       ModelManager::stopBtp((void))
 0002:80169514       ModelManager::stopBpk((void))
 0002:8016955C       ModelManager::stopBva((void))
 0002:80169574       ModelManager::getBckCtrl(const(void))
 0002:80169580       ModelManager::getBtkCtrl(const(void))
 0002:8016958C       ModelManager::getBrkCtrl(const(void))
 0002:80169598       ModelManager::getBtpCtrl(const(void))
 0002:801695A4       ModelManager::getBpkCtrl(const(void))
 0002:801695BC       ModelManager::isBckStopped(const(void))
 0002:801695D8       ModelManager::isBtkStopped(const(void))
 0002:801695F0       ModelManager::isBrkStopped(const(void))
 0002:80169608       ModelManager::isBtpStopped(const(void))
 0002:80169620       ModelManager::isBpkStopped(const(void))
 0002:80169638       ModelManager::isBvaStopped(const(void))
 0002:80169678       ModelManager::initJointTransform((void))
 0002:801696B4       ModelManager::getJointTransform((char const *))
 0002:80169720       ModelManager::getResourceHolder(const(void))
 0002:80169744       ModelManager::getJ3DModel(const(void))
 0002:80169758       JAUSoundAnimator::getSoundID((JAUSoundAnimationSound const *,JGeometry::TVec3<f> const &,float))
 0002:80169784       ModelManager::getPlayingBckName(const(void))
 0002:8016979C       ModelManager::initModelAndAnimation((ResourceHolder *,char const *,ResourceHolder *,J3DMdlFlag))
 0002:80169830       ModelManager::initMaterialAnm((void))
 0002:8016994C       ModelManager::initVisibilityAnm((void))
 0002:801699CC       ModelManager::calc((void))
 0002:80169A64       ModelManager::changeBckSetting((char const *,char const *,XanimePlayer *))
 0002:80169AD0       ModelManager::init((char const *,char const *,bool))
 0002:80169C2C       AnmPlayerBase::isStop(const(void))
 0002:80169C78       ModelObj::ModelObj((char const *,char const *,float *[4],int,int,int,bool))
 0002:80169D7C       CutBushModelObj::calcAndSetBaseMtx((void))
 0002:80169DD8       ModelObjNpc::init((JMapInfoIter const &))
 0002:80169E70       ModelObjNpc::calcAndSetBaseMtx((void))
 0002:80169F30       ModelObjNpc::ModelObjNpc((char const *,char const *,float *[4]))
 0002:80169FF8       Nerve::executeOnEnd(const(Spine *))
 0002:80169FFC       PartsModel::PartsModel((LiveActor *,char const *,char const *,float *[4],int,bool))
 0002:8016A124       PartsModel::makeActorAppeared((void))
 0002:8016A158       PartsModel::makeActorDead((void))
 0002:8016A18C       PartsModel::init((JMapInfoIter const &))
 0002:8016A1F8       PartsModel::movement((void))
 0002:8016A2DC       PartsModel::calcAnim((void))
 0002:8016A35C       PartsModel::calcViewAndEntry((void))
 0002:8016A370       PartsModel::initFixedPosition((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:8016A410       PartsModel::initFixedPosition((char const *))
 0002:8016A484       PartsModel::initFixedPosition((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8016A4EC       PartsModel::loadFixedPosition((char const *))
 0002:8016A54C       PartsModel::offFixedPosNormalizeScale((void))
 0002:8016A55C       PartsModel::calcAndSetBaseMtx((void))
 0002:8016A5C8       RailRider::RailRider((JMapInfoIter const &))
 0002:8016A674       RailRider::RailRider((long,long))
 0002:8016A724       RailRider::move((void))
 0002:8016A798       RailRider::moveToNearestPos((JGeometry::TVec3<f> const &))
 0002:8016A7D4       RailRider::moveToNearestPoint((JGeometry::TVec3<f> const &))
 0002:8016A894       RailRider::moveToNextPoint((void))
 0002:8016A8D8       RailRider::reverse((void))
 0002:8016A924       RailRider::isLoop(const(void))
 0002:8016A930       RailRider::isReachedGoal(const(void))
 0002:8016A9F0       RailRider::isReachedEdge(const(void))
 0002:8016AA78       RailRider::setCoord((float))
 0002:8016AAC0       RailRider::setSpeed((float))
 0002:8016AAC8       RailRider::getRailArgWithInit(const(char const *,long *))
 0002:8016AB1C       RailRider::getRailArgNoInit(const(char const *,long *))
 0002:8016AB80       GameDataTemporaryInGalaxy::resetPlayerRestartIdInfo((void))
 0002:8016ABB8       RailRider::getCurrentPointCoord(const(void))
 0002:8016ABC8       JAUStreamFileTable::getNumFiles(const(void))
 0002:8016ABD4       RailRider::copyPointPos(const(JGeometry::TVec3<f> *,long))
 0002:8016AC2C       RailRider::initBezierRail((JMapInfoIter const &,JMapInfo const *))
 0002:8016ACC0       RailRider::getPointArgS32NoInit(const(char const *,long *,long))
 0002:8016AD44       RailRider::getPointArgS32WithInit(const(char const *,long *,long))
 0002:8016ADAC       RailRider::getCurrentPointArgS32NoInit(const(char const *,long *))
 0002:8016AE34       RailRider::getCurrentPointArgS32WithInit(const(char const *,long *))
 0002:8016AEA0       RailRider::getNextPointArgS32NoInit(const(char const *,long *))
 0002:8016AF2C       RailRider::getNextPointArgS32WithInit(const(char const *,long *))
 0002:8016AF9C       RailRider::getNextPointNo(const(void))
 0002:8016B010       RailRider::syncPosDir((void))
 0002:8016B134       SensorGroup::SensorGroup((int,char const *))
 0002:8016B1AC       SensorGroup::add((HitSensor *))
 0002:8016B1D0       SensorGroup::remove((HitSensor *))
 0002:8016B220       SensorGroup::clear(const(void))
 0002:8016B254       SensorHitChecker::init((JMapInfoIter const &))
 0002:8016B268       SensorHitChecker::initGroup((HitSensor *))
 0002:8016B3A8       SensorHitChecker::movement((void))
 0002:8016B4DC       SensorHitChecker::doObjColGroup(const(SensorGroup *,SensorGroup *))
 0002:8016B5E4       SensorHitChecker::doObjColInSameGroup(const(SensorGroup *))
 0002:8016B6E4       SensorHitChecker::checkAttack(const(HitSensor *,HitSensor *))
 0002:8016B7BC       MR::initHitSensorGroup((HitSensor *))
 0002:8016B850       SensorHitChecker::SensorHitChecker((char const *))
 0002:8016B978       ShadowControllerHolder::ShadowControllerHolder((void))
 0002:8016BA60       ShadowController::ShadowController((LiveActor *,char const *))
 0002:8016BB4C       MR::Vector<Q22MR36AssignableArray<P16ShadowController>>::Vector<Q22MR36AssignableArray<P16ShadowController>>((void))
 0002:8016BB60       MR::Vector<Q22MR36AssignableArray<P16ShadowController>>::~Vector<Q22MR36AssignableArray<P16ShadowController>>((void))
 0002:8016BBB8       MR::Vector<Q22MR38AssignableArray<P18DrawBufferExecuter>>::push_back((DrawBufferExecuter *const &))
 0002:8016BBD8       ShadowControllerHolder::updateController((void))
 0002:8016BBDC       ShadowControllerHolder::initAfterPlacement((void))
 0002:8016BC44       ShadowControllerHolder::updateController((void))
 0002:8016BCC4       ShadowControllerList::ShadowControllerList((LiveActor *,ulong))
 0002:8016BD18       ShadowControllerList::addController((ShadowController *))
 0002:8016BD58       ShadowControllerList::getController(const(char const *))
 0002:8016BD80       WPadPointer::setSensorBarLevel((float))
 0002:8016BDF0       ShadowControllerList::resetCalcCount((void))
 0002:8016BE28       ShadowControllerList::requestCalc((void))
 0002:8016BE84       ShadowController::requestCalc((void))
 0002:8016BED0       ShadowController::update((void))
 0002:8016BF1C       ShadowController::updateFarClipping((float))
 0002:8016BF74       ShadowController::updateDirection((void))
 0002:8016C040       ShadowController::updateProjection((void))
 0002:8016C198       ShadowController::getHost(const(void))
 0002:8016C1A0       ShadowController::setShadowDrawer((ShadowDrawer *))
 0002:8016C1B4       ShadowController::getDropPos(const(JGeometry::TVec3<f> *))
 0002:8016C1F4       ShadowController::getDropDir(const(JGeometry::TVec3<f> *))
 0002:8016C21C       ShadowController::getDropLength(const(void))
 0002:8016C224       ShadowController::getProjectionPos(const(JGeometry::TVec3<f> *))
 0002:8016C24C       ShadowController::getProjectionNormal(const(JGeometry::TVec3<f> *))
 0002:8016C274       ShadowController::getProjectionLength(const(void))
 0002:8016C308       ShadowController::isProjected(const(void))
 0002:8016C318       ShadowController::isDraw(const(void))
 0002:8016C35C       ShadowController::isCalcCollision(const(void))
 0002:8016C390       ShadowController::isCalcGravity(const(void))
 0002:8016C3CC       ShadowController::isCalcShadowGravity(const(void))
 0002:8016C3F4       ShadowController::setDropPosPtr((JGeometry::TVec3<f> const *))
 0002:8016C404       ShadowController::setDropPosMtxPtr((float *[4],JGeometry::TVec3<f> const &))
 0002:8016C424       ShadowController::setDropPosFix((JGeometry::TVec3<f> const &))
 0002:8016C460       ShadowController::setDropDirPtr((JGeometry::TVec3<f> const *))
 0002:8016C470       ShadowController::setProjectionPtr((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *))
 0002:8016C490       ShadowController::setDropDirFix((JGeometry::TVec3<f> const &))
 0002:8016C4CC       OctahedronBezierSurface::setDiagonalRate((float))
 0002:8016C4D4       ShadowController::setDropStartOffset((float))
 0002:8016C4DC       ShadowController::setDropTypeNormal((void))
 0002:8016C4E8       ShadowController::setDropTypeSurface((void))
 0002:8016C4F4       ShadowController::setProjectionFix((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:8016C54C       ShadowController::onCalcCollision((void))
 0002:8016C558       ShadowController::offCalcCollision((void))
 0002:8016C564       ShadowController::onCalcCollisionOneTime((void))
 0002:8016C578       ShadowController::onCalcDropGravity((void))
 0002:8016C5D0       ShadowController::onCalcDropGravityOneTime((void))
 0002:8016C62C       ShadowController::offCalcDropGravity((void))
 0002:8016C638       ShadowController::onCalcDropPrivateGravity((void))
 0002:8016C690       ShadowController::onCalcDropPrivateGravityOneTime((void))
 0002:8016C6EC       ShadowController::offCalcDropPrivateGravity((void))
 0002:8016C70C       ShadowController::offFollowHostScale((void))
 0002:8016C718       ShadowController::isFollowHostScale(const(void))
 0002:8016C728       ShadowController::onVisibleSyncHost((void))
 0002:8016C734       ShadowController::offVisibleSyncHost((void))
 0002:8016C740       ShadowController::validate((void))
 0002:8016C74C       ShadowController::invalidate((void))
 0002:8016C758       MR::addShadowController((ShadowController *))
 0002:8016C790       MR::requestCalcActorShadowAppear((LiveActor *))
 0002:8016C7E4       MR::requestCalcActorShadow((LiveActor *))
 0002:8016C7F8       MR::AssignableArray<P16ShadowController>::~AssignableArray<P16ShadowController>((void))
 0002:8016C858       ShadowControllerHolder::~ShadowControllerHolder((void))
 0002:8016C8CC       ShadowDrawer::ShadowDrawer((char const *))
 0002:8016C910       ShadowDrawer::getController(const(void))
 0002:8016C918       ShadowDrawer::setShadowController((ShadowController *))
 0002:8016C920       ShadowDrawer::~ShadowDrawer((void))
 0002:8016C978       ShadowSurfaceDrawer::~ShadowSurfaceDrawer((void))
 0002:8016C9D4       ShadowSurfaceBox::~ShadowSurfaceBox((void))
 0002:8016CA2C       ShadowSurfaceBox::ShadowSurfaceBox((void))
 0002:8016CA80       ShadowSurfaceBox::setSize((JGeometry::TVec3<f> const &))
 0002:8016CA9C       ShadowSurfaceBox::draw(const(void))
 0002:8016CEC8       ShadowSurfaceCircle::~ShadowSurfaceCircle((void))
 0002:8016CF20       ShadowSurfaceCircle::ShadowSurfaceCircle((void))
 0002:8016CF74       ShadowSurfaceCircle::draw(const(void))
 0002:8016D0AC       ShadowSurfaceDrawInit::ShadowSurfaceDrawInit((char const *))
 0002:8016D10C       ShadowSurfaceDrawInit::initDraw((void))
 0002:8016D1E0       ShadowSurfaceDrawer::ShadowSurfaceDrawer((char const *))
 0002:8016D23C       ShadowSurfaceDrawInit::~ShadowSurfaceDrawInit((void))
 0002:8016D294       ShadowSurfaceOval::ShadowSurfaceOval((void))
 0002:8016D318       ShadowSurfaceOval::setColor((Color8))
 0002:8016D354       ShadowSurfaceOval::setAlpha((uchar))
 0002:8016D35C       ShadowSurfaceOval::setSize((JGeometry::TVec3<f> const &))
 0002:8016D370       ShadowSurfaceOval::draw(const(void))
 0002:8016D560       ShadowSurfaceOval::~ShadowSurfaceOval((void))
 0002:8016D5B8       ShadowVolumeBox::ShadowVolumeBox((void))
 0002:8016D63C       ShadowVolumeBox::loadModelDrawMtx(const(void))
 0002:8016D6A8       ShadowVolumeBox::makeVertexBuffer(const(void))
 0002:8016DE30       ShadowVolumeBox::drawShape(const(void))
 0002:8016DF78       ShadowVolumeBox::~ShadowVolumeBox((void))
 0002:8016DFD0       ShadowVolumeCylinder::~ShadowVolumeCylinder((void))
 0002:8016E028       ShadowVolumeCylinder::ShadowVolumeCylinder((void))
 0002:8016E084       ShadowVolumeModel::~ShadowVolumeModel((void))
 0002:8016E0E4       ShadowVolumeCylinder::setRadius((float))
 0002:8016E0EC       ShadowVolumeCylinder::loadModelDrawMtx(const(void))
 0002:8016E1E4       ShadowVolumeDrawInit::ShadowVolumeDrawInit((void))
 0002:8016E24C       ShadowVolumeDrawer::ShadowVolumeDrawer((char const *))
 0002:8016E2E4       MR::calcRailPosNearestPlayer((JGeometry::TVec3<f> *,LiveActor const *))
 0002:8016E32C       ShadowVolumeDrawer::calcBaseDropPosition(const(JGeometry::TVec3<f> *,ShadowController const *))
 0002:8016E43C       ShadowVolumeDrawer::calcBaseDropLength(const(ShadowController const *))
 0002:8016E4F8       ShadowVolumeDrawer::draw(const(void))
 0002:8016E660       __sinit__ShadowVolumeDrawer_cpp
 0002:8016E6AC       ShadowVolumeFlatModel::ShadowVolumeFlatModel((char const *))
 0002:8016E724       ShadowVolumeFlatModel::ShadowVolumeFlatModel((void))
 0002:8016E7B8       ShadowVolumeFlatModel::initJointDrawMtxResister((void))
 0002:8016E818       ShadowVolumeFlatModel::draw(const(void))
 0002:8016E858       ShadowVolumeFlatModel::loadModelDrawMtx(const(void))
 0002:8016E96C       ShadowVolumeFlatModel::calcRootJoint(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:8016E9F0       ShadowVolumeFlatModel::calcDropJoint(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:8016EAC8       ShadowVolumeLine::ShadowVolumeLine((void))
 0002:8016EB7C       ShadowVolumeLine::drawShape(const(void))
 0002:8016EEBC       ShadowVolumeModel::ShadowVolumeModel((char const *))
 0002:8016EF00       ShadowVolumeModel::initVolumeModel((char const *))
 0002:8016EF34       ShadowVolumeModel::drawShape(const(void))
 0002:8016EF3C       ShadowVolumeOval::~ShadowVolumeOval((void))
 0002:8016EF94       ShadowVolumeOval::ShadowVolumeOval((void))
 0002:8016EFFC       ShadowVolumeOval::isDraw(const(void))
 0002:8016F058       ShadowVolumeOval::loadModelDrawMtx(const(void))
 0002:8016F2DC       ShadowVolumeOvalPole::setSize((JGeometry::TVec3<f> const &))
 0002:8016F2F0       ShadowVolumeOvalPole::~ShadowVolumeOvalPole((void))
 0002:8016F348       ShadowVolumeOvalPole::ShadowVolumeOvalPole((void))
 0002:8016F3B0       ShadowVolumeOvalPole::loadModelDrawMtx(const(void))
 0002:8016F684       ShadowVolumeSphere::~ShadowVolumeSphere((void))
 0002:8016F6DC       ShadowVolumeSphere::ShadowVolumeSphere((void))
 0002:8016F738       ShadowVolumeSphere::setRadius((float))
 0002:8016F740       ShadowVolumeSphere::isDraw(const(void))
 0002:8016F79C       ShadowVolumeSphere::loadModelDrawMtx(const(void))
 0002:8016F874       SimpleJ3DModelDrawer::SimpleJ3DModelDrawer((NameObj *,char const *,char const *,int))
 0002:8016F960       PlantLeafDrawInit::initDraw(const(void))
 0002:8016FACC       Spine::Spine((void *,Nerve const *))
 0002:8016FAE8       Spine::update((void))
 0002:8016FB40       Spine::setNerve((Nerve const *))
 0002:8016FBA4       Spine::getCurrentNerve(const(void))
 0002:8016FBC0       Spine::changeNerve((void))
 0002:8016FC28       Spine::initStateKeeper((int))
 0002:8016FC78       SpotMarkLight::SpotMarkLight((LiveActor *,float,float,float *[4]))
 0002:8016FDA0       SpotMarkLight::control((void))
 0002:8016FE44       PartsModel::calcAndSetBaseMtx((void))
 0002:8016FEA0       ViewGroupCtrl::ViewGroupCtrl((void))
 0002:8016FF14       ViewGroupCtrl::initActorInfo((ClippingActorInfo *,long))
 0002:8016FF30       ViewGroupCtrl::initViewGroup((ClippingActorInfoList *))
 0002:8016FF7C       nullsub_6
 0002:8016FF80       ViewGroupCtrl::entryLodCtrl((LodCtrl *,JMapInfoIter const &))
 0002:8016FFF4       ViewGroupCtrl::update((void))
 0002:8017011C       ViewGroupCtrl::startInitViewGroupTable((void))
 0002:80170258       VolumeModelDrawInit::VolumeModelDrawInit((void))
 0002:801702C0       VolumeModelDrawer::VolumeModelDrawer((char const *,char const *,float *[4]))
 0002:80170370       VolumeModelDrawer::draw(const(void))
 0002:80170500       VolumeModelDrawer::loadModelDrawMtx(const(void))
 0002:801705F4       ActorAppearSwitchListener::ActorAppearSwitchListener((LiveActor *,bool,bool))
 0002:80170610       ActorAppearSwitchListener::listenSwitchOnEvent((void))
 0002:80170668       ActorAppearSwitchListener::listenSwitchOffEvent((void))
 0002:801706C0       SwitchEventListener::refresh((bool))
 0002:801706E8       Air::Air((char const *))
 0002:80170738       Air::init((JMapInfoIter const &))
 0002:80170914       Air::appear((void))
 0002:801709D0       Air::isDrawing(const(void))
 0002:80170A28       Air::tryChange((void))
 0002:80170AAC       Air::appearFadeOut((void))
 0002:80170B54       Air::exeIn((void))
 0002:80170C04       Air::exeOut((void))
 0002:80170D7C       ProjectionMapAir::initModel((char const *))
 0002:80170DD4       MR::setClippingFarMax((LiveActor *))
 0002:80170E14       MR::setClippingFar100m((LiveActor *))
 0002:80170E18       PriorDrawAir::PriorDrawAir((char const *))
 0002:80170E70       PriorDrawAirHolder::PriorDrawAirHolder((void))
 0002:80170EBC       PriorDrawAirHolder::add((PriorDrawAir *))
 0002:80170ED8       PriorDrawAirHolder::isExistValidDrawAir(const(void))
 0002:80170F48       MR::isExistPriorDrawAir((void))
 0002:80170FE8       MR::Functor<3Air>(MR::FunctorV0M<P3Air,M3AirFPCvPv_v> (Air *,void (Air::)(void const *,void *)))
 0002:80171220       JGeometry::TUtil<f>::clamp((float,float,float))
 0002:80171240       @unnamed@BezierRail_cpp@::calcRailDirection((JGeometry::TVec3<f> *,RailPart const *,float))
 0002:80171310       BezierRailPart::set((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80171470       BezierRailPart::calcPos(const(JGeometry::TVec3<f> *,float))
 0002:80171560       BezierRailPart::calcVelocity(const(JGeometry::TVec3<f> *,float))
 0002:80171620       BezierRailPart::getLength(const(float,float,int))
 0002:80171824       BezierRailPart::getParam(const(float))
 0002:8017197C       BezierRailPart::getNearestParam(const(JGeometry::TVec3<f> const &,float))
 0002:80171A7C       BezierRail::normalizePos(const(float,int))
 0002:80171B3C       BezierRail::getTotalLength(const(void))
 0002:80171B54       BezierRail::getPartLength(const(int))
 0002:80171B64       BezierRail::calcPos(const(JGeometry::TVec3<f> *,float))
 0002:80171BB4       BezierRail::calcDirection(const(JGeometry::TVec3<f> *,float))
 0002:80171C04       BezierRail::calcPosDir(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float))
 0002:80171C84       BezierRail::getNearestRailPosCoord(const(JGeometry::TVec3<f> const &))
 0002:80171E00       BezierRail::getRailPosCoord(const(int))
 0002:80171E48       BezierRail::calcCurrentRailCtrlPointIter(const(JMapInfoIter *,float,bool))
 0002:80171E94       BezierRail::calcRailCtrlPointIter(const(JMapInfoIter *,int))
 0002:80171EA4       BezierRail::getIncludedSection(const(RailPart const **,float *,float,int))
 0002:80172020       BezierRail::getCurrentCtrlPointIndex(const(float,bool))
 0002:80172190       BezierRail::BezierRail((JMapInfoIter const &,JMapInfo const *))
 0002:801723B0       Butterfly::Butterfly((char const *))
 0002:80172424       Butterfly::init((JMapInfoIter const &))
 0002:80172618       Butterfly::initAfterPlacement((void))
 0002:801726B0       Butterfly::control((void))
 0002:80172730       Butterfly::calcAndSetBaseMtx((void))
 0002:80172808       Butterfly::attackSensor((HitSensor *,HitSensor *))
 0002:80172870       Butterfly::updatePosture((void))
 0002:80172A70       Butterfly::addRunAwayVelocity((void))
 0002:80172BCC       Butterfly::tryRunAway((void))
 0002:80172D1C       Butterfly::tryHive((void))
 0002:80172E0C       Butterfly::tryPerchOnSleepingMario((void))
 0002:80172E70       Butterfly::tryAppearStarPeace((long))
 0002:80172F2C       Butterfly::exeWait((void))
 0002:80173064       Butterfly::exeRunAway((void))
 0002:80173114       Butterfly::exeHive((void))
 0002:80173218       Butterfly::exePerchOn((void))
 0002:80173300       Butterfly::exeGotoSleepingMario((void))
 0002:801733F0       Butterfly::exeReadyToPerchOnSleepingMario((void))
 0002:80173498       Butterfly::exePerchOnSleepingMario((void))
 0002:80173698       JGeometry::TVec2<f>::__mi(const(JGeometry::TVec2<f> const &))
 0002:801736CC       MR::converge<f>(float (float,float,float))
 0002:801736FC       CollisionCategorizedKeeper::CollisionCategorizedKeeper((long))
 0002:80173794       CollisionCategorizedKeeper::movement((void))
 0002:80173874       CollisionCategorizedKeeper::addToZone((CollisionParts *,long))
 0002:801738B8       CollisionCategorizedKeeper::removeFromZone((CollisionParts *,long))
 0002:801738FC       CollisionCategorizedKeeper::addToGlobal((CollisionParts *))
 0002:80173938       CollisionCategorizedKeeper::removeFromGlobal((CollisionParts *))
 0002:80173974       CollisionCategorizedKeeper::checkStrikePoint((JGeometry::TVec3<f> const &,HitInfo *))
 0002:80173B54       CollisionCategorizedKeeper::checkStrikeBall((JGeometry::TVec3<f> const &,float,bool,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:80173DA0       CollisionCategorizedKeeper::checkStrikeBallWithThickness((JGeometry::TVec3<f> const &,float,float,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:80173FFC       CollisionCategorizedKeeper::checkStrikeLine((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:801742B8       CollisionCategorizedKeeper::createAreaPolygonList((Triangle *,ulong,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80174470       CollisionCategorizedKeeper::createAreaPolygonListArray((Triangle *,ulong,JGeometry::TVec3<f> *,ulong))
 0002:801745D0       CollisionCategorizedKeeper::isSphereOverlappingWithBox((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:8017465C       CollisionCategorizedKeeper::searchSameHostParts(const(CollisionParts **,CollisionParts *))
 0002:801746D4       CollisionCategorizedKeeper::getStrikeInfo((ulong))
 0002:801746E4       CollisionCategorizedKeeper::getZone((int))
 0002:80174784       CollisionZone::CollisionZone((long))
 0002:80174800       CollisionZone::addParts((CollisionParts *))
 0002:80174818       AudSystemWrapper::updateRhythm((void))
 0002:8017482C       CollisionZone::calcMinMaxAndRadius((void))
 0002:801749E4       CollisionZone::calcMinMaxAndRadiusIfMoveOuter((CollisionParts *))
 0002:80174AD0       CollisionZone::addAndUpdateMinMax((JGeometry::TVec3<f>,JGeometry::TVec3<f>))
 0002:80174BAC       CollisionZone::eraseParts((CollisionParts *))
 0002:80174C78       CollisionParts::getTrans((void))
 0002:80174C88       JMapInfoIter::getValue<Ul>(bool const(char const *,ulong *))
 0002:80174CEC       CollisionCode::CollisionCode((void))
 0002:80174D48       CodeTable::CodeTable((ulong))
 0002:80174DB0       CodeTable::add((char const *,ulong))
 0002:80174E2C       CollisionCode::getFloorCodeString((Triangle const &))
 0002:80174E88       CodeTable::getString((ulong))
 0002:80174ECC       CollisionCode::getWallCodeString((Triangle const &))
 0002:80174F28       CollisionCode::getCameraID((Triangle const &))
 0002:80174F6C       CollisionCode::getSoundCodeString((JMapInfoIter const &))
 0002:80175078       CollisionCode::getCode((JMapInfoIter const &,CodeTable *,char const *))
 0002:80175170       CollisionCode::createFloorTable((void))
 0002:801753F0       CollisionCode::createWallTable((void))
 0002:801754D0       CollisionCode::createSoundTable((void))
 0002:80175620       CollisionCode::createCameraTable((void))
 0002:80175688       CollisionCode::getFloorCode((JMapInfoIter const &))
 0002:80175698       CollisionCode::getWallCode((JMapInfoIter const &))
 0002:801756A8       CollisionCode::getSoundCode((JMapInfoIter const &))
 0002:801756B8       CollisionCode::getCameraCode((JMapInfoIter const &))
 0002:801756C8       CollisionCode::getCameraID((JMapInfoIter const &))
 0002:80175728       CollisionDirector::CollisionDirector((void))
 0002:801757FC       CollisionDirector::movement((void))
 0002:8017585C       MR::getCollisionDirector((void))
 0002:80175884       CollisionDirector::~CollisionDirector((void))
 0002:801758DC       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getScale(const(JGeometry::TVec3<f> &))
 0002:80175988       CollisionParts::CollisionParts((void))
 0002:80175A34       CollisionParts::init((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,HitSensor *,void const *,void const *,long,bool))
 0002:80175AF8       CollisionParts::removeFromBelongZone((void))
 0002:80175BA8       CollisionParts::initWithAutoEqualScale((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,HitSensor *,void const *,void const *,long,bool))
 0002:80175BBC       CollisionParts::initWithNotUsingScale((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,HitSensor *,void const *,void const *,long,bool))
 0002:80175BD0       CollisionParts::resetAllMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80175C00       CollisionParts::resetAllMtx((void))
 0002:80175C74       CollisionParts::forceResetAllMtxAndSetUpdateMtxOneTime((void))
 0002:80175CC8       CollisionParts::resetAllMtxPrivate((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:80175D30       CollisionParts::setMtx((void))
 0002:80175D3C       CollisionParts::updateMtx((void))
 0002:80175E80       CollisionParts::makeEqualScale((float *[4]))
 0002:8017603C       CollisionParts::updateBoundingSphereRange((void))
 0002:80176084       CollisionParts::updateBoundingSphereRange((JGeometry::TVec3<f>))
 0002:801760A4       CollisionParts::updateBoundingSphereRangePrivate((float))
 0002:801760BC       CollisionParts::getHostName(const(void))
 0002:801760EC       CollisionParts::getPlacementZoneID(const(void))
 0002:801760F8       CollisionParts::checkStrikePoint((HitInfo *,JGeometry::TVec3<f> const &))
 0002:8017630C       CollisionParts::checkStrikeBall((HitInfo *,ulong,JGeometry::TVec3<f> const &,float,bool,TriangleFilterBase const *))
 0002:801765D8       CollisionParts::checkStrikeBallCore((HitInfo *,ulong,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float,KC_PrismData **,float *,uchar *,TriangleFilterBase const *,JGeometry::TVec3<f> const *))
 0002:80176780       CollisionParts::checkStrikeBallWithThickness((HitInfo *,ulong,JGeometry::TVec3<f> const &,float,float,TriangleFilterBase const *))
 0002:80176938       CollisionParts::calcCollidePosition((JGeometry::TVec3<f> *,KC_PrismData const &,uchar))
 0002:80176C64       def_80176978
 0002:80176C80       CollisionParts::projectToPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80176D34       CollisionParts::checkStrikeLine((HitInfo *,ulong,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,TriangleFilterBase const *))
 0002:80176F20       CollisionParts::createAreaPolygonList((Triangle *,ulong,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8017700C       CollisionParts::createAreaPolygonListArray((Triangle *,ulong,JGeometry::TVec3<f> *,ulong))
 0002:8017711C       CollisionParts::calcForceMovePower(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801771A4       FileSelectCameraController::FileSelectCameraController((char const *))
 0002:80177218       FileSelectCameraController::init((JMapInfoIter const &))
 0002:80177274       FileSelectCameraController::appear((void))
 0002:801772B8       FileSelectCameraController::kill((void))
 0002:801772FC       FileSelectCameraController::goToNearPoint((JGeometry::TVec3<f> const &))
 0002:80177440       FileSelectCameraController::exeTitle((void))
 0002:801774D8       FileSelectCameraController::exeMoveToFarPoint((void))
 0002:80177604       FileSelectCameraController::exeFarPoint((void))
 0002:8017766C       FileSelectCameraController::exeMoveToNearPoint((void))
 0002:80177780       FileSelectCameraController::exeNearPoint((void))
 0002:801777E4       FileSelectCameraController::control((void))
 0002:8017794C       @unnamed@FileSelectCameraController_cpp@::FileSelectCameraControllerNrvTitle::execute(const(Spine *))
 0002:80177954       FileSelectEffect::FileSelectEffect((char const *))
 0002:80177998       FileSelectEffect::init((JMapInfoIter const &))
 0002:80177A3C       FileSelectEffect::disappear((void))
 0002:80177B28       FileSelectEffect::exeAppear((void))
 0002:80177B98       FileSelectEffect::exeDisappear((void))
 0002:80177C3C       FileSelectEffect::calcAndSetBaseMtx((void))
 0002:80177DE8       FileSelectEffect::~FileSelectEffect((void))
 0002:80177E44       FileSelectFunc::getMiiNameBufferSize((void))
 0002:80177E4C       FileSelectFunc::copyMiiName((ushort *,FileSelectIconID const &))
 0002:80177F08       FileSelectIconID::FileSelectIconID((void))
 0002:80177F18       FileSelectIconID::FileSelectIconID((FileSelectIconID const &))
 0002:80177F2C       FileSelectIconID::set((FileSelectIconID const &))
 0002:80177F40       FileSelectIconID::setMiiIndex((ushort))
 0002:80177F50       FileSelectIconID::isMii(const(void))
 0002:80177F58       FileSelectIconID::getMiiIndex(const(void))
 0002:80177F60       FileSelectIconID::setFellowID((FileSelectIconID::EFellowID))
 0002:80177F70       FileSelectIconID::isFellow(const(void))
 0002:80177F80       FileSelectIconID::getFellowID(const(void))
 0002:80177F88       @unnamed@FileSelectItem_cpp@::checkCollisionOfPointAndCylinder((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80178064       FileSelectItem::FileSelectItem((long,bool,FileSelectIconID const &,char const *))
 0002:801781BC       FileSelectItem::init((JMapInfoIter const &))
 0002:80178260       FileSelectItem::appear((void))
 0002:80178308       FileSelectItem::makeActorAppeared((void))
 0002:80178340       FileSelectItem::makeActorDead((void))
 0002:801783DC       FileSelectItem::format((void))
 0002:8017841C       FileSelectItem::change((FileSelectIconID const &,bool))
 0002:801784A0       FileSelectItem::forceChange((FileSelectIconID const &,bool))
 0002:8017856C       FileSelectItem::invalidateSelect((void))
 0002:801785AC       FileSelectItem::validateSelect((void))
 0002:801785B8       MapObjActorUtil::isRailMoverWorking((MapObjActor const *))
 0002:801785D4       FileSelectItem::copyIconID((FileSelectIconID *))
 0002:801785E4       FileSelectItem::setSelectDelegator((FileSelectItemDelegatorBase *))
 0002:801785EC       FileSelectItem::onPointing((void))
 0002:8017866C       FileSelectItem::offPointing((void))
 0002:801786BC       FileSelectItem::validateRotate((void))
 0002:801786C8       FileSelectItem::turnToFront((long))
 0002:801786D8       FileSelectItem::exeFormat((void))
 0002:801787C8       FileSelectItem::exeChangeFellow((void))
 0002:801788C4       FileSelectItem::exeChangeMii((void))
 0002:80178A14       FileSelectItem::control((void))
 0002:80178C08       FileSelectItem::createNew((void))
 0002:80178C70       FileSelectItem::createFellows((void))
 0002:80178CEC       FileSelectItem::createMii((void))
 0002:80178E0C       FileSelectItem::createNumber((void))
 0002:80178E64       FileSelectItem::updatePointing((void))
 0002:80178F5C       FileSelectItem::updateRotate((void))
 0002:801795D4       FileSelectItem::playPointedME((void))
 0002:80179670       FileSelectItem::playPointedNotUsingME((void))
 0002:8017970C       FileSelectItem::appearFellowModel((void))
 0002:8017975C       FileSelectItem::killAllModels((void))
 0002:801797E4       FileSelectItem::emitCopy((void))
 0002:801799DC       FileSelectItem::emitCompleteEffect((void))
 0002:80179A70       FileSelectItem::deleteCompleteEffect((void))
 0002:80179AD4       FileSelectItemSub::ScaleController::ScaleController((void))
 0002:80179B2C       FileSelectItemSub::ScaleController::exeToBig((void))
 0002:80179C4C       FileSelectItemSub::BlinkController::BlinkController((FileSelectItem *))
 0002:80179CB8       FileSelectItemSub::BlinkController::exeOpen((void))
 0002:80179D8C       FileSelectItemSub::BlinkController::exeShut((void))
 0002:80179DF0       FileSelectItemSub::BlinkController::exeSleep((void))
 0002:80179E78       FileSelectItemSub::BlinkController::exeBlink((void))
 0002:80179FA8       FileSelectItemSub::BlinkController::sleep((void))
 0002:8017A390       FileSelectItemSub::ScaleControllerNrvSmall::execute(const(Spine *))
 0002:8017A3E0       FileSelectModel::FileSelectModel((char const *,float *[4],char const *))
 0002:8017A4A4       LiveActor::calcAnim((void))
 0002:8017A608       FileSelectModel::calcAndSetBaseMtx((void))
 0002:8017A77C       @unnamed@FileSelectModel_cpp@::FileSelectModelNrvBlinkOnce::execute(const(Spine *))
 0002:8017A784       @unnamed@FileSelectModel_cpp@::FileSelectModelNrvOpen::execute(const(Spine *))
 0002:8017A7CC       @unnamed@FileSelector_cpp@::getItemArrayIndex((long))
 0002:8017A80C       FileSelector::FileSelector((char const *))
 0002:8017A9E0       FileSelector::appear((void))
 0002:8017AA2C       FileSelector::kill((void))
 0002:8017AAC8       FileSelector::callbackManual((void))
 0002:8017AB10       FileSelector::notifyItem((FileSelectItem *,long))
 0002:8017AB94       FileSelector::control((void))
 0002:8017ACB0       FileSelector::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8017AD4C       FileSelector::initUserFileArray((void))
 0002:8017ADAC       FileSelector::createCameraController((void))
 0002:8017ADF8       FileSelector::createSky((void))
 0002:8017AE58       FileSelector::createFileItems((void))
 0002:8017AFD4       FileSelector::createOperationButton((void))
 0002:8017B124       FileSelector::createBackButton((void))
 0002:8017B18C       FileSelector::createBrosButton((void))
 0002:8017B1D8       FileSelector::createInfoMessage((void))
 0002:8017B21C       FileSelector::createSysInfoWindow((void))
 0002:8017B25C       FileSelector::createFileInfo((void))
 0002:8017B2AC       FileSelector::createTitle((void))
 0002:8017B2F0       FileSelector::createMiiSelect((void))
 0002:8017B33C       FileSelector::createMiiConfirmIcon((void))
 0002:8017B3A0       FileSelector::createManual((void))
 0002:8017B3EC       FileSelector::createSelectEffect((void))
 0002:8017B4BC       FileSelector::appearAllItems((void))
 0002:8017B520       FileSelector::disappearAllLayout((void))
 0002:8017B5CC       FileSelector::isHiddenAllLayout(const(void))
 0002:8017B648       FileSelector::updateFileInfo((void))
 0002:8017B700       FileSelector::validateRotateAllItems((void))
 0002:8017B860       FileSelector::initUserFile((void))
 0002:8017B8C0       FileSelector::restoreUserFile((void))
 0002:8017B924       FileSelector::checkAllComplete((void))
 0002:8017BA08       FileSelector::onPoint((FileSelectItem *))
 0002:8017BA84       FileSelector::onSelect((FileSelectItem *))
 0002:8017BB40       FileSelector::clearPointing((void))
 0002:8017BB84       FileSelector::setFileInfo((long))
 0002:8017BCF8       FileSelector::checkSelectedBackButton((void))
 0002:8017BD84       FileSelector::goToNearPoint((void))
 0002:8017BDD4       FileSelector::calcBasePos((float))
 0002:8017C108       FileSelector::initAllItems((void))
 0002:8017C294       FileSelector::getUserFileFellowID(const(long))
 0002:8017C2EC       FileSelector::isUserFileMiiIdValid(const(long))
 0002:8017C358       FileSelector::getUserFileMiiIndex(const(long))
 0002:8017C3B4       FileSelector::isUserFileCorrupted(const(long))
 0002:8017C3E8       FileSelector::isUserFileAppearLuigi(const(long))
 0002:8017C440       FileSelector::isUserFileLuigi(const(long))
 0002:8017C450       TalkMessageInfo::isNormalTalk(const(void))
 0002:8017C460       FileSelector::setUserFileMario((long,bool))
 0002:8017C478       FileSelector::storeSetMiiIdUserFile((long,FileSelectIconID const &))
 0002:8017C508       FileSelector::getMiiId(const(RFLCreateID *,FileSelectIconID const &))
 0002:8017C598       FileSelector::getIconId(const(FileSelectIconID *,long))
 0002:8017C664       FileSelector::getMissCount(const(long))
 0002:8017C720       FileSelector::updateBgm((void))
 0002:8017C7B4       FileSelector::exeTitle((void))
 0002:8017C874       FileSelector::exeTitleEnd((void))
 0002:8017C918       FileSelector::exeRFLError((void))
 0002:8017C984       FileSelector::exeRFLWait((void))
 0002:8017CA08       FileSelector::exeRFLWaitEnd((void))
 0002:8017CA60       FileSelector::exeFileSelectStart((void))
 0002:8017CAC4       FileSelector::exeFileSelect((void))
 0002:8017CB1C       FileSelector::exeFileConfirmStart((void))
 0002:8017CBD8       FileSelector::exeManualStart((void))
 0002:8017CC30       FileSelector::exeMiiCaution((void))
 0002:8017CC9C       FileSelector::exeFileConfirmMiiDeleteSave((void))
 0002:8017CD18       FileSelector::exeFileConfirm((void))
 0002:8017CEA4       FileSelector::exeDemoStartWait((void))
 0002:8017CF1C       FileSelector::exeDemo((void))
 0002:8017D024       FileSelector::exeCreateConfirmStart((void))
 0002:8017D148       FileSelector::exeCreate((void))
 0002:8017D1CC       FileSelector::exeCopyWait((void))
 0002:8017D35C       FileSelector::exeCopyConfirmStart((void))
 0002:8017D3D8       FileSelector::exeCopyConfirm((void))
 0002:8017D4CC       FileSelector::exeCopySave((void))
 0002:8017D5A8       FileSelector::exeCopySaveMii((void))
 0002:8017D66C       FileSelector::exeCopyDemo((void))
 0002:8017D788       FileSelector::exeCopyReject((void))
 0002:8017D810       FileSelector::exeMiiWait((void))
 0002:8017D884       FileSelector::exeMiiTip((void))
 0002:8017D900       FileSelector::exeMiiSelectStart((void))
 0002:8017D9DC       FileSelector::exeMiiSelect((void))
 0002:8017DB04       FileSelector::exeMiiInfoStart((void))
 0002:8017DD04       FileSelector::exeMiiCreateWait((void))
 0002:8017DD80       FileSelector::exeMiiCreateDemo((void))
 0002:8017DF14       FileSelector::exeMiiInfo((void))
 0002:8017DF9C       FileSelector::exeDeleteConfirmStart((void))
 0002:8017E0C4       FileSelector::exeDelete((void))
 0002:8017E154       FileSelector::exeDeleteDemo((void))
 0002:8017E1BC       FileSelector::exeFileBroken((void))
 0002:8017E294       FileSelector::exeManual((void))
 0002:8017E2F8       __sinit__FileSelector_cpp
 0002:8017E8EC       NrvFileSelector::FileSelectorNrvWaitBind::execute(const(Spine *))
 0002:8017EAB4       FileSelectItemDelegator<12FileSelector>::notify((FileSelectItem *,long))
 0002:8017EAE4       FileSelectSky::~FileSelectSky((void))
 0002:8017EB40       FileSelectSky::FileSelectSky((char const *))
 0002:8017EB90       FileSelectSky::init((JMapInfoIter const &))
 0002:8017EC2C       FileSelectSky::calcAnim((void))
 0002:8017EC60       StrayTico::calcAndSetBaseMtx((void))
 0002:8017EC70       FileSelectSky::exeWait((void))
 0002:8017EE18       Fish::~Fish((void))
 0002:8017EE74       FishGroup::~FishGroup((void))
 0002:8017EED0       Fish::Fish((char const *,FishGroup *,int,bool))
 0002:8017EFD8       Fish::init((JMapInfoIter const &))
 0002:8017F0B4       Fish::exeWander((void))
 0002:8017F178       Fish::exeApproach((void))
 0002:8017F31C       Fish::exeEscape((void))
 0002:8017F410       Fish::control((void))
 0002:8017F5E0       Fish::calcAndSetBaseMtx((void))
 0002:8017F648       Fish::tryEscapeFromPlayer((void))
 0002:8017F6D4       Fish::updateFollowPointPos((void))
 0002:8017F730       FishGroup::FishGroup((char const *))
 0002:8017F7A4       FishGroup::init((JMapInfoIter const &))
 0002:8017F9A0       FishGroup::startClipped((void))
 0002:8017FA0C       FishGroup::endClipped((void))
 0002:8017FA78       FishGroup::control((void))
 0002:8017FB4C       Flag::~Flag((void))
 0002:8017FBA8       Flag::Flag((char const *))
 0002:8017FCC0       Flag::init((JMapInfoIter const &))
 0002:80180510       Flag::appear((void))
 0002:801805BC       Flag::setInfoPos((char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &,float,float,float,long,long,float))
 0002:801806E0       Flag::movement((void))
 0002:80180768       Flag::updateFlag((void))
 0002:80180F24       Flag::draw(const(void))
 0002:80181224       Flag::loadMaterial(const(void))
 0002:80181524       JUTTexture::JUTTexture((ResTIMG const *,uchar))
 0002:80181568       nullsub_121
 0002:80181580       GravityDustParticleCallBack::GravityDustParticleCallBack((LiveActor const *))
 0002:801815CC       GravityDustParticleCallBack::execute((JPABaseEmitter *,JPABaseParticle *))
 0002:801817C8       GroundChecker::GroundChecker((char const *,float,float))
 0002:8018186C       GroundChecker::bringFriction((float,float))
 0002:8018188C       GroundChecker::~GroundChecker((void))
 0002:801818E8       GroupSwitchWatcher::GroupSwitchWatcher((char const *))
 0002:8018193C       GroupSwitchWatcher::init((JMapInfoIter const &))
 0002:801819C4       GroupSwitchWatcher::control((void))
 0002:80181ACC       GroupSwitchWatcher::~GroupSwitchWatcher((void))
 0002:80181B28       Halo::Halo((char const *))
 0002:80181BC8       Halo::init((JMapInfoIter const &))
 0002:80181CBC       Halo::appear((void))
 0002:80181E54       MR::calcDistanceToPlayer((LiveActor const *))
 0002:80181E58       MR::connectToSceneAir((LiveActor *))
 0002:80181E5C       Halo::isDistanceAppear(const(void))
 0002:80181EE4       Halo::isDistanceDisappear(const(void))
 0002:80181F6C       Halo::exeDisappear((void))
 0002:801820A8       PowerStarHalo::PowerStarHalo((char const *))
 0002:80182144       PowerStarHalo::init((JMapInfoIter const &))
 0002:801821A0       PowerStarHalo::appear((void))
 0002:801821F8       PowerStarHalo::getDistance(const(void))
 0002:80182234       ButlerMap::exeLectureDemoShowMapAfter((void))
 0002:8018235C       NrvHalo::HostTypeAppear::execute(const(Spine *))
 0002:801823B0       nullsub_89
 0002:801823B4       Triangle::Triangle((void))
 0002:8018242C       Triangle::fillData((CollisionParts *,ulong,HitSensor *))
 0002:801825E4       Triangle::isHostMoved(const(void))
 0002:801825F8       Triangle::isValid(const(void))
 0002:8018260C       Triangle::getNormal(const(int))
 0002:80182624       Triangle::getEdgeNormal(const(int))
 0002:80182638       Triangle::getPos(const(int))
 0002:80182648       Triangle::calcAndGetNormal((int))
 0002:801827A0       Triangle::calcAndGetEdgeNormal((int))
 0002:801828C4       Triangle::calcAndGetPos((int))
 0002:80182958       Triangle::getAttributes(const(void))
 0002:801829AC       Triangle::getBaseMtx(const(void))
 0002:801829B8       Triangle::getBaseInvMtx(const(void))
 0002:801829C4       Triangle::getPrevBaseMtx(const(void))
 0002:801829D0       HitInfo::HitInfo((void))
 0002:80182A4C       HitInfo::isCollisionAtFace(const(void))
 0002:80182A60       HitInfo::isCollisionAtEdge(const(void))
 0002:80182A80       HitInfo::isCollisionAtCorner(const(void))
 0002:80182AA0       JGeometry::TVec3<f>::__eq(const(JGeometry::TVec3<f> const &))
 0002:80182B28       JGeometry::TVec3<f>::__dv(const(float))
 0002:80182B78       KCollisionServer::KCollisionServer((void))
 0002:80182BD4       KCollisionServer::init((void *,void const *))
 0002:80182C20       KCollisionServer::setData((void *))
 0002:80182C9C       KCollisionServer::calcFarthestVertexDistance((void))
 0002:80182E24       KCollisionServer::isBinaryInitialized((void const *))
 0002:80182E30       KCollisionServer::checkPoint((Fxyz *,float,float *))
 0002:80183098       KCollisionServer::checkArea3D((Fxyz *,Fxyz *,KC_PrismData **,ulong))
 0002:8018340C       KCollisionServer::checkSphere((Fxyz *,float,float,ulong,KC_PrismData **,float *,uchar *))
 0002:801836E0       KCollisionServer::checkSphereWithThickness((Fxyz *,float,float,ulong,KC_PrismData **,float *,uchar *,float))
 0002:801839CC       KCollisionServer::checkArrow(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float *,uchar *,ulong *,KC_PrismData **,ulong))
 0002:801840D4       KCollisionServer::KCHitSphere((KC_PrismData *,Fxyz *,float,float,float *,uchar *))
 0002:80184784       KCollisionServer::KCHitSphereWithThickness((KC_PrismData *,Fxyz *,float,float,float *,uchar *,float))
 0002:80184E00       KCollisionServer::isNearParallelNormal(const(KC_PrismData const *))
 0002:80184EDC       KCollisionServer::KCHitArrow(const(KC_PrismData *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float *,uchar *))
 0002:8018519C       KCollisionServer::toIndex(const(KC_PrismData const *))
 0002:801851B8       KCollisionServer::getFaceNormal(const(KC_PrismData const *))
 0002:801851D0       KCollisionServer::getEdgeNormal1(const(KC_PrismData const *))
 0002:801851E8       KCollisionServer::getEdgeNormal2(const(KC_PrismData const *))
 0002:80185200       KCollisionServer::getEdgeNormal3(const(KC_PrismData const *))
 0002:80185218       KCollisionServer::getNormal(const(ulong))
 0002:8018522C       KCollisionServer::calXvec(const(Fxyz const *,Fxyz const *,Fxyz *))
 0002:80185278       KCollisionServer::getPos(const(KC_PrismData const *,int))
 0002:80185478       KCollisionServer::getPrismData(const(ulong))
 0002:80185490       KCollisionServer::getTriangleNum(const(void))
 0002:801854AC       KCollisionServer::getAttributes(const(ulong))
 0002:801854DC       KCollisionServer::searchBlock(const(long *,ulong const &,ulong const &,ulong const &))
 0002:80185588       KCollisionServer::V3u::setUsingCast((JGeometry::TVec3<f> const &))
 0002:801855D0       std::find<PP12KC_PrismData,P12KC_PrismData>(KC_PrismData **(KC_PrismData **,KC_PrismData **,KC_PrismData *const &))
 0002:801855F4       Fxyz::__as((Fxyz const &))
 0002:80185610       KCollisionServer::isInsideMinMaxInLocalSpace(const(KCollisionServer::V3u const &))
 0002:80185660       KCollisionServer::outCheck(const(JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,KCollisionServer::V3u *,KCollisionServer::V3u *))
 0002:80185788       KCollisionServer::objectSpaceToLocalSpace(const(KCollisionServer::V3u *,JGeometry::TVec3<f> const &))
 0002:801857EC       KoopaBattleMapCoinPlate::~KoopaBattleMapCoinPlate((void))
 0002:80185848       KoopaBattleMapCoinPlate::KoopaBattleMapCoinPlate((char const *))
 0002:8018588C       KoopaBattleMapCoinPlate::calcAndSetBaseMtx((void))
 0002:80185894       KoopaBattleMapCoinPlate::init((JMapInfoIter const &))
 0002:801859D4       KoopaBattleMapCoinPlate::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80185AF4       KoopaBattleMapDamagePlate::KoopaBattleMapDamagePlate((char const *))
 0002:80185B38       KoopaBattleMapDamagePlate::init((JMapInfoIter const &))
 0002:80185CB4       KoopaBattleMapDamagePlate::exeBreak((void))
 0002:80185D3C       KoopaBattleMapDamagePlate::exeRecover((void))
 0002:80185DEC       KoopaBattleMapDamagePlate::attackSensor((HitSensor *,HitSensor *))
 0002:80185E6C       KoopaBattleMapDamagePlate::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80185FE4       KoopaBattleMapPlanet::~KoopaBattleMapPlanet((void))
 0002:80186040       KoopaBattleMapPlanet::KoopaBattleMapPlanet((char const *,char const *,bool,bool,bool))
 0002:801860D0       KoopaBattleMapPlanet::init((JMapInfoIter const &))
 0002:80186208       KoopaBattleMapPlanet::exeDemoGrandStarAppear((void))
 0002:8018628C       KoopaBattleMapPlanet::createPlate((void))
 0002:80186650       KoopaBattleMapPlanet::control((void))
 0002:80186708       NrvKoopaBattleMapPlanet::KoopaBattleMapPlanetNrvWait::execute(const(Spine *))
 0002:80186750       KoopaBattleMapPlanet::getBaseMtx(const(void))
 0002:80186758       KoopaBattleMapPlate::KoopaBattleMapPlate((char const *))
 0002:8018679C       KoopaBattleMapPlate::calcAndSetBaseMtx((void))
 0002:801867A4       KoopaBattleMapPlate::~KoopaBattleMapPlate((void))
 0002:80186800       KoopaBattleMapPlate::init((JMapInfoIter const &))
 0002:8018694C       KoopaBattleMapPlate::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80186A18       KoopaBattleMapStair::KoopaBattleMapStair((char const *))
 0002:80186AA8       KoopaBattleMapStair::init((JMapInfoIter const &))
 0002:80186C54       KoopaBattleMapStair::initAfterPlacement((void))
 0002:80186C94       KoopaBattleMapStair::isRequestAttackVs1(const(void))
 0002:80186CFC       KoopaBattleMapStair::calcRemainTimeToBreak(const(void))
 0002:80186D30       KoopaBattleMapStair::isRequestAttackVs3(const(void))
 0002:80186DB0       @unnamed@KoopaBattleMapStair_cpp@::updateNearestPos((JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,long))
 0002:80186E40       KoopaBattleMapStair::calcAndSetTargetPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801870B8       KoopaBattleMapStair::calcTimeRate(const(void))
 0002:8018713C       KoopaBattleMapStair::isTypeNormal(const(void))
 0002:8018714C       KoopaBattleMapStair::isTypeDemoFar(const(void))
 0002:80187160       KoopaBattleMapStair::isTypeDemoNear(const(void))
 0002:80187174       KoopaBattleMapStair::isTypeNoRequestFire(const(void))
 0002:80187188       KoopaBattleMapStair::exeWaitSwitch((void))
 0002:801871F0       KoopaBattleMapStair::exeWaitFall((void))
 0002:8018729C       KoopaBattleMapStair::exeFall((void))
 0002:80187358       KoopaBattleMapStair::exeDisappear((void))
 0002:801874EC       NrvPalmIsland::PalmIslandNrvWait::execute(const(Spine *))
 0002:8018753C       LavaShellTower::LavaShellTower((char const *))
 0002:80187578       LavaShellTower::init((JMapInfoIter const &))
 0002:80187634       LavaShellTower::exeDemo((void))
 0002:801877A4       LavaSunPlanet::LavaSunPlanet((char const *))
 0002:801877F0       LavaSunPlanet::control((void))
 0002:80187840       LavaSunPlanet::calcAndSetBaseMtx((void))
 0002:801878E4       LavaSunPlanet::init((JMapInfoIter const &))
 0002:80187AEC       LightDataHolder::LightDataHolder((void))
 0002:80187AFC       LightDataHolder::initLightData((void))
 0002:80187BC8       LightDataHolder::findAreaLight(const(char const *))
 0002:80187C4C       J3DPEBlockFogOff::countDLSize((void))
 0002:80187C54       LightDirector::LightDirector((void))
 0002:80187CB8       LightDirector::init((JMapInfoIter const &))
 0002:80187D30       LightDirector::initData((void))
 0002:80187D88       LightDirector::loadLightPlayer(const(void))
 0002:80187DC0       LightDirector::loadLightCoin(const(void))
 0002:80187DCC       LightDirector::movement((void))
 0002:80187DD4       LightDirector::~LightDirector((void))
 0002:80187E2C       LightFunction::initLightRegisterAll((void))
 0002:80187F7C       MR::loadLightPlayer((void))
 0002:80187FE4       LightFunction::createLightDataParser((JMapInfo **))
 0002:80188048       LightFunction::createZoneDataParser((char const *,JMapInfo **))
 0002:801880CC       @unnamed@LightFunction_cpp@::getDataLightInfo((JMapInfo *,int,LightInfo *,char const *))
 0002:80188190       @unnamed@LightFunction_cpp@::getDataActorLightInfo((JMapInfo *,int,ActorLightInfo *,char const *))
 0002:80188288       LightFunction::getAreaLightLightData((JMapInfo *,int,AreaLightInfo *))
 0002:80188354       LightFunction::getDefaultStepInterpolate((void))
 0002:801883B4       LightFunction::registerPlayerLightCtrl((ActorLightCtrl const *))
 0002:801883EC       LightFunction::registerLightAreaHolder((LightAreaHolder *))
 0002:80188424       LightFunction::tryFindNewAreaLightID((JGeometry::TVec3<f> const &,ZoneLightID *))
 0002:80188474       LightFunction::getAreaLightInfo((ZoneLightID const &))
 0002:801884D0       @unnamed@LightFunction_cpp@::blendActorLightPos((LightInfo const &,LightInfo const &,LightInfo *,float))
 0002:801885C4       LightFunction::blendActorLightInfo((ActorLightInfo *,ActorLightInfo const &,ActorLightInfo const &,float))
 0002:801886B0       @unnamed@LightFunction_cpp@::loadLightDiffuse((_GXColor,JGeometry::TVec3<f> const &,_GXLightID))
 0002:80188750       @unnamed@LightFunction_cpp@::loadLightInfoDiffuse((LightInfo const &,_GXLightID))
 0002:8018881C       LightFunction::loadActorLightInfo((ActorLightInfo const *))
 0002:801888D0       LightFunction::loadLightInfoCoin((LightInfoCoin const *))
 0002:80188998       LightFunction::loadPointLightInfo((PointLightInfo const *))
 0002:80188A4C       LightFunction::loadAllLightWhite((void))
 0002:80188B0C       LightFunction::calcLightWorldPos((JGeometry::TVec3<f> *,LightInfo const &))
 0002:80188BB4       LightPointCtrl::LightPointCtrl((void))
 0002:80188C5C       LightPointCtrl::update((void))
 0002:80188CCC       PointLightInfo::__as((PointLightInfo const &))
 0002:80188D20       LightPointCtrl::requestPointLight((LiveActor const *,JGeometry::TVec3<f>,Color8,float,long))
 0002:80188E04       Vec::__as((Vec const &))
 0002:80188E20       LightPointCtrl::updatePointLight((void))
 0002:80188F34       LightPointCtrl::clearPointLight((PointLightInfo *))
 0002:80188FC8       LightPointCtrl::blendPointLight((PointLightInfo *,PointLightInfo const &,PointLightInfo const &,float))
 0002:801890CC       LightPointCtrl::tryBlendStart((void))
 0002:801890F4       LightPointCtrl::isUpdateCandidateActor(const(LiveActor const *))
 0002:80189154       ZoneLightID::ZoneLightID((void))
 0002:80189164       ZoneLightID::clear((void))
 0002:80189174       ZoneLightID::isTargetArea(const(LightArea const *))
 0002:801891A4       ZoneLightID::isOutOfArea(const(void))
 0002:801891C0       LightZoneInfo::getAreaLightNameInZoneData(const(long))
 0002:80189210       LightZoneDataHolder::initZoneData((void))
 0002:801892A4       LightZoneDataHolder::getAreaLightNameInZoneData(const(ZoneLightID const &))
 0002:801892C8       LightZoneDataHolder::getDefaultStageAreaLightName(const(void))
 0002:801892D4       LightZoneInfo::init((long))
 0002:80189380       NamePosHolder::NamePosHolder((void))
 0002:80189450       nullsub_122
 0002:80189454       NamePosHolder::tryRegisterLinkObj((NameObj const *,JMapInfoIter const &))
 0002:8018953C       NamePosHolder::find(const(NameObj const *,char const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:80189608       MR::getNamePosHolder((void))
 0002:80189688       OceanBowl::OceanBowl((char const *))
 0002:8018977C       OceanBowl::init((JMapInfoIter const &))
 0002:801898F0       OceanBowl::isInWater(const(JGeometry::TVec3<f> const &))
 0002:80189980       OceanBowl::calcWaterInfo(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,WaterInfo *))
 0002:80189BBC       OceanBowl::movement((void))
 0002:80189E6C       OceanBowl::initPoints((void))
 0002:8018A164       OceanBowl::updatePoints((void))
 0002:8018A1DC       OceanBowl::moveToLeft((void))
 0002:8018A2EC       OceanBowl::moveToRight((void))
 0002:8018A3FC       OceanBowl::moveToUpper((void))
 0002:8018A50C       OceanBowl::moveToLower((void))
 0002:8018A61C       OceanBowl::draw(const(void))
 0002:8018A74C       OceanBowl::loadMaterial(const(void))
 0002:8018AE14       OceanBowl::loadMaterialBloom(const(void))
 0002:8018B1A4       OceanBowlBloomDrawer::~OceanBowlBloomDrawer((void))
 0002:8018B200       GXPosition3f32
 0002:8018B214       OceanBowlBloomDrawer::OceanBowlBloomDrawer((OceanBowl *))
 0002:8018B268       OceanBowlBloomDrawer::init((JMapInfoIter const &))
 0002:8018B27C       OceanBowlBloomDrawer::draw(const(void))
 0002:8018B43C       OceanBowlPoint::OceanBowlPoint((JGeometry::TVec3<f> const &))
 0002:8018B494       OceanBowlPoint::updatePos((float,float))
 0002:8018B554       OceanBowlPoint::calcHeightStatic((float,float,float,float))
 0002:8018B5E8       OceanBowlPoint::reset((JGeometry::TVec3<f> const &,float))
 0002:8018B658       OceanHomeMapCtrl::OceanHomeMapCtrl((void))
 0002:8018B6B8       OceanHomeMapCtrl::entryMapRing((PlanetMap *))
 0002:8018B73C       OceanHomeMapFunction::tryEntryOceanHomeMap((PlanetMap *))
 0002:8018B7D8       MR::connectToSceneMapObjMovement((NameObj *))
 0002:8018B7DC       OceanHomeMapCtrl::movement((void))
 0002:8018B92C       OceanRing::OceanRing((char const *))
 0002:8018BA24       OceanRing::init((JMapInfoIter const &))
 0002:8018BC04       OceanRing::initAfterPlacement((void))
 0002:8018BC60       OceanRing::isInWater(const(JGeometry::TVec3<f> const &))
 0002:8018BD54       OceanRing::calcWaterInfo(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,WaterInfo *))
 0002:8018BFC8       OceanRing::calcNearestPos(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:8018C290       OceanRing::calcWaveHeight(const(JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> *))
 0002:8018C5E4       OceanRing::calcStreamVec(const(JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> *))
 0002:8018C6B0       OceanRing::movement((void))
 0002:8018C790       OceanRing::startClipped((void))
 0002:8018C7D8       OceanRing::endClipped((void))
 0002:8018C820       OceanRing::initPoints((void))
 0002:8018CAF0       OceanRing::updatePoints((void))
 0002:8018CD50       OceanRing::updatePointsInLine((long,long,long,long))
 0002:8018CE88       OceanRing::calcCurrentFlowSpeedRate(const(float))
 0002:8018D008       OceanRing::calcClippingBox((void))
 0002:8018D194       OceanRing::draw(const(void))
 0002:8018D22C       JGeometry::TBox<Q29JGeometry8TVec3<f>>::intersectsPoint(const(JGeometry::TVec3<f> const &))
 0002:8018D29C       OceanRing::getPoint(const(int,int))
 0002:8018D2B8       OceanRingBloomDrawer::OceanRingBloomDrawer((OceanRing *))
 0002:8018D30C       OceanRingBloomDrawer::init((JMapInfoIter const &))
 0002:8018D320       OceanRingBloomDrawer::draw(const(void))
 0002:8018D374       OceanRingBloomDrawer::~OceanRingBloomDrawer((void))
 0002:8018D3CC       OceanRingPartDrawer::OceanRingPartDrawer((OceanRing const *,int,int,bool,float *,float *,float *))
 0002:8018D4F4       OceanRingPartDrawer::initDisplayList((float *,float *,float *))
 0002:8018D5D0       OceanRingPartDrawer::draw(const(void))
 0002:8018D62C       OceanRingPartDrawer::drawGD(const(float *,float *,float *))
 0002:8018D98C       OceanRingPartDrawer::drawDynamic(const(void))
 0002:8018DC4C       OceanRingPartDrawer::drawDynamicBloom(const(void))
 0002:8018DE58       OceanRingDrawer::OceanRingDrawer((OceanRing const *))
 0002:8018DF50       OceanRingDrawer::update((void))
 0002:8018E0A0       OceanRingDrawer::draw(const(void))
 0002:8018E120       OceanRingDrawer::drawBloom(const(void))
 0002:8018E1E4       OceanRingDrawer::initParts((void))
 0002:8018E314       OceanRingDrawer::initDisplayList((void))
 0002:8018E3EC       OceanRingDrawer::drawGD(const(void))
 0002:8018E69C       OceanRingDrawer::loadMaterial(const(void))
 0002:8018EC2C       OceanRingDrawer::loadMaterialBloom(const(void))
 0002:8018EFDC       GDBegin_1
 0002:8018F068       GDOverflowCheck_9
 0002:8018F088       GDWrite_f32_6
 0002:8018F110       GDPosition3f32_2
 0002:8018F158       GDColor4u8
 0002:8018F218       OceanRingPipe::~OceanRingPipe((void))
 0002:8018F274       JGeometry::TVec3<s>::TVec3<s>((void))
 0002:8018F278       OceanRingPipe::OceanRingPipe((OceanRing const *,float,float))
 0002:8018F314       OceanRingPipe::init((JMapInfoIter const &))
 0002:8018F534       OceanRingPipe::movement((void))
 0002:8018F5B8       OceanRingPipe::initPoints((void))
 0002:8018FB5C       OceanRingPipeInside::OceanRingPipeInside((OceanRingPipe const *))
 0002:8018FBD4       OceanRingPipeInside::init((JMapInfoIter const &))
 0002:8018FC8C       OceanRingPipeInside::movement((void))
 0002:8018FD74       OceanRingPipeInside::initDisplayList((void))
 0002:8018FE3C       OceanRingPipeInside::draw(const(void))
 0002:8018FE9C       OceanRingPipeInside::loadMaterial(const(void))
 0002:801901EC       OceanRingPipeInside::sendGD(const(void))
 0002:80190430       GDWrite_u16_2
 0002:8019048C       GDWrite_f32
 0002:80190514       OceanRingPipeOutside::OceanRingPipeOutside((OceanRingPipe const *))
 0002:80190584       OceanRingPipeOutside::init((JMapInfoIter const &))
 0002:80190664       OceanRingPipeOutside::movement((void))
 0002:801906C4       OceanRingPipeOutside::initDisplayList((void))
 0002:8019078C       OceanRingPipeOutside::draw(const(void))
 0002:801907E0       OceanRingPipeOutside::loadMaterial(const(void))
 0002:80190D04       OceanRingPipeOutside::sendGD(const(void))
 0002:80190FC4       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setRotate((JGeometry::TVec3<f> const &,float))
 0002:801910D8       OceanSpherePlane::OceanSpherePlane((long,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:8019152C       OceanSpherePlane::update((float,float,float))
 0002:801915D0       OceanSpherePlaneEdge::OceanSpherePlaneEdge((long,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:801917C8       OceanSpherePlaneEdge::update((float,float,float))
 0002:8019184C       OceanSphere::OceanSphere((char const *))
 0002:80191990       OceanSphere::init((JMapInfoIter const &))
 0002:80191BA8       OceanSphere::appear((void))
 0002:80191BE8       OceanSphere::isInWater(const(JGeometry::TVec3<f> const &))
 0002:80191C50       OceanSphere::calcWaterInfo(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,WaterInfo *))
 0002:80191DD8       OceanSphere::exeRiseUp((void))
 0002:80191E48       OceanSphere::initPoints((void))
 0002:80192508       @unnamed@OceanSphere_cpp@::calcDisplayListSize((ulong,ulong))
 0002:8019253C       OceanSphere::initDisplayList((void))
 0002:80192658       OceanSphere::control((void))
 0002:801927F0       OceanSphere::updatePoints((void))
 0002:80192980       OceanSphere::getPlanePointLeftUpper(const(int,int))
 0002:80192A88       OceanSphere::getPlanePointRightUpper(const(int,int))
 0002:80192B90       OceanSphere::getPlanePointLeftLower(const(int,int))
 0002:80192C98       OceanSphere::getPlanePointRightLower(const(int,int))
 0002:80192DA0       OceanSphere::draw(const(void))
 0002:80192F64       OceanSphere::loadMaterialFace(const(void))
 0002:801933F0       OceanSphere::loadMaterialBack(const(void))
 0002:80193730       @unnamed@OceanSphere_cpp@::beginDrawPolygon((int,long,bool))
 0002:801937F4       OceanSphere::drawSphere(const(bool,bool))
 0002:80193D44       OceanSphere::sendVertex(const(OceanSpherePoint const *,bool,bool))
 0002:80193F10       __sinit__OceanSphere_cpp
 0002:80193FAC       OceanSpherePlane::getPoint(const(int,int))
 0002:80194070       GXTexCoord2f32_4
 0002:80194080       OceanSpherePoint::OceanSpherePoint((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &,float,float,JGeometry::TVec2<f> const &))
 0002:80194114       OceanSpherePoint::updatePos((float,float,float))
 0002:801941B4       OceanSpherePoint::calcHeight(const(float,float,float,float))
 0002:80194224       PlanetMap::PlanetMap((char const *,char const *))
 0002:80194294       PlanetMap::init((JMapInfoIter const &))
 0002:801944F0       PlanetMap::makeActorAppeared((void))
 0002:8019452C       PlanetMap::makeActorDead((void))
 0002:8019456C       PlanetMap::initClipping((JMapInfoIter const &))
 0002:801946B0       PlanetMap::initModel((char const *,JMapInfoIter const &))
 0002:80194760       PlanetMap::initBloomModel((char const *))
 0002:801948A0       PlanetMap::tryDeleteMyEffect((void))
 0002:80194940       BlueChipGroup::BlueChipGroup((char const *))
 0002:80194A50       RailCoin::initCoinArray((JMapInfoIter const &))
 0002:80194A94       PlanetMapAnimLow::getLowMovementType(const(void))
 0002:80194BAC       @unnamed@PlanetMapCreator_cpp@::makeSubModelName((char const **,JMapInfo const *,long,char const *,char const *))
 0002:80194C70       @unnamed@NameObjFactory_cpp@::createNameObj<13HipDropSwitch>(NameObj *(char const *))
 0002:80194CB0       @unnamed@NameObjFactory_cpp@::createNameObj<13PowerStarHalo>(NameObj *(char const *))
 0002:80194CF0       @unnamed@NameObjFactory_cpp@::createNameObj<15RandomEffectObj>(NameObj *(char const *))
 0002:80194D30       @unnamed@NameObjFactory_cpp@::createNameObj<26UFOKinokoUnderConstruction>(NameObj *(char const *))
 0002:80194DCC       @unnamed@NameObjFactory_cpp@::createNameObj<15TransparentWall>(NameObj *(char const *))
 0002:80194E0C       @unnamed@PlanetMapCreator_cpp@::createNameObj<16PlanetMapAnimLow>(NameObj *(char const *))
 0002:80194E6C       @unnamed@NameObjFactory_cpp@::createNameObj<11TimerSwitch>(NameObj *(char const *))
 0002:80194F08       @unnamed@NameObjFactory_cpp@::createNameObj<20EffectObjGravityDust>(NameObj *(char const *))
 0002:80194F48       @unnamed@NameObjFactory_cpp@::createNameObj<14SubmarineSteam>(NameObj *(char const *))
 0002:80194F88       @unnamed@NameObjFactory_cpp@::createNameObj<23AstroDomeGalaxySelector>(NameObj *(char const *))
 0002:80194FC8       @unnamed@NameObjFactory_cpp@::createNameObj<11ValveSwitch>(NameObj *(char const *))
 0002:80195228       @unnamed@PlanetMapCreator_cpp@::isDataForceLow((PlanetMapData const *))
 0002:80195294       PlanetMapCreator::PlanetMapCreator((char const *))
 0002:80195314       PlanetMapCreator::getCreateFunc((char const *))
 0002:801953C4       @unnamed@PlanetMapCreator_cpp@::createNameObj<9PlanetMap>(NameObj *(char const *))
 0002:80195448       PlanetMapCreator::makeArchiveListPlanet((NameObjArchiveListCollector *,JMapInfoIter const &,char const *))
 0002:80195564       PlanetMapCreator::createPlanetMapDataTable((JMapInfo *))
 0002:801955D8       PlanetMapCreator::addTableData((JMapInfo const *,long))
 0002:8019572C       PlanetMapCreator::getTableData(const(char const *))
 0002:801957AC       PlanetMapCreator::isScenarioForceLow(const(PlanetMapData const *))
 0002:80195878       PlanetMapCreatorFunction::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &,char const *))
 0002:801958CC       PlanetMapCreatorFunction::getPlanetMapCreator((char const *))
 0002:80195908       PlanetMapCreatorFunction::isLoadArchiveAfterScenarioSelected((char const *))
 0002:80195970       PlanetMapCreatorFunction::isRegisteredObj((char const *))
 0002:80195A64       PlanetMapFarClippable::getFarClipDistance(const(void))
 0002:80195A6C       PlanetMapWithoutHighModel::PlanetMapWithoutHighModel((char const *))
 0002:80195AA8       MR::connectToScenePlanet((LiveActor *))
 0002:80195AAC       PlanetMapWithoutHighModel::~PlanetMapWithoutHighModel((void))
 0002:80195B04       PlanetMapWithoutHighModel::init((JMapInfoIter const &))
 0002:80195BB4       QuakeEffectGenerator::QuakeEffectGenerator((void))
 0002:80195BF8       QuakeEffectGenerator::init((JMapInfoIter const &))
 0002:80195C4C       QuakeEffectGenerator::exeWaitInArea((void))
 0002:80195CD0       QuakeEffectGenerator::exeQuaking((void))
 0002:80195E44       NrvQuakeEffectGenerator::HostTypeWait::execute(const(Spine *))
 0002:80195E8C       RaceManagerLayout::RaceManagerLayout((char const *))
 0002:80195ECC       LayoutActor::~LayoutActor((void))
 0002:80195F24       RaceManagerLayout::init((JMapInfoIter const &))
 0002:80195FEC       RaceManagerLayout::playCountAndGo((void))
 0002:80196044       RaceManagerLayout::playGo((void))
 0002:801960B0       RaceManagerLayout::playGoal((void))
 0002:80196124       RaceManagerLayout::playTimeUp((void))
 0002:801961F4       RaceManagerLayout::playRank((ulong))
 0002:80196274       RaceManagerLayout::isAllAnimStopped((void))
 0002:8019635C       RaceManagerLayout::hideAllPane((void))
 0002:801963E4       RaceManagerLayout::isPlayCountAnim(const(void))
 0002:8019641C       RaceManagerLayout::isPlayCountAndGoAnim(const(void))
 0002:8019644C       MR::getRailArg1WithInit((RailRider const *,long *))
 0002:8019645C       RaceManager::RaceManager((void))
 0002:801964C8       RaceManager::init((JMapInfoIter const &))
 0002:8019655C       LiveActor::movement((void))
 0002:80196560       RaceManager::exePrep((void))
 0002:80196608       RaceManager::exeWipeOut((void))
 0002:801966AC       RaceManager::exeWipeWait((void))
 0002:80196714       RaceManager::exeWipeIn((void))
 0002:8019682C       RaceManager::exeIntro((void))
 0002:801968B4       RaceManager::exeCount((void))
 0002:801969F0       RaceManager::exeRace((void))
 0002:80196E58       RaceManager::exeDemo((void))
 0002:80196EA4       RaceManager::exeRank((void))
 0002:80196F04       RaceManager::startWithWipe((void))
 0002:80196F58       RaceManager::startImmediately((void))
 0002:80196FC8       RaceManager::prepRace((void))
 0002:801970AC       RaceManager::startRace((void))
 0002:80197158       RaceManager::goalRace((void))
 0002:801971F0       RaceManager::resetRace((void))
 0002:80197304       RaceManager::prepBind((void))
 0002:80197344       RaceManager::entry((AbstractRacer *))
 0002:80197360       RaceManager::entry((PlayerRacer *))
 0002:8019741C       RaceManager::entry((AbstractAudience *))
 0002:80197438       RaceManager::isGoal(const(AbstractRacer const *))
 0002:801974B0       RaceManager::getRank(const(AbstractRacer const *))
 0002:801974F0       RaceManager::renewTime((void))
 0002:80197538       RaceManagerFunction::entryRacerPlayer((PlayerRacer *))
 0002:80197604       RaceManagerFunction::startRaceImmediately((void))
 0002:8019765C       RaceManagerFunction::getRaceRank((void))
 0002:80197688       RaceManagerFunction::getRaceTime((void))
 0002:801976E0       RaceManagerFunction::getRaceId((char const *,long))
 0002:80197764       RaceManagerFunction::hasPowerStarRaceScenario((int))
 0002:80197A30       AbstractRacer::initRacer((void))
 0002:80197A74       AbstractRacer::compRacer((AbstractRacer const *,AbstractRacer const *))
 0002:80197F94       RaceManager::exeGoal((void))
 0002:801980C4       nullsub_100
 0002:801980C8       RaceRail::RaceRail((char const *))
 0002:80198104       PlayerRacer::PlayerRacer((char const *))
 0002:8019817C       PlayerRacer::init((JMapInfoIter const &))
 0002:8019822C       PlayerRacer::startRacer((void))
 0002:8019823C       PlayerRacer::updateRacer((RaceManager const *))
 0002:8019849C       str_801E28F0
 0002:801984DC       RaceRail::init((JMapInfoIter const &))
 0002:8019854C       PlayerRacer::initRacer((void))
 0002:80198580       PlayerRacer::prepRacer((RaceManager const *))
 0002:80198774       PlayerRacer::resetRacer((RaceManager const *))
 0002:80198824       RailGraph::RailGraph((void))
 0002:801988C4       RailGraph::addNode((JGeometry::TVec3<f> const &))
 0002:80198958       RailGraph::connectNodeTwoWay((long,long,RailGraphEdge const *))
 0002:80198A24       RailGraphEdge::__as((RailGraphEdge const &))
 0002:80198AB8       RailGraph::getNode(const(long))
 0002:80198AC8       RailGraph::getEdge(const(long))
 0002:80198AD8       RailGraph::isValidEdge(const(long))
 0002:80198AFC       RailGraph::connectEdgeToNode((long,long))
 0002:80198BB4       RailGraphIter::RailGraphIter((RailGraph const *))
 0002:80198BB8       RailGraphEdge::RailGraphEdge((void))
 0002:80198BF8       RailGraphEdge::clearConnectInfo((void))
 0002:80198C18       RailGraphEdge::getNextNode(const(long))
 0002:80198C44       RailGraphEdge::getNextEdge(const(long))
 0002:80198C74       RailGraphEdge::setNextEdge((long,long))
 0002:80198C9C       RailGraphEdge::setArgs((JMapInfo const *,long))
 0002:80198D7C       RailGraphIter::RailGraphIter((RailGraph const *))
 0002:80198D98       RailGraphIter::moveNodeNext((void))
 0002:80198DE0       RailGraphIter::setNode((long))
 0002:80198DF8       RailGraphIter::watchStartEdge((void))
 0002:80198E34       RailGraphIter::watchNextEdge((void))
 0002:80198E74       RailGraphIter::isWatchEndEdge(const(void))
 0002:80198E88       RailGraphIter::selectEdge((void))
 0002:80198E9C       RailGraphIter::isWatchedPrevEdge(const(void))
 0002:80198EE8       J3DDisplayListObj::callDL(const(void))
 0002:80198EF8       RailGraphIter::getCurrentNode(const(void))
 0002:80198F08       RailGraphIter::getNextNode(const(void))
 0002:80198F50       RailGraphIter::getWatchNode(const(void))
 0002:80198F98       RailGraphIter::getCurrentEdge(const(void))
 0002:80198FA8       RailGraphIter::getWatchEdge(const(void))
 0002:80198FB8       RailGraphNode::RailGraphNode((void))
 0002:80198FDC       JGeometry::TVec3<f>::epsilonEquals(const(JGeometry::TVec3<f> const &,float))
 0002:80199088       RailPart::init((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8019912C       RailPart::initForBezier((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8019918C       RailPart::calcPos(const(JGeometry::TVec3<f> *,float))
 0002:801991B0       RailPart::calcVelocity(const(JGeometry::TVec3<f> *,float))
 0002:801991D0       RailPart::getLength(const(float,float,int))
 0002:801991F8       RailPart::getTotalLength(const(void))
 0002:80199218       RailPart::getParam(const(float))
 0002:8019923C       RailPart::getNearestParam(const(JGeometry::TVec3<f> const &,float))
 0002:80199258       LinearRailPart::set((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801992B8       LinearRailPart::getNearestParam(const(JGeometry::TVec3<f> const &,float))
 0002:80199360       MultiSceneActor::~MultiSceneActor((void))
 0002:801993B8       ScenarioSelectStar::ScenarioSelectStar((EffectSystem *))
 0002:8019947C       ScenarioSelectStar::calcViewAndEntry((void))
 0002:801994D4       ScenarioSelectStar::appear((void))
 0002:801995DC       ScenarioSelectStar::tryPointing((void))
 0002:8019964C       ScenarioSelectStar::isAppearEnd(const(void))
 0002:80199698       ScenarioSelectStar::setup((long,int,JGeometry::TVec3<f> const &,long))
 0002:80199758       ScenarioSelectStar::control((void))
 0002:80199810       ScenarioSelectStar::tryEndPointing((void))
 0002:8019984C       ScenarioSelectStar::updatePos((void))
 0002:8019995C       ScenarioSelectStar::exeAppear((void))
 0002:80199A20       ScenarioSelectStar::exeNotPointing((void))
 0002:80199A6C       ScenarioSelectStar::exePointing((void))
 0002:80199B28       ScenarioSelectStar::exeEndPointing((void))
 0002:80199B98       ScenarioSelectStar::exeSelected((void))
 0002:80199C30       ScenarioSelectStar::exeSelectedMove((void))
 0002:80199D34       ScenarioSelectStar::exeNotSelected((void))
 0002:80199F74       SeaGull::SeaGull((SeaGullGroup *))
 0002:8019A034       SeaGull::init((JMapInfoIter const &))
 0002:8019A1E8       SeaGull::exeHoverFront((void))
 0002:8019A2B8       SeaGull::exeHoverLeft((void))
 0002:8019A32C       SeaGull::exeHoverRight((void))
 0002:8019A3A0       SeaGull::control((void))
 0002:8019A51C       SeaGull::updateHover((void))
 0002:8019A714       SeaGull::calcAndSetBaseMtx((void))
 0002:8019A7F8       SeaGullGroup::init((JMapInfoIter const &))
 0002:8019A9A4       SeaGullGroup::updatePosInfo(const(long *,bool))
 0002:8019AB34       Sky::Sky((char const *))
 0002:8019AB7C       Sky::init((JMapInfoIter const &))
 0002:8019ADB0       SpaceInner::calcAnim((void))
 0002:8019AE0C       Sky::control((void))
 0002:8019AE8C       Sky::appearSpaceInner((void))
 0002:8019AEE0       Sky::disappearSpaceInner((void))
 0002:8019AF28       ProjectionMapSky::ProjectionMapSky((char const *))
 0002:8019AFC8       LavaFloater::makeActorAppeared((void))
 0002:8019B004       ProjectionMapSky::initModel((char const *))
 0002:8019B0A0       NrvSky::HostTypeChange::execute(const(Spine *))
 0002:8019B0E4       NrvSoundEmitter::SoundEmitterNrvStandBy::execute(const(Spine *))
 0002:8019B268       SleepController::SleepController((JMapInfoIter const &,SwitchEventListener *))
 0002:8019B2B8       SleepController::initSync((void))
 0002:8019B31C       SleepController::update((void))
 0002:8019B3AC       SleepControllerHolder::SleepControllerHolder((void))
 0002:8019B400       SleepControllerHolder::initSync((void))
 0002:8019B468       SleepControllerHolder::add((NameObj *,JMapInfoIter const &,SwitchEventListener *))
 0002:8019B53C       SleepControlFunc::initSyncSleepController((void))
 0002:8019B568       SleepControlFunc::addSleepControl((AreaObj *,JMapInfoIter const &))
 0002:8019B654       SleepControlFunc::addSleepControl((LiveActor *,JMapInfoIter const &))
 0002:8019B7BC       AreaObj::awake((void))
 0002:8019B7C8       AreaObj::sleep((void))
 0002:8019B904       SpaceInner::SpaceInner((char const *))
 0002:8019B940       SpaceInner::init((JMapInfoIter const &))
 0002:8019BA94       SpaceInner::isAppeared(const(void))
 0002:8019BB84       NrvSpaceInner::HostTypeDisappear::execute(const(Spine *))
 0002:8019BBD4       SphereSelector::SphereSelector((void))
 0002:8019BC48       SphereSelector::init((JMapInfoIter const &))
 0002:8019BCC0       SphereSelector::appear((void))
 0002:8019BD18       SphereSelector::kill((void))
 0002:8019BD64       SphereSelector::registerPointingTarget((LiveActor *,HandlePointingPriority))
 0002:8019BE28       SphereSelector::validatePointing((void))
 0002:8019BE68       SphereSelector::invalidatePointing((void))
 0002:8019BEA8       SphereSelector::sendMsgToAllActor((ulong))
 0002:8019BF0C       SphereSelector::isMoveClickedPos(const(void))
 0002:8019BF7C       SphereSelector::playSelectedME((void))
 0002:8019C008       SphereSelector::playCanceledME((void))
 0002:8019C0A4       SphereSelector::exeSelectWait((void))
 0002:8019C2A4       SphereSelector::exeSelectCancel((void))
 0002:8019C308       SphereSelector::exeConfirmStart((void))
 0002:8019C390       SphereSelector::exeConfirmCancel((void))
 0002:8019C408       @unnamed@SphereSelector_cpp@::getHandleMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8019C4B8       SphereSelectorFunction::registerTarget((LiveActor *))
 0002:8019C500       SphereSelectorFunction::isPadButton((void))
 0002:8019C554       SphereSelectorFunction::getConfirmStartCancelFrame((void))
 0002:8019C55C       SphereSelectorFunction::selectStart((void))
 0002:8019C594       SphereSelectorFunction::confirmCancel((bool))
 0002:8019C5E0       SphereSelectorFunction::selectEnd((void))
 0002:8019C618       SphereSelectorFunction::isConfirmWait((void))
 0002:8019C724       SphereSelectorFunction::isMsgSelectStart((ulong))
 0002:8019C734       SphereSelectorFunction::isMsgSelectEnd((ulong))
 0002:8019C744       SphereSelectorFunction::isMsgConfirmStart((ulong))
 0002:8019C754       SphereSelectorFunction::isMsgConfirmCancel((ulong))
 0002:8019C764       SphereSelectorFunction::isMsgConfirmed((ulong))
 0002:8019C774       SphereSelectorFunction::isMsgTargetSelected((ulong))
 0002:8019C784       SphereSelectorFunction::trySyncAppearMsgSelectStart((LiveActor *,ulong))
 0002:8019C7E4       SphereSelectorFunction::trySyncKillMsgSelectStart((LiveActor *,ulong))
 0002:8019C844       SphereSelectorFunction::invalidatePointing((void))
 0002:8019C89C       SphereSelectorFunction::isValidPointing((void))
 0002:8019C8D0       SphereSelectorFunction::setHandle((SphereSelectorHandle *))
 0002:8019C908       SphereSelectorFunction::calcHandledTrans((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:8019C954       SphereSelectorFunction::calcHandledRotateMtx((JGeometry::TVec3<f> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8019C9AC       SphereSelectorFunction::getHandleTrans((void))
 0002:8019C9DC       SphereSelectorFunction::getHandleRotateSpeed((void))
 0002:8019CA0C       SphereSelectorFunction::isHandleHolding((void))
 0002:8019CA3C       SphereSelectorFunction::registerPointingTarget((LiveActor *,HandlePointingPriority))
 0002:8019CA88       SphereSelectorFunction::tryRegisterPointingTarget((LiveActor *,HandlePointingPriority))
 0002:8019CB08       SphereSelectorFunction::isPointingTarget((void))
 0002:8019CB3C       SphereSelectorFunction::isPointingTarget((LiveActor const *))
 0002:8019CB80       SphereSelectorFunction::getPointingTarget((void))
 0002:8019CBAC       SphereSelectorFunction::getSelectedTarget((void))
 0002:8019CBFC       SphereSelectorFunction::calcOffsetPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8019CDCC       NrvSphereSelector::SphereSelectorNrvConfirmed::execute(const(Spine *))
 0002:8019CE3C       NrvSphereSelector::SphereSelectorNrvSelectStart::execute(const(Spine *))
 0002:8019CE98       SphereSelectorHandle::SphereSelectorHandle((char const *))
 0002:8019CF58       SphereSelectorHandle::init((JMapInfoIter const &))
 0002:8019CFF8       SphereSelectorHandle::appear((void))
 0002:8019D100       SphereSelectorHandle::control((void))
 0002:8019D180       SphereSelectorHandle::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8019D344       SphereSelectorHandle::clearPointerVelocity((void))
 0002:8019D36C       SphereSelectorHandle::stackPointerVelocity((void))
 0002:8019D3E4       SphereSelectorHandle::getPointerVelocity((void))
 0002:8019D470       SphereSelectorHandle::resetRotateParam((void))
 0002:8019D488       SphereSelectorHandle::rotateAxisY((void))
 0002:8019D514       SphereSelectorHandle::rotateAxisX((void))
 0002:8019D644       SphereSelectorHandle::updateBaseMtx((void))
 0002:8019D7C0       SphereSelectorHandle::changeBgmRotateState((void))
 0002:8019D850       SphereSelectorHandle::playRotateSE((void))
 0002:8019D944       SphereSelectorHandle::setStateConfirmStartAtFirstStep((void))
 0002:8019D98C       SphereSelectorHandle::exeWait((void))
 0002:8019D9FC       SphereSelectorHandle::exeHold((void))
 0002:8019DB48       SphereSelectorHandle::exeSpin((void))
 0002:8019DBDC       SphereSelectorHandle::exeDemoRotate((void))
 0002:8019DC40       SphereSelectorHandle::exeDisappear((void))
 0002:8019DCB0       SphereSelectorHandle::exeGalaxyConfirmStart((void))
 0002:8019DD18       SphereSelectorHandle::exeGalaxyConfirmCancel((void))
 0002:8019DDC4       SphereSelectorHandle::exeIdleEndForFileSelect((void))
 0002:8019DFB0       NrvSphereSelectorHandle::SphereSelectorHandleNrvGalaxyConfirmWait::execute(const(Spine *))
 0002:8019E064       JGeometry::TVec2<f>::length(const(void))
 0002:8019E07C       BitFlag128::get(const(int))
 0002:8019E0B8       BitFlag128::set((int,bool))
 0002:8019E11C       ZoneSwitch::ZoneSwitch((void))
 0002:8019E18C       SwitchIdInfo::SwitchIdInfo((long,JMapInfoIter const &))
 0002:8019E204       SwitchIdInfo::getSwitchNo(const(void))
 0002:8019E220       GameEventFlagAccessor::getName(const(void))
 0002:8019E22C       StageSwitchContainer::createAndAddZone((SwitchIdInfo const &))
 0002:8019E2A4       StageSwitchContainer::getZoneSwitch((SwitchIdInfo const &))
 0002:8019E2C0       StageSwitchContainer::findZoneSwitchFromTable((SwitchIdInfo const &))
 0002:8019E304       StageSwitchCtrl::onSwitchA((void))
 0002:8019E314       StageSwitchCtrl::isOnSwitchA(const(void))
 0002:8019E31C       StageSwitchCtrl::isValidSwitchA(const(void))
 0002:8019E33C       StageSwitchCtrl::isOnSwitchB(const(void))
 0002:8019E344       StageSwitchCtrl::isValidSwitchB(const(void))
 0002:8019E354       StageSwitchCtrl::isOnSwitchAppear(const(void))
 0002:8019E35C       StageSwitchCtrl::isValidSwitchAppear(const(void))
 0002:8019E37C       StageSwitchCtrl::isValidSwitchDead(const(void))
 0002:8019E38C       StageSwitchCtrl::isOnAllSwitchAfterB(const(int))
 0002:8019E414       StageSwitchCtrl::isOnAnyOneSwitchAfterB(const(int))
 0002:8019E49C       StageSwitchFunction::createSwitchIdInfo((char const *,JMapInfoIter const &,bool))
 0002:8019E54C       StageSwitchFunction::onSwitchBySwitchIdInfo((SwitchIdInfo const &))
 0002:8019E5BC       StageSwitchFunction::offSwitchBySwitchIdInfo((SwitchIdInfo const &))
 0002:8019E62C       StageSwitchFunction::isOnSwitchBySwitchIdInfo((SwitchIdInfo const &))
 0002:8019E680       MR::createStageSwitchCtrl((NameObj *,JMapInfoIter const &))
 0002:8019E718       StageSwitchContainer::StageSwitchContainer((void))
 0002:8019E780       StageSwitchCtrl::StageSwitchCtrl((JMapInfoIter const &))
 0002:8019E820       SunshadeMapHolder::SunshadeMapHolder((void))
 0002:8019E878       MR::isInShadeFromTheSun((JGeometry::TVec3<f> const &,float))
 0002:8019E944       MR::createSunshadeMapHolder((void))
 0002:8019E9A4       SunshadeMapParts::SunshadeMapParts((char const *))
 0002:8019EA48       SunshadeMapParts::calcAnim((void))
 0002:8019EA88       @unnamed@NameObjFactory_cpp@::createNameObj<9StarPiece>(NameObj *(char const *))
 0002:8019EB20       SunshadeMapParts::init((JMapInfoIter const &))
 0002:8019EB70       SwitchSynchronizer::SwitchSynchronizer((char const *))
 0002:8019EBBC       SwitchSynchronizer::init((JMapInfoIter const &))
 0002:8019EC04       SwitchSynchronizer::movement((void))
 0002:8019ECE4       SwitchSynchronizer::~SwitchSynchronizer((void))
 0002:8019ED3C       SwitchWatcher::SwitchWatcher((StageSwitchCtrl const *))
 0002:8019EDA4       SwitchWatcher::movement((void))
 0002:8019EE44       SwitchWatcher::checkSwitch((SwitchEventListener *,ulong,bool))
 0002:8019EEDC       SwitchWatcher::isSameSwitch(const(StageSwitchCtrl const *))
 0002:8019EEF0       SwitchWatcher::addSwitchListener((SwitchEventListener *,ulong))
 0002:8019EF88       SwitchWatcherHolder::SwitchWatcherHolder((void))
 0002:8019EFEC       SwitchWatcherHolder::movement((void))
 0002:8019F080       SwitchWatcherHolder::joinSwitchEventListenerB((StageSwitchCtrl const *,SwitchEventListener *))
 0002:8019F08C       SwitchWatcherHolder::joinSwitchEventListenerAppear((StageSwitchCtrl const *,SwitchEventListener *))
 0002:8019F098       SwitchWatcherHolder::findSwitchWatcher((StageSwitchCtrl const *))
 0002:8019F110       SwitchWatcherHolder::joinSwitchEventListener((StageSwitchCtrl const *,ulong,SwitchEventListener *))
 0002:8019F198       SwitchWatcherHolder::addSwitchWatcher((SwitchWatcher *))
 0002:8019F1B4       MR::getSwitchWatcherHolder((void))
 0002:8019F1DC       MR::requestMovementOnSwitchWatcher((void))
 0002:8019F260       TimerSwitch::TimerSwitch((char const *))
 0002:8019F2A8       TimerSwitch::init((JMapInfoIter const &))
 0002:8019F320       TimerSwitch::control((void))
 0002:8019F3F8       WaterAreaHolder::WaterAreaHolder((void))
 0002:8019F55C       WaterAreaHolder::entryOceanBowl((OceanBowl *))
 0002:8019F57C       WaterAreaHolder::entryOceanRing((OceanRing *))
 0002:8019F5BC       WaterAreaHolder::entryWhirlPool((WhirlPool *))
 0002:8019F5DC       WaterAreaHolder::entryWhirlPoolAccelerator((WhirlPoolAccelerator *))
 0002:8019F5FC       WaterAreaHolder::movement((void))
 0002:8019F6DC       WaterAreaFunction::entryWhirlPoolAccelerator((WhirlPoolAccelerator *))
 0002:8019F830       WaterAreaFunction::createWaterAreaHolder((void))
 0002:8019F838       WaterAreaFunction::tryInOceanArea((JGeometry::TVec3<f> const &,WaterInfo *))
 0002:8019F9A8       WaterAreaFunction::tryInWhirlPoolAccelerator((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:8019FA54       WaterAreaFunction::isCameraInWaterForCameraUtil((void))
 0002:8019FAA4       WaterAreaFunction::getCameraWaterDepth((void))
 0002:8019FAE8       WaterAreaFunction::getCameraWaterInfo((void))
 0002:8019FB2C       WaterAreaFunction::pauseOffWaterArea((void))
 0002:8019FB7C       WaterAreaHolder::~WaterAreaHolder((void))
 0002:8019FBD4       WaterInfo::WaterInfo((void))
 0002:8019FC04       WaterInfo::isInWater(const(void))
 0002:8019FC44       WaterInfo::clear((void))
 0002:8019FCC4       WaterPlant::WaterPlant((char const *))
 0002:8019FD30       WaterPlant::init((JMapInfoIter const &))
 0002:8019FE18       WaterPlant::initPlantAfterPlacement((void))
 0002:8019FE1C       WaterPlant::movement((void))
 0002:801A022C       WaterPlant::draw(const(void))
 0002:801A027C       WaterPlant::initPlant((void))
 0002:801A02E4       nullsub_124
 0002:801A02E8       WaterPlant::initPlantAfterPlacement((void))
 0002:801A05C0       WaterPlant::drawDirect(const(void))
 0002:801A0878       WaterPlantDrawInit::WaterPlantDrawInit((void))
 0002:801A0A2C       WaterPlantDrawInit::movement((void))
 0002:801A0B00       WaterPlantDrawInit::loadTex((int))
 0002:801A0B48       WaterPlantDrawInit::updateSwingPos((void))
 0002:801A0BE0       WaterPlantDrawInit::initDraw(const(void))
 0002:801A0E10       __sinit__WaterPlant_cpp
 0002:801A0F88       WaterPoint::WaterPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:801A1018       WaterPoint::initAfterPlacement((void))
 0002:801A1118       WaterPoint::updatePos((float,float,float,float,float))
 0002:801A11A8       WaterPoint::calcHeight(const(float,float,float,float,float,float))
 0002:801A1274       JGeometry::TMatrix34<Q29JGeometry13SMatrix34C<f>>::scale((float))
 0002:801A1308       WaterRoadModelInfo::WaterRoadModelInfo((WaterRoad *,bool))
 0002:801A136C       WaterRoadModelInfo::initPoints((WaterRoad *))
 0002:801A1898       WaterRoadModelInfo::initDisplayList((void))
 0002:801A1974       WaterRoadModelInfo::sendGD(const(void))
 0002:801A1BB8       WaterRoadModelInfo::drawGD(const(void))
 0002:801A1C08       WaterRoadModelInfo::drawDirect(const(WaterRoad const *))
 0002:801A2228       WaterRoadModelInfo::calcDemoDrawPointNum(const(WaterRoad const *))
 0002:801A229C       WaterRoadModelInfo::loadMaterialHigh(const(WaterRoad const *))
 0002:801A28C0       WaterRoadModelInfo::loadMaterialLow(const(void))
 0002:801A2D58       WaterRoad::WaterRoad((char const *))
 0002:801A2E34       WaterRoad::init((JMapInfoIter const &))
 0002:801A3174       WaterRoad::appear((void))
 0002:801A3204       WaterRoad::exeRideStart((void))
 0002:801A32AC       WaterRoad::exeRideWait((void))
 0002:801A331C       WaterRoad::exeRideSpin((void))
 0002:801A33E0       WaterRoad::exeDemoStart((void))
 0002:801A3458       WaterRoad::exeDemoGrowUp((void))
 0002:801A3538       WaterRoad::exeDisappear((void))
 0002:801A35A8       WaterRoad::movement((void))
 0002:801A374C       WaterRoad::updateHitSensor((HitSensor *))
 0002:801A37D4       WaterRoad::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801A38DC       WaterRoad::updateRide((void))
 0002:801A39E4       WaterRoad::updateDemo((float))
 0002:801A3AA8       WaterRoad::draw(const(void))
 0002:801A3DE4       NrvWaterRoad::WaterRoadNrvDemoWaitEnd::execute(const(Spine *))
 0002:801A3FF0       WhirlPoolPoint::WhirlPoolPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,uchar))
 0002:801A4108       WhirlPoolAccelerator::WhirlPoolAccelerator((char const *))
 0002:801A41A0       WhirlPoolAccelerator::init((JMapInfoIter const &))
 0002:801A42D0       WhirlPoolAccelerator::calcInfo(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:801A43C0       WhirlPoolAccelerator::movement((void))
 0002:801A44A8       WhirlPoolAccelerator::initPoints((void))
 0002:801A47A8       WhirlPoolAccelerator::draw(const(void))
 0002:801A48D4       WhirlPoolAccelerator::drawPlane(const(float,float,float,float,float,float))
 0002:801A4BA0       WhirlPoolAccelerator::loadMaterial(const(void))
 0002:801A4E6C       AirBubble::AirBubble((char const *))
 0002:801A4EC8       AirBubble::init((JMapInfoIter const &))
 0002:801A4FD8       AirBubble::initAfterPlacement((void))
 0002:801A5020       MovieStarter::kill((void))
 0002:801A5068       AirBubble::appearMove((JGeometry::TVec3<f> const &,long))
 0002:801A50F8       AirBubble::exeWait((void))
 0002:801A5274       AirBubble::exeMove((void))
 0002:801A543C       AirBubble::exeBreak((void))
 0002:801A54C0       AirBubble::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801A5548       AirBubble::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801A57AC       NrvAirBubble::AirBubbleNrvKillWait::execute(const(Spine *))
 0002:801A5870       AirBubbleGenerator::AirBubbleGenerator((char const *))
 0002:801A58C4       AirBubbleGenerator::init((JMapInfoIter const &))
 0002:801A59F0       AirBubbleGenerator::exeWait((void))
 0002:801A5A4C       AirBubbleGenerator::exeGenerate((void))
 0002:801A5BA0       AirBubbleHolder::AirBubbleHolder((char const *))
 0002:801A5C3C       AirBubbleHolder::appearAirBubble((JGeometry::TVec3<f> const &,long))
 0002:801A5CA4       MR::createAirBubbleHolder((void))
 0002:801A5CAC       MR::appearAirBubble((JGeometry::TVec3<f> const &,long))
 0002:801A5D50       AirBubbleHolder::init((JMapInfoIter const &))
 0002:801A5DDC       AnmModelObj::AnmModelObj((char const *))
 0002:801A5E28       AnmModelObj::init((JMapInfoIter const &))
 0002:801A5EEC       AnmModelObj::exeMove((void))
 0002:801A614C       AnmModelObj::exeDone((void))
 0002:801A6274       AnmModelSwitchMove::init((JMapInfoIter const &))
 0002:801A62D8       AnmModelSwitchMove::isOnStartAnmTrigger(const(void))
 0002:801A63C8       AnmModelBindMove::control((void))
 0002:801A6438       AnmModelGroundOnMove::isOnStartAnmTrigger(const(void))
 0002:801A6554       AnmModelBindMove::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801A6564       AnmModelBindMove::isOnStartAnmTrigger(const(void))
 0002:801A65C8       AnmModelSwitchMoveEventCamera::AnmModelSwitchMoveEventCamera((char const *))
 0002:801A6668       AnmModelSwitchMoveEventCamera::init((JMapInfoIter const &))
 0002:801A66E8       AnmModelSwitchMoveEventCamera::isDone(const(void))
 0002:801A6748       AnmModelSwitchMoveEventCamera::startInner((void))
 0002:801A6760       AnmModelSwitchMoveEventCamera::stopInner((void))
 0002:801A68F4       NrvAnmModelObj::HostTypeWait::execute(const(Spine *))
 0002:801A6948       nullsub_90
 0002:801A6960       nullsub_84
 0002:801A6964       nullsub_88
 0002:801A6968       nullsub_87
 0002:801A696C       nullsub_86
 0002:801A6970       nullsub_85
 0002:801A698C       ArrowSwitch::ArrowSwitch((char const *))
 0002:801A69F8       ArrowSwitch::init((JMapInfoIter const &))
 0002:801A6CAC       ArrowSwitch::calcAndSetBaseMtx((void))
 0002:801A6E78       ArrowSwitch::requestPunch((HitSensor *,HitSensor *))
 0002:801A6FE8       ArrowSwitch::listenOnSwitch((void))
 0002:801A70CC       ArrowSwitch::listenOffSwitch((void))
 0002:801A7178       ArrowSwitch::exeLock((void))
 0002:801A71E8       ArrowSwitch::exeRotate((void))
 0002:801A7450       ArrowSwitch::isPlusLimit(const(void))
 0002:801A74CC       ArrowSwitch::isMinusLimit(const(void))
 0002:801A7548       ArrowSwitch::getOneStep(const(void))
 0002:801A7734       ArrowSwitchTarget::ArrowSwitchTarget((char const *))
 0002:801A7788       ArrowSwitchTarget::init((JMapInfoIter const &))
 0002:801A7804       MR::registerArrowSwitchTarget((ArrowSwitchTarget *))
 0002:801A7808       ArrowSwitchTarget::offTarget((void))
 0002:801A78B8       ArrowSwitchMulti::ArrowSwitchMulti((char const *))
 0002:801A7940       ArrowSwitchMulti::registerTarget((ArrowSwitchTarget *))
 0002:801A7954       ArrowSwitchMulti::init((JMapInfoIter const &))
 0002:801A7AEC       ArrowSwitchMulti::calcAndSetBaseMtx((void))
 0002:801A7C60       ArrowSwitchMulti::requestPunch((HitSensor *,HitSensor *))
 0002:801A7D38       ArrowSwitchMulti::exeWait((void))
 0002:801A7DAC       ArrowSwitchMulti::exeRotate((void))
 0002:801A805C       ArrowSwitchMultiHolder::ArrowSwitchMultiHolder((void))
 0002:801A8100       ArrowSwitchMultiHolder::findSwitch((JMapIdInfo const *))
 0002:801A8194       MR::createArrowSwitchMultiHolder((void))
 0002:801A819C       MR::registerArrowSwitchMulti((ArrowSwitchMulti *))
 0002:801A81D8       MR::registerArrowSwitchTarget((ArrowSwitchTarget *))
 0002:801A8274       AssemblyBlock::AssemblyBlock((char const *))
 0002:801A8300       AssemblyBlock::init((JMapInfoIter const &))
 0002:801A862C       AssemblyBlock::exeWait((void))
 0002:801A8788       AssemblyBlock::exeAssemble((void))
 0002:801A8894       AssemblyBlock::exeAssembleWait((void))
 0002:801A8934       AssemblyBlock::exeReturn((void))
 0002:801A8A14       AssemblyBlock::exeTimer((void))
 0002:801A8AF0       AssemblyBlock::tryStartAssemble((void))
 0002:801A8B58       AssemblyBlock::tryStartReturn((void))
 0002:801A8D3C       AstroCore::init((JMapInfoIter const &))
 0002:801A8E2C       AstroCore::exeGrow((void))
 0002:801A8ED4       AstroCore::startAnimGrow((void))
 0002:801A8F80       AstroCore::setStateBeforeGrow((void))
 0002:801A9208       AstroCountDownPlate::AstroCountDownPlate((char const *))
 0002:801A9270       AstroCountDownPlate::init((JMapInfoIter const &))
 0002:801A93E8       AstroCountDownPlate::exeWait((void))
 0002:801A948C       AstroCountDownPlate::exeRevival((void))
 0002:801A9548       AstroCountDownPlate::exeCountToZero((void))
 0002:801A9618       AstroCountDownPlate::initTextureAtNumLeftStar((void))
 0002:801A9674       AstroCountDownPlate::setNumLeftStar((void))
 0002:801A96F8       AstroCountDownPlate::selectNrvWait((void))
 0002:801A975C       AstroCountDownPlate::setupStateWait((void))
 0002:801A9A10       AstroDome::init((JMapInfoIter const &))
 0002:801A9BC8       AstroDome::exeAppear((void))
 0002:801A9C38       AstroDome::control((void))
 0002:801A9CA8       AstroDome::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801A9E48       AstroDomeAsteroid::init((JMapInfoIter const &))
 0002:801A9EDC       AstroDomeAsteroid::appear((void))
 0002:801A9F10       AstroDomeAsteroid::control((void))
 0002:801A9F70       AstroDomeAsteroid::calcAndSetBaseMtx((void))
 0002:801A9FD0       SphereSelectorFunction::trySyncAppearMsgSelectStart((LiveActor *,ulong))
 0002:801AA048       NrvAstroDomeAsteroid::AstroDomeAsteroidNrvWait::execute(const(Spine *))
 0002:801AA0A0       AstroDomeBlueStar::CaptureActor::CaptureActor((void))
 0002:801AA0EC       AstroDomeBlueStar::CaptureActor::init((JMapInfoIter const &))
 0002:801AA190       TurtlePartsModel::appear((void))
 0002:801AA1DC       AstroDomeBlueStar::CaptureActor::updateTransTraction((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:801AA364       AstroDomeBlueStar::AstroDomeBlueStar((char const *))
 0002:801AA3D8       AstroDomeBlueStar::init((JMapInfoIter const &))
 0002:801AA6D0       AstroDomeBlueStar::kill((void))
 0002:801AA710       BeamGoRoundBeam::draw(const(void))
 0002:801AA75C       AstroDomeBlueStar::forceKill((void))
 0002:801AA7A4       AstroDomeBlueStar::control((void))
 0002:801AA8A4       AstroDomeBlueStar::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801AA9B4       AstroDomeBlueStar::tryStartBind((LiveActor const *))
 0002:801AAAE0       AstroDomeBlueStar::isValidBindStart(const(void))
 0002:801AAB48       AstroDomeBlueStar::calcZoomInPos(const(JGeometry::TVec3<f> *))
 0002:801AABF4       AstroDomeBlueStar::exeAppear((void))
 0002:801AAC84       AstroDomeBlueStar::exeWait((void))
 0002:801AADB4       AstroDomeBlueStar::exePointing((void))
 0002:801AAE9C       AstroDomeBlueStar::exeTryStartBind((void))
 0002:801AB030       AstroDomeBlueStar::exeBindTraction((void))
 0002:801AB1B4       AstroDomeBlueStar::exeBindHold((void))
 0002:801AB2AC       AstroDomeBlueStar::exeBindEnd((void))
 0002:801AB32C       AstroDomeBlueStar::exeGalaxySelect((void))
 0002:801AB370       AstroDomeBlueStar::exeGalaxyConfirmStart((void))
 0002:801AB3DC       AstroDomeBlueStar::exeGalaxyConfirmCancel((void))
 0002:801AB570       NrvAstroDomeBlueStar::AstroDomeBlueStarNrvGalaxyConfirm::execute(const(Spine *))
 0002:801AB788       AstroDomeCameraController::AstroDomeCameraController((char const *))
 0002:801AB808       AstroDomeCameraController::init((JMapInfoIter const &))
 0002:801AB874       AstroDomeCameraController::appear((void))
 0002:801AB91C       AstroDomeCameraController::kill((void))
 0002:801AB958       AstroDomeCameraController::control((void))
 0002:801AB9DC       AstroDomeCameraController::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801ABA70       AstroDomeCameraController::calcZoomOutPos(const(JGeometry::TVec3<f> *))
 0002:801ABB14       AstroDomeCameraController::calcZoomInPos(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801ABBA8       AstroDomeCameraController::calcZoomInTarget(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801ABC04       AstroDomeCameraController::calcZoomInUp(const(JGeometry::TVec3<f> *))
 0002:801ABC5C       AstroDomeCameraController::exeGalaxySelectStart((void))
 0002:801ABD10       AstroDomeCameraController::exeGalaxySelect((void))
 0002:801ABD88       AstroDomeCameraController::exeGalaxyConfirmStart((void))
 0002:801ABE70       AstroDomeCameraController::exeGalaxyConfirm((void))
 0002:801ABF20       AstroDomeCameraController::exeGalaxyConfirmCancel((void))
 0002:801AC104       AstroDomeCameraController::Position::Position((void))
 0002:801AC144       AstroDomeCameraController::Position::reset((JGeometry::TVec3<f> const &))
 0002:801AC1E0       AstroDomeComet::init((JMapInfoIter const &))
 0002:801AC398       AstroDomeComet::appear((void))
 0002:801AC488       AstroDomeComet::kill((void))
 0002:801AC534       AstroDomeComet::calcAndSetBaseMtx((void))
 0002:801AC55C       AstroDomeComet::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801AC600       AstroDomeComet::initSubModel((void))
 0002:801AC658       AstroDomeComet::tryPointing((void))
 0002:801AC6DC       AstroDomeComet::exeSelect((void))
 0002:801AC728       AstroDomeComet::exeConfirm((void))
 0002:801AC870       AstroDomeDemoAstroGalaxy::init((JMapInfoIter const &))
 0002:801AC968       AstroDomeGalaxySelector::AstroDomeGalaxySelector((char const *))
 0002:801AC9BC       AstroDomeGalaxySelector::init((JMapInfoIter const &))
 0002:801ACB00       AstroDomeGalaxySelector::kill((void))
 0002:801ACB54       AstroDomeGalaxySelector::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801ACC10       AstroDomeGalaxySelector::showGalaxyInfo((MiniatureGalaxy const *))
 0002:801ACCAC       AstroDomeGalaxySelector::tryStartLectureDemo((Nerve const *))
 0002:801ACD60       AstroDomeGalaxySelector::exeGalaxySelectStart((void))
 0002:801ACDB8       AstroDomeGalaxySelector::exeGalaxySelect((void))
 0002:801ACF14       AstroDomeGalaxySelector::exeGalaxySelectCancel((void))
 0002:801ACF74       AstroDomeGalaxySelector::exeGalaxyConfirmStart((void))
 0002:801ACFEC       AstroDomeGalaxySelector::exeGalaxyConfirm((void))
 0002:801AD098       AstroDomeGalaxySelector::exeDemoJumpOut((void))
 0002:801AD150       AstroDomeGalaxySelector::exeDemoDomeLecture((void))
 0002:801AD1A8       AstroDomeGalaxySelector::exeGalaxyMoveLecture((void))
 0002:801AD3E8       AstroDomeOrbit::AstroDomeOrbit((void))
 0002:801AD43C       AstroDomeOrbit::init((JMapInfoIter const &))
 0002:801AD4D0       AstroDomeOrbit::drawBloom(const(void))
 0002:801AD5F0       AstroDomeOrbit::setup((long))
 0002:801AD698       AstroDomeOrbit::moveCoord((void))
 0002:801AD6D4       AstroDomeOrbit::calcGalaxyPos(const(JGeometry::TVec3<f> *))
 0002:801AD7BC       AstroDomeOrbit::initDraw(const(Color8 const &))
 0002:801AD91C       AstroDomeOrbit::drawCelling(const(float,bool,float))
 0002:801ADB0C       AstroDomeOrbit::drawSide(const(float,bool,float))
 0002:801ADCF4       AstroDomeOrbit::calcRepeatedRotateCoord(const(float))
 0002:801ADD38       __sinit(char ()[stroDomeOrbit],**)
 0002:801ADE8C       AstroDomeSky::AstroDomeSky((char const *))
 0002:801ADEEC       AstroDomeSky::init((JMapInfoIter const &))
 0002:801AE010       AstroDomeSky::draw(const(void))
 0002:801AE018       AstroDomeSky::calcAndSetBaseMtx((void))
 0002:801AE0C8       AstroDomeSky::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801AE148       AstroDomeSky::tryRotateAppearance((void))
 0002:801AE24C       AstroDomeSky::exeReturnDemoWait((void))
 0002:801AE2FC       AstroDomeSky::exeAppear((void))
 0002:801AE414       AstroDomeSky::exeWait((void))
 0002:801AE47C       AstroDomeSky::exeRotateAppear((void))
 0002:801AE4F0       AstroDomeSky::exeRotateDisappear((void))
 0002:801AE588       AstroDomeSky::exeDisappear((void))
 0002:801AE8D8       AstroMapBoard::init((JMapInfoIter const &))
 0002:801AE9C8       MR::connectToSceneIndirectMapObj((LiveActor *))
 0002:801AE9CC       AstroMapBoard::initAfterPlacement((void))
 0002:801AEA88       AstroMapObj::AstroMapObj((char const *))
 0002:801AEAE4       AstroMapObj::init((JMapInfoIter const &))
 0002:801AEE10       AstroMapObj::exeWait((void))
 0002:801AEF24       AstroMapObj::exeRevival((void))
 0002:801AF0A8       AstroMapObj::exeOpen((void))
 0002:801AF14C       AstroMapObj::control((void))
 0002:801AF1EC       AstroMapObj::setStateDead((void))
 0002:801AF25C       AstroMapObj::setStateAlive((void))
 0002:801AF2D0       AstroMapObj::setStateDoorOpenOrClose((void))
 0002:801AF3D4       AstroMapObj::selectNrvWait((void))
 0002:801AF42C       AstroMapObj::startDemo((void))
 0002:801AF4A8       AstroMapObj::tryStartAllAnimAndEffect((char const *))
 0002:801AF540       AstroMapObj::isEndRevival(const(void))
 0002:801AF5A8       AstroMapObj::isPlayMachineSE(const(void))
 0002:801AF624       TypicalDoor::TypicalDoor((char const *))
 0002:801AF720       AstroSimpleObj::init((JMapInfoIter const &))
 0002:801AF778       AstroSimpleObj::control((void))
 0002:801AFA1C       @unnamed@AstroMapObjFunction_cpp@::getNumGrandStarForRevival((char const *,long))
 0002:801AFB34       MR::isKinopioExplorerTalkGetGrandStar3((void))
 0002:801AFBC0       MR::isKinopioExplorerTalkGetGrandStar5((void))
 0002:801AFC98       @unnamed@AstroMapObjFunction_cpp@::getNumGrandStarForOpen((char const *,long))
 0002:801AFCAC       AstroMapObjFunction::makeArchiveListFromArg0((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:801AFD54       AstroMapObjFunction::makeArchiveListAstroNamePlate((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:801AFD94       AstroMapObjFunction::isAlreadyRevival((char const *,long))
 0002:801AFE28       AstroMapObjFunction::isEnableRevival((char const *,long))
 0002:801AFE9C       AstroMapObjFunction::isAlreadyOpen((char const *,long))
 0002:801AFF10       AstroMapObjFunction::isEnableOpen((char const *,long))
 0002:801AFF68       AstroMapObjFunction::getDomeIdFromArg0((JMapInfoIter const &))
 0002:801AFF98       AstroMapObjFunction::getModelName((char const *,long))
 0002:801B005C       AstroMapObjFunction::createAstroNamePlateParser((void))
 0002:801B00A4       AstroMapObjFunction::trySetAndShowNamePlate((GalaxyNamePlate *,JMapInfo const *,JGeometry::TVec3<f> const &,char const *,long,bool))
 0002:801B0318       AstroMapObjFunction::tryRegisterMultiDemoAndFunction((char const *,LiveActor *,JMapInfoIter const &,MR::FunctorBase const &))
 0002:801B0424       AstroMapObjFunction::initilizePeculiar((char const *,LiveActor *,JMapInfoIter const &))
 0002:801B04B0       AstroOverlookObj::AstroOverlookObj((char const *))
 0002:801B0518       AstroOverlookObj::control((void))
 0002:801B062C       BallOpener::BallOpener((char const *))
 0002:801B0700       BallOpener::init((JMapInfoIter const &))
 0002:801B0814       BallOpener::initAfterPlacement((void))
 0002:801B085C       BallOpener::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B0950       BallOpener::exeWait((void))
 0002:801B09AC       BallOpener::exeSetCenter((void))
 0002:801B0A7C       BallOpener::exeOpen((void))
 0002:801B0B68       BallOpener::bindHole((void))
 0002:801B0ED8       BallRail::BallRail((char const *))
 0002:801B0F3C       BallRail::init((JMapInfoIter const &))
 0002:801B105C       BallRail::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B1138       BallRail::initRailPoints((void))
 0002:801B1330       BallRail::exeWait((void))
 0002:801B1388       BallRail::exeSetUp((void))
 0002:801B14D4       BallRail::exeRun((void))
 0002:801B168C       BallRailPoint::BallRailPoint((void))
 0002:801B17DC       NrvBallRail::BallRailNrvNoBind::execute(const(Spine *))
 0002:801B1884       Banekiti::init((JMapInfoIter const &))
 0002:801B1A68       TicoDomeLecture::exeWait((void))
 0002:801B1ACC       Banekiti::exeRepel((void))
 0002:801B1B58       Banekiti::exeDPDSwoon((void))
 0002:801B1BA8       Banekiti::endDPDSwoon((void))
 0002:801B1BC8       Shellfish::calcAndSetBaseMtx((void))
 0002:801B1C24       Banekiti::control((void))
 0002:801B1CD0       Banekiti::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801B1D1C       Banekiti::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B1EC0       BattleShipElevator::init((JMapInfoIter const &))
 0002:801B1F5C       BattleShipElevator::exeMove((void))
 0002:801B2044       BattleShipElevator::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B21A8       BeamGoRoundBeam::BeamGoRoundBeam((float *[4]))
 0002:801B2208       BeamGoRoundBeam::init((JMapInfoIter const &))
 0002:801B234C       BeamGoRoundBeam::calcAndSetBaseMtx((void))
 0002:801B23AC       FountainBig::updateHitSensor((HitSensor *))
 0002:801B2444       FireBar::attackSensor((HitSensor *,HitSensor *))
 0002:801B24A4       BeamGoRoundPlanet::BeamGoRoundPlanet((char const *))
 0002:801B24F0       BeamGoRoundPlanet::init((JMapInfoIter const &))
 0002:801B2618       BeamGoRoundPlanet::exeWait((void))
 0002:801B266C       MR::connectToScenePlanet((LiveActor *))
 0002:801B2670       BeamGoRoundPlanet::initBeam((void))
 0002:801B27F0       BeeFlowerHover::BeeFlowerHover((char const *))
 0002:801B285C       BeeFlowerHover::init((JMapInfoIter const &))
 0002:801B2ACC       SurfRay::exeTurnToWait((void))
 0002:801B2B48       BeeFlowerHover::exeSoftTouchWait((void))
 0002:801B2BD0       BeeFlowerHover::exeHardTouch((void))
 0002:801B2C84       BeeFlowerHover::exeRecover((void))
 0002:801B2D50       BeeFlowerHover::control((void))
 0002:801B2F04       BeeFlowerHover::calcAndSetBaseMtx((void))
 0002:801B2F8C       BeeFlowerHover::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B3178       BenefitItemLifeUp::BenefitItemLifeUp((char const *))
 0002:801B31D0       BenefitItemInvincible::exeCatch((void))
 0002:801B3230       BenefitItemInvincible::init((JMapInfoIter const &))
 0002:801B32BC       BenefitItemInvincible::initModelAndEfx((void))
 0002:801B336C       BenefitItemInvincible::appearThrowUp((void))
 0002:801B343C       BenefitItemInvincible::initEscape((void))
 0002:801B34EC       BenefitItemInvincible::doEscape((void))
 0002:801B36C8       BenefitItemInvincible::stopEfx((char const *))
 0002:801B38B0       BenefitItemLifeUp::exeCatch((void))
 0002:801B3910       BenefitItemLifeUp::initModelAndEfx((void))
 0002:801B39AC       BenefitItemLifeUp::stopEfx((char const *))
 0002:801B3A44       BenefitItemObj::init((JMapInfoIter const &))
 0002:801B3AEC       ShadowClipActor::endClipped((void))
 0002:801B3B3C       ShadowClipActor::control((void))
 0002:801B3B84       BenefitItemObj::BenefitItemObj((char const *,char const *))
 0002:801B3C28       BenefitItemObj::initModelAndEfx((void))
 0002:801B3CC8       BenefitItemObj::init((JMapInfoIter const &))
 0002:801B4348       BenefitItemObj::initAfterPlacement((void))
 0002:801B435C       BenefitItemObj::makeActorAppeared((void))
 0002:801B43A4       BenefitItemObj::appear((void))
 0002:801B44E4       BenefitItemObj::appearGround((void))
 0002:801B453C       BenefitItemObj::appearThrowUp((void))
 0002:801B4630       BenefitItemObj::shoot((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:801B4694       LensFlareModel::control((void))
 0002:801B46A4       BenefitItemObj::control((void))
 0002:801B485C       BenefitItemObj::exeWait((void))
 0002:801B48C8       BenefitItemObj::doRotateY((void))
 0002:801B4944       BenefitItemObj::exeShoot((void))
 0002:801B4B10       BenefitItemObj::exeCatch((void))
 0002:801B4BAC       BenefitItemObj::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801B4D14       BenefitItemObj::exeAppearGround((void))
 0002:801B4DEC       BenefitItemObj::exePreEscape((void))
 0002:801B4E2C       BenefitItemObj::initEscape((void))
 0002:801B4EB8       BenefitItemObj::doEscape((void))
 0002:801B5230       BenefitItemObj::exeEscape((void))
 0002:801B5454       BenefitItemObj::calcAndSetBaseMtxInMovement((void))
 0002:801B5660       BenefitItemObj::setFollowMtx((float *[4]))
 0002:801B567C       MR::emitEffect((LiveActor *,char const *))
 0002:801B5680       MR::deleteEffect((LiveActor *,char const *))
 0002:801B5684       MR::preScaleMtx((float *[4],JGeometry::TVec3<f> const &))
 0002:801B5788       __sinit__BenefitItemObj_cpp
 0002:801B57E4       BigBubbleDrawer::BigBubbleDrawer((void))
 0002:801B58A4       BigBubbleDrawer::setUpMaterial(const(void))
 0002:801B58A8       BigBubbleDrawer::setUpVertexFormat(const(void))
 0002:801B5934       BigBubbleDrawer::setUpTexture(const(void))
 0002:801B5A34       BigBubbleDrawer::setUpTevStage(const(void))
 0002:801B5C04       BigBubbleDrawer::setUpPixelFormat(const(void))
 0002:801B5C8C       BigBubbleDrawer::setUpMaterial(const(void))
 0002:801B5D44       __sinit__BigBubbleDrawer_cpp
 0002:801B5D9C       BigBubbleGenerator::BigBubbleGenerator((char const *))
 0002:801B5E04       BigBubbleGenerator::init((JMapInfoIter const &))
 0002:801B5EBC       BigBubbleGenerator::initFromJMapParam((JMapInfoIter const &))
 0002:801B5FD8       BigBubbleGenerator::initAfterPlacement((void))
 0002:801B5FF4       BigBubbleGenerator::control((void))
 0002:801B6050       BigBubbleGenerator::offActive((void))
 0002:801B60E8       BigBubbleGenerator::tryActive((void))
 0002:801B6150       BigBubbleGenerator::tryNonActive((void))
 0002:801B61BC       BigBubbleGenerator::exeActive((void))
 0002:801B6304       MR::createBigBubbleGenerator((char const *))
 0002:801B634C       MR::createBigObstructBubbleGenerator((char const *))
 0002:801B6524       BigBubbleHolder::BigBubbleHolder((char const *))
 0002:801B6608       BigBubbleHolder::movement((void))
 0002:801B6674       BigBubbleHolder::draw(const(void))
 0002:801B66DC       BigBubbleHolder::addMoveLimitter((BigBubbleMoveLimitter *))
 0002:801B672C       BigBubbleHolder::generateBigBubble((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,bool,long,long,long))
 0002:801B6800       BigBubbleHolder::getMoveLimitter(const(long))
 0002:801B6840       BigBubbleHolder::sortDrawOrder((void))
 0002:801B695C       MR::setUpBigBubbleDraw((void))
 0002:801B699C       MR::createBigBubbleHolder((void))
 0002:801B69A4       MR::generateBigBubble((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,bool,long,long,long))
 0002:801B6A28       MR::limitBigBubblePosition((JGeometry::TVec3<f> *,float,long))
 0002:801B6A88       MR::addBigBubbleMoveLimitter((BigBubbleMoveLimitter *))
 0002:801B6AC4       MR::isPlayerBindedBigBubble((void))
 0002:801B6B60       BigBubbleHolder::init((JMapInfoIter const &))
 0002:801B6BD0       BigBubbleMoveLimitter::BigBubbleMoveLimitter((char const *,long))
 0002:801B6CA0       BigBubbleMoveLimitter::init((JMapInfoIter const &))
 0002:801B6DAC       BigBubbleMoveLimitter::limitPosition(const(JGeometry::TVec3<f> *,float))
 0002:801B702C       BigBubbleMoveLimitter::limitVelocity(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:801B70C8       MR::createBigBubbleMoveLimitterCylinder((char const *))
 0002:801B710C       MR::createBigBubbleMoveLimitterPlane((char const *))
 0002:801B71A8       BigFan::BigFan((char const *))
 0002:801B721C       BigFan::init((JMapInfoIter const &))
 0002:801B73F0       BigFan::initWindModel((void))
 0002:801B7480       BigFan::calcWindInfo((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801B7670       BigFan::exeStart((void))
 0002:801B7734       BigFan::exeWait((void))
 0002:801B7A2C       BigFanHolder::calcWindInfo((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float *))
 0002:801B7B74       BigFanFunction::createBigFanHolder((void))
 0002:801B7B7C       BigFanFunction::calcWindInfo((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float *))
 0002:801B7BFC       BigFanFunction::registerBigFan((BigFan *))
 0002:801B7C90       BlackHole::BlackHole((char const *))
 0002:801B7D14       BlackHole::init((JMapInfoIter const &))
 0002:801B7ED0       BlackHole::makeActorAppeared((void))
 0002:801B7F48       BlackHole::kill((void))
 0002:801B7F88       BlackHole::tryStartDemoCamera((void))
 0002:801B7FC4       BlackHole::calcAndSetBaseMtx((void))
 0002:801B80E4       BlackHole::attackSensor((HitSensor *,HitSensor *))
 0002:801B8180       BlackHole::initMapToolInfo((JMapInfoIter const &))
 0002:801B82A4       BlackHole::initModel((void))
 0002:801B8334       BlackHole::initCubeBox((void))
 0002:801B8424       BlackHole::isInCubeBox(const(JGeometry::TVec3<f> const &))
 0002:801B84C4       BlackHole::updateModelScale((float,float))
 0002:801B851C       BlackHole::exeWait((void))
 0002:801B85E4       BlackHole::exeDisappear((void))
 0002:801B8794       NrvGreenCaterpillarBig::GreenCaterpillarBigNrvHide::execute(const(Spine *))
 0002:801B87B8       BlueChip::BlueChip((char const *))
 0002:801B88B4       BlueStarCupsulePlanet::BlueStarCupsulePlanet((char const *))
 0002:801B8910       BlueStarCupsulePlanet::init((JMapInfoIter const &))
 0002:801B8C94       BlueStarCupsulePlanet::control((void))
 0002:801B8D30       BlueStarCupsulePlanet::updatePose((void))
 0002:801B8E68       BlueStarCupsulePlanet::releasedTarget((void))
 0002:801B8EDC       BlueStarCupsulePlanet::exeWait((void))
 0002:801B8F44       BlueStarCupsulePlanet::exePointable((void))
 0002:801B8FF8       BlueStarCupsulePlanet::exeHitPointer((void))
 0002:801B9120       BlueStarCupsulePlanet::exeActive((void))
 0002:801B91D8       BlueStarCupsulePlanet::calcAndSetBaseMtx((void))
 0002:801B9280       BlueStarCupsulePlanet::isPointable(const(void))
 0002:801B9370       BlueStarCupsulePlanet::emitNerveEffect((void))
 0002:801B949C       BlueStarCupsulePlanet::activateMapPartsFunction((void))
 0002:801B94C8       BlueStarCupsulePlanet::deactivateMapPartsFunction((void))
 0002:801B970C       BreakableCage::BreakableCage((char const *))
 0002:801B9774       BreakableCage::init((JMapInfoIter const &))
 0002:801B9AC4       BreakableCage::appear((void))
 0002:801B9B78       BreakableCage::kill((void))
 0002:801B9BE4       BreakableCage::calcAndSetBaseMtx((void))
 0002:801B9DA4       BreakableCage::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801B9E08       BreakableCage::initMapToolInfo((JMapInfoIter const &))
 0002:801B9ECC       BreakableCage::initModel((char const *,JMapInfoIter const &))
 0002:801B9FF4       BreakableCage::initBaseMtxForCage((void))
 0002:801BA06C       BreakableCage::isTypeCage(const(void))
 0002:801BA0BC       BreakableCage::isAppearPowerStar(const(void))
 0002:801BA104       BreakableCage::tryBreak((void))
 0002:801BA17C       BreakableCage::exeWait((void))
 0002:801BA24C       BreakableCage::exeBreak((void))
 0002:801BA64C       @unnamed@BrightObj_cpp@::calcScreenPosition((JGeometry::TVec2<f> *,JGeometry::TVec3<f> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TProjection3<Q29JGeometry38TMatrix44<Q29JGeometry13SMatrix44C<f>>> const &))
 0002:801BA808       BrightInfo::write((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &,float))
 0002:801BA8A8       BrightInfo::endRead((void))
 0002:801BA8D4       BrightInfo::reset((void))
 0002:801BA960       BrightDrawInfo::BrightDrawInfo((void))
 0002:801BA9D8       BrightDrawInfo::write((ushort,JGeometry::TVec3<f> const &,float))
 0002:801BAA34       BrightCamInfo::BrightCamInfo((void))
 0002:801BAB28       BrightCamInfo::write((ushort,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TProjection3<Q29JGeometry38TMatrix44<Q29JGeometry13SMatrix44C<f>>> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801BAC00       BrightObjBase::BrightObjBase((void))
 0002:801BAC70       BrightObjBase::checkVisibilityOfSphere((ushort,BrightCamInfo const &))
 0002:801BAFBC       BrightObjBase::checkVisible((BrightObjBase::CheckArg *,JGeometry::TVec3<f> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TProjection3<Q29JGeometry38TMatrix44<Q29JGeometry13SMatrix44C<f>>> const &))
 0002:801BB088       BrightObjBase::setResult((BrightObjBase::CheckArg const &))
 0002:801BB1A4       BrightObjBase::drawSphere(const(JGeometry::TVec3<f> const &,float))
 0002:801BB2EC       BrightObj::BrightObj((char const *))
 0002:801BB340       BrightObj::init((JMapInfoIter const &))
 0002:801BB3B8       BrightObj::control((void))
 0002:801BB40C       BrightObj::draw(const(void))
 0002:801BB47C       BrightSun::getNowCenter(const(JGeometry::TVec2<f> *))
 0002:801BB4D0       BrightSun::BrightSun((char const *))
 0002:801BB524       BrightSun::control((void))
 0002:801BB5D0       BrightSun::draw(const(void))
 0002:801BB638       BrightSun::calcBrightInfo((ushort,BrightCamInfo const &))
 0002:801BB6E0       BrightSun::controlSunModel((void))
 0002:801BB934       JGeometry::TVec2<f>::zero((void))
 0002:801BBA74       BrightObjBase::getCenter(const(void))
 0002:801BBA88       BrightObjBase::getBrightCenter(const(void))
 0002:801BBA9C       BrightObjBase::getBright(const(void))
 0002:801BBAB0       BrightObjBase::getNowCenter(const(JGeometry::TVec2<f> *))
 0002:801BBAC0       BrightSun::init((JMapInfoIter const &))
 0002:801BBBD8       BumpAppearPlanet::init((JMapInfoIter const &))
 0002:801BBCC4       BumpAppearPlanet::exeBumpOut((void))
 0002:801BBDA8       BumpAppearPlanet::control((void))
 0002:801BBDFC       SandCapsuleInsidePlanet::initCaseUseSwitchA((MapObjActorInitInfo const &))
 0002:801BBF10       NrvBumpAppearPlanet::BumpAppearPlanetNrvWait::execute(const(Spine *))
 0002:801BC080       @unnamed@Candlestand_cpp@::getParam((char const *))
 0002:801BC0F0       Candlestand::Candlestand((char const *))
 0002:801BC140       Candlestand::init((JMapInfoIter const &))
 0002:801BC2A8       Candlestand::makeActorAppeared((void))
 0002:801BC300       Candlestand::startClipped((void))
 0002:801BC35C       Candlestand::endClipped((void))
 0002:801BC3B8       Candlestand::attackSensor((HitSensor *,HitSensor *))
 0002:801BC448       Candlestand::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801BC5A0       Candlestand::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801BC640       Candlestand::deleteEffectFire((void))
 0002:801BC720       Candlestand::emitEffectExtinguishFire((void))
 0002:801BC79C       Candlestand::appearItem((void))
 0002:801BC9F0       Candlestand::exeFire((void))
 0002:801BCA98       Candlestand::exeExtinguish((void))
 0002:801BCB48       Candlestand::exeFlicker((void))
 0002:801BCD20       NrvCandlestand::HostTypeAttack::execute(const(Spine *))
 0002:801BCDAC       nullsub_93
 0002:801BCDEC       CannonFortressBreakStep::init((JMapInfoIter const &))
 0002:801BCE90       CannonFortressBreakStep::exeWait((void))
 0002:801BCEEC       CannonFortressBreakStep::exeFall((void))
 0002:801BCF74       Tsukidashikun::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:801BCFC4       nullsub_94
 0002:801BD044       NrvCannonFortressBreakStep::CannonFortressBreakStepNrvBreak::execute(const(Spine *))
 0002:801BD0B0       NrvCannonFortressBreakStep::CannonFortressBreakStepNrvFallStart::execute(const(Spine *))
 0002:801BD204       SwingLight::SwingLight((char const *))
 0002:801BD248       CapsuleCage::init((JMapInfoIter const &))
 0002:801BD2E4       CapsuleCage::exeStartCamera((void))
 0002:801BD348       CapsuleCage::exeOpen((void))
 0002:801BD404       CapsuleCage::kill((void))
 0002:801BD458       MR::connectToSceneIndirectMapObj((LiveActor *))
 0002:801BD4AC       CapsuleCage::startOpen((void))
 0002:801BD584       NrvCapsuleCage::CapsuleCageNrvEndCamera::execute(const(Spine *))
 0002:801BD6E4       ChipBase::ChipBase((char const *,long,char const *))
 0002:801BD768       ChipBase::init((JMapInfoIter const &))
 0002:801BD888       ChipBase::initModel((JMapInfoIter const &))
 0002:801BD97C       ChipBase::initSensor((void))
 0002:801BDA18       ChipBase::initShadow((JMapInfoIter const &))
 0002:801BDB50       ChipBase::initJMapParam((JMapInfoIter const &))
 0002:801BDBF8       ChipBase::initAfterPlacement((void))
 0002:801BDC40       ChipBase::deactive((void))
 0002:801BDC84       ChipBase::setGroupID((long))
 0002:801BDC94       ChipBase::makeActorAppeared((void))
 0002:801BDCF0       ChipBase::makeActorDead((void))
 0002:801BDD40       ChipBase::control((void))
 0002:801BDDB4       ChipBase::appearWait((void))
 0002:801BDE14       ChipBase::appearFlashing((long))
 0002:801BDE8C       ChipBase::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801BDF60       ChipBase::requestGet((HitSensor *,HitSensor *))
 0002:801BDFF4       ChipBase::requestShow((void))
 0002:801BE16C       ChipBase::exeFlashing((void))
 0002:801BE1E0       ChipBase::exeGot((void))
 0002:801BE2CC       ChipBase::isGettable(const(void))
 0002:801BE360       Coin::isNeedBubble((JMapInfoIter const &))
 0002:801BE51C       ChipCounter::ChipCounter((char const *,long))
 0002:801BE588       ChipCounter::init((JMapInfoIter const &))
 0002:801BE6B4       ChipCounter::control((void))
 0002:801BE744       ChipCounter::setCount((long))
 0002:801BE82C       ChipCounter::requestShow((long,long))
 0002:801BE920       ChipCounter::requestComplete((long))
 0002:801BE9B8       ChipCounter::requestHide((long))
 0002:801BEA34       ChipCounter::requestActive((void))
 0002:801BEAAC       ChipCounter::requestDeactive((void))
 0002:801BEB9C       CollectCounter::tryEndShow((void))
 0002:801BEC50       ChipCounter::exeComplete((void))
 0002:801BECF4       ChipCounter::exeCompleteOut((void))
 0002:801BEEF4       NrvChipCounter::ChipCounterNrvFrameOut::execute(const(Spine *))
 0002:801BEF90       NrvCollectCounter::CollectCounterNrvShow::execute(const(Spine *))
 0002:801BEFE8       ChipGroup::ChipGroup((char const *,long))
 0002:801BF090       ChipGroup::updateUIRange((void))
 0002:801BF290       ChipGroup::movement((void))
 0002:801BF33C       ChipGroup::registerChip((ChipBase *))
 0002:801BF3D8       ChipGroup::isComplete(const(void))
 0002:801BF4EC       ChipGroup::init((JMapInfoIter const &))
 0002:801BF62C       ChipGroup::noticeGet((ChipBase *))
 0002:801BF790       ChipGroup::receiveAppearRequest((void))
 0002:801BF9DC       ChipHolder::ChipHolder((char const *,long))
 0002:801BFA38       ChipHolder::registerChipGroup((ChipGroup *))
 0002:801BFA58       ChipHolder::findChipGroup(const(long))
 0002:801BFAA8       MR::createChipHolder((long))
 0002:801BFAD0       MR::getChipHolder((long))
 0002:801BFB5C       MR::registerChip((long,ChipBase *,long))
 0002:801BFBA4       MR::noticeGetChip((long,ChipBase *,long))
 0002:801BFC10       MR::showChipCounter((long,long))
 0002:801BFC64       MR::requestStartChipCompleteDemo((long,long))
 0002:801BFCD4       MR::hidePaneRecursive((LayoutActor *,char const *))
 0002:801BFD44       MR::deactivateChipLayout((void))
 0002:801BFE54       ChipHolder::init((JMapInfoIter const &))
 0002:801BFEF8       ChooChooTrain::ChooChooTrain((char const *))
 0002:801BFFB8       ChooChooTrain::startClipped((void))
 0002:801C0024       ChooChooTrain::endClipped((void))
 0002:801C0090       ChooChooTrain::init((JMapInfoIter const &))
 0002:801C03C4       ChooChooTrain::control((void))
 0002:801C0650       ChooChooTrain::~ChooChooTrain((void))
 0002:801C06C0       CircleCoinGroup::CircleCoinGroup((char const *))
 0002:801C0760       CircleCoinGroup::initCoinArray((JMapInfoIter const &))
 0002:801C07AC       CircleCoinGroup::placementCoin((void))
 0002:801C09F4       MR::createCirclePurpleCoinGroup((char const *))
 0002:801C0A94       RailCoin::getCoinName(const(void))
 0002:801C0AB4       ClipArea::ClipArea((char const *))
 0002:801C0B0C       ClipArea::init((JMapInfoIter const &))
 0002:801C0B5C       ClipArea::initBaseMatrix((JMapInfoIter const &))
 0002:801C0B94       ClipArea::draw(const(void))
 0002:801C0C68       ClipArea::isInArea(const(JGeometry::TVec3<f> const &,float))
 0002:801C0C7C       MR::setClipSphereArea((ClipArea *))
 0002:801C0CBC       MR::setClipCenterBoxArea((ClipArea *))
 0002:801C0D00       MR::setClipBottomBoxArea((ClipArea *))
 0002:801C0D44       MR::setClipTopConeArea((ClipArea *))
 0002:801C0D88       MR::setClipBottomConeArea((ClipArea *))
 0002:801C0E28       __sinit(long,int,char *[rea],**)
 0002:801C0E7C       ClipAreaDrop::ClipAreaDrop((char const *))
 0002:801C0EF0       ClipAreaDrop::init((JMapInfoIter const &))
 0002:801C0F5C       ClipAreaDrop::setBaseSize((float))
 0002:801C0F64       ClipAreaDrop::appear((void))
 0002:801C0FA8       ClipAreaDrop::control((void))
 0002:801C1020       ClipAreaDrop::exeWait((void))
 0002:801C1130       ClipAreaDropHolder::ClipAreaDropHolder((void))
 0002:801C1224       MR::createClipAreaDropHolder((void))
 0002:801C122C       MR::getDeadClipAreaDrop((void))
 0002:801C127C       MR::appearClipAreaDrop((JGeometry::TVec3<f> const &,float))
 0002:801C1368       ClipAreaDropLaser::ClipAreaDropLaser((char const *))
 0002:801C13C4       ClipAreaDropLaser::init((JMapInfoIter const &))
 0002:801C14B0       ClipAreaDropLaser::draw(const(void))
 0002:801C15AC       ClipAreaDropLaser::exeWait((void))
 0002:801C161C       ClipAreaDropLaser::exeMove((void))
 0002:801C177C       ClipAreaDropLaser::incrementDrawCount((void))
 0002:801C1870       ClipAreaHolder::ClipAreaHolder((char const *))
 0002:801C193C       ClipAreaHolder::isInArea(const(JGeometry::TVec3<f> const &,float))
 0002:801C1A10       ClipAreaCollisionFilter::isInvalidParts(const(CollisionParts const *))
 0002:801C1A90       MR::isExistClipAreaHolder((void))
 0002:801C1AA0       MR::addClipArea((ClipArea *))
 0002:801C1ADC       MR::isInClipArea((JGeometry::TVec3<f> const &,float))
 0002:801C1B28       MR::isActiveClipArea((void))
 0002:801C1B5C       MR::activateClipArea((void))
 0002:801C1B8C       MR::deactivateClipArea((void))
 0002:801C1BBC       MR::setBinderExceptSensorType((LiveActor *,JGeometry::TVec3<f> const *,float))
 0002:801C1C80       ClipAreaMovable::ClipAreaMovable((char const *))
 0002:801C1D30       ClipAreaMovable::control((void))
 0002:801C1D84       ClipAreaMovable::initMoveFunction((JMapInfoIter const &))
 0002:801C1E34       ClipAreaMovable::startMoveFunction((void))
 0002:801C1E98       ClipAreaMovable::endMoveFunction((void))
 0002:801C1EFC       ClipAreaMovable::movementMoveFunction((void))
 0002:801C1F60       ClipAreaMovable::updateMatrix((void))
 0002:801C2028       MR::createClipAreaBottomCone((char const *))
 0002:801C224C       ClipAreaMovable::init((JMapInfoIter const &))
 0002:801C2338       ClipAreaShape::ClipAreaShape((char const *))
 0002:801C2384       ClipAreaShape::isInArea(const(JGeometry::TVec3<f> const &,float,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:801C2470       ClipAreaShape::calcVolumeMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:801C24BC       ClipAreaShape::drawVolumeShape(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:801C2540       ClipAreaShapeSphere::isInArea(const(JGeometry::TVec3<f> const &))
 0002:801C256C       ClipAreaShapeSphere::calcVolumeMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:801C2600       ClipAreaShapeBox::isInArea(const(JGeometry::TVec3<f> const &))
 0002:801C270C       ClipAreaShapeBox::calcVolumeMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:801C277C       ClipAreaShapeCone::ClipAreaShapeCone((long))
 0002:801C27E0       ClipAreaShapeCone::isInArea(const(JGeometry::TVec3<f> const &))
 0002:801C2898       ClipAreaShapeSphere::ClipAreaShapeSphere((void))
 0002:801C28E4       ClipAreaShapeBox::ClipAreaShapeBox((long))
 0002:801C2940       ClipFieldFillDraw::ClipFieldFillDraw((char const *))
 0002:801C29F8       ClipFieldFillDraw::init((JMapInfoIter const &))
 0002:801C2A1C       ClipFieldFillDraw::setModeSubColor((void))
 0002:801C2A60       ClipFieldFillDraw::setUpFillScreen(const(void))
 0002:801C2D34       ClipFieldFillDraw::sendFillScreen(const(_GXColor))
 0002:801C2E08       ClipFieldFillDraw::draw(const(void))
 0002:801C2ED8       MR::createClipFieldFillDraw((char const *))
 0002:801C2EE0       MR::createVolumeDrawSpotLight((char const *))
 0002:801C3010       ClipFieldMapParts::control((void))
 0002:801C3070       MR::connectToClippedMapParts((LiveActor *))
 0002:801C30CC       ClipFieldMapParts::init((JMapInfoIter const &))
 0002:801C31C0       ClipFieldSwitch::control((void))
 0002:801C3274       ClipFieldSwitch::init((JMapInfoIter const &))
 0002:801C3318       CocoNut::CocoNut((char const *))
 0002:801C33D8       CocoNut::init((JMapInfoIter const &))
 0002:801C351C       CocoNut::initAfterPlacement((void))
 0002:801C35B4       CocoNut::startClipped((void))
 0002:801C369C       CocoNut::hit((JGeometry::TVec3<f> const &,float))
 0002:801C3724       CocoNut::isPossibleToHit(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801C3820       CocoNut::calcMoveSpeed(const(void))
 0002:801C3874       CocoNut::getBreakEffectName((void))
 0002:801C38E4       CocoNut::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:801C3930       CocoNut::calcAndSetBaseMtx((void))
 0002:801C3A9C       CocoNut::attackSensor((HitSensor *,HitSensor *))
 0002:801C3BD0       CocoNut::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801C3C58       CocoNut::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801C3EBC       CocoNut::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801C3FD4       CocoNut::initMapToolInfo((JMapInfoIter const &))
 0002:801C404C       CocoNut::initModel((void))
 0002:801C40A0       CocoNut::initSensor((void))
 0002:801C4144       CocoNut::initEffect((void))
 0002:801C4220       CocoNut::updateRotate((float))
 0002:801C43CC       CocoNut::updateGravity((void))
 0002:801C4464       CocoNut::processMove((void))
 0002:801C4834       CocoNut::setFrontVec((JGeometry::TVec3<f> const &))
 0002:801C48C8       CocoNut::tryHit((HitSensor *,HitSensor *))
 0002:801C49C0       CocoNut::tryPushedFromActor((HitSensor *,HitSensor *))
 0002:801C4B1C       CocoNut::reviseFrontVec((void))
 0002:801C4C5C       CocoNut::statusToWait((void))
 0002:801C4D0C       CocoNut::tryMoveEnd((void))
 0002:801C4DF4       CocoNut::tryDisappear((void))
 0002:801C4E94       CocoNut::isValidPushedFromPlayer(const(HitSensor const *,HitSensor const *))
 0002:801C4FBC       CocoNut::calcHitSpeedAndFrontVec(const(float *,float *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801C5124       CocoNut::isOnGround(const(void))
 0002:801C51B8       CocoNut::getWallNormal(const(JGeometry::TVec3<f> *))
 0002:801C5264       CocoNut::sendMsgToBindedSensor((void))
 0002:801C5304       CocoNut::sendMsgEnemyAttackToBindedSensor((HitSensor *))
 0002:801C5358       CocoNut::isValidReceiveMsg(const(HitSensor const *))
 0002:801C53E8       CocoNut::statusToHide((void))
 0002:801C5448       CocoNut::emitEffectSpinHit((HitSensor const *,HitSensor const *))
 0002:801C54D8       CocoNut::isContactWithOtherCocoNut(const(void))
 0002:801C5558       CocoNut::exeWait((void))
 0002:801C55E4       CocoNut::exeWaitOnBind((void))
 0002:801C5658       CocoNut::exeMove((void))
 0002:801C5704       CocoNut::exeInWater((void))
 0002:801C57F8       CocoNut::exeBreak((void))
 0002:801C5AC0       CoconutTree::init((JMapInfoIter const &))
 0002:801C5B6C       CoconutTreeLeaf::CoconutTreeLeaf((CoconutTreeLeafGroup const *,float *[4],JGeometry::TVec3<f> const *))
 0002:801C5CB8       CoconutTreeLeaf::init((JMapInfoIter const &))
 0002:801C5D4C       CoconutTreeLeaf::update((float,float))
 0002:801C60A8       CoconutTreeLeaf::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801C6110       CoconutTreeLeafGroup::CoconutTreeLeafGroup((char const *))
 0002:801C6170       CoconutTreeLeafGroup::init((JMapInfoIter const &))
 0002:801C6280       CoconutTreeLeafGroup::startClipped((void))
 0002:801C62EC       CoconutTreeLeafGroup::endClipped((void))
 0002:801C6358       CoconutTreeLeafGroup::control((void))
 0002:801C64DC       Coin::Coin((char const *))
 0002:801C6564       Coin::init((JMapInfoIter const &))
 0002:801C6850       Coin::initAfterPlacement((void))
 0002:801C6854       RunawayRabbit::calcAndSetBaseMtx((void))
 0002:801C685C       Coin::initShadow((JMapInfoIter const &))
 0002:801C693C       Coin::setShadowAndPoseModeFromJMapIter((JMapInfoIter const &))
 0002:801C69B0       Coin::makeActorAppeared((void))
 0002:801C6AAC       Coin::makeActorDead((void))
 0002:801C6AF4       Coin::calcAndSetBaseMtx((void))
 0002:801C6C14       Coin::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801C6D50       Coin::exeFix((void))
 0002:801C6DF0       Coin::exeFixTimer((void))
 0002:801C6E80       Coin::exeMove((void))
 0002:801C7034       Coin::exeControled((void))
 0002:801C7088       Coin::exeSpinDrained((void))
 0002:801C70E4       Coin::exeHop((void))
 0002:801C7170       Coin::appearNonActive((void))
 0002:801C7238       Coin::appearControlPose((void))
 0002:801C7308       Coin::appearFixTimer((long,long))
 0002:801C738C       Coin::appearMove((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,long))
 0002:801C7484       Coin::appearHop((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801C7574       Coin::requestActive((void))
 0002:801C75CC       Coin::requestActiveWithGravity((void))
 0002:801C7664       Coin::requestDeactive((void))
 0002:801C76CC       Coin::requestStartControl((void))
 0002:801C7790       Coin::requestEndControl((void))
 0002:801C7824       Coin::requestSpinDrain((void))
 0002:801C78A8       Coin::requestHide((void))
 0002:801C7978       Coin::noticeGetCoin((void))
 0002:801C7A38       Coin::setLife((long))
 0002:801C7A4C       GameSystemSceneController::setSceneInitializeState((SceneInitializeState))
 0002:801C7A5C       Coin::setCalcShadowMode((void))
 0002:801C7ABC       Coin::setCannotTime((long))
 0002:801C7AD8       Coin::calcRebouond((void))
 0002:801C7C14       Coin::attenuateVelocity((void))
 0002:801C7D0C       MR::createDirectSetCoin((char const *))
 0002:801C7D74       MR::createCoin((NameObj const *,char const *))
 0002:801C7DE0       MR::createDirectSetPurpleCoin((char const *))
 0002:801C7E50       MR::createPurpleCoin((NameObj const *,char const *))
 0002:801C8168       CoinBox::init((JMapInfoIter const &))
 0002:801C823C       CoinBox::exeHit((void))
 0002:801C836C       CoinBox::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801C8400       CoinGroup::CoinGroup((char const *))
 0002:801C8458       CoinGroup::init((JMapInfoIter const &))
 0002:801C8708       CoinGroup::killCoinAll((void))
 0002:801C8770       CoinGroup::appearCoinAll((void))
 0002:801C8784       CoinGroup::appearCoinFix((void))
 0002:801C87EC       CoinGroup::appearCoinAllTimer((void))
 0002:801C8850       CoinGroup::setCoinTrans((long,JGeometry::TVec3<f> const &))
 0002:801C8878       CoinGroup::appear((void))
 0002:801C88D0       CoinGroup::exeAppear((void))
 0002:801C8968       CoinGroup::exeDemoAppear((void))
 0002:801C8A9C       NrvUFOBase::UFOBaseNrvBreak::execute(const(Spine *))
 0002:801C8AD0       nullsub_130
 0002:801C8AD4       MR::Functor<9CoinGroup>(MR::FunctorV0M<P9CoinGroup,M9CoinGroupFPCvPv_v> (CoinGroup *,void (CoinGroup::)(void const *,void *)))
 0002:801C8BAC       CoinHolder::CoinHolder((char const *))
 0002:801C8C1C       CoinHolder::hopCoin((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801C8CAC       CoinHolder::appearCoinFix((NameObj const *,JGeometry::TVec3<f> const &,long))
 0002:801C8D30       CoinHolder::appearCoinPop((NameObj const *,JGeometry::TVec3<f> const &,long))
 0002:801C8DD8       CoinHolder::appearCoinPopToDirection((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:801C8E80       CoinHolder::appearCoinToVelocity((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:801C8EA0       CoinHolder::appearCoinCircle((NameObj const *,JGeometry::TVec3<f> const &,long))
 0002:801C9014       CoinHolder::declare((NameObj const *,long))
 0002:801C9090       CoinHolder::getDeclareRemnantCoinCount(const(NameObj const *))
 0002:801C90DC       CoinHolder::findHostInfo(const(NameObj const *))
 0002:801C9118       MR::createCoinHolder((void))
 0002:801C9144       MR::getCoinHolder((void))
 0002:801C916C       MR::addToCoinHolder((NameObj const *,Coin *))
 0002:801C9228       JASGenericMemPool::JASGenericMemPool((void))
 0002:801C929C       CoinHolder::init((JMapInfoIter const &))
 0002:801C9314       CoinHolder::appearCoin((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,long,long,float))
 0002:801C94E8       CoinReplica::deactiveCoin((void))
 0002:801C9524       CoinReplica::removeCoin((void))
 0002:801C9570       CoinReplica::init((JMapInfoIter const &))
 0002:801C987C       CoinRotater::CoinRotater((char const *))
 0002:801C98E8       CoinRotater::movement((void))
 0002:801C99E0       MR::createCoinRotater((void))
 0002:801C99E8       MR::getCoinRotateYMatrix((void))
 0002:801C9A14       MR::getCoinHiSpeedRotateYMatrix((void))
 0002:801C9A40       MR::getCoinInWaterRotateYMatrix((void))
 0002:801C9AC4       CoinSpot::CoinSpot((char const *))
 0002:801C9B1C       CoinSpot::init((JMapInfoIter const &))
 0002:801C9BC8       CoinSpot::initSensor((void))
 0002:801C9C3C       CoinSpot::exeWait((void))
 0002:801C9C98       CoinSpot::exeIsInTornado((void))
 0002:801C9E2C       CollapsePlane::CollapsePlane((char const *))
 0002:801C9E88       CollapsePlane::init((JMapInfoIter const &))
 0002:801CA090       CollapsePlane::exeWait((void))
 0002:801CA0D8       CollapsePlane::exeCollapse((void))
 0002:801CA190       CollapsePlane::exeDPDStop((void))
 0002:801CA214       CollapsePlane::calcAndSetBaseMtx((void))
 0002:801CA290       SideSpikeMoveStep::control((void))
 0002:801CA2C8       CollapsePlane::calcJointPlane((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:801CA3A0       CollapsePlane::tryDPDStop((void))
 0002:801CA624       StaffRollLine::StaffRollLine((char const *))
 0002:801CA670       CollectCounter::init((JMapInfoIter const &))
 0002:801CA6E0       CollectCounter::setPosition((void))
 0002:801CA6E4       CollectCounter::setCount((long))
 0002:801CA7AC       CollectCounter::setPosition((void))
 0002:801CA95C       CollisionBlocker::init((JMapInfoIter const &))
 0002:801CAA9C       CollisionBlocker::attackSensor((HitSensor *,HitSensor *))
 0002:801CABE4       CrystalCage::CrystalCage((char const *))
 0002:801CACB0       CrystalCage::init((JMapInfoIter const &))
 0002:801CB090       CrystalCage::initAfterPlacement((void))
 0002:801CB1C0       CrystalCage::kill((void))
 0002:801CB21C       CrystalCage::forceBreak((void))
 0002:801CB2B8       CrystalCage::attackSensor((HitSensor *,HitSensor *))
 0002:801CB2D0       CrystalCage::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801CB440       CrystalCage::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801CB4B4       CrystalCage::initMapToolInfo((JMapInfoIter const &))
 0002:801CB5EC       CrystalCage::initModel((char const *))
 0002:801CB6C4       CrystalCage::tryOnSwitchDead((void))
 0002:801CB74C       CrystalCage::exeWait((void))
 0002:801CB850       CrystalCage::exeBreak((void))
 0002:801CBAC0       CrystalCage::exeBreakAfter((void))
 0002:801CBC80       CrystalCageMoving::CrystalCageMoving((char const *))
 0002:801CBCE4       CrystalCageMoving::init((JMapInfoIter const &))
 0002:801CBE08       CrystalCageMoving::exeBreakBig((void))
 0002:801CBEC4       CrystalCageMoving::exeBreakSmall((void))
 0002:801CBF28       CrystalCageMoving::exeBreakAll((void))
 0002:801CBFA0       CrystalCageMoving::exeDemoTicoMove((void))
 0002:801CC070       CrystalCageMoving::exeDemoTicoStop((void))
 0002:801CC0FC       CrystalCageMoving::exeDemoTicoChange((void))
 0002:801CC18C       CrystalCageMoving::kill((void))
 0002:801CC1DC       CrystalCageMoving::control((void))
 0002:801CC250       CrystalCageMoving::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801CC2C4       CrystalCageMoving::crashMario((HitSensor *,HitSensor *))
 0002:801CC384       CrystalCageMoving::updateHitSensor((HitSensor *))
 0002:801CC458       SimpleClipPartsObj::connectToScene((MapObjActorInitInfo const &))
 0002:801CC46C       CrystalCageMoving::initDummyModel((JMapInfoIter const &))
 0002:801CC560       CrystalCageMoving::startBreakDemo((void))
 0002:801CC7EC       NrvCrystalCageMoving::CrystalCageMovingNrvBreakBig::executeOnEnd(const(Spine *))
 0002:801CC80C       CrystalSwitch::CrystalSwitch((char const *))
 0002:801CC864       CrystalSwitch::init((JMapInfoIter const &))
 0002:801CC96C       CrystalSwitch::control((void))
 0002:801CC9A0       MeteoContainer::attackSensor((HitSensor *,HitSensor *))
 0002:801CC9F4       CrystalSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801CCA04       HitWallTimerSwitch::trySwitchDown((void))
 0002:801CCA40       CrystalSwitch::tryOn((void))
 0002:801CCA8C       CrystalSwitch::tryOff((void))
 0002:801CCACC       PTimerSwitch::exeOff((void))
 0002:801CCB18       CrystalSwitch::exeSwitchDown((void))
 0002:801CCB68       CrystalSwitch::exeOn((void))
 0002:801CCBD0       CrystalSwitch::calcRotSpeed((void))
 0002:801CCD54       NrvCrystalSwitch::CrystalSwitchNrvSwitchUp::execute(const(Spine *))
 0002:801CCDB8       CutBushModelObj::CutBushModelObj((char const *,char const *,bool,float *[4]))
 0002:801CCFC8       DashRing::initCommon((JMapInfoIter const &,char const *))
 0002:801CD254       DashRing::attackSensor((HitSensor *,HitSensor *))
 0002:801CD44C       DashRing::control((void))
 0002:801CD5C8       DashRing::calcAndSetBaseMtx((void))
 0002:801CD630       DashRing::calcAxis((void))
 0002:801CD6B0       DashRing::calcSubAxis((void))
 0002:801CD748       DashRing::draw(const(void))
 0002:801CD954       NeedlePlant::NeedlePlant((char const *))
 0002:801CD998       DeadLeaves::init((JMapInfoIter const &))
 0002:801CDA68       DeadLeaves::exeSpin((void))
 0002:801CDB48       SandUpDownTriRock::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801CDC48       DesertLandMoveSwitch::DesertLandMoveSwitch((char const *))
 0002:801CDCF4       DesertLandMoveSwitch::init((JMapInfoIter const &))
 0002:801CDE18       DesertLandMoveSwitch::calcAnim((void))
 0002:801CDF5C       DesertLandMoveSwitch::control((void))
 0002:801CDFA8       DesertLandMoveSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801CE000       DesertLandMoveSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801CE028       DesertLandMoveSwitch::initModelAndCollision((JMapInfoIter const &))
 0002:801CE128       DesertLandMoveSwitch::tryOn((void))
 0002:801CE1A4       DesertLandMoveSwitch::trySwitchDown((void))
 0002:801CE1E0       DesertLandMoveSwitch::tryConnect((void))
 0002:801CE200       DesertLandMoveSwitch::updateTimerSE((void))
 0002:801CE34C       DesertLandMoveSwitch::exeWait((void))
 0002:801CE3F8       DesertLandMoveSwitch::exeSwitchDown((void))
 0002:801CE460       DesertLandMoveSwitch::exeOn((void))
 0002:801CE4F8       DesertLandMoveSwitch::exeReturn((void))
 0002:801CE6BC       SpringValue::reset((void))
 0002:801CE6D0       DesertMovingLand::DesertMovingLand((char const *))
 0002:801CE744       DesertMovingLand::init((JMapInfoIter const &))
 0002:801CE948       DesertMovingLand::control((void))
 0002:801CE9D4       DesertMovingLand::startDemo((void))
 0002:801CEA50       DesertMovingLand::updateDemoPlayerPos((void))
 0002:801CEABC       DesertMovingLand::exeWait((void))
 0002:801CEB64       DesertMovingLand::exeMoveDown((void))
 0002:801CECA4       DesertMovingLand::exeMoveUp((void))
 0002:801CEDF4       DesertMovingLand::exeMoveSign((void))
 0002:801CEF00       SandCapsulePressGround::exeStop((void))
 0002:801CEF58       MR::connectToSceneCollisionMapObj((LiveActor *))
 0002:801CF0BC       DragonHeadFlower::DragonHeadFlower((char const *))
 0002:801CF188       DragonHeadFlower::init((JMapInfoIter const &))
 0002:801CF2E0       DragonHeadFlower::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801CF33C       DragonHeadFlower::exeWait((void))
 0002:801CF3BC       DragonHeadFlower::exeSetCenter((void))
 0002:801CF5F0       DragonHeadFlower::exeLaunchReady((void))
 0002:801CF6D4       DragonHeadFlower::exeRailMove((void))
 0002:801CF8B4       DragonHeadFlower::initParabola((JGeometry::TVec3<f> const &))
 0002:801CFB80       DriftWood::DriftWood((char const *))
 0002:801CFBF0       DriftWood::init((JMapInfoIter const &))
 0002:801CFD34       DriftWood::exeWait((void))
 0002:801CFDF8       DriftWood::exeVibrate((void))
 0002:801CFFA8       MR::connectToSceneCollisionMapObj((LiveActor *))
 0002:801CFFAC       DriftWood::calcAndSetBaseMtx((void))
 0002:801CFFF4       DriftWood::attackSensor((HitSensor *,HitSensor *))
 0002:801D014C       DriftWood::tryVibrate((void))
 0002:801D02F0       @unnamed@DummyDisplayModel_cpp@::tryCreateDummyModel((LiveActor *,JMapInfoIter const &,long,int))
 0002:801D03E4       DummyDisplayModel::DummyDisplayModel((LiveActor *,DummyDisplayModelInfo const *,int,long,long))
 0002:801D049C       DummyDisplayModel::init((JMapInfoIter const &))
 0002:801D061C       def_801D056C
 0002:801D063C       DummyDisplayModel::makeActorAppeared((void))
 0002:801D0678       DummyDisplayModel::makeActorDead((void))
 0002:801D06BC       DummyDisplayModel::control((void))
 0002:801D06F8       DummyDisplayModel::calcAndSetBaseMtx((void))
 0002:801D090C       MR::createDummyDisplayModel((LiveActor *,JMapInfoIter const &,long,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801D0970       MR::createDummyDisplayModel((LiveActor *,JMapInfoIter const &,char const *,long))
 0002:801D09CC       MR::createDummyDisplayModel((LiveActor *,JMapInfoIter const &,float *[4],long,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801D0A38       MR::createDummyDisplayModelCrystalItem((LiveActor *,JMapInfoIter const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801D0AA0       MR::createDummyDisplayModelCrystalItem((LiveActor *,long,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801D0B0C       MR::getDummyDisplayModelId((JMapInfoIter const &,long))
 0002:801D0B84       MR::makeArchiveListDummyDisplayModel((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:801D0C30       DynamicCollisionObj::DynamicCollisionObj((char const *))
 0002:801D0C84       DynamicCollisionObj::init((JMapInfoIter const &))
 0002:801D0CD0       DynamicCollisionObj::syncCollision((void))
 0002:801D0D28       DynamicCollisionObj::updateTriangle((void))
 0002:801D0FBC       DynamicCollisionObj::updateCollisionHeader((void))
 0002:801D1140       DynamicCollisionObj::createCollision((void))
 0002:801D12F8       EarthenPipe::EarthenPipe((char const *))
 0002:801D13C8       EarthenPipe::init((JMapInfoIter const &))
 0002:801D18DC       FallingSmallRock::startClipped((void))
 0002:801D1924       EarthenPipe::tryShowUp((void))
 0002:801D1994       EarthenPipe::tryHideDown((void))
 0002:801D1A94       EarthenPipe::exeWait((void))
 0002:801D1B74       EarthenPipe::exeReady((void))
 0002:801D1C04       EarthenPipe::exePlayerIn((void))
 0002:801D1CCC       EarthenPipe::exeTargetPipeShowUp((void))
 0002:801D1D44       EarthenPipe::exePlayerOut((void))
 0002:801D1EC8       EarthenPipe::exeInvalid((void))
 0002:801D1F70       EarthenPipe::exeShowUp((void))
 0002:801D2080       EarthenPipe::exeHideDown((void))
 0002:801D2188       EarthenPipe::control((void))
 0002:801D21DC       EarthenPipe::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801D2440       EarthenPipe::calcTrans((float))
 0002:801D24F4       EarthenPipe::processBgmPlayerIn((void))
 0002:801D25B8       EarthenPipe::processBgmPlayerOut((void))
 0002:801D2688       EarthenPipeMediator::EarthenPipeMediator((void))
 0002:801D2724       EarthenPipeMediator::entry((EarthenPipe *,JMapInfoIter const &))
 0002:801D29D4       NrvEarthenPipe::EarthenPipeNrvWaitToHideDown::execute(const(Spine *))
 0002:801D2AA4       EarthenPipe::getBaseMtx(const(void))
 0002:801D2AB0       ElectricBall::Ball::Ball((void))
 0002:801D2B00       ElectricBall::Ball::init((LiveActor *))
 0002:801D2B98       ElectricBall::Ball::updatePosition((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:801D2BB0       ElectricBall::Ball::activate((void))
 0002:801D2BC8       ElectricBall::ElectricBall((char const *))
 0002:801D2C44       ElectricBall::init((JMapInfoIter const &))
 0002:801D2DFC       ElectricBall::initAfterPlacement((void))
 0002:801D2E90       ElectricBall::control((void))
 0002:801D3050       ElectricBall::attackSensor((HitSensor *,HitSensor *))
 0002:801D30F8       ElectricBall::initBalls((JMapInfoIter const &))
 0002:801D32B0       ElectricBall::getNearestBall((void))
 0002:801D333C       ElectricBall::startMove((void))
 0002:801D33F0       ElectricBall::exeAttack((void))
 0002:801D34E8       std::for_each<PQ212ElectricBall4Ball,Q23std221binder2nd<Q23std120mem_fun1_ref_t<v,Q212ElectricBall4Ball,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>>,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>>>(std::binder2nd<Q23std120mem_fun1_ref_t<v,Q212ElectricBall4Ball,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>>,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>> (ElectricBall::Ball *,ElectricBall::Ball *,std::binder2nd<Q23std120mem_fun1_ref_t<v,Q212ElectricBall4Ball,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>>,RCQ29JGeometry64TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>>))
 0002:801D3670       ElectricBall::~ElectricBall((void))
 0002:801D3748       ElectricRailMovingPoint::ElectricRailMovingPoint((char const *))
 0002:801D3790       ElectricRailPoint::init((JMapInfoIter const &))
 0002:801D3854       ElectricRailMovingPoint::attackSensor((HitSensor *,HitSensor *))
 0002:801D3870       ElectricRailSeparator::ElectricRailSeparator((void))
 0002:801D38E0       ElectricRailSeparator::setup((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801D3998       ElectricRailShadowDrawer::ElectricRailShadowDrawer((LiveActor const *,ElectricRailSeparator *,long))
 0002:801D3B14       ElectricRailShadowDrawer::drawShape(const(void))
 0002:801D3B2C       ElectricRailShadowDrawer::drawShadowVolumeShape(const(ElectricRailSeparator *,long))
 0002:801D3E14       ElectricRail::ElectricRail((char const *))
 0002:801D3E88       ElectricRail::init((JMapInfoIter const &))
 0002:801D406C       ElectricRail::initAfterPlacement((void))
 0002:801D40F4       ElectricRail::draw(const(void))
 0002:801D4158       ElectricRail::makeActorAppeared((void))
 0002:801D41C4       ElectricRail::makeActorDead((void))
 0002:801D4274       ElectricRailMoving::attackSensor((HitSensor *,HitSensor *))
 0002:801D42D0       ElectricRail::initMapToolInfo((JMapInfoIter const &))
 0002:801D4360       ElectricRail::initSensor((void))
 0002:801D4434       ElectricRail::initPoints((void))
 0002:801D4600       ElectricRail::initSeparators((void))
 0002:801D47D4       ElectricRail::initDisplayList((void))
 0002:801D48A0       ElectricRailMoving::drawRailGX(const(float))
 0002:801D48FC       ElectricRail::drawPlane(const(float,float,float,float))
 0002:801D4B58       ElectricRail::drawPlaneGX(const(float,float,float,float))
 0002:801D4DB0       ElectricRail::initShadow((JMapInfoIter const &))
 0002:801D4F50       ElectricRail::updateHitSensorPos((void))
 0002:801D4FF8       ElectricRail::calcGravity(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:801D5080       ElectricRail::exeDisappear((void))
 0002:801D51E8       NrvElectricRail::ElectricRailNrvWait::execute(const(Spine *))
 0002:801D5510       @unnamed@ElectricRailHolder_cpp@::isNearRail((LiveActor const *,HitSensor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:801D55D8       ElectricRailHolder::ElectricRailHolder((char const *))
 0002:801D5638       ElectricRailHolder::calcAnim((void))
 0002:801D56AC       ElectricRailHolder::draw(const(void))
 0002:801D5758       ElectricRailHolder::isTouchRail(const(HitSensor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:801D583C       ElectricRailHolder::control((void))
 0002:801D58F8       ElectricRailHolder::initDraw(const(void))
 0002:801D5990       ElectricRailFunction::registerRail((LiveActor const *,ElectricRailType))
 0002:801D59E4       ElectricRailFunction::isTouchRail((HitSensor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:801D5A58       ElectricRailFunction::calcDisplayListSize((ulong,long))
 0002:801D5A70       ElectricRailHolder::init((JMapInfoIter const &))
 0002:801D5B0C       ElectricRailHolder::registerRail((LiveActor const *,ElectricRailType))
 0002:801D5BE8       ElectricRailHolder::createModel(const(ElectricRailType))
 0002:801D5F40       ElectricRailMovingPoint::init((JMapInfoIter const &))
 0002:801D6010       ElectricRailMoving::ElectricRailMoving((char const *))
 0002:801D60A4       ElectricRailMoving::init((JMapInfoIter const &))
 0002:801D6188       ElectricRailMoving::draw(const(void))
 0002:801D6254       ElectricRailMoving::isTouchRail(const(HitSensor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:801D63A8       ElectricRailMoving::initMapToolInfo((JMapInfoIter const &))
 0002:801D6450       ElectricRailMoving::initSensor((void))
 0002:801D6524       ElectricRailMoving::initRail((JMapInfoIter const &))
 0002:801D66C0       ElectricRailMoving::initPoints((void))
 0002:801D6918       ElectricRailMoving::initDisplayList((void))
 0002:801D6A40       ElectricRailMoving::drawPlane(const(float,float,float,float))
 0002:801D6B4C       ElectricRailMoving::drawPlaneGX(const(float,float,float,float))
 0002:801D6C10       ElectricRailMoving::setVertexAttribute(const(int,int,float,float,float,float,void (*)(float,float,float),void (*)(float,float)))
 0002:801D6EFC       ElectricRailMoving::updateHitSensorPos((void))
 0002:801D7014       ElectricRailMoving::updatePointPos((void))
 0002:801D7298       ElectricRailMoving::updatePointPosAndModel((void))
 0002:801D735C       ElectricRailMoving::isValidCoord(const(float))
 0002:801D7404       ElectricRailMoving::getRepeatedCoord(const(float))
 0002:801D7458       ElectricRailMoving::calcPointPos(const(JGeometry::TVec3<f> *,float))
 0002:801D7524       ElectricRailMoving::move((void))
 0002:801D76DC       ElectricRailMoving::exeDisappear((void))
 0002:801D784C       NrvElectricRailMoving::ElectricRailMovingNrvWait::execute(const(Spine *))
 0002:801D79F8       GDTexCoord2f32
 0002:801D7B44       @unnamed@NameObjFactory_cpp@::createNameObj<12FileSelector>(NameObj *(char const *))
 0002:801D7B84       @unnamed@NameObjFactory_cpp@::createNameObj<8Meramera>(NameObj *(char const *))
 0002:801D7BC4       ExterminationChecker::ExterminationChecker((char const *))
 0002:801D7C28       ExterminationChecker::init((JMapInfoIter const &))
 0002:801D7DF0       ExterminationChecker::exeWatching((void))
 0002:801D7EA8       ExterminationChecker::exeTryStartDemoAppear((void))
 0002:801D7F1C       ExterminationChecker::exeAppearStar((void))
 0002:801D7FAC       ExterminationChecker::exeAppearKeySwitch((void))
 0002:801D8004       MR::createExterminationPowerStar((char const *))
 0002:801D8054       MR::createExterminationKeySwitch((char const *))
 0002:801D819C       FallDownBridge::FallDownBridge((char const *))
 0002:801D8208       FallDownBridge::init((JMapInfoIter const &))
 0002:801D830C       FallDownBridge::control((void))
 0002:801D851C       FallDownBridge::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801D869C       FallDownBridge::calcAndSetBaseMtx((void))
 0002:801D8934       __sinit__FallDownBridge_cpp
 0002:801D8998       NrvFallDownBridge::FallDownBridgeNrvQuake::execute(const(Spine *))
 0002:801D8A1C       FallingSmallRock::init((JMapInfoIter const &))
 0002:801D8B18       SpringJetWater::endClipped((void))
 0002:801D8B68       FallingSmallRock::exeMove((void))
 0002:801D8CE0       FallOutFieldDraw::FallOutFieldDraw((char const *))
 0002:801D8D64       FallOutFieldDraw::setUpFillScreen(const(void))
 0002:801D8EC0       FallOutFieldDraw::setUpEdgeAndClearAlpha(const(void))
 0002:801D8F8C       FallOutFieldDraw::init((JMapInfoIter const &))
 0002:801D9078       MR::activateClipArea((void))
 0002:801D907C       MR::deactivateClipArea((void))
 0002:801D9080       FallOutFieldDraw::draw(const(void))
 0002:801D93E8       MR::createFallOutFieldDraw((char const *))
 0002:801D93F0       __sinit__FallOutFieldDraw_cpp
 0002:801D9620       FireBarBall::FireBarBall((LiveActor *))
 0002:801D9690       FireBarBall::init((JMapInfoIter const &))
 0002:801D97B0       MR::calcGravity((LiveActor *))
 0002:801D97B4       FireBarBall::controlEmitEffect((void))
 0002:801D97F4       LiveActor::endClipped((void))
 0002:801D97F8       FireBarBall::controlEmitEffect((void))
 0002:801D9854       FireBar::FireBar((char const *))
 0002:801D98C8       FireBar::init((JMapInfoIter const &))
 0002:801D9B70       FireBar::exeWait((void))
 0002:801D9BD8       FireBar::makeActorAppeared((void))
 0002:801D9C48       FireBar::makeActorDead((void))
 0002:801D9D18       FireBar::updateHitSensor((HitSensor *))
 0002:801D9F3C       FireBar::initFireBarBall((JMapInfoIter const &))
 0002:801DA0B8       FireBar::fixFireBarBall((void))
 0002:801DA27C       FirePressure::FirePressure((char const *))
 0002:801DA31C       FirePressure::init((JMapInfoIter const &))
 0002:801DA360       FirePressure::initBullet((JMapInfoIter const &))
 0002:801DA368       FirePressure::shotBullet((float))
 0002:801DA3F4       WaterPressure::calcGunPointFromCannon((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:801DA4B8       FirePressureBullet::FirePressureBullet((char const *))
 0002:801DA518       FirePressureBullet::init((JMapInfoIter const &))
 0002:801DA600       FirePressureBullet::kill((void))
 0002:801DA68C       FirePressureBullet::shotFireBullet((LiveActor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,float const &,bool,bool))
 0002:801DA74C       FirePressureBullet::exeFly((void))
 0002:801DA884       FirePressureBullet::attackSensor((HitSensor *,HitSensor *))
 0002:801DA92C       FirePressureBullet::isCrash(const(void))
 0002:801DAA00       FirePressureBulletHolder::callEmptyBullet((void))
 0002:801DAAC0       FirePressureBulletHolder::init((JMapInfoIter const &))
 0002:801DAB30       FirePressureRadiate::FirePressureRadiate((char const *))
 0002:801DABAC       FirePressureRadiate::init((JMapInfoIter const &))
 0002:801DAF0C       FirePressureRadiate::initAfterPlacement((void))
 0002:801DAFB0       SubmarineVolcanoBigColumn::pauseOff((void))
 0002:801DAFE4       FirePressureRadiate::exeRelax((void))
 0002:801DB050       FirePressureRadiate::exeSyncWait((void))
 0002:801DB0C0       FirePressureRadiate::exePrepareToRadiate((void))
 0002:801DB128       FirePressureRadiate::exeRadiate((void))
 0002:801DB1E4       FirePressureRadiate::exeRadiateMargin((void))
 0002:801DB2AC       FirePressureRadiate::control((void))
 0002:801DB344       FirePressureRadiate::attackSensor((HitSensor *,HitSensor *))
 0002:801DB3E4       FirePressureRadiate::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801DB4BC       FirePressureRadiate::updateHitSensor((HitSensor *))
 0002:801DB558       FirePressureRadiate::calcRadiateEffectMtx((void))
 0002:801DB5C8       FirePressureRadiate::calcJointCannon((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:801DB7FC       NrvTimeAppearObj::TimeAppearObjNrvHide::execute(const(Spine *))
 0002:801DBA98       FlameGun::FlameGun((char const *))
 0002:801DBAF0       FlameGun::init((JMapInfoIter const &))
 0002:801DBC64       FlameGun::initSensor((void))
 0002:801DBCFC       FlameGun::endClipped((void))
 0002:801DBD5C       FlameGun::exeSwitchWait((void))
 0002:801DBE0C       FlameGun::exeWait((void))
 0002:801DBE74       FlameGun::exePreRadiate((void))
 0002:801DBEF8       FlameGun::exeRadiate((void))
 0002:801DBFA4       FlameGun::exeRotate((void))
 0002:801DC04C       FlameGun::exeRadiateOnly((void))
 0002:801DC0C4       FlameGun::updateHitSensor((HitSensor *))
 0002:801DC2DC       FlameGun::attackSensor((HitSensor *,HitSensor *))
 0002:801DC464       shapeCallBack(J3DShape *)
 0002:801DC4F8       FlexibleSphere::FlexibleSphere((char const *))
 0002:801DC598       FlexibleSphere::init((JMapInfoIter const &))
 0002:801DC8A8       FlexibleSphere::kill((void))
 0002:801DC918       FlexibleSphere::control((void))
 0002:801DCC30       FlexibleSphere::draw(const(void))
 0002:801DCCAC       FlipPanel::FlipPanel((char const *))
 0002:801DCD04       FlipPanel::init((JMapInfoIter const &))
 0002:801DCEB4       FlipPanel::exeFrontLand((void))
 0002:801DCFE8       FlipPanel::exeBackLand((void))
 0002:801DD11C       FlipPanel::exeWait((void))
 0002:801DD1D4       FlipPanel::exeEnd((void))
 0002:801DD274       FlipPanel::appear((void))
 0002:801DD2C0       FlipPanel::endClipped((void))
 0002:801DD340       FlipPanel::calcAndSetBaseMtx((void))
 0002:801DD380       FlipPanel::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801DD420       FlipPanel::calcJointMove((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:801DD4B4       FlipPanel::checkPlayerOnTop((void))
 0002:801DD5E4       FlipPanelObserver::FlipPanelObserver((char const *))
 0002:801DD640       FlipPanelObserver::init((JMapInfoIter const &))
 0002:801DD798       FlipPanelObserver::exeWait((void))
 0002:801DD848       FlipPanelObserver::exeComplete((void))
 0002:801DD910       FlipPanelObserver::exeDemoWait((void))
 0002:801DD9AC       FlipPanelObserver::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801DDE20       Fountain::init((JMapInfoIter const &))
 0002:801DE07C       Fountain::appear((void))
 0002:801DE0D4       Fountain::startClipped((void))
 0002:801DE11C       Fountain::endClipped((void))
 0002:801DE168       SpringJetWater::attackSensor((HitSensor *,HitSensor *))
 0002:801DE3CC       Fountain::exeMove((void))
 0002:801DE4F0       FountainBig::FountainBig((char const *))
 0002:801DE544       FountainBig::init((JMapInfoIter const &))
 0002:801DE64C       FountainBig::exeWait((void))
 0002:801DE6B0       FountainBig::exeSign((void))
 0002:801DE730       FountainBig::exeSignStop((void))
 0002:801DE794       FountainBig::exeSpout((void))
 0002:801DE8CC       FountainBig::exeSpoutEnd((void))
 0002:801DE940       FountainBig::attackSensor((HitSensor *,HitSensor *))
 0002:801DEBA4       GCapture::GCapture((char const *))
 0002:801DED10       GCapture::init((JMapInfoIter const &))
 0002:801DEEE0       GCapture::draw(const(void))
 0002:801DEEF4       GCapture::control((void))
 0002:801DF038       GCapture::attackSensor((HitSensor *,HitSensor *))
 0002:801DF0EC       GCapture::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801DF164       GCapture::requestBind((HitSensor *))
 0002:801DF268       GCapture::requestCancelBind((void))
 0002:801DF308       GCapture::requestDamageCancel((ulong))
 0002:801DF384       GCapture::reset((void))
 0002:801DF3E4       GCapture::tryCapture((void))
 0002:801DF46C       GCapture::tryCancelCapture((void))
 0002:801DF560       GCapture::tryEndTraction((void))
 0002:801DF5CC       GCapture::tryRecapture((void))
 0002:801DF680       GCapture::tryBreak((void))
 0002:801DF7D8       GCapture::tryFireDamage((void))
 0002:801DF838       GCapture::tryRelease((void))
 0002:801DF8E8       GCapture::exeCoolDown((void))
 0002:801DF964       GCapture::exeWait((void))
 0002:801DF9C8       GCapture::exeCapture((void))
 0002:801DFAB8       GCapture::exeRecapture((void))
 0002:801DFBCC       GCapture::exeTraction((void))
 0002:801DFF74       GCapture::exeHold((void))
 0002:801E0094       GCapture::exeBreak((void))
 0002:801E0220       GCapture::endBindByFireDamage((void))
 0002:801E0308       GCapture::calcBindActorPose((void))
 0002:801E03D8       GCapture::updateBindActorMatrix((void))
 0002:801E04B4       PauseButtonCheckerInGame::isPermitToPause(const(void))
 0002:801E054C       GCapture::upTractPower((void))
 0002:801E0594       GCapture::downTractPower((void))
 0002:801E05DC       GCapture::fillGapBindTrans((void))
 0002:801E0608       GCapture::updateRibbon((JGeometry::TVec3<f> const &,long))
 0002:801E0710       GCapture::updateRibbonPointEffectMatrix((JGeometry::TVec3<f> const &))
 0002:801E07A4       GCapture::addRotateAccelPointing((void))
 0002:801E082C       GCapture::tryAddVelocityReflectJumpCollision((void))
 0002:801E08B4       GCapture::requestTarget((GCaptureTargetable *))
 0002:801E0980       GCapture::isRequestedTarget((GCaptureTargetable *))
 0002:801E09A4       GCapture::decideTractTarget((void))
 0002:801E0A0C       GCapture::releaseTractTarget((void))
 0002:801E0A64       GCapture::updateCameraTargetMatrix((void))
 0002:801E0AD0       MR::createGCapture((void))
 0002:801E0AD8       MR::resetGCapture((void))
 0002:801E0B14       MR::isRequestedGCaptureTarget((GCaptureTargetable *))
 0002:801E0B50       MR::unrequestGCaptureTarget((GCaptureTargetable *))
 0002:801E0BE4       MR::noticeInTouchableRange((void))
 0002:801E0C14       MR::isOnTractTrigger((void))
 0002:801E0C40       MR::isPlayerGCaptured((void))
 0002:801E0DDC       NrvGCapture::GCaptureNrvCapture::executeOnEnd(const(Spine *))
 0002:801E0EB4       GCaptureRibbon::GCaptureRibbon((char const *))
 0002:801E0F00       GCaptureRibbon::draw(const(void))
 0002:801E1198       GCaptureRibbon::reset((void))
 0002:801E11A8       GCaptureRibbon::shorten((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801E1258       GCaptureRibbon::updateAxis((void))
 0002:801E14C4       GCaptureRibbon::calcLineWidth(const(void))
 0002:801E1580       GCaptureRibbon::init((JMapInfoIter const &))
 0002:801E1630       GCaptureTarget::GCaptureTarget((char const *))
 0002:801E16A4       GCaptureTarget::init((JMapInfoIter const &))
 0002:801E1958       GCaptureTarget::appear((void))
 0002:801E19E4       GCaptureTarget::makeActorAppeared((void))
 0002:801E1A48       GCaptureTarget::makeActorDead((void))
 0002:801E1B1C       GCaptureTarget::control((void))
 0002:801E1B74       GCaptureTarget::exeAppear((void))
 0002:801E1CA4       GCaptureTarget::exeWait((void))
 0002:801E1D54       GCaptureTarget::exePointable((void))
 0002:801E1E50       GCaptureTarget::exeHitPointer((void))
 0002:801E1FBC       GCaptureTarget::exeActive((void))
 0002:801E20C0       GCaptureTarget::releasedTarget((void))
 0002:801E2118       GCaptureTarget::emitNerveEffect((void))
 0002:801E239C       GCaptureTarget::releaseDistance(const(void))
 0002:801E23A4       GCaptureTarget::getPointableRange(const(void))
 0002:801E2408       GravityLight::GravityLight((char const *))
 0002:801E2478       GravityLight::init((JMapInfoIter const &))
 0002:801E2774       GravityLight::control((void))
 0002:801E28F4       GravityLightRoad::GravityLightRoad((char const *))
 0002:801E2954       GravityLightRoad::init((JMapInfoIter const &))
 0002:801E2AC4       GravityLightRoad::exeDraw((void))
 0002:801E2BF4       GravityLightRoad::exeDisappear((void))
 0002:801E2C5C       GravityLightRoad::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801E2D0C       GravityLightRoad::updateHitSensor((HitSensor *))
 0002:801E2D80       GravityLightRoad::updateBindActorMtx((void))
 0002:801E2E1C       GravityLightRoad::endBind((void))
 0002:801E2E98       GravityLightRoad::startDisappear((void))
 0002:801E2EDC       GravityLightRoad::tryStartBind((LiveActor *))
 0002:801E2F64       GravityLightRoad::isPlayerInCylinder(const(void))
 0002:801E31E4       GreenCaterpillarBigBody::GreenCaterpillarBigBody((LiveActor *,float *[4]))
 0002:801E3270       GreenCaterpillarBigBody::init((JMapInfoIter const &))
 0002:801E32F8       GreenCaterpillarBigBody::setPosAndDirection((LiveActor *))
 0002:801E3380       GreenCaterpillarBigBody::calcAndSetBaseMtx((void))
 0002:801E3410       GreenCaterpillarBigBody::calcBodyDir((LiveActor *,JGeometry::TVec3<f> *))
 0002:801E34CC       GreenCaterpillarBig::GreenCaterpillarBig((char const *))
 0002:801E3528       GreenCaterpillarBig::init((JMapInfoIter const &))
 0002:801E3624       GreenCaterpillarBig::exeWriggle((void))
 0002:801E3788       GreenCaterpillarBig::initBodyParts((JMapInfoIter const &))
 0002:801E3864       GreenCaterpillarBig::tryGenerateBodyParts((void))
 0002:801E3910       GreenCaterpillarBig::control((void))
 0002:801E3974       GreenCaterpillarBig::calcAndSetBaseMtx((void))
 0002:801E39C0       GreenCaterpillarBig::endClipped((void))
 0002:801E3A88       GreenCaterpillarBig::fixBodyPartsOnRail((void))
 0002:801E3AE8       GreenCaterpillarBig::leaveApple((void))
 0002:801E3DB8       HatchWaterPlanet::init((JMapInfoIter const &))
 0002:801E3F10       HatchWaterPlanet::exeOpen((void))
 0002:801E4000       HatchWaterPlanet::exeWaitAfterOpen((void))
 0002:801E4118       TreasureSpot::TreasureSpot((char const *))
 0002:801E415C       HeavensDoorDemoObj::init((JMapInfoIter const &))
 0002:801E42BC       HeavensDoorDemoObj::exeAppear((void))
 0002:801E4390       HeavensDoorDemoObj::exeVanish((void))
 0002:801E4490       HeavensDoorDemoObj::kill((void))
 0002:801E449C       HeavensDoorDemoObj::control((void))
 0002:801E44B4       HeavensDoorDemoObj::connectToScene((MapObjActorInitInfo const &))
 0002:801E4514       HeavensDoorDemoObj::startInsideCageDemo((void))
 0002:801E45B8       NrvHeavensDoorDemoObj::HeavensDoorDemoObjNrvWait::execute(const(Spine *))
 0002:801E47A8       HipDropMoveObj::init((JMapInfoIter const &))
 0002:801E48E0       HipDropMoveObj::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801E4988       HipDropMoveObj::exeMove((void))
 0002:801E4BAC       HipDropDemoMoveObj::HipDropDemoMoveObj((char const *))
 0002:801E4C4C       HipDropDemoMoveObj::moveStart((void))
 0002:801E4CD8       HipDropDemoMoveObj::moving((void))
 0002:801E4DD4       HipDropRock::HipDropRock((char const *))
 0002:801E4E30       HipDropRock::init((JMapInfoIter const &))
 0002:801E4F58       HipDropRock::exeBreak((void))
 0002:801E50C4       SpaceShipStep::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801E5138       HipDropRock::initBreakModel((void))
 0002:801E521C       HipDropRock::initItem((JMapInfoIter const &))
 0002:801E52B8       HipDropRock::appearItem((void))
 0002:801E5484       HipDropSwitch::HipDropSwitch((char const *))
 0002:801E5534       HipDropSwitch::init((JMapInfoIter const &))
 0002:801E56DC       HipDropSwitch::control((void))
 0002:801E56F4       HipDropTimerSwitch::calcAnim((void))
 0002:801E586C       HipDropSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801E5904       HipDropSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801E5974       HipDropSwitch::trySwitchDown((void))
 0002:801E59B0       HipDropSwitch::tryOn((void))
 0002:801E5A10       HipDropSwitch::exeOff((void))
 0002:801E5B0C       HipDropSwitch::exeSwitchDown((void))
 0002:801E5B80       HipDropSwitch::exeOn((void))
 0002:801E5CB8       HipDropTimerSwitch::HipDropTimerSwitch((char const *))
 0002:801E5D70       HipDropTimerSwitch::init((JMapInfoIter const &))
 0002:801E5F64       HipDropTimerSwitch::control((void))
 0002:801E60F0       HipDropTimerSwitch::updateTimerSE((void))
 0002:801E624C       HipDropTimerSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801E6300       HipDropTimerSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801E6370       HipDropTimerSwitch::exeOff((void))
 0002:801E644C       HipDropTimerSwitch::exeSwitchDown((void))
 0002:801E64D0       HipDropTimerSwitch::exeOn((void))
 0002:801E6550       HipDropTimerSwitch::exeSwitchUp((void))
 0002:801E66B4       HitWallTimerSwitch::HitWallTimerSwitch((char const *))
 0002:801E6708       HitWallTimerSwitch::init((JMapInfoIter const &))
 0002:801E688C       PTimerSwitch::calcAnim((void))
 0002:801E6904       MR::tryTalkForceAtEndAndStartTalkAction((NPCActor *))
 0002:801E6944       HitWallTimerSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801E69B0       HitWallTimerSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801E6AAC       HitWallTimerSwitch::trySwitchUp((void))
 0002:801E6BF0       HitWallTimerSwitch::exeOff((void))
 0002:801E6C58       HitWallTimerSwitch::exeSwitchDown((void))
 0002:801E6CB8       HitWallTimerSwitch::exeOn((void))
 0002:801E6D20       HitWallTimerSwitch::exeSwitchUp((void))
 0002:801E6F0C       IceStep::init((JMapInfoIter const &))
 0002:801E7030       IceStep::exeWait((void))
 0002:801E70F8       IceStep::setOn((ulong,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801E726C       IceStep::destroy((void))
 0002:801E72CC       IceStep::doHit((void))
 0002:801E734C       IceStep::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801E7400       NrvIceStep::IceStepNrvHit::execute(const(Spine *))
 0002:801E7470       IceVolcanoUpDownPlane::IceVolcanoUpDownPlane((char const *))
 0002:801E751C       IceVolcanoUpDownPlane::move((void))
 0002:801E757C       IceVolcanoUpDownPlane::tryCalcNearestPosToPlayer(const(JGeometry::TVec3<f> *))
 0002:801E76D0       IceVolcanoUpDownPlane::getSoundCalcPos((void))
 0002:801E7778       InvisiblePolygonObj::init((JMapInfoIter const &))
 0002:801E781C       InvisiblePolygonObj::initBaseMtx((void))
 0002:801E78AC       InvisiblePolygonObj::initCollision((JMapInfoIter const &))
 0002:801E7990       InvisiblePolygonObjGCapture::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801E7A34       IronCannonLauncherPoint::IronCannonLauncherPoint((char const *))
 0002:801E7A88       IronCannonLauncherPoint::init((JMapInfoIter const &))
 0002:801E7B8C       IronCannonLauncherPoint::exeWait((void))
 0002:801E7C10       MR::connectToSceneMapObjMovement((NameObj *))
 0002:801E7C14       IronCannonLauncherPoint::initBullet((void))
 0002:801E7CBC       IronCannonLauncherPoint::tryShotBullet((float))
 0002:801E7DF8       IronCannonLauncher::IronCannonLauncher((char const *))
 0002:801E7EA0       IronCannonLauncher::init((JMapInfoIter const &))
 0002:801E7F38       IronCannonLauncher::exeShot((void))
 0002:801E7F94       IronCannonLauncher::initModelAndConnectToScene((void))
 0002:801E81B0       NrvIronCannonLauncherPoint::IronCannonLauncherPointNrvShot::execute(const(Spine *))
 0002:801E8254       ItemAppearStone::init((JMapInfoIter const &))
 0002:801E836C       ItemAppearStone::exeWait((void))
 0002:801E8464       ItemBlock::ItemBlock((char const *))
 0002:801E84BC       ItemBlock::init((JMapInfoIter const &))
 0002:801E86FC       ItemBlock::checkKind((JMapInfoIter const &))
 0002:801E88D0       ItemBlock::initBlock((void))
 0002:801E89AC       ItemBlock::appear((void))
 0002:801E8A60       ItemBlock::control((void))
 0002:801E8AF0       ItemBlock::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801E8B7C       ItemBlock::tryStartJumpPunch((void))
 0002:801E8CDC       SuperSpinDriver::exeNonActive((void))
 0002:801E8D34       ItemBlock::exeAppearItem((void))
 0002:801E8F30       ItemBlock::exeAppearItemSplash((void))
 0002:801E9044       ItemBlock::decTimer((void))
 0002:801E9060       ItemBlock::calcAnim((void))
 0002:801E90FC       __sinit__ItemBlock_cpp
 0002:801E91F4       RotPartsModel::calcAndSetBaseMtx((void))
 0002:801E93B0       ItemBubble::ItemBubble((char const *))
 0002:801E9400       ItemBubble::init((JMapInfoIter const &))
 0002:801E9B08       ItemBubble::initAfterPlacement((void))
 0002:801E9BA8       ItemBubble::kill((void))
 0002:801E9D18       ItemBubble::calcAndSetBaseMtx((void))
 0002:801E9E4C       ItemBubble::exeWait((void))
 0002:801EA0D8       ItemBubble::exeBreak((void))
 0002:801EA2F8       JetTurtle::JetTurtle((char const *))
 0002:801EA344       JetTurtle::init2((JMapInfoIter const &,long))
 0002:801EA6C4       JetTurtle::initAfterPlacement((void))
 0002:801EA704       JetTurtle::becomeSlowType((void))
 0002:801EA764       JetTurtle::becomeFastType((void))
 0002:801EA7C4       JetTurtle::appear((void))
 0002:801EA8FC       JetTurtle::appearAndTryTaken((void))
 0002:801EA95C       JetTurtle::control((void))
 0002:801EA980       JetTurtle::resetPosition((void))
 0002:801EAA1C       JetTurtle::resetPositionAndVanish((void))
 0002:801EAAD4       JetTurtle::exeWait((void))
 0002:801EAD0C       JetTurtle::exeThrowWait((void))
 0002:801EAE2C       JetTurtle::reset((ulong))
 0002:801EAFFC       JetTurtle::boundDrop((void))
 0002:801EB154       JetTurtle::bound((void))
 0002:801EB350       JetTurtle::exeThrowing((void))
 0002:801EBA38       JetTurtle::exeTakenReserve((void))
 0002:801EBBB4       JetTurtle::exeTakenStart((void))
 0002:801EBCC8       JetTurtle::exeRestart((void))
 0002:801EBE50       JetTurtle::exeDrop((void))
 0002:801EBF44       JetTurtle::attackSensor((HitSensor *,HitSensor *))
 0002:801EC130       JetTurtle::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801EC378       JetTurtle::receiveMsgThrow((HitSensor *,HitSensor *))
 0002:801EC488       JetTurtle::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801EC588       JetTurtle::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801EC6A0       GoldenTurtle::init((JMapInfoIter const &))
 0002:801EC6F8       GoldenTurtle::reset((ulong))
 0002:801EC73C       GoldenTurtle::exeThrowing((void))
 0002:801EC9C0       NrvJetTurtle::JetTurtleNrvThrowing::execute(const(Spine *))
 0002:801EC9DC       NrvJetTurtle::JetTurtleNrvWait::executeOnEnd(const(Spine *))
 0002:801ECA2C       JumpHole::JumpHole((char const *))
 0002:801ECB00       JumpHole::init((JMapInfoIter const &))
 0002:801ECC34       JumpHole::initAfterPlacement((void))
 0002:801ECC7C       JumpHole::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801ECD64       JumpHole::exeWait((void))
 0002:801ECDB0       JumpHole::exeSetCenter((void))
 0002:801ECE70       JumpHole::exeSetUp((void))
 0002:801ECEE4       JumpHole::exeRailMove((void))
 0002:801ED0FC       JumpHole::bindHole((void))
 0002:801ED3DC       JumpHole::initParabola((JGeometry::TVec3<f> const &))
 0002:801ED5D0       __sinit__JumpHole_cpp
 0002:801ED6F8       JumpStand::JumpStand((char const *))
 0002:801ED748       JumpStand::init((JMapInfoIter const &))
 0002:801ED8BC       JumpStand::exeTrampleBound((void))
 0002:801EDA6C       JumpStand::exeHipDropBound((void))
 0002:801EDC4C       JumpStand::control((void))
 0002:801EDC90       JumpStand::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801EDD20       JumpStand::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801EDE7C       JumpStand::tryToStartBind((HitSensor *))
 0002:801EDEEC       JumpStand::updateBindActorMtx((void))
 0002:801EDFA0       JumpStand::endBindAndShootUp((float,JumpStand::JumpType))
 0002:801EE2BC       NrvWipeGameOver::WipeGameOverActive::execute(const(Spine *))
 0002:801EE3B8       KeySwitch::init((JMapInfoIter const &))
 0002:801EE564       KeySwitch::initKeySwitchByOwner((JMapInfoIter const &))
 0002:801EE5B8       KeySwitch::appearKeySwitch((JGeometry::TVec3<f> const &))
 0002:801EE608       KeySwitch::exeDemoStart((void))
 0002:801EE67C       KeySwitch::exeAppear((void))
 0002:801EE7E4       KeySwitch::exeWait((void))
 0002:801EE854       KeySwitch::kill((void))
 0002:801EE8A8       KeySwitch::calcAndSetBaseMtx((void))
 0002:801EE8FC       KeySwitch::control((void))
 0002:801EE980       KeySwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801EEA50       KeySwitch::tryAvoid((void))
 0002:801EEC1C       KillerGunnerSingle::init((JMapInfoIter const &))
 0002:801EED44       KillerGunnerSingle::attackSensor((HitSensor *,HitSensor *))
 0002:801EEDD4       KillerGunnerSingle::exeWait((void))
 0002:801EEE3C       KillerGunnerSingle::exeCharge((void))
 0002:801EEEF0       KillerGunnerSingle::exeShoot((void))
 0002:801EF0DC       LargeChain::LargeChain((char const *))
 0002:801EF130       LargeChain::init((JMapInfoIter const &))
 0002:801EF210       LargeChain::makeActorAppeared((void))
 0002:801EF2A8       LargeChain::makeActorDead((void))
 0002:801EF340       LargeChain::exeBreak((void))
 0002:801EF410       LargeChain::createChainParts((void))
 0002:801EF694       LargeChain::invalidateClippingAllChainParts((void))
 0002:801EF7F0       LargeChainParts::initChainParts((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,bool))
 0002:801EF9B8       LavaBallRisingPlanetLava::init((JMapInfoIter const &))
 0002:801EFA4C       LavaBallRisingPlanetLava::exeWait((void))
 0002:801EFAD0       LavaBallRisingPlanetLava::exeScaleDown((void))
 0002:801EFD50       LavaBreakColumn::LavaBreakColumn((char const *))
 0002:801EFE04       LavaBreakColumn::makeActorAppeared((void))
 0002:801EFE38       LavaBreakColumn::init((JMapInfoIter const &))
 0002:801EFE88       LavaBreakColumn::control((void))
 0002:801F0028       LavaFloater::LavaFloater((char const *))
 0002:801F0098       LavaFloater::init((JMapInfoIter const &))
 0002:801F027C       LavaFloater::initAfterPlacement((void))
 0002:801F03C4       LavaFloater::makeActorDead((void))
 0002:801F0408       LavaFloater::control((void))
 0002:801F04B8       LavaFloater::endClipped((void))
 0002:801F0504       LavaFloater::getCurrentSinkDepth(const(void))
 0002:801F05D8       LavaFloater::exeFloat((void))
 0002:801F0638       LavaFloater::exeSink((void))
 0002:801F0808       LavaGalaxyParts::initAfterPlacement((void))
 0002:801F08C8       LavaGalaxyParts::makeActorAppeared((void))
 0002:801F0904       KoopaJr::kill((void))
 0002:801F0948       LavaGalaxyParts::control((void))
 0002:801F095C       LavaGalaxyParts::init((JMapInfoIter const &))
 0002:801F0BA8       LavaGeyser::LavaGeyser((char const *))
 0002:801F0C20       LavaGeyser::init((JMapInfoIter const &))
 0002:801F0DE8       LavaGeyser::startClipped((void))
 0002:801F0E3C       LavaGeyser::updateHitSensor((HitSensor *))
 0002:801F0F88       LavaGeyser::exeWaitSwitch((void))
 0002:801F0FE8       LavaGeyser::exeWait((void))
 0002:801F1088       LavaGeyser::exeSign((void))
 0002:801F1124       LavaGeyser::exeShootUp((void))
 0002:801F11F8       LavaGeyser::exeShootKeep((void))
 0002:801F12AC       LavaGeyser::exeShootDown((void))
 0002:801F147C       LavaHomeSeesaw::LavaHomeSeesaw((char const *))
 0002:801F14E4       LavaHomeSeesaw::initAfterPlacement((void))
 0002:801F1600       LavaHomeSeesaw::control((void))
 0002:801F1664       LavaHomeSeesaw::calcAndSetBaseMtx((void))
 0002:801F1730       LavaHomeSeesaw::init((JMapInfoIter const &))
 0002:801F18F0       LavaHomeVolcanoFlow::init((JMapInfoIter const &))
 0002:801F19B0       LavaHomeVolcanoFlow::endClipped((void))
 0002:801F1A78       LavaHomeVolcanoFlow::exeWait((void))
 0002:801F1B00       LavaHomeVolcanoFlow::exeMove((void))
 0002:801F1C9C       LavaJamboSunPlanet::LavaJamboSunPlanet((char const *))
 0002:801F1D04       LavaJamboSunPlanet::init((JMapInfoIter const &))
 0002:801F1E64       LavaJamboSunPlanet::exeWait((void))
 0002:801F1EEC       LavaJamboSunPlanet::exeMove((void))
 0002:801F2078       LavaProminence::LavaProminence((char const *))
 0002:801F2184       LavaProminence::init((JMapInfoIter const &))
 0002:801F23E4       LavaProminence::initAfterPlacement((void))
 0002:801F250C       LavaProminence::startClipped((void))
 0002:801F2578       LavaProminence::moveOnRail((void))
 0002:801F266C       LavaProminence::setGravityAndMakeMtx((void))
 0002:801F26E4       LavaProminence::updateEffectClipping((bool))
 0002:801F279C       LavaProminence::exeWaitSwitch((void))
 0002:801F280C       LavaProminence::exeWait((void))
 0002:801F28C8       LavaProminence::exeSign((void))
 0002:801F2978       LavaProminence::exeMoveStartExtra((void))
 0002:801F2AFC       LavaProminence::exeMoveStart((void))
 0002:801F2BF8       LavaProminence::exeMoveLoop((void))
 0002:801F2C6C       LavaProminence::exeMoveEnd((void))
 0002:801F2D1C       LavaProminence::exeMoveEndExtra((void))
 0002:801F2E1C       LavaProminence::calcAndSetBaseMtx((void))
 0002:801F31B4       LavaProminenceTriple::LavaProminenceTriple((char const *))
 0002:801F327C       LavaProminenceTriple::init((JMapInfoIter const &))
 0002:801F3570       LavaProminenceTriple::appear((void))
 0002:801F35F4       LavaProminenceTriple::control((void))
 0002:801F3718       LavaProminenceTriple::calcAndSetBaseMtx((void))
 0002:801F3878       LavaProminenceTriple::updateHitSensor((HitSensor *))
 0002:801F3B1C       LavaProminenceTriple::updateEffectClipping((void))
 0002:801F3B98       LavaProminenceTriple::updateEffectClippingIndividual((bool *,char const *,char const *))
 0002:801F3C98       MR::repeatDegree((float *))
 0002:801F3CF0       LavaSteam::LavaSteam((char const *))
 0002:801F3D4C       LavaSteam::init((JMapInfoIter const &))
 0002:801F3F20       SubmarineSteam::initAfterPlacement((void))
 0002:801F4090       LavaSteam::attackSensor((HitSensor *,HitSensor *))
 0002:801F4314       LavaSteam::endClipped((void))
 0002:801F4354       LavaSteam::exeWait((void))
 0002:801F4454       LavaSteam::exeSteam((void))
 0002:801F4754       LavaStrangeRock::LavaStrangeRock((char const *))
 0002:801F47A4       LavaStrangeRock::init((JMapInfoIter const &))
 0002:801F4918       LavaStrangeRock::initModelAndClipping((JMapInfoIter const &))
 0002:801F4A18       LavaStrangeRock::initEffect((void))
 0002:801F4A7C       LavaStrangeRock::control((void))
 0002:801F4A94       LavaStrangeRock::exeWait((void))
 0002:801F4CE8       LotusLeaf::LotusLeaf((char const *))
 0002:801F4D48       LotusLeaf::init((JMapInfoIter const &))
 0002:801F4E80       LotusLeaf::exeWait((void))
 0002:801F4EE8       LotusLeaf::exeWaitPlayerOn((void))
 0002:801F4F40       LotusLeaf::exeShake((void))
 0002:801F514C       LotusLeaf::convergeToInitPos((void))
 0002:801F5300       MagicBell::MagicBell((char const *))
 0002:801F5360       MagicBell::init((JMapInfoIter const &))
 0002:801F5534       MagicBell::exeWait((void))
 0002:801F5638       MagicBell::exeRing((void))
 0002:801F59AC       MagicBell::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801F5AB0       MagicBell::tryRing((void))
 0002:801F5C04       MagicBell::startRing((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:801F5DA4       ManholeCover::init((JMapInfoIter const &))
 0002:801F5E64       ManholeCover::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801F5EF8       WaterfallCaveCover::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:801F5F5C       ManholeCover::exeOpen((void))
 0002:801F5FD0       ManholeCover::exeRattle((void))
 0002:801F6138       MapObjActor::MapObjActor((char const *))
 0002:801F61C4       MapObjActor::MapObjActor((char const *,char const *))
 0002:801F6258       MapObjActor::init((JMapInfoIter const &))
 0002:801F6270       MapObjActor::initAfterPlacement((void))
 0002:801F6294       MapObjActor::appear((void))
 0002:801F6374       MapObjActor::kill((void))
 0002:801F63F0       MapObjActor::initialize((JMapInfoIter const &,MapObjActorInitInfo const &))
 0002:801F6EE0       MapObjActor::isObjectName(const(char const *))
 0002:801F6EF0       MapObjActor::connectToScene((MapObjActorInitInfo const &))
 0002:801F6F98       MapObjActor::setStateWait((void))
 0002:801F6FA0       nullsub_91
 0002:801F7034       MapObjActorUtil::startAllMapPartsFunctions((MapObjActor const *))
 0002:801F7038       MapObjActor::control((void))
 0002:801F71E8       MapObjActor::calcAndSetBaseMtx((void))
 0002:801F7444       MapObjActor::tryCreateBreakModel((MapObjActorInitInfo const &))
 0002:801F7550       MapObjActor::tryEmitWaitEffect((void))
 0002:801F75F0       MapObjActor::tryDeleteWaitEffect((void))
 0002:801F76B0       MapObjActorUtil::startAllMapPartsFunctions((MapObjActor const *))
 0002:801F76B4       MapObjActorUtil::endAllMapPartsFunctions((MapObjActor const *))
 0002:801F76B8       MapObjActorUtil::pauseAllMapPartsFunctions((MapObjActor const *))
 0002:801F76C4       MapObjActor::updateProjmapMtx((void))
 0002:801F76E8       MapObjActor::exeWait((void))
 0002:801F7740       MapObjActor::exeMove((void))
 0002:801F77D4       MapObjActorUtil::startAllMapPartsFunctions((MapObjActor const *))
 0002:801F788C       MapObjActorUtil::endAllMapPartsFunctions((MapObjActor const *))
 0002:801F7928       MapObjActorUtil::pauseAllMapPartsFunctions((MapObjActor const *))
 0002:801F7968       MapObjActorUtil::resumeAllMapPartsFunctions((MapObjActor const *))
 0002:801F79A8       MapObjActorUtil::isRotatorMoving((MapObjActor const *))
 0002:801F79D8       MapObjActorUtil::getSeesaw1AxisAngularSpeed((MapObjActor const *))
 0002:801F79E4       MapObjActorUtil::forceRotateSeesaw1Axis((MapObjActor const *,float))
 0002:801F79F0       MapObjActorUtil::startRotator((MapObjActor const *))
 0002:801F7A04       MapObjActorUtil::startRailMover((MapObjActor const *))
 0002:801F7A18       MapObjActorUtil::endRotator((MapObjActor const *))
 0002:801F7A2C       MapObjActorUtil::pauseRotator((MapObjActor const *))
 0002:801F7A44       MapObjActorUtil::startBreak((MapObjActor *))
 0002:801F7A8C       MapObjActorUtil::tryStartBreak((MapObjActor *))
 0002:801F7BB4       MapObjActorUtil::isBreakStopped((MapObjActor const *))
 0002:801F7C30       MapObjActorUtil::appearBloomModel((MapObjActor *))
 0002:801F7DF8       MapObjActorInitInfo::MapObjActorInitInfo((void))
 0002:801F7EE8       MapObjActorInitInfo::setupDefaultPos((void))
 0002:801F7EFC       MapObjActorInitInfo::setupConnectToScene((void))
 0002:801F7F08       MapObjActorInitInfo::setupBinder((float,float))
 0002:801F7F1C       MapObjActorInitInfo::setupEffect((char const *))
 0002:801F7F34       J3DColorBlockLightOn::setMatColorOffset((ulong))
 0002:801F7F3C       MapObjActorInitInfo::setupNoAppearRiddleSE((void))
 0002:801F7F54       MapObjActorInitInfo::setupHitSensorCallBack((void))
 0002:801F7F64       MapObjActorInitInfo::setupHitSensorParam((ushort,float,JGeometry::TVec3<f> const &))
 0002:801F7F88       MapObjActorInitInfo::setupNerve((Nerve const *))
 0002:801F7F90       MapObjActorInitInfo::setupShadow((char const *))
 0002:801F7FA0       MapObjActorInitInfo::setupGroupClipping((long))
 0002:801F7FB8       MapObjActorInitInfo::setupProjmapMtx((bool))
 0002:801F7FC8       MapObjActorInitInfo::setupRailMover((void))
 0002:801F7FD4       MapObjActorInitInfo::setupRotator((void))
 0002:801F7FE0       MapObjActorInitInfo::setupRailRotator((void))
 0002:801F7FEC       MapObjActorInitInfo::setupSeesaw1AxisRotator((char const *,float))
 0002:801F8000       MapObjActorInitInfo::setupRailPosture((void))
 0002:801F800C       ImageEffectDirector::turnOffDOFInSubjective((void))
 0002:801F8018       GameScenePauseControl::requestPauseMenuOff((void))
 0002:801F8024       MapObjActorInitInfo::setupSeAppear((void))
 0002:801F8030       MapObjActorInitInfo::setupMirrorReflection((bool))
 0002:801F8040       MapObjActorInitInfo::setupPrepareChangeDummyTexture((char const *))
 0002:801F8048       MapObjActorInitInfo::setupNoUseLodCtrl((void))
 0002:801F8054       MapObjActorUtil::setupInitInfoTypical((MapObjActorInitInfo *,char const *))
 0002:801F8240       MapObjActorUtil::setupInitInfoColorChangeArg0((MapObjActorInitInfo *,JMapInfoIter const &))
 0002:801F8284       MapObjActorUtil::setupInitInfoTextureChangeArg1((MapObjActorInitInfo *,JMapInfoIter const &))
 0002:801F82C8       MapObjActorUtil::setupInitInfoShadowLengthArg2((MapObjActorInitInfo *,JMapInfoIter const &))
 0002:801F830C       MapObjActorUtil::setupInitInfoSeesaw((MapObjActorInitInfo *,JMapInfoIter const &,char const *,float))
 0002:801F838C       MapObjActorUtil::setupInitInfoSimpleMapObj((MapObjActorInitInfo *))
 0002:801F83D0       MapObjActorUtil::setupInitInfoPlanet((MapObjActorInitInfo *))
 0002:801F8404       MapObjConnector::MapObjConnector((LiveActor *))
 0002:801F8444       MapObjConnector::attachToBack((void))
 0002:801F84C4       MapObjConnector::attach((JGeometry::TVec3<f> const &))
 0002:801F85E0       MapObjConnector::connect((void))
 0002:801F85E8       MapObjConnector::connect((LiveActor *))
 0002:801F8670       MarblePlanet::MarblePlanet((char const *))
 0002:801F86C8       MarblePlanet::init((JMapInfoIter const &))
 0002:801F882C       MarblePlanet::exeScaleUpCore((void))
 0002:801F8A28       MarblePlanet::exeBreakCore((void))
 0002:801F8AD0       MarblePlanet::startClipped((void))
 0002:801F8B54       MarblePlanet::endClipped((void))
 0002:801F8BD8       MarblePlanet::kill((void))
 0002:801F8C20       MarblePlanet::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801F8C8C       MarblePlanet::initCoreAndElectron((void))
 0002:801F8E60       MarblePlanetElectron::MarblePlanetElectron((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:801F8EEC       MarblePlanetElectron::init((JMapInfoIter const &))
 0002:801F9054       MarblePlanetElectron::exeMove((void))
 0002:801F90D8       MarblePlanetElectron::exeAttack((void))
 0002:801F9150       MarblePlanetElectron::control((void))
 0002:801F91A4       MarblePlanetElectron::attackSensor((HitSensor *,HitSensor *))
 0002:801F9320       MarblePlanetElectron::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801F937C       MarblePlanetElectron::crashElectron((HitSensor *))
 0002:801F9420       MarblePlanetElectronShadow::MarblePlanetElectronShadow((LiveActor *,JGeometry::TVec3<f> const &,char const *))
 0002:801F9478       MarblePlanetElectronShadow::init((JMapInfoIter const &))
 0002:801F94D8       MarblePlanetElectronShadow::calcAndSetBaseMtx((void))
 0002:801F9710       MarioLauncher::MarioLauncher((char const *))
 0002:801F9798       MarioLauncher::init((JMapInfoIter const &))
 0002:801F9AAC       MarioLauncherShell::init((JMapInfoIter const &))
 0002:801F9B08       MarioLauncherLayout::init((JMapInfoIter const &))
 0002:801F9BDC       MarioLauncher::exeReady((void))
 0002:801F9C9C       MarioLauncher::exePlayerIn((void))
 0002:801F9D98       MarioLauncher::exePrep((void))
 0002:801F9FD8       MarioLauncher::exeFlight((void))
 0002:801FA110       MarioLauncher::exeKill((void))
 0002:801FA1A0       MarioLauncherShell::calcBaseMtx((void))
 0002:801FA31C       MarioLauncher::exeReject((void))
 0002:801FA478       MarioLauncher::exeLand((void))
 0002:801FA4D0       MarioLauncher::attackSensor((HitSensor *,HitSensor *))
 0002:801FA524       MarioLauncher::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:801FA584       MarioLauncher::receiveMsgPush((HitSensor *,HitSensor *))
 0002:801FA5F4       MarioLauncher::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FA6A8       MarioLauncher::doReady((HitSensor *))
 0002:801FA740       MarioLauncher::doPrep((void))
 0002:801FA83C       MarioLauncher::doAim((void))
 0002:801FA964       MarioLauncher::doReject((void))
 0002:801FAA34       MarioLauncherLayout::kill((void))
 0002:801FAC40       MarioLauncher::doFlight((void))
 0002:801FAEAC       MarioLauncher::doLanding((long))
 0002:801FAFFC       MarioLauncher::testHitCollision((void))
 0002:801FB028       MarioLauncher::isBreak((Triangle const *))
 0002:801FB0B0       LiveActor::calcAndSetBaseMtx((void))
 0002:801FB2C8       MarioLauncher::~MarioLauncher((void))
 0002:801FB464       MarioLauncherAttractor::init((JMapInfoIter const &))
 0002:801FB644       MechaKoopaPartsArm::init((JMapInfoIter const &))
 0002:801FB718       SandCapsulePressGround::exeWait((void))
 0002:801FB77C       MechaKoopaPartsArm::exeMoveStart((void))
 0002:801FB874       MechaKoopaPartsArm::exeMove((void))
 0002:801FB90C       SpaceShipStep::exeMoveSign((void))
 0002:801FB990       MechaKoopaPartsArm::exeBreak((void))
 0002:801FBA44       MechaKoopaPartsArm::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:801FBD04       MechaKoopaPartsHead::init((JMapInfoIter const &))
 0002:801FBDF8       MechaKoopaPartsHead::exeDemoBreak((void))
 0002:801FBF48       MechaKoopaPartsHead::exeDemoWhiteFadeOut((void))
 0002:801FBFB4       MechaKoopaPartsHead::exeDemoWhiteWait((void))
 0002:801FC018       MechaKoopaPartsHead::exeDemoWhiteFadeIn((void))
 0002:801FC070       MechaKoopaPartsHead::exeDemoAppearStar((void))
 0002:801FC258       MercatorFixParts::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FC2C8       MercatorFixParts::init((JMapInfoIter const &))
 0002:801FC42C       MercatorRailMoveParts::MercatorRailMoveParts((char const *))
 0002:801FC494       MercatorRailMoveParts::initAfterPlacement((void))
 0002:801FC4F4       MercatorRailMoveParts::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FC560       MercatorRailMoveParts::startMove((void))
 0002:801FC56C       MercatorRailMoveParts::endMove((void))
 0002:801FC578       MercatorRailMoveParts::control((void))
 0002:801FC600       MercatorRailMoveParts::calcAndSetBaseMtx((void))
 0002:801FC6BC       MercatorRailMoveParts::updatePose((void))
 0002:801FC73C       MercatorRailMoveParts::init((JMapInfoIter const &))
 0002:801FCB04       MercatorRotateParts::MercatorRotateParts((char const *))
 0002:801FCB4C       MercatorRotateParts::initAfterPlacement((void))
 0002:801FCBA8       MercatorRotateParts::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FCBBC       PhantomShipHandle::control((void))
 0002:801FCBD0       MercatorRotateParts::calcAndSetBaseMtx((void))
 0002:801FCC80       MercatorRotateParts::init((JMapInfoIter const &))
 0002:801FCED4       MeteoContainer::init((JMapInfoIter const &))
 0002:801FD02C       MeteoContainer::kill((void))
 0002:801FD0FC       MeteoContainer::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FD154       MeteoContainer::exeDestroy((void))
 0002:801FD274       MeteorStrike::MeteorStrike((char const *))
 0002:801FD2E8       MeteorStrike::init((JMapInfoIter const &))
 0002:801FD46C       MeteorStrike::initAfterPlacement((void))
 0002:801FD594       MeteorStrike::appear((long))
 0002:801FD644       MeteorStrike::kill((void))
 0002:801FD69C       MeteorStrike::getMovedPos(const(JGeometry::TVec3<f> *,long))
 0002:801FD740       MeteorStrike::getSpeed((JMapInfoIter const &))
 0002:801FD770       MeteorStrike::calcAndSetBaseMtx((void))
 0002:801FD918       MeteorStrike::attackSensor((HitSensor *,HitSensor *))
 0002:801FD9E8       MeteorStrike::initMapToolInfo((JMapInfoIter const &))
 0002:801FDA80       MeteorStrike::initModel((void))
 0002:801FDB34       MeteorStrike::calcBreakPosture((JGeometry::TVec3<f> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:801FDCBC       MeteorStrike::emitEffectColumn((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:801FDCF8       MeteorStrike::startRumble((void))
 0002:801FDD30       MeteorStrike::isInScreen(const(void))
 0002:801FDDA4       MeteorStrike::exeMove((void))
 0002:801FE094       MeteorStrike::exeBreak((void))
 0002:801FE244       MeteorStrikeLauncher::MeteorStrikeLauncher((char const *))
 0002:801FE2A0       MeteorStrikeLauncher::init((JMapInfoIter const &))
 0002:801FE498       MeteorStrikeLauncher::kill((void))
 0002:801FE524       MeteorStrikeLauncher::initMapToolInfo((JMapInfoIter const &))
 0002:801FE5A8       MeteorStrikeLauncher::getUnusedMeteorStrike((void))
 0002:801FE61C       MeteorStrikeLauncher::create((void))
 0002:801FE74C       MeteorStrikeLauncher::exeCreate((void))
 0002:801FE8C0       MiniatureGalaxy::MiniatureGalaxy((char const *))
 0002:801FE988       MiniatureGalaxy::init((JMapInfoIter const &))
 0002:801FEB70       MiniatureGalaxy::initAfterPlacement((void))
 0002:801FEBA8       MiniatureGalaxy::appear((void))
 0002:801FED94       MiniatureGalaxy::kill((void))
 0002:801FEEA8       MiniatureGalaxy::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:801FEFEC       MiniatureGalaxy::control((void))
 0002:801FF068       MiniatureGalaxy::calcAndSetBaseMtx((void))
 0002:801FF1F0       MiniatureGalaxy::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:801FF324       MiniatureGalaxy::initPartsModel((void))
 0002:801FF638       MiniatureGalaxy::setScale((float))
 0002:801FF6D8       MiniatureGalaxy::tryZoomIn((bool))
 0002:801FF70C       MiniatureGalaxy::tryZoomOut((void))
 0002:801FF738       MiniatureGalaxy::updateZoomInOut((void))
 0002:801FF830       MiniatureGalaxy::updateNamePlate((void))
 0002:801FF894       MiniatureGalaxy::appearUnknownModel((char const *))
 0002:801FF980       MiniatureGalaxy::hideUnknownModel((void))
 0002:801FF9E0       MiniatureGalaxy::showSelectModel((void))
 0002:801FFA90       MiniatureGalaxy::disappearSelectModel((void))
 0002:801FFB98       MiniatureGalaxy::showNamePlate((bool))
 0002:801FFC38       MiniatureGalaxy::isUseKoopaFaceModel(const(void))
 0002:801FFCB0       MiniatureGalaxy::playPointedME((void))
 0002:801FFD4C       MiniatureGalaxy::playNeedStarME((void))
 0002:801FFDE8       MiniatureGalaxy::exeWait((void))
 0002:801FFEEC       MiniatureGalaxy::exeNotSelected((void))
 0002:801FFF78       MiniatureGalaxy::exeOpen((void))
 0002:802002C8       NrvMiniatureGalaxy::MiniatureGalaxyNrvSelected::execute(const(Spine *))
 0002:802002DC       MiniatureGalaxyHolder::MiniatureGalaxyHolder((void))
 0002:80200360       MiniatureGalaxyHolder::registerActor((LiveActor *,JMapInfoIter const &))
 0002:8020040C       MiniatureGalaxyHolder::isRegisteredActor((LiveActor const *))
 0002:8020047C       MiniatureGalaxyHolder::findMiniatureGalaxy(const(char const *))
 0002:802004F8       MiniatureGalaxyHolder::killAllMiniatureGalaxy((void))
 0002:8020055C       MiniatureGalaxyHolder::calcIndex(const(LiveActor const *))
 0002:80200614       MiniatureGalaxyHolder::updateCometStatus((void))
 0002:802006B4       MiniatureGalaxyFunction::registerMiniatureGalaxyToHolder((LiveActor *,JMapInfoIter const &))
 0002:80200708       MiniatureGalaxyFunction::getMiniatureGalaxyNum((void))
 0002:80200738       MiniatureGalaxyFunction::calcMiniatureGalaxyIndex((LiveActor const *))
 0002:80200774       MiniatureGalaxyFunction::updateCometStatus((void))
 0002:802007A0       MiniatureGalaxyFunction::getCometLandMiniatureGalaxy((void))
 0002:802007CC       MiniatureGalaxyFunction::getCometNameId((void))
 0002:802007F8       MiniatureGalaxyFunction::getPointingMiniatureGalaxy((void))
 0002:8020094C       MorphItemObjNeo::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80200B7C       MorphItemObjNeo::MorphItemObjNeo((char const *,long))
 0002:80200BDC       MorphItemObjNeo::init((JMapInfoIter const &))
 0002:80201240       MorphItemObjNeo::appear((void))
 0002:802013F8       MorphItemObjNeo::control((void))
 0002:802015B4       MorphItemObjNeo::calcAndSetBaseMtx((void))
 0002:80201900       MorphItemObjNeo::attackSensor((HitSensor *,HitSensor *))
 0002:80201964       MorphItemObjNeo::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80201AA4       MorphItemObjNeo::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80201DCC       MorphItemObjNeo::kill((void))
 0002:80201EC0       MorphItemObjNeo::makeActorDead((void))
 0002:80201F10       MorphItemObjNeo::glowEffect((void))
 0002:80201F84       MorphItemObjNeo::exeWait((void))
 0002:802021F4       MorphItemObjNeo::exeAppear((void))
 0002:802022D0       MorphItemObjNeo::exeSwitchAppear((void))
 0002:802025AC       MorphItemObjNeo::exeFly((void))
 0002:8020266C       MorphItemObjNeo::isDemo(const(void))
 0002:80202810       NeedlePlant::init((JMapInfoIter const &))
 0002:802029F4       NeedlePlant::kill((void))
 0002:80202AA8       NeedlePlant::attackSensor((HitSensor *,HitSensor *))
 0002:80202BE0       NeedlePlant::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80202C54       NeedlePlant::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80202CDC       SpiderMapBlock::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80202D0C       MR::connectToSceneNoShadowedMapObj((LiveActor *))
 0002:80202DBC       NrvNeedlePlant::NeedlePlantNrvWait::execute(const(Spine *))
 0002:80202E00       NormalMapBase::NormalMapBase((char const *))
 0002:80202E9C       NormalMapBase::setup((char const *))
 0002:80202F5C       NormalMapBase::initNormalMap((void))
 0002:80202FA0       NormalMapBase::setupLighting((void))
 0002:802030B8       NormalMapBase::setupTexture((void))
 0002:80203288       nullsub_95
 0002:8020328C       NormalMapBase::calcAnim((void))
 0002:802032F4       NormalMapBase::updateBtkMtx((void))
 0002:802033AC       NormalMapBase::loadTexMtxBtk(const(J3DMaterial *))
 0002:802033E4       NormalMapBase::draw(const(void))
 0002:802035B8       NormalMapBase::updateLightMtx(const(float *[4]))
 0002:802038F0       NormalMapBase::isNormalMapMaterial(const(char const *))
 0002:8020394C       NormalMapBase::standardDraw(const(J3DModel *))
 0002:802039E0       NormalMapBase::shapeAnalyzeDraw(const(J3DModel *))
 0002:80203CAC       NormalMapBase::drawShape(const(J3DModel *,J3DShape *))
 0002:80203DC0       NormalMapBase::loadDiffuseGradTex(const(_GXTexMapID))
 0002:80203E84       NormalMapBase::loadNormalTex(const(JUTTexture const *,_GXTexMapID))
 0002:80203FBC       NormalMapBase::loadTexture1(const(J3DMaterial *))
 0002:802040E0       NormalMapBase::drawMaterialSetting(const(J3DMaterial *))
 0002:802043A8       NormalMapBase::drawSetting(const(float *[4]))
 0002:80204514       NormalMapBase::setTevForObject_Material(const(void))
 0002:802045BC       NormalMapBase::setTevForObject(const(void))
 0002:80204B70       def_80204918
 0002:80204BD8       NormalMapBase::setTevForDebug(const(void))
 0002:80204D10       NormalMapBase::drawSettingForDebug(const(float *[4]))
 0002:80205184       NormalMapBase::createGradTexture((void))
 0002:802055A4       NormalMapBase::swapColorGB((JUTTexture *))
 0002:80205758       NormalMapBase::indirectCapture(const(void))
 0002:80205D1C       NormalMapBase::loadDirectLightTex(const(_GXTexMapID))
 0002:80205DE8       NormalMapBase::drawSettingForCapture(const(float *[4]))
 0002:80206164       NormalMapBase::loadData((char const *,ulong))
 0002:80206328       Color10::Color10((void))
 0002:80206478       NormalMapTestObj::init((JMapInfoIter const &))
 0002:802064E4       Note::Note((char const *,JGeometry::TVec3<f> const &,NoteFairy *))
 0002:80206568       Note::init((JMapInfoIter const &))
 0002:802066C0       Note::startCountDown((void))
 0002:802066CC       Note::exeWait((void))
 0002:80206774       Note::exeCountDown((void))
 0002:80206808       Note::exeFlyUp((void))
 0002:802068A8       Note::control((void))
 0002:802068E4       Note::calcAndSetBaseMtx((void))
 0002:80206980       Note::attackSensor((HitSensor *,HitSensor *))
 0002:802069F4       NoteGroup::NoteGroup((void))
 0002:80206A44       MR::connectToSceneMapObjMovement((NameObj *))
 0002:80206A48       NoteGroup::movement((void))
 0002:80206BE0       NoteFairy::NoteFairy((char const *))
 0002:80206C94       NoteFairy::init((JMapInfoIter const &))
 0002:80206D44       def_80206D1C
 0002:802071AC       NoteFairy::control((void))
 0002:8020723C       NoteFairy::kill((void))
 0002:8020728C       NoteFairy::killAllNotes((void))
 0002:802072F4       NoteFairy::exeHide((void))
 0002:802073D8       NoteFairy::exeStartAppearDemo((void))
 0002:80207490       NoteFairy::exeRailMoveStart((void))
 0002:80207534       NoteFairy::exeDemoAppear((void))
 0002:8020778C       NoteFairy::exeAppearNoteBloom((void))
 0002:802079D8       NoteFairy::exeAppearNote((void))
 0002:80207AC8       NoteFairy::exeEndWait((void))
 0002:80207BD4       NoteFairy::exeSuccessDemo((void))
 0002:80207C2C       NoteFairy::exeSuccess((void))
 0002:80207CE0       NoteFairy::enterDemoAppear((Nerve const *,bool))
 0002:80207D78       NoteFairy::isDeadAllNotes((void))
 0002:80207DE8       NoteFairy::setLastGotNote((Note *))
 0002:80207DF0       NoteFairy::getNoteCoord((long))
 0002:80207E48       NoteFairy::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80208074       OceanFloaterLandParts::OceanFloaterLandParts((char const *))
 0002:802080E8       OceanFloaterLandParts::init((JMapInfoIter const &))
 0002:802082C8       OceanFloaterLandParts::makeActorAppeared((void))
 0002:80208304       OceanFloaterLandParts::makeActorDead((void))
 0002:80208348       OceanFloaterLandParts::initMoveType((JMapInfoIter const &))
 0002:802083D0       OceanFloaterLandParts::initRailMoveFunction((JMapInfoIter const &))
 0002:80208464       OceanFloaterLandParts::control((void))
 0002:80208478       RailMoveObj::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802084D8       OceanFloaterLandParts::endFloatUpDemo((void))
 0002:80208544       OceanFloaterLandParts::exeMove((void))
 0002:802087D0       OceanSmallTurtle::OceanSmallTurtle((char const *))
 0002:80208874       OceanSmallTurtle::init((JMapInfoIter const &))
 0002:80208A8C       OceanSmallTurtle::control((void))
 0002:80208B24       OceanSmallTurtle::calcAndSetBaseMtx((void))
 0002:80208C20       OceanSmallTurtle::exeWait((void))
 0002:80208CBC       OceanSmallTurtle::exeFloatSignal((void))
 0002:80208DF0       OceanSmallTurtle::exeFloatUp((void))
 0002:80208EB4       OceanSmallTurtle::exeCatchRail((void))
 0002:80208F28       OceanSmallTurtle::exeRailMove((void))
 0002:80208FF0       SpringWaterFloaterSpot::startFloat((void))
 0002:80209030       OceanSmallTurtle::boundFloater((void))
 0002:80209170       OceanSmallTurtle::catchNearestRailPos((void))
 0002:80209210       OceanSmallTurtle::floatFloater((void))
 0002:80209330       OceanSmallTurtle::isNeedsForBound((void))
 0002:802093B4       OceanSmallTurtle::isEndSpringWater((void))
 0002:802095B8       @unnamed@OceanWaveFloater_cpp@::getParam((char const *))
 0002:80209628       OceanWaveFloater::OceanWaveFloater((char const *))
 0002:80209690       OceanWaveFloater::init((JMapInfoIter const &))
 0002:802098B0       OceanWaveFloater::initAfterPlacement((void))
 0002:802099DC       OceanWaveFloater::control((void))
 0002:80209A78       OceanWaveFloater::calcAndSetBaseMtx((void))
 0002:80209C30       OceanWaveFloater::getCurrentSinkDepth(const(void))
 0002:80209D04       OceanWaveFloater::controlEffect((void))
 0002:80209E74       PalmIsland::PalmIsland((char const *))
 0002:80209ECC       PalmIsland::init((JMapInfoIter const &))
 0002:80209FB8       PalmIsland::exeFloat((void))
 0002:8020A204       PeachCastleGardenPlanet::init((JMapInfoIter const &))
 0002:8020A278       MR::connectToScenePlanet((LiveActor *))
 0002:8020A4A0       PhantomShipBoxFloater::PhantomShipBoxFloater((char const *))
 0002:8020A500       PhantomShipBoxFloater::init((JMapInfoIter const &))
 0002:8020A660       PhantomShipBoxFloater::control((void))
 0002:8020A6B4       PhantomShipBoxFloater::getCurrentSinkDepth(const(void))
 0002:8020A7AC       PhantomShipBoxFloater::exeWait((void))
 0002:8020A80C       PhantomShipBoxFloater::exeMove((void))
 0002:8020A964       PhantomShipBoxFloater::exeMoveUnderWater((void))
 0002:8020AA30       PhantomShipBoxFloater::playRippleSe((void))
 0002:8020ABB4       PhantomShipBridge::init((JMapInfoIter const &))
 0002:8020ADEC       PhantomShipBridge::setStateMoveA((void))
 0002:8020AE74       PhantomShipBridge::exeMoveA((void))
 0002:8020AF88       PhantomShipBridge::exeMoveB((void))
 0002:8020B2BC       PhantomShipHandle::calcAndSetBaseMtx((void))
 0002:8020B354       PhantomShipHandle::init((JMapInfoIter const &))
 0002:8020B45C       LavaHomeSeesawRotator::getRotateMtx(const(void))
 0002:8020B4C0       PhantomTorch::PhantomTorch((char const *))
 0002:8020B514       PhantomTorch::init((JMapInfoIter const &))
 0002:8020B748       PhantomTorch::makeActorAppeared((void))
 0002:8020B790       PhantomTorch::makeActorDead((void))
 0002:8020B7E0       PhantomTorch::kill((void))
 0002:8020B8F0       PhantomTorch::attackSensor((HitSensor *,HitSensor *))
 0002:8020B964       PhantomTorch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8020B9E8       PhantomTorch::soundOrder((void))
 0002:8020BB10       PhantomTorch::exeWait((void))
 0002:8020BB90       PhantomTorch::exeAttack((void))
 0002:8020BC30       PhantomTorch::exeExtinguish((void))
 0002:8020BEB0       PicketSwitch::init((JMapInfoIter const &))
 0002:8020BFAC       PicketSwitch::exeFirstDrop((void))
 0002:8020C018       PicketSwitch::exeLastDrop((void))
 0002:8020C0CC       PicketSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8020C260       NrvScrewSwitch::ScrewSwitchNrvWait::execute(const(Spine *))
 0002:8020C2B4       PlantGroup::PlantGroup((char const *))
 0002:8020C330       PlantGroup::init((JMapInfoIter const &))
 0002:8020C570       PlantGroup::makeActorAppeared((void))
 0002:8020C5DC       PlantGroup::makeActorDead((void))
 0002:8020C648       PlantGroup::initMember((long,JMapInfoIter const &))
 0002:8020C84C       PlantGroup::placeOnCollisionFormCircle((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8020CBA4       PlantGroup::calcBoundingSphereRadius((JGeometry::TVec3<f> const &))
 0002:8020CD6C       PlantGroup::initAfterPlacement((void))
 0002:8020CE6C       PlantGroup::control((void))
 0002:8020CF8C       PlantGroup::emitHintEffect((void))
 0002:8020D08C       PlantGroup::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8020D100       PlantGroup::attackSensor((HitSensor *,HitSensor *))
 0002:8020D210       SmallStone::startClipped((void))
 0002:8020D27C       SmallStone::endClipped((void))
 0002:8020D2E8       PlantMember::init((JMapInfoIter const &))
 0002:8020D404       PlantMember::exeShakeStrong((void))
 0002:8020D5C0       PlantMember::generateItem((PlantGroup *))
 0002:8020D690       PlantMember::initPosture((void))
 0002:8020D948       PlantMember::tryShake((HitSensor *))
 0002:8020DA6C       PlantMember::tryPush((JGeometry::TVec3<f> const &,float,long))
 0002:8020DC10       PlantMember::animControl((PlantGroup *))
 0002:8020DE68       PlantPoint::PlantPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:8020DF40       PlantPoint::setAxisAndPos((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8020DFA8       PlantRailInfo::PlantRailInfo((JMapInfoIter const &,float))
 0002:8020E134       PlantRailInfo::calcPosAndAxisY(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float))
 0002:8020E2DC       PlantRailInfo::calcNearestPointPos(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,long))
 0002:8020E374       PomponPlant::PomponPlant((char const *))
 0002:8020E3C4       PomponPlant::init((JMapInfoIter const &))
 0002:8020E50C       PomponPlant::attackSensor((HitSensor *,HitSensor *))
 0002:8020E5D8       PomponPlant::tryGenItem((void))
 0002:8020E730       PomponPlant::exeSwingDpd((void))
 0002:8020E7AC       PomponPlant::exeSwingPlayer((void))
 0002:8020E944       @unnamed@PowerStar_cpp@::setupColor((LiveActor *,bool,int))
 0002:8020E9EC       @unnamed@PowerStar_cpp@::setupColorGrandStar((LiveActor *,bool))
 0002:8020EA6C       @unnamed@PowerStar_cpp@::requestPointLight((LiveActor const *,int))
 0002:8020EB14       PowerStar::PowerStar((char const *))
 0002:8020EBD4       PowerStar::init((JMapInfoIter const &))
 0002:8020EE54       PowerStar::makeActorAppeared((void))
 0002:8020EE98       PowerStar::requestAppear((void))
 0002:8020EF2C       PowerStar::setDemoAppearPos((JGeometry::TVec3<f> const &))
 0002:8020F008       PowerStar::setupColor((LiveActor *,NameObj const *,long))
 0002:8020F0BC       PowerStar::setupColorAtResultSequence((LiveActor *,bool))
 0002:8020F148       PowerStar::requestPointLight((LiveActor const *,NameObj const *,long))
 0002:8020F1E0       PowerStar::requestPointLightAtResultSequence((LiveActor const *))
 0002:8020F260       PowerStar::getBtpFrameCurrentStage((long))
 0002:8020F280       MR::isButlerMapAppear((void))
 0002:8020F2B4       PowerStar::initShadowPowerStar((LiveActor *,bool))
 0002:8020F318       PowerStar::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8020F35C       PowerStar::control((void))
 0002:8020F47C       PowerStar::calcAndSetBaseMtx((void))
 0002:8020F628       PowerStar::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8020F708       PowerStar::initMapToolInfo((JMapInfoIter const &))
 0002:8020F7F0       PowerStar::initModel((void))
 0002:8020F988       PowerStar::initSensorGrandStar((void))
 0002:8020FB90       PowerStar::initShadow((JMapInfoIter const &))
 0002:8020FC24       PowerStar::initPosture((void))
 0002:8020FCFC       PowerStar::endAppearDemo((void))
 0002:8020FD5C       PowerStar::getNearestAppearPoint(const(JGeometry::TVec3<f> const &))
 0002:8020FE00       PowerStar::getAppearCameraActor((void))
 0002:8020FE14       PowerStar::getAppearCameraInfo(const(void))
 0002:8020FE30       PowerStar::requestAppearOrWait((void))
 0002:8020FEE4       PowerStar::calcAppearDemoRiseTrans(const(JGeometry::TVec3<f> *,float))
 0002:8020FFA4       PowerStar::processWait((float))
 0002:802100F8       PowerStar::exeAppearDemoRise((void))
 0002:8021027C       PowerStar::exeAppearDemoMove((void))
 0002:8021060C       PowerStar::exeAppearDemoKoopa((void))
 0002:8021085C       PowerStar::exeWait((void))
 0002:802108DC       PowerStar::exeWeak((void))
 0002:80210954       PowerStar::exeWeakNoRotate((void))
 0002:802109A4       PowerStar::exeWeakToWait((void))
 0002:80210A38       PowerStar::exeStageClearDemo((void))
 0002:80210E74       PowerStarAppearPoint::init((JMapInfoIter const &))
 0002:80210EE8       PowerStarHolder::PowerStarHolder((char const *))
 0002:80210F3C       PowerStarHolder::registerPowerStar((PowerStar *,int))
 0002:80210FA8       PowerStarHolder::requestAppearPowerStar((int,JGeometry::TVec3<f> const *,bool))
 0002:80211030       PowerStarHolder::appearPowerStarWithoutDemo((int))
 0002:80211080       PowerStarHolder::getAppearedPowerStar(const(int))
 0002:802110CC       PowerStarHolder::findPowerStarRequestInfo(const(int))
 0002:80211150       MR::suspendAsyncExecuteThread((char const *))
 0002:80211188       PowerStarFunction::findPowerStar((int))
 0002:80211218       PressureMessenger::PressureMessenger((MsgSharedGroup *,char const *))
 0002:80211270       PressureMessenger::init((JMapInfoIter const &))
 0002:802112D8       PressureMessenger::exeSync((void))
 0002:80211348       PressureBase::PressureBase((char const *))
 0002:802113CC       PressureBase::init((JMapInfoIter const &))
 0002:8021176C       PressureBase::initAfterPlacement((void))
 0002:80211830       PressureBase::control((void))
 0002:8021187C       PressureBase::exeBound((void))
 0002:8021199C       PressureBase::exeWait((void))
 0002:80211A8C       PressureBase::exeShot((void))
 0002:80211B98       PressureBase::attackSensor((HitSensor *,HitSensor *))
 0002:80211C00       PressureBase::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80211CD0       PressureBase::startRelax((void))
 0002:80211D64       PressureBase::calcJointCannonV((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80211F28       PressureBase::isShotTypeOnGravity(const(void))
 0002:80211F38       PressureBase::isShotTypeFollow(const(void))
 0002:80212058       NrvPressureBase::PressureBaseNrvFirstWait::execute(const(Spine *))
 0002:802120A4       NrvPressureBase::PressureBaseNrvRelax::execute(const(Spine *))
 0002:80212340       PrizeRing::PrizeRing((void))
 0002:802123A4       PrizeRing::init((JMapInfoIter const &))
 0002:8021248C       PrizeRing::setNumber((int))
 0002:8021259C       PrizeRing::exeStart((void))
 0002:80212638       PrizeRing::exeLoop((void))
 0002:802126B4       PrizeRing::exeTimeout((void))
 0002:80212760       PrizeRing::exePass((void))
 0002:802127E0       PrizeRing::isPassed(const(void))
 0002:80212830       PrizeRing::attackSensor((HitSensor *,HitSensor *))
 0002:80212884       PrizeRing::playSound(const(void))
 0002:8021295C       PrizeRing::isOnTriggerTimeoutFlash(const(void))
 0002:80212B58       PTimerSwitch::PTimerSwitch((char const *))
 0002:80212BA8       PTimerSwitch::reset((void))
 0002:80212C08       PTimerSwitch::init((JMapInfoIter const &))
 0002:80212D94       PTimerSwitch::reset((void))
 0002:80212D98       PTimerSwitch::kill((void))
 0002:80212E54       PTimerSwitch::control((void))
 0002:80212ECC       PTimerSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80212F54       PTimerSwitch::trySwitchDown((void))
 0002:80213028       PTimerSwitch::exeSwitchDown((void))
 0002:8021307C       PTimerSwitch::exeOn((void))
 0002:80213210       PunchBox::init((JMapInfoIter const &))
 0002:802134EC       PunchBox::initAfterPlacement((void))
 0002:80213538       PunchBox::attackSensor((HitSensor *,HitSensor *))
 0002:80213608       PunchBox::control((void))
 0002:8021364C       PunchBox::calcAndSetBaseMtx((void))
 0002:802136A0       PunchBox::exeWait((void))
 0002:80213710       PunchBox::exeHit((void))
 0002:802137AC       PunchBox::kill((void))
 0002:8021381C       PunchBox::doHit((HitSensor *,HitSensor *))
 0002:802138F0       PunchBox::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80213A48       PunchBox::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80213A88       PunchBox::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80213D4C       PunchingKinoko::PunchingKinoko((char const *))
 0002:80213DE0       PunchingKinoko::init((JMapInfoIter const &))
 0002:80213FA8       PunchingKinoko::initSensor((void))
 0002:80214044       PunchingKinoko::initShadow((void))
 0002:802140F0       PunchingKinoko::initCamera((JMapInfoIter const &))
 0002:8021413C       Tamakoro::initJointControl((void))
 0002:80214218       PunchingKinoko::ballMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:802142D4       CometEventExecutorTimeLimit::kill((void))
 0002:80214318       PunchingKinoko::makeActorDead((void))
 0002:80214358       PunchingKinoko::control((void))
 0002:802143D8       PunchingKinoko::calcAndSetBaseMtx((void))
 0002:8021443C       PunchingKinoko::attackSensor((HitSensor *,HitSensor *))
 0002:80214720       PunchingKinoko::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802148D4       PunchingKinoko::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80214988       PunchingKinoko::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80214A84       PunchingKinoko::requestPunch((HitSensor *,HitSensor *))
 0002:80214B80       PunchingKinoko::requestEnemyBlow((HitSensor *,HitSensor *))
 0002:80214C38       PunchingKinoko::requestTrample((HitSensor *,HitSensor *))
 0002:80214D14       PunchingKinoko::exeWait((void))
 0002:80214ED0       PunchingKinoko::exeSwing((void))
 0002:8021500C       PunchingKinoko::exePointSnaped((void))
 0002:80215080       PunchingKinoko::exePunched((void))
 0002:80215128       PunchingKinoko::exePunchedBrake((void))
 0002:802151EC       PunchingKinoko::exeHitted((void))
 0002:8021526C       PunchingKinoko::exeCrushed((void))
 0002:80215370       PunchingKinoko::exeCrushedEnd((void))
 0002:80215474       PunchingKinoko::addVelocityKeepHeight((void))
 0002:80215994       PurpleCoinHolder::PurpleCoinHolder((void))
 0002:802159EC       PurpleCoinHolder::initAfterPlacement((void))
 0002:80215A04       MR::createPurpleCoinHolder((void))
 0002:80215A0C       MR::addToPurpleCoinHolder((NameObj const *,Coin *))
 0002:80215A48       MR::registPurpleCoinStarter((PurpleCoinStarter *))
 0002:80215B2C       PurpleCoinStarter::init((JMapInfoIter const &))
 0002:80215CE0       QuarterRollGravityRoomArrow::init((JMapInfoIter const &))
 0002:802161E0       QuestionBoxGalleryObj::init((JMapInfoIter const &))
 0002:80216370       QuestionBoxGalleryObj::exeOffStart((void))
 0002:802163CC       QuestionBoxGalleryObj::exeOffWait((void))
 0002:802164C8       UFOKinoko::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:80216588       QuestionBoxGalleryObj::control((void))
 0002:80216620       QuestionBoxGalleryObj::startSwitchOff((void))
 0002:8021687C       QuestionCoin::QuestionCoin((char const *))
 0002:80216920       QuestionCoin::init((JMapInfoIter const &))
 0002:80216B30       QuestionCoin::initAfterPlacement((void))
 0002:80216DE8       QuestionCoin::appear((void))
 0002:80216E50       QuestionCoin::kill((void))
 0002:80216E9C       QuestionCoin::calcAndSetBaseMtx((void))
 0002:80216F18       QuestionCoin::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802170C4       QuestionCoin::initFromJMapInfoArg((JMapInfoIter const &))
 0002:80217164       QuestionCoin::initShadow((void))
 0002:802171B4       QuestionCoin::updateActorMtx((void))
 0002:80217330       QuestionCoin::exeThrowActor((void))
 0002:802174D4       QuestionCoin::exeCaught((void))
 0002:802176BC       RailBlock::RailBlock((char const *))
 0002:80217714       RailBlock::init((JMapInfoIter const &))
 0002:80217970       LiveActor::calcViewAndEntry((void))
 0002:80217984       RailBlock::exeMove((void))
 0002:80217A34       RailBlock::exeTerminate((void))
 0002:80217B84       LiveActor::calcAndSetBaseMtx((void))
 0002:80217DB4       RailCoin::placementNormalRail((void))
 0002:80217EB0       RailCoin::placementMercatorRail((void))
 0002:80217F34       MR::createRailPurpleCoin((char const *))
 0002:80217FDC       RailCoin::placementCoin((void))
 0002:80218050       RailMoveObj::RailMoveObj((char const *))
 0002:802180AC       RailMoveObj::init((JMapInfoIter const &))
 0002:80218278       RailMoveObj::startClipped((void))
 0002:802182CC       RailMoveObj::endClipped((void))
 0002:8021837C       nullsub_97
 0002:80218380       RailMoveObj::startMoveInner((void))
 0002:802183F0       RailMoveObj::move((void))
 0002:80218430       RailMoveObj::doAtEndPoint((void))
 0002:802184AC       RailMoveObj::endMove((void))
 0002:80218540       RailMoveObj::exeWait((void))
 0002:8021861C       RailMoveObj::exeMove((void))
 0002:80218744       RailMoveObjPress::init((JMapInfoIter const &))
 0002:802187B8       RailMoveObjBreakAtEnd::doAtEndPoint((void))
 0002:80218824       MR::connectToSceneIndirectMapObj((LiveActor *))
 0002:802188B8       RailDemoMoveObj::RailDemoMoveObj((char const *))
 0002:802188FC       RailDemoMoveObj::init((JMapInfoIter const &))
 0002:80218970       RailDemoMoveObj::tryStartMove((void))
 0002:802189C0       RailDemoMoveObj::startMoveInner((void))
 0002:80218A0C       RailDemoMoveObj::move((void))
 0002:80218A74       RailDemoMoveObj::endMove((void))
 0002:80218B28       RailRotateMoveObj::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80218B80       RailRotateMoveObj::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:80218BE8       RailRotateMoveObj::tryStartRotateAtPoint((void))
 0002:80218C68       RailRotateMoveObj::tryStartRotateBetweenPoints((void))
 0002:8021904C       RainCloud::RainCloud((char const *))
 0002:802190CC       RainCloud::init((JMapInfoIter const &))
 0002:8021948C       RainCloud::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80219514       RainCloud::exeAppear((void))
 0002:802195F0       RainCloud::exeWait((void))
 0002:80219668       RainCloud::exeDisappear((void))
 0002:80219720       RainCloud::exeEnd((void))
 0002:8021978C       RainCloud::exeSoftTouch((void))
 0002:802197FC       RainCloud::exeHardTouch((void))
 0002:80219870       RainCloud::control((void))
 0002:80219958       RainCloud::attackSensor((HitSensor *,HitSensor *))
 0002:802199CC       RainCloud::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80219AFC       RainCloud::updateHitSensor((HitSensor *))
 0002:80219B88       RainCloud::startClipped((void))
 0002:80219BD8       RainCloud::endClipped((void))
 0002:80219C40       RainCloud::switchEffect((void))
 0002:80219E1C       RainCloud::updateRainCylinder((void))
 0002:80219F90       RainCloud::isNextStartOK(const(void))
 0002:8021A1CC       ReverseGravityRoomPlanet::init((JMapInfoIter const &))
 0002:8021A5E8       RevolvingWay::RevolvingWay((char const *))
 0002:8021A650       RevolvingWay::init((JMapInfoIter const &))
 0002:8021A75C       RevolvingWay::exeWait((void))
 0002:8021A7B8       RevolvingWay::addAccelMoment((void))
 0002:8021A8AC       Rock::Rock((float,char const *))
 0002:8021A9C0       Rock::init((JMapInfoIter const &))
 0002:8021ABA8       Rock::appear((void))
 0002:8021ACEC       Rock::kill((void))
 0002:8021AD70       J3DPEBlockFull::countDLSize((void))
 0002:8021AD78       Rock::getType((JMapInfoIter const &))
 0002:8021AE00       Rock::getAppearStarPieceNum((Rock::Type))
 0002:8021AE14       Rock::control((void))
 0002:8021B090       Rock::calcAndSetBaseMtx((void))
 0002:8021B260       Rock::attackSensor((HitSensor *,HitSensor *))
 0002:8021B424       Rock::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8021B528       Rock::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8021B620       Rock::initMapToolInfo((JMapInfoIter const &))
 0002:8021B718       Rock::initModel((void))
 0002:8021B88C       Rock::initSensor((void))
 0002:8021B9D4       Rock::initEffect((void))
 0002:8021BA5C       Rock::isBreakByWall(const(void))
 0002:8021BAD0       Rock::move((float))
 0002:8021BB74       Rock::calcBaseMtx(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8021BC44       Rock::isInClippingRange(const(void))
 0002:8021BCE8       Rock::startSoundWanwanVoice((void))
 0002:8021BD90       Rock::startRollLevelSound((bool))
 0002:8021BEA0       Rock::tryFreeze((Nerve const *))
 0002:8021BF1C       Rock::setBtkForEnvironmentMap((LiveActor *,char const *))
 0002:8021C010       Rock::rumblePadAndCamera((void))
 0002:8021C078       Rock::setNerveBreak((bool))
 0002:8021C0C4       Rock::updateRotateX((float))
 0002:8021C118       Rock::appearStarPiece((void))
 0002:8021C1A0       Rock::moveOnRail((float,float,bool))
 0002:8021C274       Rock::isForceInvalidBindSection(const(void))
 0002:8021C2E8       Rock::tryBreakReachedGoal((void))
 0002:8021C358       Rock::exeAppear((void))
 0002:8021C5A8       Rock::exeAppearMoveInvalidBind((void))
 0002:8021C688       Rock::exeMove((void))
 0002:8021C9A8       Rock::exeMoveInvalidBind((void))
 0002:8021CA3C       Rock::exeBreak((void))
 0002:8021CD60       Rock::exeFreeze((void))
 0002:8021D0C4       RockCreator::RockCreator((char const *))
 0002:8021D12C       RockCreator::init((JMapInfoIter const &))
 0002:8021D320       Rock::__defctor((void))
 0002:8021D330       RockCreator::appear((void))
 0002:8021D384       RockCreator::kill((void))
 0002:8021D410       RockCreator::invalidate((void))
 0002:8021D45C       RockCreator::initMapToolInfo((JMapInfoIter const &))
 0002:8021D4EC       RockCreator::create((void))
 0002:8021D56C       RockCreator::exeActive((void))
 0002:8021D73C       RosettaChair::RosettaChair((char const *))
 0002:8021D79C       RosettaChair::setDefaultPose((void))
 0002:8021D7F8       RosettaChair::init((JMapInfoIter const &))
 0002:8021DA08       RosettaChair::startDemo((void))
 0002:8021DB7C       RosettaPictureBook::RosettaPictureBook((char const *))
 0002:8021DBC8       RosettaPictureBook::init((JMapInfoIter const &))
 0002:8021DCE4       RosettaPictureBook::appear((void))
 0002:8021DD24       RosettaPictureBook::kill((void))
 0002:8021DD64       RosettaPictureBook::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8021DDA4       RosettaPictureBook::control((void))
 0002:8021DDB0       RosettaPictureBook::attackSensor((HitSensor *,HitSensor *))
 0002:8021DDEC       RosettaPictureBook::exeWait((void))
 0002:8021DEAC       RosettaPictureBook::exeFadeOut((void))
 0002:8021DF58       RosettaPictureBook::exeReading((void))
 0002:8021DFCC       RosettaPictureBook::exeFadeIn((void))
 0002:8021E13C       RotateMoveObj::init((JMapInfoIter const &))
 0002:8021E298       RotateMoveObj::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:8021E32C       RotateMoveObj::setStateMove((void))
 0002:8021E390       RotateMoveObj::exeMove((void))
 0002:8021E46C       RotateMoveObj::exeStop((void))
 0002:8021E718       SandCapsuleInsidePlanet::init((JMapInfoIter const &))
 0002:8021E97C       SandCapsulePressGround::SandCapsulePressGround((char const *))
 0002:8021E9C0       SandCapsulePressGround::init((JMapInfoIter const &))
 0002:8021EB38       SandCapsulePressGround::exeMoveStart((void))
 0002:8021EC38       SandCapsulePressGround::exeMove((void))
 0002:8021ED68       SandCapsulePressGround::exeMoveEnd((void))
 0002:8021EDE8       SandCapsulePressGround::exeDisappearDemo((void))
 0002:8021EF74       SandCapsulePressGround::calcMoveVelocity((void))
 0002:8021EFD8       THPSimplePlayerWrapper::open((char const *))
 0002:8021F1E8       SunakazeKunTrap::SunakazeKunTrap((LiveActor *,JGeometry::TVec3<f> const &))
 0002:8021F26C       SunakazeKunTrap::init((JMapInfoIter const &))
 0002:8021F354       SunakazeKunTrap::exeTrap((void))
 0002:8021F4E8       Sandstorm::Sandstorm((char const *))
 0002:8021F598       UFOKinoko::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8021F5F0       Sandstorm::init((JMapInfoIter const &))
 0002:8021F874       Sandstorm::exeNonActive((void))
 0002:8021F8F8       Sandstorm::exeWait((void))
 0002:8021F954       Sandstorm::exeStorm((void))
 0002:8021FA00       Sandstorm::exeStormAdjust((void))
 0002:8021FA80       Sandstorm::exeStormFix((void))
 0002:8021FB3C       Sandstorm::exeStormEnd((void))
 0002:8021FC04       Sandstorm::control((void))
 0002:8021FCBC       Sandstorm::calcAndSetBaseMtx((void))
 0002:8021FD18       Sandstorm::startClipped((void))
 0002:8021FD94       Sandstorm::endClipped((void))
 0002:8021FE10       Sandstorm::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8021FF20       Sandstorm::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80220050       Sandstorm::updateHitSensor((HitSensor *))
 0002:802200DC       Sandstorm::initSandstormParam((void))
 0002:80220220       Sandstorm::initTrapModel((void))
 0002:8022032C       Sandstorm::updateBindActorMtx((void))
 0002:8022059C       Sandstorm::endBind((void))
 0002:80220658       Sandstorm::updateSpiral((void))
 0002:80220824       Sandstorm::tryStartBind((HitSensor *))
 0002:8022096C       Sandstorm::tryTornadoJumpPlayer((void))
 0002:80220A14       Sandstorm::isSunakazeKun(const(void))
 0002:80220BD8       @unnamed@SandUpDownEffectObj_cpp@::findLineCheckParamData((char const *))
 0002:80220C74       SandUpDownEffectObj::SandUpDownEffectObj((char const *))
 0002:80220CD8       SandUpDownEffectObj::init((JMapInfoIter const &))
 0002:80220EB4       SandUpDownEffectObj::exeFallingRock((void))
 0002:80220F6C       SandUpDownEffectObj::exeFallingRockAndSmoke((void))
 0002:8022102C       SandUpDownEffectObj::exeBurySmoke((void))
 0002:802210CC       SandUpDownEffectObj::checkSandHit((void))
 0002:80221158       SandUpDownEffectObj::isUfoTop(const(void))
 0002:80221490       SandUpDownTriRock::SandUpDownTriRock((char const *))
 0002:802214F0       SandUpDownTriRock::init((JMapInfoIter const &))
 0002:8022160C       SandUpDownTriRock::exeDown((void))
 0002:8022166C       SandUpDownTriRock::exeRest((void))
 0002:802217D4       SandUpDownTriRock::control((void))
 0002:802219D4       ScrewSwitch::ScrewSwitch((char const *))
 0002:80221A3C       ScrewSwitch::init((JMapInfoIter const &))
 0002:80221BB8       ScrewSwitch::exeAdjust((void))
 0002:80221C90       ScrewSwitch::exeScrew((void))
 0002:80221D84       ScrewSwitch::exeEnd((void))
 0002:80221E24       ScrewSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80221F20       ScrewSwitch::updateBindActorMtx((void))
 0002:80222110       SubmarineVolcanoBigColumn::SubmarineVolcanoBigColumn((char const *))
 0002:80222158       ScrewSwitchReverse::init((JMapInfoIter const &))
 0002:8022234C       ScrewSwitchReverse::exeAdjust((void))
 0002:802223F8       ScrewSwitchReverse::exeScrew((void))
 0002:80222520       ScrewSwitchReverse::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8022261C       ScrewSwitchReverse::updateBindActorMtx((void))
 0002:802226C8       ScrewSwitchReverse::endBind((void))
 0002:80222818       SeaBottomTriplePropeller::SeaBottomTriplePropeller((char const *))
 0002:8022287C       SeaBottomTriplePropeller::init((JMapInfoIter const &))
 0002:80222A90       SeaBottomTriplePropeller::control((void))
 0002:80222A98       SeaBottomTriplePropeller::exeWait((void))
 0002:80222B1C       SeaBottomTriplePropeller::calcAnim((void))
 0002:80222C34       SeesawMoveNut::SeesawMoveNut((char const *))
 0002:80222C80       SeesawMoveNut::init((JMapInfoIter const &))
 0002:80222DBC       SeesawMoveNut::exeHalfway((void))
 0002:80222F94       SeesawMoveNut::exeEdge((void))
 0002:80222FF0       SeesawMoveNut::autoBackHome((void))
 0002:802230C4       SeesawMoveNut::isEnableStart(const(void))
 0002:8022324C       Shellfish::Shellfish((char const *))
 0002:802232A8       Shellfish::init((JMapInfoIter const &))
 0002:80223564       Shellfish::control((void))
 0002:802235D8       Shellfish::exeWait((void))
 0002:80223640       Shellfish::exeOpen((void))
 0002:80223798       Shellfish::exeCloseSignal((void))
 0002:8022381C       Shellfish::exeClose((void))
 0002:80223928       Shellfish::exeShock((void))
 0002:802239C4       Shellfish::attackSensor((HitSensor *,HitSensor *))
 0002:80223A98       Shellfish::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80223B90       Shellfish::initItem((JMapInfoIter const &))
 0002:80223CF8       Shellfish::initCoin((JMapInfoIter const &))
 0002:80223D34       Shellfish::initBlueChip((JMapInfoIter const &))
 0002:80223E3C       Shellfish::initKinokoOneUp((JMapInfoIter const &))
 0002:80223EAC       Shellfish::startBindItem((void))
 0002:80223F0C       Shellfish::endBindItem((void))
 0002:80223F9C       Shellfish::putItem((void))
 0002:802240D4       NrvShellfish::ShellfishNrvOpenWait::execute(const(Spine *))
 0002:80224264       ShockWaveGenerator::init((JMapInfoIter const &))
 0002:80224438       ShockWaveGenerator::exeDemoEcho((void))
 0002:802244B4       ShockWaveGenerator::exeGenerate((void))
 0002:8022455C       ShockWaveGenerator::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80224730       ShockWaveGenerator::sendMsgShockWaveToNearEnemy((void))
 0002:802247B0       ShockWaveGenerator::isHitCylinder(const(HitSensor *,HitSensor *))
 0002:80224940       ShootingStar::ShootingStar((char const *))
 0002:802249D0       ShootingStar::init((JMapInfoIter const &))
 0002:80224C68       StarPiece::setFollowPlayerAndAppear((void))
 0002:80224CB4       ShootingStar::control((void))
 0002:80224D14       ShootingStar::exePreShooting((void))
 0002:80224E38       ShootingStar::exeShooting((void))
 0002:80224F8C       ShootingStar::exeWaitForNextShoot((void))
 0002:802251D4       SideSpikeMoveStep::SideSpikeMoveStep((char const *))
 0002:8022522C       SideSpikeMoveStep::init((JMapInfoIter const &))
 0002:80225390       SideSpikeMoveStep::exeWait((void))
 0002:80225464       SideSpikeMoveStep::exeDPDStop((void))
 0002:802254E0       SideSpikeMoveStep::exeDPDStopSync((void))
 0002:80225524       SideSpikeMoveStep::calcAndSetBaseMtx((void))
 0002:802255C4       SideSpikeMoveStep::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80225714       NrvSideSpikeMoveStep::SideSpikeMoveStepNrvDPDStop::executeOnEnd(const(Spine *))
 0002:8022575C       SimpleBreakableObj::SimpleBreakableObj((char const *))
 0002:802257D4       SimpleBreakableObj::init((JMapInfoIter const &))
 0002:80225AF8       SimpleBreakableObj::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80225C14       SimpleBreakableObj::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80225CD0       SimpleBreakableObj::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80225DCC       SimpleBreakableObj::control((void))
 0002:80225EAC       SimpleBreakableObj::setStateBreak((void))
 0002:80225F3C       SimpleBreakableObj::startBreak((void))
 0002:80226008       SimpleBreakableObj::endBreak((void))
 0002:80226080       SimpleBreakableObj::isStateBreaking(const(void))
 0002:802260E0       SimpleBreakableObj::appearItem((void))
 0002:802261A4       SimpleBreakableObj::exeTryStartDemo((void))
 0002:80226218       SimpleBreakableObj::exeDemo((void))
 0002:802262A4       MR::connectToSceneIndirectMapObj((LiveActor *))
 0002:802264F0       SimpleClipPartsObj::init((JMapInfoIter const &))
 0002:8022657C       SimpleClipPartsObj::control((void))
 0002:802265F0       nullsub_98
 0002:802265F4       nullsub_99
 0002:802265F8       SimpleClipPartsObj::initCaseUseSwitchB((MapObjActorInitInfo const &))
 0002:80226690       j_MapObjActorUtil::startAllMapPartsFunctions((MapObjActor const *))
 0002:8022670C       SimpleFloaterObj::SimpleFloaterObj((char const *))
 0002:80226764       SimpleFloaterObj::init((JMapInfoIter const &))
 0002:802268C8       SimpleFloaterObj::exeWait((void))
 0002:80226A08       SimpleMapObj::init((JMapInfoIter const &))
 0002:80226A90       SimpleMapObjNoSilhouetted::connectToScene((MapObjActorInitInfo const &))
 0002:80226B64       GlaringLight::connectToScene((MapObjActorInitInfo const &))
 0002:80226B88       SimpleMirrorObj::SimpleMirrorObj((char const *,char const *,float *[4]))
 0002:80226BD8       SimpleMirrorObj::calcAndSetBaseMtx((void))
 0002:80226C78       MR::connectToSceneMirrorMapObjNoMovement((LiveActor *))
 0002:80226C7C       @unnamed@SimpleMapObj_cpp@::getSeParam((char const *))
 0002:80226CEC       SimpleSeesawObj::SimpleSeesawObj((char const *))
 0002:80226D30       SimpleSeesawObj::init((JMapInfoIter const &))
 0002:80226DD0       MapObjActor::control((void))
 0002:80226E24       UFOKinokoUnderConstruction::init((JMapInfoIter const &))
 0002:80226F08       MR::makeArchiveListUFOKinokoUnderConstruction((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80226F54       SimpleEnvironmentObj::init((JMapInfoIter const &))
 0002:80226FBC       SimpleTextureSwitchChangeObj::changeTexture((void))
 0002:8022702C       SimpleMirrorObj::init((JMapInfoIter const &))
 0002:802274C0       SimpleNormalMapObj::SimpleNormalMapObj((char const *))
 0002:802274FC       SimpleNormalMapObj::init((JMapInfoIter const &))
 0002:80227624       SimpleTimerObj::SimpleTimerObj((char const *))
 0002:80227674       SimpleTimerObj::init((JMapInfoIter const &))
 0002:80227710       SimpleTimerObj::exeTimer((void))
 0002:8022774C       SimpleTimerObj::appear((void))
 0002:80227798       SimpleTimerObj::kill((void))
 0002:802277EC       SimpleTimerObj::control((void))
 0002:802278A0       SmallStone::SmallStone((char const *))
 0002:802278FC       SmallStone::~SmallStone((void))
 0002:80227974       SmallStone::initAfterPlacement((void))
 0002:80228084       SmallStone::control((void))
 0002:802280E4       SmallStone::isAllMemberBreak((void))
 0002:80228154       SmallStone::tryBreak((void))
 0002:80228264       SmallStone::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802282D4       SmallStone::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80228320       SmallStone::attackSensor((HitSensor *,HitSensor *))
 0002:80228484       SmallStoneMember::tryShake((void))
 0002:80228590       SmallStoneMember::tryPush((HitSensor *,HitSensor *))
 0002:80228670       SmallStoneMember::movementByHost((SmallStone *))
 0002:80228740       SmallStone::init((JMapInfoIter const &))
 0002:80228994       SmallStone::initMember((char const *,bool))
 0002:80228C78       SmallStoneMember::SmallStoneMember((char const *))
 0002:80228CFC       SmallStoneMember::animControl((void))
 0002:80228DEC       SmallStoneMember::doBreak((SmallStone *))
 0002:80228F4C       SnowCapsulePlanet::init((JMapInfoIter const &))
 0002:8022903C       SnowCapsulePlanet::exeOpen((void))
 0002:802291FC       SnowFloor::SnowFloor((char const *))
 0002:80229248       SnowFloor::init((JMapInfoIter const &))
 0002:802294EC       SnowFloor::drawSetup((void))
 0002:80229694       SnowFloor::initLocalPoint((JMapInfoIter const &))
 0002:80229760       SnowFloor::calcLocalPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:80229864       SnowFloor::createReduceMap((ushort))
 0002:80229A98       SnowFloor::digPlayerWalk((JGeometry::TVec3<f> const &))
 0002:80229C58       SnowFloor::digDpd((JGeometry::TVec3<f> const &))
 0002:80229D8C       SnowFloor::control((void))
 0002:8022A0F4       SnowFloor::doErase((JGeometry::TVec3<f> const &,float,float))
 0002:8022A240       SnowFloor::doMove((JGeometry::TVec2<f>,JGeometry::TVec2<f>,float,float))
 0002:8022A65C       SnowFloor::doErase((JGeometry::TVec2<f>,float,float))
 0002:8022A894       SnowFloor::createTexture((void))
 0002:8022A980       SnowFloor::addCheckList((HitSensor *))
 0002:8022A9D8       SnowFloor::updateCheckList((void))
 0002:8022AB2C       SnowFloor::calcCoverSnow((JGeometry::TVec2<f> const &,float))
 0002:8022AD48       SnowFloor::attackSensor((HitSensor *,HitSensor *))
 0002:8022AE94       SnowFloorTile::draw(const(void))
 0002:8022B054       SnowFloor::drawLayer(const(long))
 0002:8022B3EC       __sinit__SnowFloor_cpp
 0002:8022B400       JGeometry::TVec2<f>::dot(const(JGeometry::TVec2<f> const &))
 0002:8022B47C       SnowFloorTile::SnowFloorTile((char const *))
 0002:8022B4C8       SnowFloorTile::init((JMapInfoIter const &))
 0002:8022B780       SnowFloorTile::initLocalPoint((JMapInfoIter const &))
 0002:8022B820       SnowFloorTile::calcLocalPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:8022BA00       SnowFloorTile::createReduceMap((ushort))
 0002:8022BC34       SnowFloorTile::digPlayerWalk((JGeometry::TVec3<f> const &))
 0002:8022BCC0       SnowFloorTile::digDpd((JGeometry::TVec3<f> const &))
 0002:8022BD7C       SnowFloorTile::control((void))
 0002:8022BF08       SnowFloorTile::doErase((JGeometry::TVec3<f> const &,float,float))
 0002:8022C008       SnowFloorTile::doMove((JGeometry::TVec2<f>,JGeometry::TVec2<f>,float,float))
 0002:8022C4D8       SnowFloorTile::doErase((JGeometry::TVec2<f>,float,float))
 0002:8022C724       SnowFloorTile::createTexture((void))
 0002:8022C810       SnowFloorTile::attackSensor((HitSensor *,HitSensor *))
 0002:8022CAF0       SnowFloorTile::drawLayer(const(long))
 0002:8022CE94       __sinit__SnowFloorTile_cpp
 0002:8022CEA8       SnowMan::SnowMan((char const *))
 0002:8022CEF8       SnowMan::init((JMapInfoIter const &))
 0002:8022D0C8       SnowMan::exeMeltHead((void))
 0002:8022D180       SnowMan::exeMeltBody((void))
 0002:8022D23C       SnowMan::exeDownHead((void))
 0002:8022D2D4       SnowMan::exeDownBody((void))
 0002:8022D3C8       SnowMan::calcAndSetBaseMtx((void))
 0002:8022D424       SnowMan::control((void))
 0002:8022D480       SnowMan::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8022D53C       MapPartsRailMover::endRotateAtPoint((void))
 0002:8022D758       SnowplowSwitch::SnowplowSwitch((char const *))
 0002:8022D79C       SnowplowSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8022D858       SnowplowSwitch::init((JMapInfoIter const &))
 0002:8022D970       SoundEmitter::init((JMapInfoIter const &))
 0002:8022DA54       SoundEmitter::control((void))
 0002:8022DAAC       SoundEmitter::exePlaySound((void))
 0002:8022DBC4       def_8022DB5C
 0002:8022DD18       SpaceMine::SpaceMine((char const *))
 0002:8022DD84       SpaceMine::init((JMapInfoIter const &))
 0002:8022DEEC       SpaceMine::isCalcShadowAlways(const(void))
 0002:8022DF6C       SpaceMine::kill((void))
 0002:8022DFD0       SpaceMine::initAfterPlacement((void))
 0002:8022E004       SpaceMine::attackSensor((HitSensor *,HitSensor *))
 0002:8022E100       SpaceMine::exeWait((void))
 0002:8022E26C       SpaceMine::exeAppear((void))
 0002:8022E408       SpaceShipStep::SpaceShipStep((char const *))
 0002:8022E460       SpaceShipStep::init((JMapInfoIter const &))
 0002:8022E52C       SpaceShipStep::exeWait((void))
 0002:8022E61C       SpaceShipStep::exeMove((void))
 0002:8022E688       SpaceShipStep::exeBreak((void))
 0002:8022E7AC       SpaceShipStep::updateResetToInitPosCheck((void))
 0002:8022EA38       SphereRailDash::SphereRailDash((char const *))
 0002:8022EAAC       SphereRailDash::init((JMapInfoIter const &))
 0002:8022EB78       SphereRailDash::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8022EB94       SphereRailDash::exeWait((void))
 0002:8022ED7C       SphereRailDash::exeRailMove((void))
 0002:8022F018       SpiderCoin::SpiderCoin((char const *))
 0002:8022F088       SpiderCoin::init((JMapInfoIter const &))
 0002:8022F1C4       SpiderCoin::kill((void))
 0002:8022F25C       SpiderCoin::exeWait((void))
 0002:8022F304       SpiderCoin::exeTouch((void))
 0002:8022F440       SpiderCoin::exeTouchAndApart((void))
 0002:8022F560       SpiderCoin::calcAndSetBaseMtx((void))
 0002:8022F734       SpiderCoin::tryRub((long,JGeometry::TVec2<f> *))
 0002:8022FA04       SpiderMapBlock::init((JMapInfoIter const &))
 0002:8022FADC       SpiderMapBlock::kill((void))
 0002:8022FBB4       SpiderThread::SpiderThread((char const *))
 0002:8022FCE4       SpiderThread::initThread((JGeometry::TVec3<f> const &))
 0002:8022FE30       SpiderThread::movement((void))
 0002:8022FFB0       SpiderThread::draw(const(void))
 0002:8023004C       SpiderThread::startActorBind((LiveActor *,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:80230100       SpiderThread::touchActor((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8023017C       SpiderThread::tryPush((JGeometry::TVec3<f> const &,float))
 0002:80230220       SpiderThread::updatePointerInfo((void))
 0002:8023027C       SpiderThread::cutSpiderThread((void))
 0002:8023030C       SpiderThread::initMainThreads((void))
 0002:802306C4       SpiderThread::connectMainPoint((SpiderThreadPoint *,SpiderThreadPoint *,bool))
 0002:8023078C       SpiderThread::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802308F4       SpiderThread::updateHangedPoint((void))
 0002:80230930       SpiderThread::tryTouchPoint((long))
 0002:80230A24       SpiderThread::findNearestPointPos(const(JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,long *,long *,JGeometry::TVec3<f> const &))
 0002:80230B04       SpiderThread::findHangInfo(const(LiveActor *))
 0002:80230B48       SpiderThread::initDraw(const(void))
 0002:80230DEC       MR::initSpiderThread((JGeometry::TVec3<f> const &))
 0002:80230E28       MR::appearSpiderThread((void))
 0002:80230E60       MR::startSpiderThreadChance((void))
 0002:80230EE0       MR::startSpiderThreadBattleEnd((void))
 0002:80230F30       MR::pauseOffSpiderThread((void))
 0002:80230F5C       MR::getSpiderThreadPosZ((void))
 0002:80230FA0       MR::startActorBindToSpiderThread((LiveActor *,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80231010       MR::sendMsgToSpiderThread((ulong,HitSensor *))
 0002:80231078       MR::touchActorToSpiderThread((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802310C4       MR::tryPushSpiderThread((JGeometry::TVec3<f> const &,float))
 0002:80231110       MR::onSpiderThreadBloom((void))
 0002:80231140       MR::drawSpiderThreadBloom((void))
 0002:80231204       SpiderThreadHangInfo::SpiderThreadHangInfo((void))
 0002:80231228       SpiderThreadHangInfo::startBind((LiveActor *,JGeometry::TVec3<f> const *,SpiderThreadPart *,long,JGeometry::TVec3<f> const &,long))
 0002:8023129C       SpiderThreadHangInfo::endBind((void))
 0002:802312F0       SpiderThreadHangInfo::startHang((void))
 0002:80231308       SpiderThreadHangInfo::endHang((bool))
 0002:80231358       SpiderThreadHangInfo::updateHang((void))
 0002:8023136C       SpiderThreadHangInfo::copyInfo((SpiderThreadHangInfo const *))
 0002:802313A0       SpiderThreadPointNearInfo::SpiderThreadPointNearInfo((void))
 0002:802313C0       SpiderThreadPointNearInfo::setInfo((float,SpiderThreadPart *,JGeometry::TVec3<f> const &))
 0002:80231438       SpiderThreadPointNearInfo::clear((void))
 0002:80231458       SpiderThreadPointNearInfo::getPos(const(void))
 0002:80231488       SpiderThreadMainPoint::SpiderThreadMainPoint((JGeometry::TVec3<f> const &,int))
 0002:80231504       SpiderThreadMainPoint::addNearMainPoint((SpiderThreadMainPoint *,SpiderThreadPart *))
 0002:8023156C       SpiderThreadMainPoint::addNearPartPoint((SpiderThreadPoint *,float))
 0002:802315D0       SpiderThreadMainPoint::removeNearPoint((SpiderThreadPoint const *))
 0002:802316A0       SpiderThreadMainPoint::addNearPointToRadial((SpiderThreadPoint *))
 0002:80231734       SpiderThreadMainPoint::removeNearPointFromRadial((SpiderThreadPoint const *))
 0002:802317A8       SpiderThreadMainPoint::cutNearPoints((long *,SpiderThreadMainPoint **))
 0002:80231888       SpiderThreadMainPoint::updateVelocity((void))
 0002:80231948       SpiderThreadMainPoint::closeToNearPoint((SpiderThreadPointNearInfo const *))
 0002:80231A08       SpiderThreadPart::SpiderThreadPart((SpiderThreadMainPoint *,SpiderThreadMainPoint *,float))
 0002:80231E64       SpiderThreadPart::cut((SpiderThreadMainPoint *,SpiderThreadMainPoint *))
 0002:80231EAC       SpiderThreadPart::updatePointerPos((void))
 0002:80231F94       SpiderThreadPart::update((void))
 0002:802320C4       SpiderThreadPart::draw(const(void))
 0002:802320E8       SpiderThreadPart::startHang((long))
 0002:80232178       SpiderThreadPart::updateHang((JGeometry::TVec3<f> const &,long))
 0002:802321C8       SpiderThreadPart::endHang((long))
 0002:802324E4       SpiderThreadPart::stopAllPoints((void))
 0002:802324FC       SpiderThreadPart::calcNearestPointInfo((JGeometry::TVec3<f> const **,JGeometry::TVec3<f> const **,long *,JGeometry::TVec3<f> const &))
 0002:80232588       SpiderThreadPart::updatePointPosToLine((void))
 0002:802326B4       SpiderThreadPart::updatePointPosAndBasePosToLine((void))
 0002:80232718       SpiderThreadPart::touchActor((long,JGeometry::TVec3<f> const &))
 0002:80232818       SpiderThreadPart::tryTouch((float,JGeometry::TVec3<f> const &,long))
 0002:80232954       SpiderThreadPart::findTouchPoint((float,JGeometry::TVec3<f> const &,long))
 0002:802329F4       SpiderThreadPart::findNearestPointNo(const(long *,JGeometry::TVec3<f> const &))
 0002:80232A9C       SpiderThreadPart::updatePointPosHanging((long))
 0002:80232C9C       SpiderThreadPart::updatePointVelocityTouch((long,JGeometry::TVec3<f> const &))
 0002:80232E24       SpiderThreadPart::updateBasePos((void))
 0002:80232F58       SpiderThreadPart::updateForceAttach((void))
 0002:802330B4       SpiderThreadPart::updateCutPoints((void))
 0002:80233108       MR::calcGravityOrZero((LiveActor *))
 0002:80233220       SpiderThreadPart::updateDrawVec((void))
 0002:802332B8       @unnamed@SpiderThreadPart_cpp@::sendPointsUpper((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:8023341C       @unnamed@SpiderThreadPart_cpp@::sendPointsRightLower((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:8023357C       @unnamed@SpiderThreadPart_cpp@::sendPointsLeftLower((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:802336DC       SpiderThreadPart::drawLine(const(void))
 0002:80233818       SpiderThreadPart::drawPoints(const(void))
 0002:80233B30       __sinit__SpiderThreadPart_cpp
 0002:80233BA8       SpiderThreadPoint::SpiderThreadPoint((JGeometry::TVec3<f> const &,float))
 0002:80233C6C       SpiderThreadPoint::updateSpring((void))
 0002:80233D60       SpiderThreadPoint::updateDrawVec((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *))
 0002:80233DE8       SpiderThreadPoint::updateWind((float))
 0002:80233EA4       SpiderThreadPoint::updatePos((void))
 0002:80233EAC       MR::makeQuatFromRotate((JGeometry::TQuat4<f> *,LiveActor const *))
 0002:80233EB4       SpiderThreadPoint::restrict((JGeometry::TVec3<f> const *,float))
 0002:80233FCC       SpiderThreadPoint::updateHang((JGeometry::TVec3<f> const &))
 0002:80233FE4       SpiderThreadPoint::tryTouch((float,JGeometry::TVec3<f> const &,long))
 0002:80234048       SpiderThreadPoint::tryPush((JGeometry::TVec3<f> const &,float))
 0002:802340D0       SpiderThreadPoint::startThreadLevelSound((void))
 0002:802342D0       SpiderThreadWindCtrl::SpiderThreadWindCtrl((void))
 0002:80234304       SpiderThreadWindCtrl::update((void))
 0002:80234374       SpiderThreadWindCtrl::startWindChance((void))
 0002:802343A4       SpiderThreadWindCtrl::startWindBattleEnd((void))
 0002:802343C0       SpiderThreadWindCtrl::getTimeToStartWind(const(void))
 0002:802343E8       SpiderThreadWindCtrl::getWindTime(const(void))
 0002:802343F4       SpinDriver::SpinDriver((char const *))
 0002:80234564       SpinDriver::init((JMapInfoIter const &))
 0002:80234724       SpinDriver::initAfterPlacement((void))
 0002:80234738       SpinDriver::initParamFromJMapInfo((JMapInfoIter const &))
 0002:80234804       SpinDriver::initShootPath((JMapInfoIter const &))
 0002:802348F0       SpinDriver::initEventCamera((JMapInfoIter const &))
 0002:80234950       SpinDriver::appear((void))
 0002:802349F8       SpinDriver::makeActorDead((void))
 0002:80234A38       SpinDriver::control((void))
 0002:80234B04       SpinDriver::calcAndSetBaseMtx((void))
 0002:80234BD0       SpinDriver::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80234CE4       SpinDriver::tryStartShoot((void))
 0002:80234D9C       SpinDriver::tryEndCapture((void))
 0002:80234E64       SpinDriver::tryEndShoot((void))
 0002:80234EDC       SuperSpinDriver::tryForceCancel((void))
 0002:80234F68       SuperSpinDriver::trySwitchOff((void))
 0002:80234FCC       SpinDriver::exeNonActive((void))
 0002:8023507C       SpinDriver::exeAppear((void))
 0002:8023517C       SpinDriver::exeWait((void))
 0002:80235294       SpinDriver::exeCapture((void))
 0002:802353B4       SpinDriver::exeShootStart((void))
 0002:80235608       SpinDriver::exeShoot((void))
 0002:802357F0       SpinDriver::exeCoolDown((void))
 0002:80235850       SpinDriver::startBind((HitSensor *))
 0002:80235A68       SpinDriver::cancelBind((void))
 0002:80235AB8       SpinDriver::updateBindPosition((void))
 0002:80235B74       SpinDriver::moveBindPosToCenter((void))
 0002:80235C48       SpinDriver::updateBindActorMatrix((float))
 0002:80235CD4       SpinDriver::calcBindActorMatrix((void))
 0002:80235DB0       SpinDriver::calcParabolicBindPose((void))
 0002:80235FCC       SpinDriver::turnBindHead((JGeometry::TVec3<f> const &,float))
 0002:80236178       SpinDriver::calcShootMotionTime((void))
 0002:802361C4       SpinDriver::startCamera((void))
 0002:802361EC       SpinDriver::updateCamera((void))
 0002:80236210       SpinDriver::endCamera((void))
 0002:80236240       SpinDriver::canBind(const(HitSensor *))
 0002:80236484       SpinDriverCamera::startAppearCamera((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80236534       SpinDriverCamera::endAppearCamera((LiveActor *))
 0002:80236574       SpinDriverCamera::start((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802365F8       SpinDriverCamera::update((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80236668       SpinDriverCamera::cancel((void))
 0002:8023667C       SpinDriverCamera::end((void))
 0002:802366C0       SpinDriverCamera::updateTargetMatrix((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8023683C       SpinDriverCamera::isUseAppearCamera(const(LiveActor *))
 0002:8023688C       SpinDriverCamera::init((JMapInfoIter const &,LiveActor *))
 0002:8023695C       SpinDriverCamera::initAppearCamera((JMapInfoIter const &,LiveActor *))
 0002:802369D4       CameraTargetArg::CameraTargetArg((CameraTargetMtx *))
 0002:802369EC       CameraTargetMtx::setMtx((float *[4]))
 0002:80236A20       SpinDriverOperateRing::SpinDriverOperateRing((char const *))
 0002:80236AE4       SpinDriverOperateRing::init((JMapInfoIter const &))
 0002:80236B28       SpinDriverOperateRing::setRadiusRate((float))
 0002:80236B60       SpinDriverOperateRing::resetVelocityAndTrans((void))
 0002:80236B64       SpinDriverOperateRing::update((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80236C18       SpinDriverOperateRing::updatePosition((void))
 0002:80236D5C       SpinDriverOperateRing::updateControlPoint((JGeometry::TVec3<f> const &))
 0002:80236DEC       SpinDriverOperateRing::updateDirection((JGeometry::TVec3<f> const &))
 0002:80236E74       SpinDriverOperateRing::resetVelocityAndTrans((void))
 0002:80236EC0       SpinDriverOperateRing::addAccelToOperatePlane((JGeometry::TVec3<f> const &))
 0002:80236F3C       SpinDriverOperateRing::addAccelOperate((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80237070       SpinDriverOperateRing::addAccelToCenter((void))
 0002:802370F8       SpinDriverOperateRing::attenuateVelocity((void))
 0002:80237124       SpinDriverOperateRing::calcOperatePowerByDPD(const(JGeometry::TVec3<f> *))
 0002:802372BC       SpinDriverPathDrawInit::SpinDriverPathDrawInit((void))
 0002:8023743C       SpinDriverPathDrawer::SpinDriverPathDrawer((SpinDriverShootPath *))
 0002:802374E0       SpinDriverPathDrawInit::initDraw((void))
 0002:80237714       MR::setSpinDriverPathColorNormal((void))
 0002:80237748       MR::setSpinDriverPathColorGreen((void))
 0002:8023777C       MR::setSpinDriverPathColorPink((void))
 0002:802377B0       MR::isDrawSpinDriverPathAtOpa((void))
 0002:802377F4       MR::onDrawSpinDriverPathAtOpa((void))
 0002:80237824       MR::offDrawSpinDriverPathAtOpa((void))
 0002:80237854       SpinDriverPathDrawer::init((JMapInfoIter const &))
 0002:802378C4       SpinDriverPathDrawer::calcPositionCount(const(float,float))
 0002:80237A30       SpinDriverPathDrawer::initPositionList((float,float))
 0002:80237D70       SpinDriverPathDrawer::initClipping((void))
 0002:80237DD4       SpinDriverPathDrawer::initPathEnd((void))
 0002:80237E58       SpinDriverPathDrawer::calcDrawCode(const(void))
 0002:80237E90       SpinDriverPathDrawer::calcDrawBaseCode(const(void))
 0002:80237EC8       SpinDriverPathDrawer::setCoord((float))
 0002:80237EE0       SpinDriverPathDrawer::setColorNormal((void))
 0002:80237EEC       SpinDriverPathDrawer::setColorGreen((void))
 0002:80237EF8       SpinDriverPathDrawer::setColorPink((void))
 0002:80237F04       SpinDriverPathDrawer::setMaskLength((float))
 0002:80237F20       SpinDriverPathDrawer::setFadeScale((float))
 0002:80237F3C       SpinDriverPathDrawer::draw(const(void))
 0002:80238378       SpinDriverPathDrawer::sendPoint(const(JGeometry::TVec3<f> const &,float,float))
 0002:802384EC       SpinDriverShootPath::SpinDriverShootPath((void))
 0002:80238510       SpinDriverShootPath::init((JMapInfoIter const &))
 0002:80238568       SpinDriverShootPath::initUsingParabolic((JMapInfoIter const &,JGeometry::TVec3<f> const &))
 0002:80238604       SpinDriverShootPath::setStartPosition((JGeometry::TVec3<f> const &))
 0002:802386B4       SpinDriverShootPath::calcPosition(const(JGeometry::TVec3<f> *,float))
 0002:8023878C       SpinDriverShootPath::calcDirection(const(JGeometry::TVec3<f> *,float,float))
 0002:80238850       SpinDriverShootPath::calcInitPose(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float))
 0002:802389F4       SpinDriverShootPath::getTotalLength(const(void))
 0002:80238A04       SCSetWpadMotorMode
 0002:80238A14       SpinDriverShootPath::calcClippingInfo((JGeometry::TVec3<f> *,float *,float,float))
 0002:80238BF8       SpinDriverUtil::setShadowAndClipping((LiveActor *,JGeometry::TVec3<f> *,float,float,float *))
 0002:80238DD8       SpinLeverSwitch::SpinLeverSwitch((char const *))
 0002:80238E38       SpinLeverSwitch::init((JMapInfoIter const &))
 0002:80238FB0       SpinLeverSwitch::exeWait((void))
 0002:80239010       SpinLeverSwitch::exeSwitchOn((void))
 0002:802391B0       SpinLeverSwitch::attackSensor((HitSensor *,HitSensor *))
 0002:80239220       SpinLeverSwitch::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80239394       JGeometry::TQuat4<f>::getYDir(const(JGeometry::TVec3<f> &))
 0002:802393F8       SpinningBox::SpinningBox((char const *))
 0002:80239470       SpinningBox::init((JMapInfoIter const &))
 0002:80239704       SpinningBox::kill((void))
 0002:802397C8       SpinningBox::control((void))
 0002:80239AB4       SpinningBox::exeFall((void))
 0002:80239B50       SpinningBox::exeWait((void))
 0002:80239C74       SpinningBox::exeSliding((void))
 0002:80239E5C       SpinningBox::exeSpinning((void))
 0002:8023A0A0       SpinningBox::exePointed((void))
 0002:8023A140       SpinningBox::calcPlanarProjectedVec((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8023A1D0       SpinningBox::calcHitDirection((JGeometry::TVec3<f> const &))
 0002:8023A2A0       SpinningBox::generateIceBox((HitSensor *,HitSensor *))
 0002:8023A474       SpinningBox::attackSensor((HitSensor *,HitSensor *))
 0002:8023A634       SpinningBox::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8023A784       SpinningBox::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8023A89C       SpinningBox::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8023A98C       SpinningBox::hitReflection((HitSensor *,HitSensor *))
 0002:8023AA18       SpinningBox::calcAndSetBaseMtx((void))
 0002:8023ACA4       SpringJetWater::init((JMapInfoIter const &))
 0002:8023AF04       SpringJetWater::startClipped((void))
 0002:8023B1A8       SpringJetWater::exeWait((void))
 0002:8023B244       SpringJetWater::exeJet((void))
 0002:8023B2F4       SpringJetWater::exeEnd((void))
 0002:8023B444       SpringWaterFloaterSpot::SpringWaterFloaterSpot((char const *))
 0002:8023B4C0       SpringWaterFloaterSpot::init((JMapInfoIter const &))
 0002:8023B690       SpringWaterFloaterSpot::control((void))
 0002:8023B76C       SpringWaterFloaterSpot::calcAndSetBaseMtx((void))
 0002:8023B810       SpringWaterFloaterSpot::exeWait((void))
 0002:8023B898       SpringWaterFloaterSpot::exeFloatSignal((void))
 0002:8023B9DC       SpringWaterFloaterSpot::exeFloatUp((void))
 0002:8023BA90       SpringWaterFloaterSpot::exeFloatEnd((void))
 0002:8023BB94       SpringWaterFloaterSpot::boundFloater((void))
 0002:8023BCD4       SpringWaterFloaterSpot::floatFloater((void))
 0002:8023BDF8       SpringWaterFloaterSpot::isModelLongSide((void))
 0002:8023BE40       SpringWaterFloaterSpot::isNeedsForBound((void))
 0002:8023C054       @unnamed@StageEffectDataTable_cpp@::getStageEffectCameraParam((char const *))
 0002:8023C0C4       @unnamed@StageEffectDataTable_cpp@::getStageEffectPadParam((char const *))
 0002:8023C134       @unnamed@StageEffectDataTable_cpp@::getStageEffectSeParam((char const *))
 0002:8023C1A4       @unnamed@StageEffectDataTable_cpp@::shakeCamera((@unnamed@StageEffectDataTable_cpp@::CameraShakeType))
 0002:8023C1E8       @unnamed@StageEffectDataTable_cpp@::isDistanceValidShake((LiveActor *,char const *))
 0002:8023C2B8       MR::StageEffect::getStartSe((char const *))
 0002:8023C300       MR::StageEffect::getMovingSe((char const *))
 0002:8023C348       MR::StageEffect::getStopSe((char const *))
 0002:8023C390       MR::StageEffect::getStopSeSteps((char const *))
 0002:8023C3D8       MR::StageEffect::isRiddleSeTypeStop((char const *))
 0002:8023C454       StarPointerGuidance::isExistGuidanceOrFrame((void))
 0002:8023C4BC       MR::StageEffect::shakeStartCamera((LiveActor *,char const *))
 0002:8023C518       MR::StageEffect::shakeStopCamera((LiveActor *,char const *))
 0002:8023C574       MR::StageEffect::shakeCameraMoving((NameObj *,char const *))
 0002:8023C61C       MR::StageEffect::stopShakingCameraMoving((NameObj *,char const *))
 0002:8023C650       J3DAnmTransformKey::getTransform(const(ushort,J3DTransformInfo *))
 0002:8023C68C       MR::StageEffect::rumblePadStart((LiveActor *,char const *))
 0002:8023C704       MR::StageEffect::rumblePadStop((LiveActor *,char const *))
 0002:8023C77C       MR::StageEffect::rumblePadMoving((LiveActor *,char const *))
 0002:8023C7E8       MR::StageEffect::tryStageEffectStart((LiveActor *,char const *))
 0002:8023C92C       MR::StageEffect::tryStageEffectMoving((LiveActor *,char const *))
 0002:8023C9F8       MR::StageEffect::tryStageEffectStop((LiveActor *,char const *))
 0002:8023CB3C       StarPiece::StarPiece((char const *))
 0002:8023CC34       StarPiece::initAndSetFloatingFromGroup((JMapInfoIter const &))
 0002:8023CCA4       StarPiece::initAndSetRailMoveFromGroup((JMapInfoIter const &))
 0002:8023CD14       StarPiece::init((JMapInfoIter const &))
 0002:8023D12C       StarPiece::appear((void))
 0002:8023D170       StarPiece::setColor((long))
 0002:8023D1C8       JAIStream::getNumChild(const(void))
 0002:8023D1D0       StarPiece::appearFromGroup((void))
 0002:8023D240       StarPiece::makeActorAppeared((void))
 0002:8023D288       StarPiece::kill((void))
 0002:8023D364       StarPiece::makeActorDead((void))
 0002:8023D3F8       StarPiece::startClipped((void))
 0002:8023D468       StarPiece::changeScale((float))
 0002:8023D534       StarPiece::control((void))
 0002:8023D6AC       StarPiece::exeFloating((void))
 0002:8023D7AC       StarPiece::appearHop((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8023D878       StarPiece::exeHop((void))
 0002:8023D918       StarPiece::exeFall((void))
 0002:8023DC10       StarPiece::isTouchToTarget((JGeometry::TVec3<f> *,float))
 0002:8023DD0C       StarPiece::isEffectLight((void))
 0002:8023DD58       StarPiece::exeToTarget((void))
 0002:8023E338       StarPiece::exeSpinDrained((void))
 0002:8023E40C       StarPiece::exeToPlayerEnd((void))
 0002:8023E564       StarPiece::exeThrow((void))
 0002:8023E954       StarPiece::exeThrowFall((void))
 0002:8023EAF0       StarPiece::exeFollowPlayer((void))
 0002:8023EB64       StarPiece::exeRailMove((void))
 0002:8023EC5C       StarPiece::tryCalcGravity((void))
 0002:8023ECC0       StarPiece::trySetGravityAndFront((JGeometry::TVec3<f> const &))
 0002:8023ED40       StarPiece::throwToTarget((HitSensor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:8023ED88       StarPiece::throwToTargetCore((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,bool))
 0002:8023EE70       StarPiece::giftToTarget((StarPieceReceiverInfo *,ulong,HitSensor *,JGeometry::TVec3<f> const &))
 0002:8023EF54       StarPiece::goToPlayer((JGeometry::TVec3<f>))
 0002:8023F0C4       StarPiece::launch((JGeometry::TVec3<f> const &,float,float,bool,bool))
 0002:8023F2AC       StarPiece::launch((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,bool,bool))
 0002:8023F464       StarPiece::launch((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool,bool))
 0002:8023F568       StarPiece::calcEffectScale((float,float,bool))
 0002:8023F5E8       StarPiece::calcNearCameraScale((void))
 0002:8023F628       StarPiece::calcDistToCamera((void))
 0002:8023F67C       StarPiece::emitTouchEffect((long,float))
 0002:8023F724       StarPiece::emitGettableEffect((float))
 0002:8023F854       StarPiece::tryGotJudge((void))
 0002:8023F950       StarPiece::setFall((void))
 0002:8023FA68       StarPiece::attackSensor((HitSensor *,HitSensor *))
 0002:8023FBBC       StarPiece::setReflect((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8023FCCC       StarPiece::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8023FF90       StarPiece::isIgnoreTriOnThrow((Triangle const *))
 0002:8023FFDC       StarPiece::touchPlayer((void))
 0002:802400B8       StarPiece::calcAndSetBaseMtx((void))
 0002:80240324       StarPiece::setHostInfo((StarPieceHostInfo *))
 0002:80240478       NrvStarPiece::HostTypeNrvThrow::executeOnEnd(const(Spine *))
 0002:80240744       MR::getStarPieceDirector((void))
 0002:8024076C       MR::createStarPiece((void))
 0002:80240824       MR::gotByPlayer((void))
 0002:80240850       MR::resetChasingStarPiece((void))
 0002:80240880       MR::isResetChasingStarPiece((void))
 0002:802408D8       MR::giftStarPieceToTarget((HitSensor *,ulong))
 0002:80240924       MR::incNumStarPieceGettable((long))
 0002:80240964       MR::incNumStarPieceNewed((void))
 0002:80240998       StarPieceDirector::StarPieceDirector((char const *))
 0002:80240AE0       StarPieceDirector::declare((NameObj const *,long))
 0002:80240B84       StarPieceDirector::declareReceiveNum((NameObj const *,long))
 0002:80240C10       StarPieceDirector::getDeclareRemnantStarPieceCount((NameObj const *))
 0002:80240C3C       StarPieceDirector::getDeclareRemnantStarPieceCountNotExist((NameObj const *))
 0002:80240C70       StarPieceDirector::hopPiece((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80240D18       StarPieceDirector::appearPiece((NameObj const *,JGeometry::TVec3<f> const &,long,float,float,bool,bool))
 0002:80240DFC       StarPieceDirector::appearPieceToDirection((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,float,float,bool,bool))
 0002:80240EE8       StarPieceDirector::gotByPlayer((void))
 0002:80240F50       StarPieceDirector::movement((void))
 0002:80240F5C       StarPieceDirector::updateSound((void))
 0002:80240FFC       StarPieceDirector::initCSDelay((void))
 0002:80241020       StarPieceDirector::initCSSound((void))
 0002:80241060       StarPieceDirector::giftToTarget((HitSensor *,ulong))
 0002:80241160       StarPieceDirector::getDeadStarPiece((void))
 0002:802411D8       StarPieceDirector::calcPosCameraShoot((long))
 0002:802412C4       MR::setWPadHolderModeHomeButton((void))
 0002:802412EC       StarPieceDirector::findHostInfo((NameObj const *))
 0002:8024132C       StarPieceDirector::findReceiverInfo((NameObj const *))
 0002:8024136C       StarPieceShooter::StarPieceShooter((long,char const *))
 0002:80241408       StarPieceShooter::init((JMapInfoIter const &))
 0002:802414D4       StarPieceShooter::exeWait((void))
 0002:802414F8       StarPieceShooter::exeLockOn((void))
 0002:80241570       StarPieceShooter::attackSensor((HitSensor *,HitSensor *))
 0002:80241610       StarPieceShooter::control((void))
 0002:802416D0       StarPieceShooter::shoot((void))
 0002:80241B5C       StarPieceShooter::calcShootGoalUsingPointingDepth((void))
 0002:80241D50       StarPieceHostInfo::isAppearable((void))
 0002:80241D80       StarPieceFollowGroup::StarPieceFollowGroup((char const *))
 0002:80241DEC       StarPieceFollowGroup::init((JMapInfoIter const &))
 0002:80241F84       StarPieceFollowGroup::beginFollowPieces((void))
 0002:80242058       StarPieceFollowGroup::placementPiece((long))
 0002:802421F8       StarPieceFollowGroup::updateAxises((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80242298       StarPieceFollowGroup::followPieces((void))
 0002:80242614       StarPieceFollowGroup::allKillPieces((void))
 0002:80242690       StarPieceFollowGroup::onSwitchA((void))
 0002:802426FC       StarPieceFollowGroup::exeFollowToPlayer((void))
 0002:80242780       StarPieceFollowGroup::exeFollowEnd((void))
 0002:80242A2C       StarPieceGroup::StarPieceGroup((char const *))
 0002:80242AB0       StarPieceGroup::isExistAnyStarPiece((void))
 0002:80242B20       StarPieceGroup::forceReplaceStarPieceAll((void))
 0002:80242BC4       StarPieceGroup::forceKillStarPieceAll((bool))
 0002:80242CA0       StarPieceGroup::init((JMapInfoIter const &))
 0002:802430EC       StarPieceGroup::makeActorAppeared((void))
 0002:8024314C       StarPieceGroup::appear((void))
 0002:802431D4       StarPieceGroup::control((void))
 0002:80243230       StarPieceGroup::placementAllPiece((void))
 0002:80243254       StarPieceGroup::placementPieceOnCircle((void))
 0002:802434AC       StarPieceGroup::placementPieceOnRail((void))
 0002:80243658       StarPieceGroup::placementPieceOnRailPoint((void))
 0002:802436CC       StarPieceGroup::onSwitchA((void))
 0002:80243704       StarPieceGroup::offSwitchA((void))
 0002:8024373C       StarPieceGroup::onSwitchB((void))
 0002:80243798       StarPieceGroup::startClipped((void))
 0002:8024382C       StarPieceGroup::endClipped((void))
 0002:802438C0       StarPieceGroup::exeFlow((void))
 0002:80243B30       StarPieceMother::StarPieceMother((char const *))
 0002:80243B90       StarPieceMother::init((JMapInfoIter const &))
 0002:80243F1C       StarPieceMother::kill((void))
 0002:80243F8C       StarPieceMother::control((void))
 0002:80243FA0       StarPieceMother::exeMoveOnRail((void))
 0002:8024409C       StarPieceMother::placementPieceOnRail((float))
 0002:802441E8       StarPieceMother::onSwitchA((void))
 0002:80244220       StarPieceMother::offSwitchA((void))
 0002:80244258       StarPieceMother::attackSensor((HitSensor *,HitSensor *))
 0002:802442CC       StarPieceMother::emitStarPieces((void))
 0002:802445C0       StarPieceSpot::emit((void))
 0002:80244620       StarPieceSpot::init((JMapInfoIter const &))
 0002:80244738       StarPieceSpot::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802448C0       SubmarineSteam::SubmarineSteam((char const *))
 0002:80244910       SubmarineSteam::init((JMapInfoIter const &))
 0002:80244BB8       SubmarineSteam::attackSensor((HitSensor *,HitSensor *))
 0002:80244E08       SubmarineSteam::endClipped((void))
 0002:80244E58       SubmarineSteam::exeSteam((void))
 0002:80245028       SubmarineVolcanoBigColumn::init((JMapInfoIter const &))
 0002:80245174       SubmarineVolcanoBigColumn::kill((void))
 0002:802451B8       SubmarineVolcanoBigColumn::exeWait((void))
 0002:80245258       SubmarineVolcanoBigColumn::exeBreak((void))
 0002:802453D0       SubmarineVolcanoBigColumn::initBreakModel((char const *))
 0002:802455A8       Sun::init((JMapInfoIter const &))
 0002:80245604       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setEulerY((float))
 0002:80245694       SuperSpinDriver::SuperSpinDriver((char const *,long))
 0002:80245854       SuperSpinDriver::init((JMapInfoIter const &))
 0002:80245A68       SuperSpinDriver::initAfterPlacement((void))
 0002:80245AC4       SuperSpinDriver::initParamFromJMapInfo((JMapInfoIter const &))
 0002:80245B74       SuperSpinDriver::initGravityAxis((void))
 0002:80245BE8       SuperSpinDriver::initSensor((void))
 0002:80245C94       SuperSpinDriver::initEmptyModel((void))
 0002:80245D90       SuperSpinDriver::initEventCamera((JMapInfoIter const &))
 0002:80245DE8       SuperSpinDriver::initShootPath((JMapInfoIter const &))
 0002:80245E6C       SuperSpinDriver::initShootPathDraw((JMapInfoIter const &))
 0002:80245F00       SuperSpinDriver::initColor((void))
 0002:80245FD8       SuperSpinDriver::initOperateRing((void))
 0002:80246024       SuperSpinDriver::initAppearState((JMapInfoIter const &))
 0002:80246184       SuperSpinDriver::makeActorAppeared((void))
 0002:802461D4       SuperSpinDriver::appear((void))
 0002:80246258       SuperSpinDriver::control((void))
 0002:8024631C       SuperSpinDriver::calcAndSetBaseMtx((void))
 0002:802463F0       SuperSpinDriver::attackSensor((HitSensor *,HitSensor *))
 0002:80246450       SuperSpinDriver::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80246594       SuperSpinDriver::canBind(const(HitSensor *,HitSensor *))
 0002:80246684       SuperSpinDriver::tryBind((HitSensor *,HitSensor *))
 0002:802468A8       SuperSpinDriver::tryEndCapture((void))
 0002:8024695C       SuperSpinDriver::tryShootStart((void))
 0002:80246A30       SuperSpinDriver::tryEndShoot((void))
 0002:80246A88       SuperSpinDriver::tryEndCoolDown((void))
 0002:80246B48       SuperSpinDriver::requestEmptyAppear((void))
 0002:80246C18       SuperSpinDriver::requestActive((void))
 0002:80246C78       SuperSpinDriver::requestHide((void))
 0002:80246CD4       SuperSpinDriver::requestShow((void))
 0002:80246D1C       SuperSpinDriver::exeEmptyWait((void))
 0002:80246D7C       SuperSpinDriver::exeEmptyAppear((void))
 0002:80246F24       SuperSpinDriver::exeAppear((void))
 0002:8024702C       SuperSpinDriver::exeWait((void))
 0002:80247114       SuperSpinDriver::exeCapture((void))
 0002:8024722C       SuperSpinDriver::exeShootStart((void))
 0002:802473C8       SuperSpinDriver::exeShoot((void))
 0002:802476B0       SuperSpinDriver::updateShootMotion((void))
 0002:80247798       SuperSpinDriver::cancelBind((void))
 0002:802477E8       SuperSpinDriver::endBind((void))
 0002:80247828       SuperSpinDriver::updateBindActorMatrix((void))
 0002:802479D4       SuperSpinDriver::updateBindActorPoseToShoot((float))
 0002:80247A64       SuperSpinDriver::turnBindHead((JGeometry::TVec3<f> const &,float))
 0002:80247C10       SuperSpinDriver::moveBindPosToCenter((void))
 0002:80247CF0       SuperSpinDriver::startPathDraw((void))
 0002:80247D58       SuperSpinDriver::endPathDraw((void))
 0002:80247DAC       SuperSpinDriver::updatePathDraw((float))
 0002:80247E00       SuperSpinDriver::updateOperateRate((void))
 0002:80247F8C       SuperSpinDriver::updateBindPosition((float))
 0002:80248074       SuperSpinDriver::calcShootMotionTime((void))
 0002:802481B0       SuperSpinDriver::addSwingSignRotateY((void))
 0002:8024822C       SuperSpinDriver::onUse((void))
 0002:8024827C       SuperSpinDriver::offUse((void))
 0002:802482CC       SuperSpinDriver::isNeedEmptyModel(const(void))
 0002:802482EC       SuperSpinDriver::isRightToUse(const(void))
 0002:80248308       MR::createSuperSpinDriverYellow((char const *))
 0002:8024834C       MR::createSuperSpinDriverGreen((char const *))
 0002:80248390       MR::createSuperSpinDriverPink((char const *))
 0002:80248540       NrvSuperSpinDriver::SuperSpinDriverNrvShoot::executeOnEnd(const(Spine *))
 0002:8024873C       SurprisedGalaxy::init((JMapInfoIter const &))
 0002:802488FC       SurprisedGalaxy::attackSensor((HitSensor *,HitSensor *))
 0002:80248954       SurprisedGalaxy::exeExit((void))
 0002:802489E4       SurprisedGalaxy::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80248AF4       Swinger::Swinger((JGeometry::TVec3<f> const *,float *[4],float,float,float,JGeometry::TVec3<f> const *))
 0002:80248C14       Swinger::update((void))
 0002:80248DD0       Swinger::updateSwingMtx((JGeometry::TVec3<f> const &))
 0002:80248EE8       @unnamed@SwingLight_cpp@::getGlaringLightModelName((char const *))
 0002:80248F8C       LightCylinder::LightCylinder((char const *,float *[4],Color8 const &))
 0002:80249054       LightCylinder::init((JMapInfoIter const &))
 0002:802490E0       LightCylinder::initLightCylinderByOwner((JMapInfoIter const &))
 0002:80249168       LightCylinder::initLightVolume((char const *))
 0002:80249240       LightCylinder::calcAndSetBaseMtx((void))
 0002:80249254       LightCylinder::draw(const(void))
 0002:80249268       LightCylinder::connectToScene((MapObjActorInitInfo const &))
 0002:802492C0       SwingLight::init((JMapInfoIter const &))
 0002:8024939C       SwingLight::appearLight((void))
 0002:802493A0       SwingLight::makeSubModels((JMapInfoIter const &,MapObjActorInitInfo const &))
 0002:8024944C       SwingLight::appearLight((void))
 0002:8024967C       SwitchBox::init((JMapInfoIter const &))
 0002:802498E0       SwitchBox::exeWait((void))
 0002:80249930       SwitchBox::exeHit((void))
 0002:802499B4       SwitchBox::appear((void))
 0002:80249A44       SwitchBox::doHit((HitSensor *,HitSensor *))
 0002:80249B18       SwitchBox::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80249C1C       SwitchBox::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80249C5C       SwitchBox::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80249D2C       TimeAppearObj::TimeAppearObj((char const *))
 0002:80249D70       TimeAppearObj::init((JMapInfoIter const &))
 0002:80249E0C       TimeAppearObj::exeEnd((void))
 0002:80249EA8       TimeAppearObj::appear((void))
 0002:80249FE4       TimerMoveWall::TimerMoveWall((char const *))
 0002:8024A030       TimerMoveWall::init((JMapInfoIter const &))
 0002:8024A0B8       TimerMoveWall::exeMove((void))
 0002:8024A404       TrampleStarShare::TrampleStarShare((TrampleStar *))
 0002:8024A46C       TrampleStarShare::copy(const(TrampleStar *))
 0002:8024A544       TrampleStar::init((JMapInfoIter const &))
 0002:8024AD68       TrampleStar::toSphere((float))
 0002:8024AE1C       TrampleStar::initCheckFlag((ulong))
 0002:8024AE98       TrampleStar::readCheckFlag((ushort,ushort))
 0002:8024AEB4       TrampleStar::writeCheckFlag((ushort,ushort,ushort))
 0002:8024AEE8       TrampleStar::divide((void))
 0002:8024B160       TrampleStar::moveVtx((float,ulong,ulong,float,ulong))
 0002:8024B23C       TrampleStar::control((void))
 0002:8024B28C       TrampleStar::calcAnim((void))
 0002:8024B2C4       PlayRecordAlarmCallback
 0002:8024B37C       TrampleStar::calcSurface((bool))
 0002:8024B578       TrampleStar::calcLodSurface((void))
 0002:8024B6BC       TrampleStar::onLod((void))
 0002:8024B6FC       TrampleStar::offLod((void))
 0002:8024B750       TrampleStar::exeBindingCapture((void))
 0002:8024B810       TrampleStar::exeBindingShoot((void))
 0002:8024BBD4       TrampleStar::calcNearestVtxIndex((JGeometry::TVec3<f> const &))
 0002:8024BC88       TrampleStar::draw(const(void))
 0002:8024BD10       TrampleStar::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8024BED0       TrampleStar::drawSelf(const(void))
 0002:8024C5F8       TransparentWall::control((void))
 0002:8024C7AC       TransparentWall::init((JMapInfoIter const &))
 0002:8024C82C       TreasureBoxCracked::TreasureBoxCracked((char const *))
 0002:8024C8BC       TreasureBoxCracked::init((JMapInfoIter const &))
 0002:8024CB20       TreasureBoxCracked::exeWait((void))
 0002:8024CBDC       TreasureBoxCracked::exeOpen((void))
 0002:8024CE0C       TreasureBoxCracked::exeItemBound((void))
 0002:8024CFA0       TreasureBoxCracked::exeOpenWait((void))
 0002:8024D078       TreasureBoxCracked::exeAlwaysOpen((void))
 0002:8024D12C       TreasureBoxCracked::control((void))
 0002:8024D224       TreasureBoxCracked::attackSensor((HitSensor *,HitSensor *))
 0002:8024D2E0       TreasureBoxCracked::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8024D3D0       TreasureBoxCracked::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8024D460       TreasureBoxCracked::initItem((JMapInfoIter const &))
 0002:8024D6D8       TreasureBoxCracked::initItemTrans((void))
 0002:8024D7B0       TreasureBoxCracked::initBlueChip((JMapInfoIter const &))
 0002:8024D8A8       TreasureBoxCracked::initKinokoOneUp((JMapInfoIter const &))
 0002:8024D904       TreasureBoxCracked::checkItemPos((void))
 0002:8024D9BC       TreasureBoxCracked::isHalfOpen(const(void))
 0002:8024DAAC       __sinit__TreasureBoxCracked_cpp
 0002:8024DBCC       TreasureSpot::init((JMapInfoIter const &))
 0002:8024DCB0       TreasureSpot::exeSpout((void))
 0002:8024DD94       TreasureSpot::control((void))
 0002:8024DDE8       TreasureSpot::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8024DEAC       TreasureSpot::switchEmitGlow((void))
 0002:8024E004       Tsukidashikun::Tsukidashikun((char const *))
 0002:8024E050       Tsukidashikun::init((JMapInfoIter const &))
 0002:8024E11C       Tsukidashikun::exeWait((void))
 0002:8024E1CC       Tsukidashikun::exeSign((void))
 0002:8024E308       Tsukidashikun::exeMove((void))
 0002:8024E3E4       MR::connectToSceneCollisionMapObjStrongLight((LiveActor *))
 0002:8024E6BC       TypicalDoor::init((JMapInfoIter const &))
 0002:8024E8A0       TypicalDoor::exeClose((void))
 0002:8024E94C       TypicalDoor::exeOpen((void))
 0002:8024EB2C       DarknessRoomDoor::init((JMapInfoIter const &))
 0002:8024EBA0       DarknessRoomDoor::control((void))
 0002:8024EC0C       DarknessRoomDoor::connectToScene((MapObjActorInitInfo const &))
 0002:8024EC20       DarknessRoomDoor::validateCollision((void))
 0002:8024ECA4       DarknessRoomDoor::invalidateCollision((void))
 0002:8024EF34       UFOBase::UFOBase((char const *))
 0002:8024EFA8       UFOBase::init((JMapInfoIter const &))
 0002:8024F1E8       UFOBase::exeWaitForPlayerOn((void))
 0002:8024F250       UFOBase::exeMove((void))
 0002:8024F2E0       MR::addBodyMessageSensorMapObj((LiveActor *))
 0002:8024F2E4       UFOBase::makeActorDead((void))
 0002:8024F378       UFOBase::control((void))
 0002:8024F534       UFOBase::calcAndSetBaseMtx((void))
 0002:8024F590       UFOBase::initSubModel((JMapInfoIter const &,char const *))
 0002:8024F738       UFOBreakable::initSensorType((void))
 0002:8024F780       UFOBreakable::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8024F934       NrvUFOBase::UFOBaseNrvWait::execute(const(Spine *))
 0002:8024FA1C       UFOKinoko::init((JMapInfoIter const &))
 0002:8024FC40       UFOKinoko::startMove((void))
 0002:8024FC84       UFOKinoko::exeMove((void))
 0002:8024FD20       UFOKinoko::exeStop((void))
 0002:8024FF20       ValveSwitch::ValveSwitch((char const *))
 0002:8024FF90       ValveSwitch::init((JMapInfoIter const &))
 0002:802500F4       ValveSwitch::control((void))
 0002:80250140       ValveSwitch::calcAndSetBaseMtx((void))
 0002:80250174       ValveSwitch::exeWait((void))
 0002:8025020C       ValveSwitch::exeAdjust((void))
 0002:802502E4       ValveSwitch::exeValve((void))
 0002:802503F8       ValveSwitch::exeEnd((void))
 0002:80250454       ValveSwitch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80250550       ValveSwitch::updateBindActorMtx((void))
 0002:802506C4       MR::getWarpPodManager((void))
 0002:80250704       WarpPodMgr::WarpPodMgr((char const *))
 0002:80250788       WarpPodMgr::getPairPod((LiveActor const *))
 0002:80250844       WarpPodMgr::startEventCamera((LiveActor const *))
 0002:80250884       WarpPodMgr::endEventCamera((void))
 0002:80250904       WarpPodMgr::notifyWarpEnd((WarpPod *))
 0002:80250970       WarpPodMgr::draw(const(void))
 0002:802509D8       WarpPod::init((JMapInfoIter const &))
 0002:80250DB8       WarpPod::glowEffect((void))
 0002:80250E2C       WarpPod::initPair((void))
 0002:80250F88       WarpPod::appear((void))
 0002:80251058       WarpPod::appearWithDemo((void))
 0002:802510E0       WarpPod::control((void))
 0002:802511A4       WarpPod::movement((void))
 0002:802512D0       WarpPod::startEventCamera(const(void))
 0002:80251308       WarpPod::endEventCamera((void))
 0002:8025138C       WarpPod::attackSensor((HitSensor *,HitSensor *))
 0002:80251440       WarpPod::initDraw((void))
 0002:80251820       WarpPod::drawCylinder(const(ulong))
 0002:80251E0C       WarpPod::draw(const(void))
 0002:80251FA4       WatchTowerRotateStep::WatchTowerRotateStep((char const *))
 0002:80251FF8       WatchTowerRotateStep::init((JMapInfoIter const &))
 0002:8025212C       WatchTowerRotateStep::exeMoveStart((void))
 0002:8025223C       WatchTowerRotateStep::calcAndSetBaseMtx((void))
 0002:80252290       WatchTowerRotateStep::initLift((JMapInfoIter const &))
 0002:8025243C       WatchTowerRotateStep::attachLift((void))
 0002:80252558       NrvWatchTowerRotateStep::WatchTowerRotateStepNrvMove::execute(const(Spine *))
 0002:80252628       WaterfallCaveCover::init((JMapInfoIter const &))
 0002:80252758       WaterfallCaveCover::exeBreak((void))
 0002:802529B4       IceStepNoSlip::IceStepNoSlip((float *[4]))
 0002:80252A14       IceStepNoSlip::init((JMapInfoIter const &))
 0002:80252ABC       IceStepNoSlip::exeBreak((void))
 0002:80252B24       WaterLeakPipe::WaterLeakPipe((char const *))
 0002:80252B88       WaterLeakPipe::init((JMapInfoIter const &))
 0002:80252D08       WaterLeakPipe::exeWait((void))
 0002:80252D68       WaterLeakPipe::exeFreeze((void))
 0002:80252E70       WaterLeakPipe::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80252F84       WaterLeakPipe::initPipeHeight((void))
 0002:80253180       WaterPressure::WaterPressure((char const *))
 0002:802531C8       WaterPressure::init((JMapInfoIter const &))
 0002:8025321C       WaterPressure::initBullet((JMapInfoIter const &))
 0002:80253224       WaterPressure::shotBullet((float))
 0002:80253388       WaterPressureBullet::WaterPressureBullet((char const *))
 0002:80253400       WaterPressureBullet::init((JMapInfoIter const &))
 0002:80253558       WaterPressureBullet::kill((void))
 0002:802535FC       WaterPressureBullet::control((void))
 0002:8025371C       WaterPressureBullet::calcAndSetBaseMtx((void))
 0002:80253764       WaterPressureBullet::shotWaterBullet((LiveActor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,float,bool,bool,bool,ActorCameraInfo **))
 0002:8025385C       WaterPressureBullet::exeFly((void))
 0002:80253AB0       WaterPressureBullet::exeSpinKill((void))
 0002:80253B50       WaterPressureBullet::attackSensor((HitSensor *,HitSensor *))
 0002:80253BF4       WaterPressureBullet::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80253D44       WaterPressureBullet::startHostCamera(const(void))
 0002:80253D94       WaterPressureBullet::endHostCamera(const(void))
 0002:80253DE8       WaterPressureBullet::inviteMario((HitSensor *))
 0002:80253F00       WaterPressureBullet::updateSuffererMtx((void))
 0002:802540AC       WaterPressureBulletHolder::callEmptyBullet((void))
 0002:8025416C       WaterPressureBulletHolder::init((JMapInfoIter const &))
 0002:802541DC       WaveFloatingForce::WaveFloatingForce((LiveActor const *,long,float,bool))
 0002:80254234       WaveFloatingForce::update((void))
 0002:8025428C       WaveFloatingForce::getCurrentValue(const(void))
 0002:80254300       WaveFloatingForce::updateNormal((void))
 0002:80254388       WaveFloatingForce::updateOnPlayer((void))
 0002:80254478       WhirlPool::WhirlPool((char const *))
 0002:80254510       WhirlPool::init((JMapInfoIter const &))
 0002:80254680       WhirlPool::movement((void))
 0002:80254828       WhirlPool::initPoints((void))
 0002:80254A94       WhirlPool::draw(const(void))
 0002:80254C18       WhirlPool::drawPlane(const(float,float,float,float,float,float,float,float))
 0002:80254F7C       WhirlPool::loadMaterial(const(void))
 0002:8025552C       WoodBox::init((JMapInfoIter const &))
 0002:80255910       WoodBox::control((void))
 0002:80255928       WoodBox::calcViewAndEntry((void))
 0002:80255974       WoodBox::exeHit((void))
 0002:80255B20       WoodBox::kill((void))
 0002:80255BB4       WoodBox::doHit((HitSensor *,HitSensor *))
 0002:80255D40       WoodBox::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80255E54       WoodBox::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80255E94       WoodBox::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8025608C       WormEatenPlanet::WormEatenPlanet((char const *))
 0002:802560E4       WormEatenPlanet::init((JMapInfoIter const &))
 0002:80256398       WormEatenPlanet::exeSecondWait((void))
 0002:80256414       WormEatenPlanet::exeThirdWait((void))
 0002:80256490       WormEatenPlanet::exeFourthWait((void))
 0002:8025656C       WormEatenPlanet::initWormEatenHill((void))
 0002:80256648       WormEatenPlanet::tryGenerateWormEatenHill((void))
 0002:802566DC       WormEatenPlanet::startThirdDemo((void))
 0002:802568E0       YellowChip::YellowChip((char const *))
 0002:802569DC       MapParts::MapParts((char const *))
 0002:80256A30       MapParts::init((JMapInfoIter const &))
 0002:80256AE8       MapParts::appear((void))
 0002:80256B30       MapParts::getMoveStartSignalTime((void))
 0002:80256B38       MR::connectToSceneMapParts((LiveActor *))
 0002:80256B3C       MapParts::initModelAndCollision((JMapInfoIter const &))
 0002:80256D14       GeneralMapParts::GeneralMapParts((char const *))
 0002:80256D88       GeneralMapParts::init((JMapInfoIter const &))
 0002:80256F0C       GeneralMapParts::initAfterPlacement((void))
 0002:80256F90       GeneralMapParts::appear((void))
 0002:80257020       GeneralMapParts::kill((void))
 0002:802570B4       GeneralMapParts::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8025713C       GeneralMapParts::control((void))
 0002:80257298       GeneralMapParts::calcAndSetBaseMtx((void))
 0002:802573F8       GeneralMapParts::initMapPartsFunction((JMapInfoIter const &))
 0002:802575C0       GeneralMapParts::initSensorType((JMapInfoIter const &))
 0002:80257628       GeneralMapParts::initGravity((JMapInfoIter const &))
 0002:80257690       GeneralMapParts::receiveMsgSwitchBOn((void))
 0002:802578C4       GeneralMapParts::receiveMsgSwitchBOff((void))
 0002:80257900       GeneralMapParts::broadcastMsgToAllFunctions((ulong))
 0002:80257994       GeneralMapParts::isFixed(const(void))
 0002:802579BC       GeneralMapParts::startMove((void))
 0002:80257A80       GeneralMapParts::exeWait((void))
 0002:80257B10       GeneralMapParts::exeMoveStart((void))
 0002:80257CA0       NrvGeneralMapParts::HostTypeWaitForPlayerOn::execute(const(Spine *))
 0002:80257DD8       MR::Vector<Q22MR63FixedArray<PCQ225StorySequenceExecutorType16DemoSequenceInfo,8>>::push_back((StorySequenceExecutorType::DemoSequenceInfo const *const &))
 0002:80257EA8       FloaterFloatingForce::FloaterFloatingForce((LiveActor *,char const *))
 0002:80257F40       FloaterFloatingForce::init((JMapInfoIter const &))
 0002:80257FA0       FloaterFloatingForce::start((void))
 0002:80258048       FloaterFloatingForce::getCurrentVelocity(const(void))
 0002:80258078       FloaterFloatingForceTypeNormal::FloaterFloatingForceTypeNormal((LiveActor *,char const *))
 0002:802580C8       FloaterFloatingForceTypeNormal::init((JMapInfoIter const &))
 0002:80258164       FloaterFloatingForceTypeNormal::updateHostTrans(const(JGeometry::TVec3<f> *))
 0002:802581E0       FloaterFloatingForceTypeNormal::updateVelocity((bool))
 0002:80258440       FloaterFloatingForceTypeNormal::soundMoveSE((void))
 0002:802584E4       MapPartsRailMover::reachedEndPlayerOn((void))
 0002:8025853C       FloaterFloatingForceTypeNormal::exeMoveFirst((void))
 0002:802585E4       FloaterFloatingForceTypeNormal::exeMove((void))
 0002:802587AC       NrvFloaterFloatingForceTypeNormal::HostTypeWait::execute(const(Spine *))
 0002:802587EC       FloaterFloatingForceTypeNormal::getCurrentVelocity(const(void))
 0002:8025884C       SpringStep::SpringStep((float,float,float))
 0002:802588F4       SpringStep::addSpringVelocity((float))
 0002:80258908       SpringStep::setSpringBaseValue((float))
 0002:8025892C       FloaterFloatingForceTypeSpring::FloaterFloatingForceTypeSpring((LiveActor *,char const *))
 0002:80258990       FloaterFloatingForceTypeSpring::init((JMapInfoIter const &))
 0002:80258ACC       FloaterFloatingForceTypeSpring::updateVelocity((void))
 0002:80258BBC       FloaterFloatingForceTypeSpring::updateHostVelocity(const(JGeometry::TVec3<f> *))
 0002:80258C00       FloaterFloatingForceTypeSpring::soundMoveSE((void))
 0002:80258CAC       FloaterFloatingForceTypeSpring::getCurrentSinkSpeed(const(void))
 0002:80258CBC       FloaterFloatingForceTypeSpring::tryOn((void))
 0002:80258D4C       FloaterFloatingForceTypeSpring::tryReturn((void))
 0002:80258DD4       FloaterFloatingForceTypeSpring::exeMove((void))
 0002:80258E40       FloaterFloatingForceTypeSpring::exeMoveReturn((void))
 0002:80258FCC       @unnamed@FloaterFunction_cpp@::getSeNameTable((char const *))
 0002:80259060       FloaterFunction::getSeMoveDown((char const *))
 0002:802590A8       FloaterFunction::isExistImpactOnRide((char const *))
 0002:80259164       JASPoolAllocObject_MultiThreaded<8JASTrack>::__nw((ulong))
 0002:80259174       LavaHomeSeesawRotator::LavaHomeSeesawRotator((LiveActor *,char const *,float))
 0002:8025929C       LavaHomeSeesawRotator::init((JMapInfoIter const &))
 0002:802593B4       LavaHomeSeesawRotator::start((void))
 0002:802596F4       LavaHomeSeesawRotator::receiveMsg((ulong))
 0002:8025976C       LavaHomeSeesawRotator::exeMoveStart((void))
 0002:8025982C       LavaHomeSeesawRotator::exeStay((void))
 0002:80259888       LavaHomeSeesawRotator::exeHipDrop((void))
 0002:802598F8       LavaHomeSeesawRotator::updateRotateMtx((void))
 0002:80259B04       LavaHomeSeesawRotator::updateVelocity((void))
 0002:80259C20       LavaHomeSeesawRotator::updateRestoreForce((void))
 0002:80259CD0       LavaHomeSeesawRotator::clampAngularSpeed((void))
 0002:80259D04       MapPartsSeesaw1AxisRotator::getDistanceFromRotAxis(const(void))
 0002:80259DB4       LavaHomeSeesawRotator::addForceHipDrop((void))
 0002:80259E7C       LavaHomeSeesawRotator::isGoingToReachTargetAngle(const(void))
 0002:80259F24       MapPartsSeesaw1AxisRotator::calcRotatedAngle(const(float *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8025A064       MapPartsSeesaw1AxisRotator::tryHipDrop((void))
 0002:8025A0DC       LavaHomeSeesawRotator::tryStay((void))
 0002:8025A1CC       LavaHomeSeesawRotator::tryRebound((void))
 0002:8025A21C       LavaHomeSeesawRotator::soundMoveSE((void))
 0002:8025A3A4       MapPartsAppearController::MapPartsAppearController((LiveActor *))
 0002:8025A3F8       MapPartsAppearController::init((JMapInfoIter const &))
 0002:8025A478       MapPartsAppearController::storeCurrentPosture((void))
 0002:8025A488       MapPartsAppearController::initSwitchMessenger((JMapInfoIter const &))
 0002:8025A544       MapPartsAppearController::receiveMsg((ulong))
 0002:8025A5E0       MapPartsAppearController::startAppear((void))
 0002:8025A654       MapPartsAppearController::startKill((void))
 0002:8025A6E0       MapPartsAppearController::appearHost((void))
 0002:8025A750       MapPartsAppearController::killHost((void))
 0002:8025A7A8       MapPartsAppearController::exeDisappear((void))
 0002:8025A9E8       MapPartsBreaker::exeReactToTornado((void))
 0002:8025AB08       MapPartsBreaker::exeBreak((void))
 0002:8025AC14       JGeometry::TVec2<f>::squared(const(JGeometry::TVec2<f> const &))
 0002:8025AD1C       MapPartsFloatingForce::MapPartsFloatingForce((LiveActor *))
 0002:8025ADB0       MapPartsFloatingForce::init((JMapInfoIter const &))
 0002:8025AE34       MapPartsFloatingForce::initForNormalMotion((JMapInfoIter const &))
 0002:8025AEB8       MapPartsFloatingForce::initForSpringMotion((JMapInfoIter const &))
 0002:8025AFE4       MapPartsFloatingForce::start((void))
 0002:8025B094       MapPartsFloatingForce::updateVelocity((void))
 0002:8025B178       MapPartsFloatingForce::updateVelocitySpring((void))
 0002:8025B248       MapPartsFloatingForce::tryOn((void))
 0002:8025B300       MapPartsFloatingForce::tryReturn((void))
 0002:8025B38C       MapPartsFloatingForce::exeWait((void))
 0002:8025B3DC       MapPartsFloatingForce::exeMove((void))
 0002:8025B50C       MapPartsFloatingForce::exeMoveSpring((void))
 0002:8025B580       MapPartsFloatingForce::exeMoveReturn((void))
 0002:8025B78C       MapPartsFunction::MapPartsFunction((LiveActor *,char const *))
 0002:8025B800       MapPartsFunction::sendMsgToHost((ulong))
 0002:8025B874       MapPartsFunction::movement((void))
 0002:8025B8C4       MapPartsFunction::initNerve((Nerve const *))
 0002:8025B920       MapPartsFunction::getStep(const(void))
 0002:8025B92C       MapPartsFunction::isStep(const(long))
 0002:8025B944       MapPartsFunction::isNerve(const(Nerve const *))
 0002:8025B980       MapPartsFunction::isFirstStep(const(void))
 0002:8025B994       MapPartsRailGuideDrawer::MapPartsRailGuideDrawer((LiveActor *,char const *))
 0002:8025B9FC       MapPartsRailGuideDrawer::init((JMapInfoIter const &))
 0002:8025BAE4       MapPartsRailGuideDrawer::hide((void))
 0002:8025BAEC       MapPartsRailGuideDrawer::isWorking(const(void))
 0002:8025BB5C       MapPartsRailGuideDrawer::hide((void))
 0002:8025BC2C       MapPartsRailGuideDrawer::initGuidePoints((JMapInfoIter const &))
 0002:8025BD78       MapPartsRailGuideDrawer::exeDrawForward((void))
 0002:8025BF00       MR::Vector<Q22MR41FixedArray<P22MapPartsRailGuidePoint,256>>::push_back((MapPartsRailGuidePoint *const &))
 0002:8025BF78       MapPartsRailGuideHolder::MapPartsRailGuideHolder((void))
 0002:8025BFC4       MapPartsRailGuideHolder::createRailGuide((LiveActor *,char const *,JMapInfoIter const &))
 0002:8025C0B0       MapPartsRailGuideHolder::find((long))
 0002:8025C144       MapPartsRailGuidePoint::MapPartsRailGuidePoint((LiveActor const *,char const *,float,bool))
 0002:8025C1DC       MapPartsRailGuidePoint::MapPartsRailGuidePoint((LiveActor const *,char const *,int,bool))
 0002:8025C278       MapPartsRailGuidePoint::init((JMapInfoIter const &))
 0002:8025C348       MapPartsRailMover::MapPartsRailMover((LiveActor *))
 0002:8025C3D8       MapPartsRailMover::init((JMapInfoIter const &))
 0002:8025C4E8       MapPartsRailMover::movement((void))
 0002:8025C57C       MapPartsRailMover::start((void))
 0002:8025C5E8       MapPartsRailMover::end((void))
 0002:8025C690       MapPartsRailMover::receiveMsg((ulong))
 0002:8025C6E4       MapPartsRailMover::moveToInitPos((void))
 0002:8025C76C       MapPartsRailMover::cancelSignalMotion((void))
 0002:8025C7C0       MapPartsRailMover::tryResetPositionRepeat((void))
 0002:8025C838       MapPartsRailMover::resetToInitPos((void))
 0002:8025C87C       MapPartsRailMover::passPoint((void))
 0002:8025C918       MapPartsRailMover::reachedEnd((void))
 0002:8025C9D0       MapPartsRailMover::isReachedEnd(const(void))
 0002:8025CA40       MapPartsRailMover::isDone(const(void))
 0002:8025CA64       MapPartsRailMover::setStateStopAtEndBeforeRotate((void))
 0002:8025CAFC       MapPartsRailMover::calcTimeToNextRailPoint(const(float *))
 0002:8025CCF4       MapPartsRailMover::calcMoveSpeed(const(float *))
 0002:8025CD90       MapPartsRailMover::calcMoveSpeedDirect(const(float *))
 0002:8025CDE0       MapPartsRailMover::calcMoveSpeedTime(const(float *))
 0002:8025CE8C       MapPartsRailMover::updateAccel((void))
 0002:8025CF40       MapPartsRailMover::tryPassPoint((void))
 0002:8025CFCC       MapPartsRailMover::tryRestartAtEnd((void))
 0002:8025D094       MapPartsRailMover::restartAtEnd((void))
 0002:8025D150       MapPartsRailMover::exeMove((void))
 0002:8025D200       MapPartsRailMover::exeMoveStart((void))
 0002:8025D374       MapPartsRailMover::exeStopAtPoint((void))
 0002:8025D424       MapPartsRailMover::exeStopAtEnd((void))
 0002:8025D654       NrvMapPartsRailMover::HostTypeVanish::execute(const(Spine *))
 0002:8025D6A4       NrvMapPartsRailMover::HostTypeStopAtEndWithPlayerOn::execute(const(Spine *))
 0002:8025D724       MapPartsRailPointPassChecker::MapPartsRailPointPassChecker((LiveActor *))
 0002:8025D770       MapPartsRailPointPassChecker::start((void))
 0002:8025D7D8       MapPartsRailPointPassChecker::isPassed(const(void))
 0002:8025D820       MapPartsRailPointPassChecker::isPassedStartPoint(const(void))
 0002:8025D878       MapPartsRailPointPassChecker::isPassedEndPoint(const(void))
 0002:8025D9A8       MapPartsRailPosture::MapPartsRailPosture((LiveActor *))
 0002:8025D9FC       MapPartsRailPosture::init((JMapInfoIter const &))
 0002:8025DA5C       MapPartsRailPosture::end((void))
 0002:8025DAA0       MapPartsRailPosture::exeMove((void))
 0002:8025DD20       MapPartsRailPosture::isPostureTypeRailDirRailUseShadowGravity(const(void))
 0002:8025DD34       MapPartsRailRotator::MapPartsRailRotator((LiveActor *))
 0002:8025DDB0       MapPartsRailRotator::initWithRotateMtx((JMapInfoIter const &,float *[4]))
 0002:8025DDC8       MapPartsRailRotator::end((void))
 0002:8025DE14       MapPartsRailRotator::isWorking(const(void))
 0002:8025DE40       MapPartsRailRotator::hasRotation(const(long))
 0002:8025DEC8       MapPartsRailRotator::rotateAtPoint((long))
 0002:8025DF2C       MapPartsRailRotator::hasRotationBetweenPoints(const(long))
 0002:8025DF9C       MapPartsRailRotator::rotateBetweenPoints((long,float))
 0002:8025E02C       MapPartsRailRotator::updateHostRotateMtx((void))
 0002:8025E238       MapPartsRailRotator::updateInfo((long))
 0002:8025E3A0       MapPartsRailRotator::isReachedTargetAngle(const(void))
 0002:8025E3C0       MapPartsRailRotator::calcRotateAxisDir(const(MapPartsRailRotator::AxisType,JGeometry::TVec3<f> *))
 0002:8025E424       MapPartsRailRotator::updateRotateMtx((MapPartsRailRotator::AxisType,float))
 0002:8025E578       MapPartsRailRotator::exeRotate((void))
 0002:8025E714       MapPartsRotator::MapPartsRotator((LiveActor *))
 0002:8025E7DC       MapPartsRotator::init((JMapInfoIter const &))
 0002:8025E8BC       MapPartsRotator::start((void))
 0002:8025E90C       MapPartsRotator::isWorking(const(void))
 0002:8025E9A0       MapPartsRotator::cancelSignalMotion((void))
 0002:8025E9E4       MapPartsRotator::updateBaseHostMtx((void))
 0002:8025EB6C       MapPartsRotator::updateVelocity((void))
 0002:8025ECCC       MapPartsRotator::updateAngle((void))
 0002:8025ED48       MapPartsRotator::updateTargetAngle((void))
 0002:8025EDC0       MapPartsRotator::restartAtEnd((void))
 0002:8025EE40       MapPartsRotator::initRotateSpeed((JMapInfoIter const &))
 0002:8025EEE4       MapPartsRotator::isReachedTargetAngle(const(void))
 0002:8025EF74       MapPartsRotator::updateRotateMtx((MapPartsRotator::AxisType,float))
 0002:8025F0D0       MapPartsRotator::calcRotateAxisDir(const(MapPartsRotator::AxisType,JGeometry::TVec3<f> *))
 0002:8025F134       MapPartsRotator::exeRotate((void))
 0002:8025F218       MapPartsRotator::exeRotateStart((void))
 0002:8025F3C8       NrvMapPartsRotator::HostTypeStopAtEnd::execute(const(Spine *))
 0002:8025F424       MapPartsRotator::isOnReverse(const(void))
 0002:8025F42C       MapPartsRotator::getRotateSpeed(const(void))
 0002:8025F434       MapPartsSeesaw1AxisRotator::MapPartsSeesaw1AxisRotator((LiveActor *,char const *,float))
 0002:8025F4EC       MapPartsSeesaw1AxisRotator::init((JMapInfoIter const &))
 0002:8025F604       MapPartsSeesaw1AxisRotator::start((void))
 0002:8025F854       MapPartsSeesaw1AxisRotator::end((void))
 0002:8025F868       MapPartsSeesaw1AxisRotator::receiveMsg((ulong))
 0002:8025F8D8       MapPartsSeesaw1AxisRotator::exeMove((void))
 0002:8025F970       MapPartsSeesaw1AxisRotator::exeStay((void))
 0002:8025F9DC       MapPartsSeesaw1AxisRotator::exeHipDrop((void))
 0002:8025FA4C       MapPartsSeesaw1AxisRotator::rotate((void))
 0002:8025FC48       MapPartsSeesaw1AxisRotator::updateVelocity((void))
 0002:8025FD50       MapPartsSeesaw1AxisRotator::updateRestoreForce((void))
 0002:8025FE4C       MapPartsSeesaw1AxisRotator::clampAngularSpeed((void))
 0002:8025FF30       MapPartsSeesaw1AxisRotator::addForceHipDrop((void))
 0002:8025FFF8       MapPartsSeesaw1AxisRotator::isGoingToReachTargetAngle(const(void))
 0002:80260380       MapPartsSeesaw2AxisRotator::MapPartsSeesaw2AxisRotator((LiveActor *,char const *,float))
 0002:80260438       MapPartsSeesaw2AxisRotator::init((JMapInfoIter const &))
 0002:80260500       MapPartsSeesaw2AxisRotator::start((void))
 0002:802605C0       MapPartsSeesaw2AxisRotator::receiveMsg((ulong))
 0002:80260654       MapPartsSeesaw2AxisRotator::rotate((void))
 0002:80260878       MapPartsSeesaw2AxisRotator::restoreMove((void))
 0002:802608F4       MapPartsSeesaw2AxisRotator::getInertiaConst(const(void))
 0002:80260940       MapPartsSeesaw2AxisRotator::exeMove((void))
 0002:8026098C       MapPartsSeesaw2AxisRotator::exeHipDrop((void))
 0002:80260AC4       NrvMapPartsSeesaw2AxisRotator::HostTypeStay::execute(const(Spine *))
 0002:80260B20       MapPartsSeesaw2AxisRotator::getRotateMtx(const(void))
 0002:80260B28       @unnamed@NameObjFactory_cpp@::createNameObj<13AssemblyBlock>(NameObj *(char const *))
 0002:80260B68       @unnamed@NameObjFactory_cpp@::createNameObj<18SimpleBreakableObj>(NameObj *(char const *))
 0002:80260BE8       @unnamed@NameObjFactory_cpp@::createNameObj<12MovieStarter>(NameObj *(char const *))
 0002:80260C28       @unnamed@NameObjFactory_cpp@::createNameObj<16OceanWaveFloater>(NameObj *(char const *))
 0002:80260C68       @unnamed@ModelChangableObjFactory_cpp@::createNameObj<19MercatorRotateParts>(NameObj *(char const *))
 0002:80260CA8       @unnamed@ModelChangableObjFactory_cpp@::createNameObj<18TripodBossFixParts>(NameObj *(char const *))
 0002:80260CE8       @unnamed@ModelChangableObjFactory_cpp@::createNameObj<23TripodBossRailMoveParts>(NameObj *(char const *))
 0002:80260D28       @unnamed@ModelChangableObjFactory_cpp@::createNameObj<21TripodBossRotateParts>(NameObj *(char const *))
 0002:80260D68       @unnamed@NameObjFactory_cpp@::createNameObj<16NormalMapTestObj>(NameObj *(char const *))
 0002:80260DA8       MR::getModelChangableObjCreator((char const *))
 0002:80260E64       MR::requestMountModelChangableObjArchives((char const *,long))
 0002:80260EA0       MR::isReadResourceFromDVDAtModelChangableObj((char const *,long))
 0002:80260EF4       MovementOnOffGroupHolder::MovementOnOffGroupHolder((char const *))
 0002:80260F38       MovementOnOffGroupHolder::joinToGroup((char const *,NameObj *,ulong))
 0002:80260FA8       MovementOnOffGroupHolder::onMovementGroup((char const *))
 0002:80261008       MovementOnOffGroupHolder::createGroup((char const *,ulong))
 0002:80261088       MovementOnOffGroupHolder::findGroupFromName(const(char const *))
 0002:80261104       MovementOnOffGroupHolder::~MovementOnOffGroupHolder((void))
 0002:8026115C       NameObj::NameObj((char const *))
 0002:802611B4       NameObj::~NameObj((void))
 0002:802611F4       NameObj::init((JMapInfoIter const &))
 0002:802611F8       NameObj::initAfterPlacement((void))
 0002:802611FC       NameObj::movement((void))
 0002:80261200       NameObj::draw(const(void))
 0002:80261204       NameObj::calcAnim((void))
 0002:80261208       NameObj::calcViewAndEntry((void))
 0002:8026120C       NameObj::initWithoutIter((void))
 0002:8026124C       NameObj::setName((char const *))
 0002:80261254       NameObj::executeMovement((void))
 0002:80261278       NameObj::requestSuspend((void))
 0002:802612A4       NameObj::requestResume((void))
 0002:802612D0       NameObj::syncWithFlags((void))
 0002:80261314       NameObjFunction::requestMovementOn((NameObj *))
 0002:80261338       NameObjFunction::requestMovementOff((NameObj *))
 0002:8026135C       NameObjAdaptor::NameObjAdaptor((char const *))
 0002:802613AC       NameObjAdaptor::~NameObjAdaptor((void))
 0002:80261434       NameObjAdaptor::movement((void))
 0002:80261454       NameObjAdaptor::calcAnim((void))
 0002:80261474       NameObjAdaptor::calcViewAndEntry((void))
 0002:80261494       NameObjAdaptor::draw(const(void))
 0002:802614B4       NameObjAdaptor::connectToMovement((MR::FunctorBase const &))
 0002:802614F8       NameObjAdaptor::connectToCalcAnim((MR::FunctorBase const &))
 0002:8026153C       NameObjAdaptor::connectToDraw((MR::FunctorBase const &))
 0002:80261580       NameObjArchiveListCollector::NameObjArchiveListCollector((void))
 0002:8026158C       NameObjArchiveListCollector::addArchive((char const *))
 0002:802615D4       NameObjArchiveListCollector::getArchive(const(long))
 0002:802615E0       NameObjCategoryList::NameObjCategoryList((ulong,CategoryListInitialTable const *,void (NameObj::)(void const *,void *),bool,char const *))
 0002:80261698       NameObjCategoryList::NameObjCategoryList((ulong,CategoryListInitialTable const *,void (NameObj::)(void const *,void const *),bool,char const *))
 0002:80261750       NameObjCategoryList::~NameObjCategoryList((void))
 0002:802617B4       NameObjCategoryList::execute((int))
 0002:80261854       NameObjCategoryList::incrementCheck((NameObj *,int))
 0002:80261870       NameObjCategoryList::allocateBuffer((void))
 0002:802618F8       NameObjCategoryList::add((NameObj *,int))
 0002:80261920       NameObjCategoryList::remove((NameObj *,int))
 0002:8026198C       NameObjCategoryList::registerExecuteBeforeFunction((MR::FunctorBase const &,int))
 0002:802619DC       NameObjCategoryList::initTable((ulong,CategoryListInitialTable const *))
 0002:80261AE4       SpinDriverPathStorageScenario::~SpinDriverPathStorageScenario((void))
 0002:80261B40       @unnamed@NameObjCategoryList_cpp@::NameObjRealDelegator<M7NameObjFPCvPv_v>::__cl((NameObj *))
 0002:80261BA0       MR::AssignableArray<8JMapInfo>::~AssignableArray<8JMapInfo>((void))
 0002:80261C08       NameObjExecuteInfo::NameObjExecuteInfo((void))
 0002:80261C34       NameObjExecuteInfo::setConnectInfo((NameObj *,int,int,int,int))
 0002:80261D08       NameObjExecuteInfo::initConnectting((void))
 0002:80261D7C       NameObjExecuteInfo::requestConnect((uchar *))
 0002:80261DD8       NameObjExecuteInfo::requestDisconnect((uchar *,bool))
 0002:80261E40       NameObjExecuteInfo::executeRequirementConnectMovement((void))
 0002:80261E54       NameObjExecuteInfo::executeRequirementDisconnectMovement((void))
 0002:80261E68       NameObjExecuteInfo::executeRequirementConnectDraw((void))
 0002:80261E7C       NameObjExecuteInfo::executeRequirementDisconnectDraw((void))
 0002:80261E90       NameObjExecuteInfo::executeRequirementDisconnectDrawDelay((void))
 0002:80261EA4       NameObjExecuteInfo::requestMovementOff((int))
 0002:80261EE4       NameObjExecuteInfo::findLightInfo(const(void))
 0002:80261F2C       NameObjExecuteInfo::connectToScene((void))
 0002:80261FA8       NameObjExecuteInfo::disconnectToScene((void))
 0002:80262024       NameObjExecuteInfo::connectToDraw((void))
 0002:802620A4       NameObjExecuteInfo::disconnectToDraw((void))
 0002:80262124       NameObjExecuteHolder::registerActor((NameObj *,int,int,int,int))
 0002:80262180       NameObjExecuteHolder::initConnectting((void))
 0002:802621DC       NameObjExecuteHolder::connectToScene((NameObj *))
 0002:80262220       NameObjExecuteHolder::connectToDraw((NameObj *))
 0002:80262264       NameObjExecuteHolder::disconnectToScene((NameObj *))
 0002:802622AC       NameObjExecuteHolder::disconnectToDraw((NameObj *))
 0002:802622F4       NameObjExecuteHolder::isConnectToDraw(const(NameObj const *))
 0002:80262334       NameObjExecuteHolder::executeRequirementConnectMovement((void))
 0002:802623A4       NameObjExecuteHolder::executeRequirementDisconnectMovement((void))
 0002:80262414       NameObjExecuteHolder::executeRequirementConnectDraw((void))
 0002:80262484       NameObjExecuteHolder::executeRequirementDisconnectDraw((void))
 0002:802624F4       NameObjExecuteHolder::executeRequirementDisconnectDrawDelay((void))
 0002:80262564       NameObjExecuteHolder::requestMovementOff((int))
 0002:8026262C       NameObjExecuteHolder::getConnectToSceneInfo(const(NameObj const *))
 0002:80262650       MR::registerNameObjToExecuteHolder((NameObj *,int,int,int,int))
 0002:802626B4       MR::executeRequirementDisconnectDrawDelay((void))
 0002:802626E0       MR::requestMovementOffWithCategory((int))
 0002:80262960       MR::findActorLightInfo((LiveActor const *))
 0002:802629A0       NameObjExecuteHolder::NameObjExecuteHolder((int))
 0002:80262A3C       NameObjExecuteHolder::~NameObjExecuteHolder((void))
 0002:80262A94       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<10SwitchArea>(NameObj *(char const *))
 0002:80262AD8       @unnamed@NameObjFactory_cpp@::createSphere<10SwitchArea>(NameObj *(char const *))
 0002:80262B1C       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<19BigBubbleSwitchArea>(NameObj *(char const *))
 0002:80262B60       @unnamed@NameObjFactory_cpp@::createCenterOriginCube<19BigBubbleCameraArea>(NameObj *(char const *))
 0002:80262BA4       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<15AudioEffectArea>(NameObj *(char const *))
 0002:80262BE8       @unnamed@NameObjFactory_cpp@::createSphere<15AudioEffectArea>(NameObj *(char const *))
 0002:80262C2C       @unnamed@NameObjFactory_cpp@::createBowl<14CubeCameraArea>(NameObj *(char const *))
 0002:80262CB4       @unnamed@NameObjFactory_cpp@::createCenterOriginCube<7AreaObj>(NameObj *(char const *))
 0002:80262E08       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<11RestartCube>(NameObj *(char const *))
 0002:80262E4C       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<8WarpCube>(NameObj *(char const *))
 0002:80262EB4       @unnamed@NameObjFactory_cpp@::createSphere<12PlayerSeArea>(NameObj *(char const *))
 0002:80262EF8       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<11MessageArea>(NameObj *(char const *))
 0002:80262F3C       @unnamed@NameObjFactory_cpp@::createSphere<9BloomArea>(NameObj *(char const *))
 0002:80262F80       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<16SoundEmitterCube>(NameObj *(char const *))
 0002:80262FC4       @unnamed@NameObjFactory_cpp@::createSphere<17BigBubbleGoalArea>(NameObj *(char const *))
 0002:80263090       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<11MessageArea>(NameObj *(char const *))
 0002:802630D4       @unnamed@NameObjFactory_cpp@::createCenterOriginCube<9BloomArea>(NameObj *(char const *))
 0002:8026315C       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<16GlaringLightArea>(NameObj *(char const *))
 0002:802631A0       @unnamed@NameObjFactory_cpp@::createCenterOriginCube<15SimpleBloomArea>(NameObj *(char const *))
 0002:802631E4       @unnamed@NameObjFactory_cpp@::createSphere<15SimpleBloomArea>(NameObj *(char const *))
 0002:80263228       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<15SimpleBloomArea>(NameObj *(char const *))
 0002:80263514       @unnamed@NameObjFactory_cpp@::createNameObj<21CameraRepulsiveSphere>(NameObj *(char const *))
 0002:80263574       @unnamed@NameObjFactory_cpp@::createNameObj<23CameraRepulsiveCylinder>(NameObj *(char const *))
 0002:8026365C       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<17BigBubbleGoalArea>(NameObj *(char const *))
 0002:802636A0       @unnamed@NameObjFactory_cpp@::createBaseOriginCylinder<17BigBubbleGoalArea>(NameObj *(char const *))
 0002:802638C0       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<15AudioEffectArea>(NameObj *(char const *))
 0002:80263A58       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<21MercatorTransformCube>(NameObj *(char const *))
 0002:80263A9C       @unnamed@NameObjFactory_cpp@::createBaseOriginCube<20AstroChangeStageCube>(NameObj *(char const *))
 0002:80263BF0       @unnamed@NameObjFactory_cpp@::createCenterOriginCube<13CollisionArea>(NameObj *(char const *))
 0002:80263C34       @unnamed@NameObjFactory_cpp@::createNameObj<10MarioActor>(NameObj *(char const *))
 0002:80263C74       @unnamed@NameObjFactory_cpp@::createNameObj<11SpaceCocoon>(NameObj *(char const *))
 0002:80263CB4       @unnamed@NameObjFactory_cpp@::createNameObj<6Rabbit>(NameObj *(char const *))
 0002:80263CF4       @unnamed@NameObjFactory_cpp@::createNameObj<7Dodoryu>(NameObj *(char const *))
 0002:80263DF4       @unnamed@NameObjFactory_cpp@::createNameObj<11AstroMapObj>(NameObj *(char const *))
 0002:80263E34       @unnamed@NameObjFactory_cpp@::createNameObj<9Butterfly>(NameObj *(char const *))
 0002:80263E74       @unnamed@NameObjFactory_cpp@::createNameObj<7Kinopio>(NameObj *(char const *))
 0002:80263EB4       @unnamed@NameObjFactory_cpp@::createNameObj<12KinopioAstro>(NameObj *(char const *))
 0002:80263EF4       @unnamed@NameObjFactory_cpp@::createNameObj<11EarthenPipe>(NameObj *(char const *))
 0002:80263F34       @unnamed@NameObjFactory_cpp@::createNameObj<10HoneyQueen>(NameObj *(char const *))
 0002:80263FB4       @unnamed@NameObjFactory_cpp@::createNameObj<9PowerStar>(NameObj *(char const *))
 0002:80264074       @unnamed@NameObjFactory_cpp@::createNameObj<13BegomanSpring>(NameObj *(char const *))
 0002:802640B4       @unnamed@NameObjFactory_cpp@::createNameObj<18PenguinRacerLeader>(NameObj *(char const *))
 0002:802640F4       @unnamed@NameObjFactory_cpp@::createNameObj<13PenguinSkater>(NameObj *(char const *))
 0002:80264134       @unnamed@NameObjFactory_cpp@::createNameObj<12BegomanSpike>(NameObj *(char const *))
 0002:80264174       @unnamed@NameObjFactory_cpp@::createNameObj<7CocoNut>(NameObj *(char const *))
 0002:802641F4       @unnamed@NameObjFactory_cpp@::createNameObj<12TicoStarRing>(NameObj *(char const *))
 0002:80264234       @unnamed@NameObjFactory_cpp@::createNameObj<8TicoShop>(NameObj *(char const *))
 0002:80264334       @unnamed@NameObjFactory_cpp@::createNameObj<7TicoFat>(NameObj *(char const *))
 0002:80264374       @unnamed@NameObjFactory_cpp@::createNameObj<10TicoGalaxy>(NameObj *(char const *))
 0002:802643F4       @unnamed@NameObjFactory_cpp@::createNameObj<15ClipFieldSwitch>(NameObj *(char const *))
 0002:80264474       @unnamed@NameObjFactory_cpp@::createNameObj<7Rosetta>(NameObj *(char const *))
 0002:80264534       @unnamed@NameObjFactory_cpp@::createNameObj<9ButlerMap>(NameObj *(char const *))
 0002:80264574       @unnamed@NameObjFactory_cpp@::createNameObj<11TeresaRacer>(NameObj *(char const *))
 0002:802645F4       @unnamed@NameObjFactory_cpp@::createNameObj<4Flag>(NameObj *(char const *))
 0002:80264634       @unnamed@NameObjFactory_cpp@::createNameObj<6Butler>(NameObj *(char const *))
 0002:80264734       @unnamed@NameObjFactory_cpp@::createNameObj<9SnowFloor>(NameObj *(char const *))
 0002:80264774       @unnamed@NameObjFactory_cpp@::createNameObj<7OtaRock>(NameObj *(char const *))
 0002:802647B4       @unnamed@NameObjFactory_cpp@::createNameObj<9RainCloud>(NameObj *(char const *))
 0002:80264834       @unnamed@NameObjFactory_cpp@::createNameObj<8Tamakoro>(NameObj *(char const *))
 0002:80264874       @unnamed@NameObjFactory_cpp@::createNameObj<12GoldenTurtle>(NameObj *(char const *))
 0002:80264910       @unnamed@NameObjFactory_cpp@::createNameObj<5Plant>(NameObj *(char const *))
 0002:80264950       @unnamed@NameObjFactory_cpp@::createNameObj<7OtaKing>(NameObj *(char const *))
 0002:80264990       @unnamed@NameObjFactory_cpp@::createNameObj<7SurfRay>(NameObj *(char const *))
 0002:802649D4       @unnamed@NameObjFactory_cpp@::createNameObj<11OceanSphere>(NameObj *(char const *))
 0002:80264A54       @unnamed@NameObjFactory_cpp@::createNameObj<22SandCapsulePressGround>(NameObj *(char const *))
 0002:80264AD4       @unnamed@NameObjFactory_cpp@::createNameObj<7WarpPod>(NameObj *(char const *))
 0002:80264C38       @unnamed@NameObjFactory_cpp@::createNameObj<21StarReturnDemoStarter>(NameObj *(char const *))
 0002:80264C78       @unnamed@NameObjFactory_cpp@::createNameObj<10WaterPlant>(NameObj *(char const *))
 0002:80264CB8       @unnamed@NameObjFactory_cpp@::createNameObj<27InvisiblePolygonObjGCapture>(NameObj *(char const *))
 0002:80264DB8       @unnamed@NameObjFactory_cpp@::createNameObj<18GroupSwitchWatcher>(NameObj *(char const *))
 0002:80264DF8       @unnamed@NameObjFactory_cpp@::createNameObj<12SearchBeamer>(NameObj *(char const *))
 0002:80264EF8       @unnamed@NameObjFactory_cpp@::createNameObj<19KoopaBattleMapStair>(NameObj *(char const *))
 0002:80265178       @unnamed@NameObjFactory_cpp@::createNameObj<9OceanRing>(NameObj *(char const *))
 0002:80265338       @unnamed@NameObjFactory_cpp@::createNameObj<17AstroDomeBlueStar>(NameObj *(char const *))
 0002:802653B8       @unnamed@NameObjFactory_cpp@::createNameObj<19SandUpDownEffectObj>(NameObj *(char const *))
 0002:80265438       @unnamed@NameObjFactory_cpp@::createNameObj<22SpringWaterFloaterSpot>(NameObj *(char const *))
 0002:80265538       @unnamed@NameObjFactory_cpp@::createNameObj<12OnimasuPivot>(NameObj *(char const *))
 0002:802655F8       @unnamed@NameObjFactory_cpp@::createNameObj<14StarPieceGroup>(NameObj *(char const *))
 0002:80265678       @unnamed@NameObjFactory_cpp@::createNameObj<18HipDropTimerSwitch>(NameObj *(char const *))
 0002:802658B8       @unnamed@NameObjFactory_cpp@::createNameObj<11KoopaJrShip>(NameObj *(char const *))
 0002:80265CF8       @unnamed@NameObjFactory_cpp@::createNameObj<26GrandStarReturnDemoStarter>(NameObj *(char const *))
 0002:80265DF8       @unnamed@NameObjFactory_cpp@::createNameObj<19AstroCountDownPlate>(NameObj *(char const *))
 0002:80265EF8       @unnamed@NameObjFactory_cpp@::createNameObj<9FishGroup>(NameObj *(char const *))
 0002:80266038       @unnamed@NameObjFactory_cpp@::createNameObj<14TripodBossCoin>(NameObj *(char const *))
 0002:802660F8       @unnamed@NameObjFactory_cpp@::createNameObj<19TripodBossGuardWall>(NameObj *(char const *))
 0002:802661B8       @unnamed@NameObjFactory_cpp@::createNameObj<31TripodBossKillerGeneraterCircle>(NameObj *(char const *))
 0002:80266338       @unnamed@NameObjFactory_cpp@::createNameObj<16DemoCastSubGroup>(NameObj *(char const *))
 0002:80266438       @unnamed@NameObjFactory_cpp@::createNameObj<17ClipAreaDropLaser>(NameObj *(char const *))
 0002:80266978       @unnamed@NameObjFactory_cpp@::createNameObj<16BenefitItemOneUp>(NameObj *(char const *))
 0002:80266A1C       @unnamed@NameObjFactory_cpp@::createNameObj<21BenefitItemInvincible>(NameObj *(char const *))
 0002:80266CDC       @unnamed@NameObjFactory_cpp@::createNameObj<9BigBubble>(NameObj *(char const *))
 0002:80266FF8       @unnamed@NameObjFactory_cpp@::createNameObj<11CrystalCage>(NameObj *(char const *))
 0002:802670F8       @unnamed@NameObjFactory_cpp@::createNameObj<18MorphItemNeoHopper>(NameObj *(char const *))
 0002:80267158       @unnamed@NameObjFactory_cpp@::createNameObj<15MorphItemNeoBee>(NameObj *(char const *))
 0002:802671B8       @unnamed@NameObjFactory_cpp@::createNameObj<18MorphItemNeoTeresa>(NameObj *(char const *))
 0002:80267218       @unnamed@NameObjFactory_cpp@::createNameObj<15MorphItemNeoIce>(NameObj *(char const *))
 0002:80267278       @unnamed@NameObjFactory_cpp@::createNameObj<16MorphItemNeoFire>(NameObj *(char const *))
 0002:802672D8       @unnamed@NameObjFactory_cpp@::createNameObj<15MorphItemNeoFoo>(NameObj *(char const *))
 0002:80267478       @unnamed@NameObjFactory_cpp@::createNameObj<14LavaProminence>(NameObj *(char const *))
 0002:802674B8       @unnamed@NameObjFactory_cpp@::createNameObj<20LavaProminenceTriple>(NameObj *(char const *))
 0002:802676F8       @unnamed@NameObjFactory_cpp@::createNameObj<25AnmModelSwitchMoveEndKill>(NameObj *(char const *))
 0002:80267BB0       @unnamed@NameObjFactory_cpp@::createNameObj<13MarioLauncher>(NameObj *(char const *))
 0002:80268460       @unnamed@NameObjFactory_cpp@::createNameObj<15SimpleMirrorObj>(NameObj *(char const *))
 0002:80268760       @unnamed@NameObjFactory_cpp@::createNameObj<20SphereSelectorHandle>(NameObj *(char const *))
 0002:8026893C       @unnamed@NameObjFactory_cpp@::createNameObj<15TypicalDoorOpen>(NameObj *(char const *))
 0002:80269110       @unnamed@NameObjFactory_cpp@::createNameObj<19RailMoveIndirectObj>(NameObj *(char const *))
 0002:80269BA4       TalkMessageFuncM<P8TicoShop,M8TicoShopFPCvPvUl_b>::clone(const(void))
 0002:80269BE4       @unnamed@NameObjFactory_cpp@::createNameObj<8RaceRail>(NameObj *(char const *))
 0002:80269CE4       @unnamed@NameObjFactory_cpp@::createNameObj<15YellowChipGroup>(NameObj *(char const *))
 0002:80269EA4       @unnamed@NameObjFactory_cpp@::createNameObj<9OceanBowl>(NameObj *(char const *))
 0002:8026A3E4       @unnamed@NameObjFactory_cpp@::createNameObj<29EffectObj10x10x10SyncClipping>(NameObj *(char const *))
 0002:8026A8CC       @unnamed@NameObjFactory_cpp@::createNameObj<15MiniatureGalaxy>(NameObj *(char const *))
 0002:8026AACC       @unnamed@NameObjFactory_cpp@::createNameObj<12DemoExecutor>(NameObj *(char const *))
 0002:8026AB4C       @unnamed@NameObjFactory_cpp@::createNameObj<20AstroDomeDemoStarter>(NameObj *(char const *))
 0002:8026AC4C       @unnamed@NameObjFactory_cpp@::createNameObj<15ScenarioStarter>(NameObj *(char const *))
 0002:8026ACCC       NameObjFactory::getCreator((char const *))
 0002:8026AD2C       NameObjFactory::requestMountObjectArchives((char const *,JMapInfoIter const &))
 0002:8026ADA4       NameObjFactory::isReadResourceFromDVD((char const *,JMapInfoIter const &))
 0002:8026AE2C       NameObjFactory::isPlayerArchiveLoaderObj((char const *))
 0002:8026AE9C       NameObjFactory::getName2CreateFunc((char const *,NameObjFactory::Name2CreateFunc const *))
 0002:8026B48C       EffectObj20x20x10SyncClipping::getClippingCenterOffset(const(void))
 0002:8026B594       __sinit__NameObjFactory_cpp
 0002:8026B810       NrvTrapeze::TrapezeNrvFree::execute(const(Spine *))
 0002:8026B814       J2DPane::setAnimationVC((J2DAnmVtxColor *))
 0002:8026B82C       NameObjFinder::find((char const *))
 0002:8026B840       NameObjGroup::NameObjGroup((char const *,int))
 0002:8026B8A4       NameObjGroup::~NameObjGroup((void))
 0002:8026B934       NameObjGroup::pauseOffAll(const(void))
 0002:8026B990       NameObjGroup::initObjArray((int))
 0002:8026B9F4       NameObjHolder::NameObjHolder((int))
 0002:8026BA50       NameObjHolder::add((NameObj *))
 0002:8026BB24       MR::callAppearAllGroupMember((LiveActor const *))
 0002:8026BB64       NameObjHolder::callMethodAllObj((void (NameObj::)(void const *,void *)))
 0002:8026BBE4       NameObjHolder::clearArray((void))
 0002:8026BBF4       NameObjHolder::find((char const *))
 0002:8026BD78       std::find_if<PP7NameObj,Q227@unnamed@NameObjHolder_cpp@14equal_fullname>(NameObj **(NameObj **,NameObj **,@unnamed@NameObjHolder_cpp@::equal_fullname))
 0002:8026BDE0       MR::Vector<Q22MR24FixedArray<P7NameObj,16>>::insert((NameObj **,NameObj *const &))
 0002:8026BE20       NameObjListExecutor::NameObjListExecutor((void))
 0002:8026BE44       NameObjListExecutor::~NameObjListExecutor((void))
 0002:8026BF10       MR::Vector<Q22MR35AssignableArray<P15DrawBufferGroup>>::~Vector<Q22MR35AssignableArray<P15DrawBufferGroup>>((void))
 0002:8026BF74       NameObjListExecutor::init((void))
 0002:8026BFF0       NameObjListExecutor::allocateDrawBufferActorList((void))
 0002:8026C0B0       UserFile::setCreated((void))
 0002:8026C0BC       NameObjListExecutor::entryDrawBuffer3D((void))
 0002:8026C0C8       NameObjListExecutor::entryDrawBufferMirror((void))
 0002:8026C0E4       NameObjListExecutor::executeDraw((int))
 0002:8026C0EC       NameObjListExecutor::initMovementList((void))
 0002:8026C0F0       NameObjListExecutor::initCalcAnimList((void))
 0002:8026C0F4       NameObjListExecutor::initCalcViewAndEntryList((void))
 0002:8026C0F8       NameObjListExecutor::initDrawList((void))
 0002:8026C0FC       NameObjRegister::setCurrentHolder((NameObjHolder *))
 0002:8026C104       NameObjRegister::add((NameObj *))
 0002:8026C10C       NameObjRegister::NameObjRegister((void))
 0002:8026C118       Butler::Butler((char const *))
 0002:8026C1D0       Butler::init((JMapInfoIter const &))
 0002:8026C344       Butler::exeDemo((void))
 0002:8026C390       ButlerMap::kill((void))
 0002:8026C3D4       Butler::killIfBatlerMapAppear((void))
 0002:8026C438       Butler::startDemoButlerReport((char const *))
 0002:8026C4F8       Butler::startDemoDomeLecture1((void))
 0002:8026C53C       Butler::startDemoDomeLecture2((void))
 0002:8026C5D8       Butler::startDemoStarPiece1((void))
 0002:8026C64C       Butler::startDemoStarPiece2((void))
 0002:8026C6E4       Butler::tryStartShowGalaxyMap((void))
 0002:8026C768       Butler::messageBranchFunc((ulong))
 0002:8026C7F0       Butler::control((void))
 0002:8026C91C       Butler::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8026CA50       ButlerMap::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8026CA94       Butler::initTalkCtrlArray((JMapInfoIter const &))
 0002:8026CB0C       Butler::initForAstroDome((JMapInfoIter const &))
 0002:8026CEE0       Butler::initForAstroGalaxy((JMapInfoIter const &))
 0002:8026D02C       Butler::createTalkCtrl((JMapInfoIter const &,char const *))
 0002:8026D0A4       ButlerMap::forceNerveToWait((void))
 0002:8026D0EC       Butler::tryReplaceStarPieceIfExecLecture((void))
 0002:8026D184       Butler::tryStartStarPieceReaction((void))
 0002:8026D2E0       Butler::exeStarPieceReaction((void))
 0002:8026D400       Butler::exeDemoDomeLecture2((void))
 0002:8026D480       Butler::exeDemoStarPiece2((void))
 0002:8026D500       Butler::exeDemoShowGalaxyMap((void))
 0002:8026D694       MR::Functor<6Butler,PCc>(MR::FunctorV1M<P6Butler,M6ButlerFPCvPvPCc_v,PCc> (Butler *,void (Butler::)(void const *,void *,char const *),char const *))
 0002:8026D6D8       MR::FunctorV1M<P6Butler,M6ButlerFPCvPvPCc_v,PCc>::__cl(const(void))
 0002:8026D70C       MR::FunctorV1M<P6Butler,M6ButlerFPCvPvPCc_v,PCc>::clone(const(JKRHeap *))
 0002:8026D814       TalkMessageFuncM<P8TicoShop,M8TicoShopFPCvPvUl_b>::TalkMessageFuncM<P8TicoShop,M8TicoShopFPCvPvUl_b>((TalkMessageFuncM<P8TicoShop,M8TicoShopFPCvPvUl_b> const &))
 0002:8026D90C       TalkMessageFuncM<P8TicoShop,M8TicoShopFPCvPvUl_b>::clone(const(JKRHeap *))
 0002:8026D98C       ButlerExplain::init((JMapInfoIter const &))
 0002:8026DA70       ButlerExplain::control((void))
 0002:8026DBEC       ButlerMap::ButlerMap((char const *))
 0002:8026DC34       ButlerMap::init((JMapInfoIter const &))
 0002:8026DEC4       ButlerMap::appear((void))
 0002:8026DFD0       ButlerMap::control((void))
 0002:8026E068       ButlerMap::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8026E1C0       ButlerMap::exeShowGalaxyMap((void))
 0002:8026E218       ButlerMap::exeLectureDemoShowMap((void))
 0002:8026E2BC       ButlerMap::exeStarPieceReaction((void))
 0002:8026E3EC       NrvButlerMap::ButlerMapNrvLectureDemoShowMapBefore::execute(const(Spine *))
 0002:8026E5B8       ButlerStateStarPieceReaction::ButlerStateStarPieceReaction((LiveActor *,JMapInfoIter const &,char const *))
 0002:8026E658       ButlerStateStarPieceReaction::appear((void))
 0002:8026E670       ButlerStateStarPieceReaction::exeWait((void))
 0002:8026E784       Caretaker::Caretaker((char const *))
 0002:8026E7D8       Caretaker::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8026E884       Caretaker::init((JMapInfoIter const &))
 0002:8026ECF4       Caretaker::initAfterPlacement((void))
 0002:8026ED34       Caretaker::kill((void))
 0002:8026ED7C       Caretaker::control((void))
 0002:8026EDC4       PenguinMaster::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8026EE34       Caretaker::branchFuncStar((ulong))
 0002:8026EE4C       Caretaker::branchFuncComet((ulong))
 0002:8026EF40       def_8026EE80
 0002:8026EF58       Caretaker::eventFuncComet((ulong))
 0002:8026EFC4       Caretaker::animeFunc((ulong))
 0002:8026F030       Caretaker::setAnim((long))
 0002:8026F108       def_8026F06C
 0002:8026F120       Caretaker::updateCounterSE((void))
 0002:8026F228       Caretaker::exeReaction((void))
 0002:8026F328       Caretaker::exeWait((void))
 0002:8026F3BC       Caretaker::exePreTalk((void))
 0002:8026F468       Caretaker::exePreWipeOut((void))
 0002:8026F538       Caretaker::exePreWipeIn((void))
 0002:8026F59C       Caretaker::exePreWait((void))
 0002:8026F60C       Caretaker::exeCountDown((void))
 0002:8026F6AC       Caretaker::exeTidy((void))
 0002:8026F784       Caretaker::exeRunaway((void))
 0002:8026F7EC       Caretaker::exePstWipeOut((void))
 0002:8026F904       Caretaker::exePstWipeIn((void))
 0002:8026F988       Caretaker::exePstTalk((void))
 0002:8026FBA4       NrvPenguinMaster::PenguinMasterNrvWait::execute(const(Spine *))
 0002:8026FBE8       NrvCaretaker::CaretakerNrvPstWait::execute(const(Spine *))
 0002:8026FCC8       NPCActorItem::NPCActorItem((char const *))
 0002:8026FE6C       CollectTico::CollectTico((char const *))
 0002:8026FEB8       CollectTico::init((JMapInfoIter const &))
 0002:80270020       CollectTico::exeWait((void))
 0002:802700BC       CollectTico::exeCompleteDemo((void))
 0002:8027025C       CollectTico::exeFlash((void))
 0002:80270368       CollectTico::exeAppearPowerStar((void))
 0002:802703E4       CollectTico::calcNoRescuedCount(const(void))
 0002:80270454       CollectTico::startAppearPowerStar((void))
 0002:80270678       DemoRabbit::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:802706D4       DemoRabbit::init((JMapInfoIter const &))
 0002:80270934       DemoRabbit::initAfterPlacement((void))
 0002:802709A0       DemoRabbit::control((void))
 0002:80270A18       DemoRabbit::fadeIn((void))
 0002:80270ADC       DemoRabbit::updateStopVelocity((void))
 0002:80270B8C       DemoRabbit::updateNormalVelocity((void))
 0002:80270C1C       DemoRabbit::updateRun((JGeometry::TVec3<f> const &,bool))
 0002:80270DC8       DemoRabbit::updateJump((void))
 0002:80270E84       DemoRabbit::tryGuide((void))
 0002:80270EDC       DemoRabbit::tryWait((void))
 0002:80270F38       DemoRabbit::tryGoal((void))
 0002:80270FA0       DemoRabbit::exeAppear((void))
 0002:8027108C       DemoRabbit::exeDemo((void))
 0002:802710E8       DemoRabbit::exeTalk((void))
 0002:80271174       DemoRabbit::exeWait((void))
 0002:802711E0       DemoRabbit::exeGoal((void))
 0002:80271284       DemoRabbit::exeGuide((void))
 0002:802713E8       DemoRabbit::exeRunaway((void))
 0002:802714EC       DemoRabbit::exeChange((void))
 0002:80271590       DemoRabbit::exeStartBGM((void))
 0002:80271878       HoneyBee::HoneyBee((char const *))
 0002:802718DC       NPCActor::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80271958       HoneyBee::init((JMapInfoIter const &))
 0002:80271B24       def_80271A6C
 0002:80271C34       HoneyBee::calcAndSetBaseMtx((void))
 0002:80271C3C       HoneyBee::control((void))
 0002:80271DA0       HoneyBee::exeFly((void))
 0002:80271EB4       HoneyBee::exeJumpLecture((void))
 0002:80272044       HoneyBee::exeFlyLectureB((void))
 0002:80272280       NrvPenguinSkater::PenguinSkaterNrvTalk::execute(const(Spine *))
 0002:802722C4       MR::ActorTalkParam::setNoTurnAction((char const *))
 0002:802722E4       MR::ActorTalkParam::setSingleAction((char const *))
 0002:802722EC       DrawBufferGroup::setLightType((long))
 0002:802722F8       HoneyQueen::HoneyQueen((char const *))
 0002:8027233C       HoneyQueen::init((JMapInfoIter const &))
 0002:80272844       HoneyQueen::control((void))
 0002:8027288C       HoneyQueen::calcAnim((void))
 0002:802728E4       HoneyQueen::attackSensor((HitSensor *,HitSensor *))
 0002:8027294C       HoneyQueen::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802729B4       HoneyQueen::fadeOut((void))
 0002:802729DC       HoneyQueen::fadeIn((void))
 0002:80272A18       HoneyQueen::talkEntry((void))
 0002:80272A6C       HoneyQueen::exeWait((void))
 0002:80272AEC       HoneyQueen::exeTalk((void))
 0002:80272B4C       HoneyQueen::exeItch((void))
 0002:80272C1C       HoneyQueen::exeEvent((void))
 0002:80272D44       NrvSignBoard::SignBoardNrvWait::execute(const(Spine *))
 0002:80272DBC       NrvHoneyQueen::HoneyQueenNrvReady::execute(const(Spine *))
 0002:80272F3C       @unnamed@NPCActor_cpp@::NPCParam::NPCParam((void))
 0002:80272F84       Kinopio::Kinopio((char const *))
 0002:80273000       Kinopio::init((JMapInfoIter const &))
 0002:80273670       def_802734B4
 0002:80273790       Kinopio::exeReaction((void))
 0002:80273938       Kinopio::exeJump((void))
 0002:80273ADC       Kinopio::exeStop((void))
 0002:80273B8C       Kinopio::exeAction((void))
 0002:80273C24       Kinopio::exeWait((void))
 0002:80273CE4       Kinopio::exeAppear((void))
 0002:80273DDC       Kinopio::exeEscape((void))
 0002:80273E80       Kinopio::exeMount((void))
 0002:80273F50       Kinopio::exeStarWait((void))
 0002:80273FB0       Kinopio::exeEventAndTalk((void))
 0002:80273FFC       Kinopio::exeEventFall((void))
 0002:80274154       Kinopio::calcAndSetBaseMtx((void))
 0002:80274288       Kinopio::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802742F8       Kinopio::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802743FC       Kinopio::faceToVector((JGeometry::TVec3<f> const &,float))
 0002:80274524       Kinopio::faceToPlayer((float))
 0002:802745A0       Kinopio::faceToDefault((float))
 0002:8027462C       Kinopio::setDefaultNerve((void))
 0002:802746C0       Kinopio::tryStartArgs((void))
 0002:80274788       Kinopio::tryCancelEvent((void))
 0002:802747E0       Kinopio::eventFunc((ulong))
 0002:80274830       __sinit__Kinopio_cpp
 0002:80274C9C       KinopioAstro::KinopioAstro((char const *))
 0002:80274D00       KinopioAstro::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80274E08       KinopioAstro::dispLetter(const(LayoutActor *))
 0002:80274E80       KinopioAstro::isDispLetterIcon(const(void))
 0002:80274F00       KinopioAstro::createLetterIcon((JMapInfoIter const &))
 0002:80274F5C       KinopioAstro::sendLetter((void))
 0002:80275028       KinopioAstro::branchFunc((ulong))
 0002:80275054       KinopioAstro::eventFunc((ulong))
 0002:80275190       KinopioAstro::startDemo((void))
 0002:802751D0       NPCActor::popNerve((void))
 0002:802751D4       KinopioAstro::init((JMapInfoIter const &))
 0002:80275544       KinopioAstro::control((void))
 0002:8027583C       KoopaJr::KoopaJr((char const *))
 0002:80275884       KoopaJr::init((JMapInfoIter const &))
 0002:80275AEC       Tico::setNerveWait((void))
 0002:80275B28       KoopaJr::calcAndSetBaseMtx((void))
 0002:80275B30       KoopaJr::startShipBattleTalk((void))
 0002:80275B80       KoopaJr::exeWait((void))
 0002:80275BF0       KoopaJr::exeReaction((void))
 0002:80275CB8       KoopaJr::exeShipBattleShipDamage((void))
 0002:80275D1C       KoopaJr::exeShipBattleAppear((void))
 0002:80275DB0       KoopaJr::exeShipBattlePowerUp((void))
 0002:802761C0       LuigiNPC::LuigiNPC((char const *))
 0002:8027620C       LuigiNPC::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80276264       LuigiNPC::branchFunc((ulong))
 0002:802762C4       LuigiNPC::eventFunc((ulong))
 0002:80276304       LuigiNPC::attackSensor((HitSensor *,HitSensor *))
 0002:802763D4       LuigiNPC::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80276504       LuigiNPC::init((JMapInfoIter const &))
 0002:802767D4       LuigiNPC::initAfterPlacement((void))
 0002:802768B4       NPCActor::control((void))
 0002:802768B8       LuigiNPC::trySetNerveAfraid((void))
 0002:8027695C       LuigiNPC::setWaitAction((void))
 0002:802769C4       LuigiNPC::setAfraidAction((void))
 0002:802769F4       LuigiNPC::trySetNerveArrested((void))
 0002:80276A84       LuigiNPC::isDeclarePowerStarType((void))
 0002:80276ABC       LuigiNPC::exeWait((void))
 0002:80276B0C       LuigiNPC::exeReaction((void))
 0002:80276BE4       LuigiNPC::exeTakeOutStar((void))
 0002:80276C70       LuigiNPC::exeAfraidWait((void))
 0002:80276CC4       LuigiNPC::exeAfraidSquat((void))
 0002:80276DB0       LuigiNPC::exeArrestedWait((void))
 0002:80276E18       LuigiNPC::exeArrestedJump((void))
 0002:80276E7C       LuigiNPC::exeOnTreeWait((void))
 0002:80276F6C       LuigiNPC::exeOnTreeFall((void))
 0002:802773F8       MiiDatabase::~MiiDatabase((void))
 0002:8027751C       MiiFaceIcon::MiiFaceIcon((ushort,ushort,MiiFaceRecipe const &,char const *))
 0002:802775F0       MiiFaceIcon::drawIcon((void))
 0002:802776A0       CameraInfo::activate((void))
 0002:802776AC       MiiFaceIcon::setIndex((ushort))
 0002:802776CC       MiiFaceIcon::createImageBuffer((void))
 0002:802777EC       MiiFaceIconHolder::MiiFaceIconHolder((ulong,char const *))
 0002:802778A0       MiiFaceIconHolder::drawIcons((void))
 0002:802778DC       MiiFaceIconHolder::registerIcon((MiiFaceIcon *))
 0002:802778F8       MR::registerMiiFaceIcon((MiiFaceIcon *))
 0002:80277A2C       MiiFaceParts::MiiFaceParts((char const *,MiiFaceRecipe const &))
 0002:80277B2C       MiiFaceParts::init((JMapInfoIter const &))
 0002:80277B7C       MiiFaceParts::calcAnim((void))
 0002:80277BFC       MiiFaceParts::calcViewAndEntry((void))
 0002:80277C50       MiiFaceParts::drawXlu(const(RFLDrawCoreSetting const *))
 0002:80277CA0       MiiFaceParts::initFixedPosition((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80277D10       MiiFaceParts::changeExpressionBlink((void))
 0002:80277D18       MiiFaceParts::changeFaceModel((MiiFaceRecipe const &))
 0002:80277D74       MiiFaceParts::initFaceModel((void))
 0002:80277DB8       MiiFaceParts::tryChangeExpression((ulong))
 0002:80277E28       MiiFacePartsHolder::MiiFacePartsHolder((int))
 0002:80277E8C       MiiFacePartsHolder::~MiiFacePartsHolder((void))
 0002:80277F28       MiiFacePartsHolder::init((JMapInfoIter const &))
 0002:80278038       MiiFacePartsHolder::calcAnim((void))
 0002:802780CC       MiiFacePartsHolder::calcViewAndEntry((void))
 0002:8027814C       MiiFacePartsHolder::drawExtra(const(void))
 0002:80278150       MiiFacePartsHolder::reinitCharModel((void))
 0002:802781FC       MiiFacePartsHolder::isInitEnd(const(void))
 0002:80278294       MiiFacePartsHolder::isError(const(void))
 0002:802782B4       MiiFacePartsHolder::createPartsFromReceipe((char const *,MiiFaceRecipe const &))
 0002:80278370       MiiFacePartsHolder::createPartsFromDefault((char const *,ushort))
 0002:802783BC       MiiFacePartsHolder::drawEachActor(const(void (MiiFaceParts::)(void const *,void const *,RFLDrawCoreSetting const *),RFLDrawCoreSetting const *))
 0002:8027843C       MiiFacePartsHolder::drawExtra(const(void))
 0002:8027857C       MiiFacePartsHolder::setTevOpa(const(void))
 0002:80278808       MiiFacePartsHolder::setTevXlu(const(void))
 0002:80278B94       MiiFaceRecipe::MiiFaceRecipe((RFLDataSource,int,RFLResolution,ulong))
 0002:80278BB8       MiiFaceRecipe::hasExpression(const(RFLExpression))
 0002:80278BD4       BaseMatrixFollower::isValid(const(void))
 0002:80278BE4       MiiFaceRecipe::initFaceModel(const(RFLCharModel *,void *))
 0002:80278C08       MiiFaceRecipe::makeIcon(const(void *,int,int,_GXColor))
 0002:80278C8C       MiiFaceRecipe::makeIconWithFavoriteColor(const(void *,int,int))
 0002:80278D18       Peach::init((JMapInfoIter const &))
 0002:80278D7C       Peach::exeWait((void))
 0002:80278E4C       RemovableTurtle::RemovableTurtle((LiveActor *,bool))
 0002:80278FE0       RemovableTurtle::isPullRange(const(void))
 0002:80278FEC       RemovableTurtle::tryRemove((void))
 0002:8027906C       RemovableTurtle::tryAttach((void))
 0002:802790C4       Penguin::Penguin((char const *))
 0002:80279110       Penguin::init((JMapInfoIter const &))
 0002:802794B8       def_80279378
 0002:802794F0       Penguin::initAfterPlacement((void))
 0002:80279604       Penguin::exeReaction((void))
 0002:802796DC       Penguin::exeWait((void))
 0002:80279868       Penguin::exeFlow((void))
 0002:80279904       PenguinStudent::attackSensor((HitSensor *,HitSensor *))
 0002:802799B8       Penguin::tryReleaseTurtle((void))
 0002:80279A3C       TurtlePartsModel::init((JMapInfoIter const &))
 0002:80279C3C       PenguinCoach::PenguinCoach((char const *))
 0002:80279C98       PenguinCoach::init((JMapInfoIter const &))
 0002:8027A074       PenguinCoach::initAfterPlacement((void))
 0002:8027A0E8       Rosetta::calcAndSetBaseMtx((void))
 0002:8027A190       PenguinCoach::control((void))
 0002:8027A210       PenguinCoach::branchFunc((ulong))
 0002:8027A2E0       PenguinCoach::eventFunc((ulong))
 0002:8027A390       PenguinCoach::resetAudience((void))
 0002:8027A404       PenguinCoach::exeReaction((void))
 0002:8027A534       PenguinCoach::exePrep((void))
 0002:8027A638       PenguinCoach::exeFade((void))
 0002:8027A794       PenguinCoach::exeTutorial((void))
 0002:8027A7F8       PenguinCoach::exePraise((void))
 0002:8027A9D8       str_8028C494
 0002:8027ABA0       PenguinMaster::init((JMapInfoIter const &))
 0002:8027AD80       PenguinMaster::exeReaction((void))
 0002:8027AF54       PenguinRacer::PenguinRacer((char const *))
 0002:8027AFD4       PenguinRacer::init((JMapInfoIter const &))
 0002:8027B210       TalkBalloonIcon::init((JMapInfoIter const &))
 0002:8027B224       PenguinRacer::initSensor((void))
 0002:8027B28C       PenguinRacer::initBind((void))
 0002:8027B29C       PenguinRacer::initColor((JMapInfoIter const &))
 0002:8027B314       PenguinRacer::initEtc((JMapInfoIter const &))
 0002:8027B384       PenguinRacer::exeReaction((void))
 0002:8027B45C       PenguinRacer::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8027B50C       PenguinRacer::control((void))
 0002:8027B5E0       PenguinRacer::exeRaceWait((void))
 0002:8027B668       PenguinRacer::exeRaceWalk((void))
 0002:8027B720       PenguinRacer::exeRaceSwim((void))
 0002:8027B7C0       PenguinRacer::exeRaceStoW((void))
 0002:8027B84C       PenguinRacer::exeRaceWtoS((void))
 0002:8027B8D8       PenguinRacer::exeRaceFall((void))
 0002:8027B9FC       PenguinRacer::exeRaceGoal((void))
 0002:8027BB28       PenguinRacer::exeRaceTurn((void))
 0002:8027BBE4       PenguinRacer::updateMove((void))
 0002:8027BCBC       PenguinRacer::updateVelocity((void))
 0002:8027BE98       PenguinRacer::updateRail((void))
 0002:8027BF48       PenguinRacer::getMoveNerve(const(void))
 0002:8027BFEC       PenguinRacer::getMoveSpeed(const(void))
 0002:8027C09C       TeresaRacer::initRacer((void))
 0002:8027C0A4       PenguinRacer::prepRacer((RaceManager const *))
 0002:8027C220       PenguinRacer::startRacer((void))
 0002:8027C264       PenguinRacer::updateRacer((RaceManager const *))
 0002:8027C348       PenguinRacer::goalRacer((void))
 0002:8027C378       PenguinRacer::resetRacer((RaceManager const *))
 0002:8027C41C       MR::validateClipping((LiveActor *))
 0002:8027C5CC       NrvPenguinRacer::PenguinRacerNrvWait::execute(const(Spine *))
 0002:8027C66C       PenguinRacerLeader::PenguinRacerLeader((char const *))
 0002:8027C6BC       PenguinRacerLeader::init((JMapInfoIter const &))
 0002:8027C900       PenguinRacerLeader::branchFunc((ulong))
 0002:8027C94C       PenguinRacerLeader::eventFunc((ulong))
 0002:8027C9D4       PenguinRacerLeader::exeWait((void))
 0002:8027CA48       PenguinRacerLeader::exePre((void))
 0002:8027CAC8       PenguinRacerLeader::exePost((void))
 0002:8027CB44       PenguinRacerLeader::resetRacer((RaceManager const *))
 0002:8027CBB4       j_MR::validateClipping((LiveActor *))
 0002:8027CC68       NrvPenguinRacerLeader::PenguinRacerLeaderNrvTalk::execute(const(Spine *))
 0002:8027CE50       PenguinSkater::PenguinSkater((char const *))
 0002:8027CECC       PenguinSkater::init((JMapInfoIter const &))
 0002:8027D018       PenguinSkater::initAfterPlacement((void))
 0002:8027D0D8       PenguinSkater::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8027D19C       PenguinSkater::attackSensor((HitSensor *,HitSensor *))
 0002:8027D258       PenguinSkater::calcLead(const(void))
 0002:8027D350       PenguinSkater::moveRail((float,float))
 0002:8027D3B4       PenguinSkater::stopRail((float))
 0002:8027D41C       PenguinSkater::inProvokeRangeOut(const(float))
 0002:8027D4CC       PenguinSkater::inSwitchRange(const(float))
 0002:8027D4F8       PenguinSkater::trySwitchRail((void))
 0002:8027D6C4       PenguinSkater::endSwitchRail((void))
 0002:8027D718       PenguinSkater::setCaughtStartMarioPose((void))
 0002:8027D780       PenguinSkater::blendBaseMatrixToMario(const(float))
 0002:8027D830       PenguinSkater::exeReaction((void))
 0002:8027D908       PenguinSkater::exeWait((void))
 0002:8027D9E8       PenguinSkater::exeDemo((void))
 0002:8027DB00       PenguinSkater::exeAway((void))
 0002:8027DBF8       PenguinSkater::exeTurn((void))
 0002:8027DC9C       PenguinSkater::exeSwitch((void))
 0002:8027DD10       PenguinSkater::exeProvoke((void))
 0002:8027DE04       PenguinSkater::exeCaught((void))
 0002:8027DF18       PenguinSkater::exeFadeOut((void))
 0002:8027DFA4       PenguinSkater::exeFadeIn((void))
 0002:8027E0C4       PenguinSkater::exeGiveUp((void))
 0002:8027E390       PenguinStudent::PenguinStudent((char const *))
 0002:8027E3E0       PenguinStudent::init((JMapInfoIter const &))
 0002:8027E6CC       PenguinStudent::initAfterPlacement((void))
 0002:8027E74C       PenguinStudent::branchFunc((ulong))
 0002:8027E758       PenguinStudent::tryReleaseTurtle((void))
 0002:8027E7D4       PenguinStudent::exeSwim((void))
 0002:8027E958       PenguinStudent::exeLead((void))
 0002:8027E9E8       PenguinStudent::exeSlow((void))
 0002:8027ED00       PowerStarEventKeeper::PowerStarEventKeeper((void))
 0002:8027ED50       PowerStarEventKeeper::initStarInfoTable((void))
 0002:8027EE3C       PowerStarEventKeeper::findStarID(const(char const *))
 0002:8027EF00       PowerStarEventKeeper::declareStar((char const *,char const *,long,bool))
 0002:8027EF84       PowerStarEventKeeper::isSuccess(const(char const *,long))
 0002:8027F0EC       PowerStarEventKeeper::initStarInfoTableAfterPlacement((void))
 0002:8027F1B0       PowerStarEventKeeper::requestAppearPowerStar((char const *,long,JGeometry::TVec3<f> const *,bool,bool))
 0002:8027F25C       PowerStarEventKeeper::isExistPowerStarAtScenario(const(int))
 0002:8027F2B4       PowerStarEventKeeper::isCorrectStarIdWithBBS(const(char const *,char const *,long))
 0002:8027F384       Rabbit::init((JMapInfoIter const &))
 0002:8027F810       Rabbit::control((void))
 0002:8027F8BC       Rabbit::exeAppear((void))
 0002:8027F9DC       Rabbit::exeAppearLand((void))
 0002:8027FA3C       Rabbit::exeWait((void))
 0002:8027FBFC       Rabbit::exeGoal((void))
 0002:8027FCC8       Rabbit::exeFinish((void))
 0002:8027FD80       Rabbit::calcAndSetBaseMtx((void))
 0002:8027FDE4       Rabbit::calcRailPos((JGeometry::TVec3<f> *))
 0002:8027FEF4       Rabbit::isNeedTurn((JGeometry::TVec3<f> const &))
 0002:8027FF9C       Rabbit::updateJump((void))
 0002:802800B8       Rabbit::exeForwardLand((void))
 0002:80280148       Rabbit::exePreJump((void))
 0002:80280204       Rabbit::exeMove((void))
 0002:80280400       Rabbit::exeBackwardLand((void))
 0002:80280488       Rabbit::exePreJumpBack((void))
 0002:8028050C       Rabbit::exeNear((void))
 0002:802806AC       Rabbit::exeReaction((void))
 0002:802807C0       Rabbit::exeTalk((void))
 0002:8028087C       Tico::exeAppear((void))
 0002:80280B88       RabbitStateCaught::RabbitStateCaught((LiveActor *,TalkMessageCtrl *))
 0002:80280C20       RabbitStateCaught::unusePowerStarModel((void))
 0002:80280C2C       RabbitStateCaught::init((void))
 0002:80280CA0       RabbitStateCaught::appear((void))
 0002:80280CC4       RabbitStateCaught::exeCaught((void))
 0002:80280DD8       RabbitStateCaught::exeCaughtLand((void))
 0002:80280EF0       RabbitStateCaught::exeCaughtEvent((void))
 0002:80280FC0       RabbitStateCaught::setCaughtStartMarioPose((void))
 0002:80281028       RabbitStateCaught::blendBaseMatrixToMario(const(float))
 0002:802811CC       RabbitStateWaitStart::RabbitStateWaitStart((LiveActor *,JGeometry::TVec3<f> *,TalkMessageCtrl *))
 0002:8028126C       RabbitStateWaitStart::tryPointing((void))
 0002:80281270       RabbitStateWaitStart::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8028144C       RabbitStateWaitStart::isEnableReaction(const(void))
 0002:802814DC       RabbitStateWaitStart::trySmallTurn((void))
 0002:80281544       RabbitStateWaitStart::tryTalk((void))
 0002:802815A8       RabbitStateWaitStart::tryPointing((void))
 0002:80281634       RabbitStateWaitStart::exeWait((void))
 0002:802816E8       RabbitStateWaitStart::exeSmallTurn((void))
 0002:80281774       RabbitStateWaitStart::exeHitReaction((void))
 0002:80281814       RabbitStateWaitStart::exeTrample((void))
 0002:802818B0       RabbitStateWaitStart::exeSpin((void))
 0002:8028195C       RabbitStateWaitStart::exePointing((void))
 0002:80281A04       RabbitStateWaitStart::exeTalk((void))
 0002:80281BF8       Rosetta::Rosetta((char const *))
 0002:80281CB0       Rosetta::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80281D6C       Rosetta::init((JMapInfoIter const &))
 0002:802821CC       NPCActor::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802821D0       Rosetta::control((void))
 0002:80282320       Rosetta::eventFunc((ulong))
 0002:80282420       Rosetta::startDemo((NerveExecutor *))
 0002:8028245C       Rosetta::endDemo((void))
 0002:802824B0       Rosetta::endDemoWithInterpole((void))
 0002:802824F0       Rosetta::canUpdateStarePos(const(void))
 0002:802825C4       Rosetta::exeReaction((void))
 0002:802826E4       NrvTico::TicoNrvSpin0::execute(const(Spine *))
 0002:80282814       Rosetta::~Rosetta((void))
 0002:8028287C       RosettaMonologue::RosettaMonologue((void))
 0002:802829C4       RosettaMonologue::appear((void))
 0002:80282A5C       RosettaMonologue::calcAnim((void))
 0002:80282A9C       RosettaMonologue::movement((void))
 0002:80282ADC       RosettaMonologue::control((void))
 0002:80282CD8       RosettaDemoAstroDomeExplain::RosettaDemoAstroDomeExplain((Rosetta *,JMapInfoIter const &))
 0002:80282DD8       RosettaDemoAstroDomeTalk::startDemo((void))
 0002:80282DE4       RosettaDemoAstroDomeExplain::exeDemo((void))
 0002:80282EAC       RosettaDemoAstroDomeFinalBattle::RosettaDemoAstroDomeFinalBattle((Rosetta *,JMapInfoIter const &))
 0002:80282F48       EntryDemo_31RosettaDemoAstroDomeFinalBattle___FP31RosettaDemoAstroDomeFinalBattlePCcPCcRC12JMapInfoIter_v
 0002:80283064       RosettaDemoAstroDomeTalk::RosettaDemoAstroDomeTalk((Rosetta *,JMapInfoIter const &))
 0002:8028316C       EntryDemo_24RosettaDemoAstroDomeTalk___FP24RosettaDemoAstroDomeTalkPCcPCcRC12JMapInfoIter_v
 0002:802832EC       NrvRosettaDemoAstroDomeFinalBattle::RosettaDemoAstroDomeFinalBattleNrvFinalBattleDemo::execute(const(Spine *))
 0002:80283694       RosettaDemoEpilogue::RosettaDemoEpilogue((Rosetta *,JMapInfoIter const &))
 0002:80283774       RosettaDemoEpilogue::startDemo((void))
 0002:80283788       RosettaDemoEpilogue::exeDemo((void))
 0002:80283910       RosettaDemoHeavensDoor1::RosettaDemoHeavensDoor1((Rosetta *,JMapInfoIter const &))
 0002:80283CC0       j_MarioAccess::hide((void))
 0002:80283CC4       RosettaDemoHeavensDoor1::pstDemo((void))
 0002:80283CE0       RosettaDemoHeavensDoor1::fadeIn((void))
 0002:80283D34       RosettaDemoHeavensDoor1::exeWait((void))
 0002:80283DC0       RosettaDemoHeavensDoor1::exeFade((void))
 0002:80283E2C       RosettaDemoHeavensDoor1::exeDemo((void))
 0002:80283FD8       RosettaDemoHeavensDoor2::RosettaDemoHeavensDoor2((Rosetta *,JMapInfoIter const &))
 0002:80284104       nullsub_9
 0002:80284108       RosettaDemoHeavensDoor2::exeWait((void))
 0002:80284480       RosettaDemoHeavensDoor2::~RosettaDemoHeavensDoor2((void))
 0002:8028452C       RosettaReading::init((JMapInfoIter const &))
 0002:802846F0       RosettaReading::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80284758       RosettaReading::exePictureBookBefore((void))
 0002:80284838       RosettaReading::exePictureBook((void))
 0002:802848D8       RosettaReading::exePictureBookAfter((void))
 0002:80284A58       RunawayRabbit::RunawayRabbit((char const *,RunawayRabbitCollect *))
 0002:80284B40       RunawayRabbit::init((JMapInfoIter const &))
 0002:80284E30       MR::trySetMoveLimitCollision((LiveActor *))
 0002:80284E34       RunawayRabbit::initSensor((void))
 0002:80284F38       RunawayRabbit::control((void))
 0002:80284FAC       RunawayRabbit::updatePose((void))
 0002:80284FF8       RunawayRabbit::updateBindActorMatrix((void))
 0002:80285114       RunawayRabbit::startRunnaway((void))
 0002:80285174       RunawayRabbit::incrementRunawayLevel((void))
 0002:8028519C       RunawayRabbit::setNotCaughtable((void))
 0002:802851A8       RunawayRabbit::startJumpSound((void))
 0002:80285210       RunawayRabbit::setMsgCtrl((TalkMessageCtrl *))
 0002:80285218       RunawayRabbit::attackSensor((HitSensor *,HitSensor *))
 0002:802852E0       RunawayRabbit::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802853E0       RunawayRabbit::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80285468       RunawayRabbit::receiveMsgPush((HitSensor *,HitSensor *))
 0002:802854E8       RunawayRabbit::exeHide((void))
 0002:802855D8       RunawayRabbit::exeAppear((void))
 0002:8028571C       RunawayRabbit::exeRunaway((void))
 0002:802858BC       RunawayRabbit::exeCaught((void))
 0002:80285A20       RunawayRabbit::exeCaughtTalk((void))
 0002:80285AD4       RunawayRabbit::exeCaughtEnd((void))
 0002:80285B88       RunawayRabbit::exeStop((void))
 0002:80285C20       RunawayRabbit::isCaughtable(const(void))
 0002:802860B0       RunawayRabbitCollect::RunawayRabbitCollect((char const *))
 0002:80286108       RunawayRabbitCollect::init((JMapInfoIter const &))
 0002:8028637C       RunawayRabbitCollect::initAfterPlacement((void))
 0002:80286388       RunawayRabbitCollect::calcCompleteRabbitCount(const(void))
 0002:80286410       RunawayRabbitCollect::linkMsgCtrl((void))
 0002:802864B0       RunawayRabbitCollect::noticeAppearRabbit((RunawayRabbit *))
 0002:80286504       RunawayRabbitCollect::noticeCaughtRabbit((RunawayRabbit *))
 0002:80286628       RunawayRabbitCollect::exeWait((void))
 0002:802866D4       RunawayRabbitCollect::appearTico((RunawayTico *,JGeometry::TVec3<f> const &))
 0002:80286764       RunawayRabbitCollect::exeActive((void))
 0002:80286A54       RunawayTico::RunawayTico((char const *))
 0002:80286AA8       Tico::~Tico((void))
 0002:80286B20       RunawayTico::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80286BAC       RunawayTico::init((JMapInfoIter const &))
 0002:80286DB8       RunawayTico::initAfterPlacement((void))
 0002:80286E0C       RunawayTico::appearBushComment((JGeometry::TVec3<f> const &))
 0002:80286E80       RunawayTico::appearPipeComment((JGeometry::TVec3<f> const &))
 0002:80286F78       RunawayTico::appearMamaComment((JGeometry::TVec3<f> const &))
 0002:80286FF4       RunawayTico::setPosAfterCaught((JGeometry::TVec3<f> const &))
 0002:80287070       RunawayTico::setPosAllCaught((void))
 0002:80287108       RunawayTico::isStartRunaway(const(void))
 0002:80287110       RunawayTico::startRunaway((void))
 0002:80287154       RunawayTico::setDemoTrans((void))
 0002:80287198       RunawayTico::exeGuide0((void))
 0002:802872D4       RunawayTico::exeGuide1((void))
 0002:802873FC       RunawayTico::exeWhiteOut((void))
 0002:80287498       RunawayTico::exeWhiteIn((void))
 0002:80287538       RunawayTico::exeAppear((void))
 0002:802875EC       RunawayTico::exeTalk((void))
 0002:80287958       SignBoard::init((JMapInfoIter const &))
 0002:80287BAC       StrayTico::StrayTico((char const *,CollectTico *))
 0002:80287C5C       StrayTico::init((JMapInfoIter const &))
 0002:80287E20       StrayTico::initSensor((void))
 0002:80287ED0       StrayTico::initShadow((void))
 0002:80287F84       StrayTico::control((void))
 0002:80288048       StrayTico::startGlad((void))
 0002:802880D4       StrayTico::attackSensor((HitSensor *,HitSensor *))
 0002:802881B8       StrayTico::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80288294       StrayTico::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8028830C       StrayTico::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8028839C       StrayTico::requestCompleteDemo((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:802884BC       StrayTico::exeWait((void))
 0002:80288530       StrayTico::exeGlad((void))
 0002:80288624       StrayTico::exeChase((void))
 0002:802886DC       StrayTico::exeLauncherCamera((void))
 0002:802887A4       StrayTico::updateWarp((void))
 0002:8028883C       StrayTico::updateChase((void))
 0002:80288950       StrayTico::exeCompleteDemo((void))
 0002:80288BA0       StrayTico::isCompleteDemoEnd(const(void))
 0002:80288D4C       JGeometry::TQuat4<f>::setEulerZ((float))
 0002:80288DCC       Syati::Syati((char const *))
 0002:80288EAC       Syati::init((JMapInfoIter const &))
 0002:802891E4       Syati::exeWait((void))
 0002:80289288       Syati::exeFadeoutBeforeTalk((void))
 0002:80289304       Syati::exeWaitBlank((void))
 0002:802893D4       PlayerPoseSetterInWater::update((void))
 0002:80289550       Syati::exeFadeinBeforeTalk((void))
 0002:8028964C       Syati::exeTalkStartMission((void))
 0002:802896F8       Syati::exeReadyToStart((void))
 0002:802897E0       Syati::exeCountDown((void))
 0002:802898F8       Syati::exeSwim((void))
 0002:80289990       Syati::exeEmitRing((void))
 0002:80289A3C       Syati::exeWaitStarAppeared((void))
 0002:80289B70       Syati::exeWaitAllRingDisappear((void))
 0002:80289C28       Syati::exeTalkRetryMission((void))
 0002:80289D34       Syati::exeHideOnShore((void))
 0002:80289DF8       Syati::exeWaitOnShore((void))
 0002:80289EA4       Syati::exeWaitTalkNormal((void))
 0002:80289F50       Syati::exeTalkNormal((void))
 0002:80289FDC       Syati::initRings((JMapInfoIter const &))
 0002:8028A068       Syati::initPose((void))
 0002:8028A0F4       Syati::initTalking((JMapInfoIter const &))
 0002:8028A1D8       Syati::updateSwimCommon((void))
 0002:8028A2C0       Syati::updatePoseByRail((void))
 0002:8028A4BC       Syati::updateNumRingPassed((void))
 0002:8028A5BC       Syati::updateBlink((void))
 0002:8028A648       Syati::isReadyToEmitRing(const(void))
 0002:8028A714       Syati::syncNumRingLeftToActiveRings((void))
 0002:8028A794       Syati::resetScore((void))
 0002:8028A7E8       Syati::killAllRings((void))
 0002:8028A858       Syati::emitRing((void))
 0002:8028AA2C       Syati::setupBalloonFollowMtx((JGeometry::TVec3<f> const &))
 0002:8028AAA0       Syati::calcHeadJoint((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8028AC64       Syati::control((void))
 0002:8028ACA0       Syati::calcAndSetBaseMtx((void))
 0002:8028ACD8       Syati::attackSensor((HitSensor *,HitSensor *))
 0002:8028AD5C       Syati::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8028B000       @unnamed@LogoScene_cpp@::LogoSceneDeactive::execute(const(Spine *))
 0002:8028B21C       TeresaRacer::TeresaRacer((char const *))
 0002:8028B294       TeresaRacer::init((JMapInfoIter const &))
 0002:8028B504       TeresaRacer::control((void))
 0002:8028B554       MR::isDisplayEncouragePal60Window((void))
 0002:8028B580       TeresaRacer::animeFunc((ulong))
 0002:8028B6B8       TeresaRacer::eventFunc((ulong))
 0002:8028B6C0       TeresaRacer::exeWait((void))
 0002:8028B724       TeresaRacer::exePre((void))
 0002:8028B7D4       TeresaRacer::exePost((void))
 0002:8028B860       TeresaRacer::exeMove((void))
 0002:8028BA54       TeresaRacer::exeGoal((void))
 0002:8028BB18       TeresaRacer::prepRacer((RaceManager const *))
 0002:8028BB8C       TeresaRacer::startRacer((void))
 0002:8028BBA0       TeresaRacer::updateRacer((RaceManager const *))
 0002:8028BC98       TeresaRacer::resetRacer((RaceManager const *))
 0002:8028BD24       MR::validateClipping((LiveActor *))
 0002:8028BD28       TeresaRacer::changeBgmState((void))
 0002:8028C094       Tico::Tico((char const *))
 0002:8028C128       Tico::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8028C1A8       Tico::initBase((long))
 0002:8028C1E0       Tico::initBase((JMapInfoIter const &,long))
 0002:8028C3B0       Tico::initMessage((JMapInfoIter const &,char const *))
 0002:8028C49C       Tico::initMessage((char const *))
 0002:8028C594       Tico::init((JMapInfoIter const &))
 0002:8028C808       def_8028C734
 0002:8028C820       Tico::calcAndSetBaseMtx((void))
 0002:8028C828       Tico::control((void))
 0002:8028C978       Tico::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8028CA04       Tico::tryReaction((void))
 0002:8028CA44       Tico::setNerveMeta((void))
 0002:8028CA54       Tico::killFunc((ulong))
 0002:8028CA7C       Tico::exeReaction((void))
 0002:8028CB38       Tico::exeDelight((void))
 0002:8028CC0C       Tico::exeNoReaction((void))
 0002:8028CC60       Tico::exeWait((void))
 0002:8028CCB4       Tico::exeMeta((void))
 0002:8028CD34       Tico::exeBlue0((void))
 0002:8028CD98       Tico::exeBlue1((void))
 0002:8028CE4C       Tico::exeRed1((void))
 0002:8028CEA8       Tico::exeRed2((void))
 0002:8028CF78       Tico::exeGuide1((void))
 0002:8028D008       Tico::exeGuide2((void))
 0002:8028D068       Tico::exeGuide3((void))
 0002:8028D0D4       Tico::exeLead0((void))
 0002:8028D140       __sinit__Tico_cpp
 0002:8028D3F0       NrvTico::TicoNrvRed0::execute(const(Spine *))
 0002:8028D45C       NrvSwingRope::SwingRopeNrvBindLoose::execute(const(Spine *))
 0002:8028D638       TicoAstro::init((JMapInfoIter const &))
 0002:8028D76C       @unnamed@TicoFat_cpp@::TicoFatParam::TicoFatParam((void))
 0002:8028D7B0       TicoStarRing::TicoStarRing((char const *))
 0002:8028D7FC       TicoEat::init((JMapInfoIter const &))
 0002:8028D8C4       TicoEat::control((void))
 0002:8028D924       TicoEat::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8028DAD0       TicoEat::initStarPiece((long))
 0002:8028DADC       TicoComet::tryDemo((void))
 0002:8028DB44       TicoComet::branchFunc((ulong))
 0002:8028DB84       TicoEat::eventFunc((ulong))
 0002:8028DBD8       TicoEat::exeReaction((void))
 0002:8028DC48       TicoEat::exeEatPre((void))
 0002:8028DCE4       TicoEat::exeEatNow((void))
 0002:8028DDBC       TicoEat::exeEatPst((void))
 0002:8028DEA4       TicoComet::init((JMapInfoIter const &))
 0002:8028E194       TicoComet::eventFunc((ulong))
 0002:8028E1B0       TicoComet::startReactionSound((void))
 0002:8028E280       TicoComet::exeDemoAnim((void))
 0002:8028E33C       TicoComet::exeDemoFade((void))
 0002:8028E3FC       __sinit__TicoComet_cpp
 0002:8028E6A0       TicoDemoGetPower::TicoDemoGetPower((Tico *,JMapInfoIter const &))
 0002:8028E774       TicoDemoGetPower::startDemo((void))
 0002:8028E7C4       TicoDemoGetPower::exeDemo((void))
 0002:8028EA84       TicoDomeLecture::TicoDomeLecture((char const *))
 0002:8028EAE4       TicoDomeLecture::init((JMapInfoIter const &))
 0002:8028EBE8       TicoDomeLecture::appear((void))
 0002:8028ECA8       TicoDomeLecture::exeMove((void))
 0002:8028EDC8       TicoDomeLecture::exeMetamorphosis((void))
 0002:8028EF70       TicoFat::getActionName((char const *))
 0002:8028F178       TicoFat::TicoFat((char const *))
 0002:8028F1FC       TicoFat::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8028F254       TicoFat::init((JMapInfoIter const &))
 0002:8028F788       TicoFat::initAfterPlacement((void))
 0002:8028F828       TicoFat::kill((void))
 0002:8028F864       TicoFat::setCameraParam((void))
 0002:8028FAF8       TicoFat::control((void))
 0002:8028FE00       TicoFat::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8028FEC4       NPCActor::calcAndSetBaseMtx((void))
 0002:8028FEC8       TicoFat::eventFunc((ulong))
 0002:8028FF1C       TicoFat::calcScale((void))
 0002:8028FF7C       TicoFat::setScale((float))
 0002:8029011C       TicoFat::setMessage((long))
 0002:8029024C       TicoFat::shootStarPiece((void))
 0002:802902A8       TicoFat::receiveStarPiece((long))
 0002:802903D0       TicoFat::startEat((void))
 0002:802903E4       TicoFat::initStarPieceSaveData((JMapInfoIter const &))
 0002:80290448       TicoFat::appearInformation(const(void))
 0002:80290474       TicoFat::disappear((bool))
 0002:80290580       TicoFat::tryMetamorphosis((void))
 0002:802905E4       TicoFat::emitScreenEffect((void))
 0002:80290638       TicoFat::updateScreenEffect((void))
 0002:80290730       TicoFat::getDanceSeTranspose(const(void))
 0002:80290758       JAISeq::getNumChild(const(void))
 0002:80290760       TicoFat::startAbsorbSound((void))
 0002:802907B0       TicoFat::updateGuidance((void))
 0002:80290880       TicoFat::updatePointing((void))
 0002:80290920       TicoFat::updateGoods((void))
 0002:802909AC       TicoFat::exeReaction((void))
 0002:80290AA8       TicoFat::exePrep((void))
 0002:80290B48       TicoFat::exeWait((void))
 0002:80290C1C       TicoFat::exePoint((void))
 0002:80290CBC       TicoFat::exeEat((void))
 0002:80290D8C       TicoFat::exeChem((void))
 0002:80290E64       TicoFat::exeTest((void))
 0002:80290F38       TicoFat::exeFullness((void))
 0002:80290FD8       TicoFat::exeMeta((void))
 0002:802910AC       TicoFat::exeDemo((void))
 0002:80291224       TicoFat::exeFly((void))
 0002:802913CC       TicoFat::exeWipeOut((void))
 0002:80291488       TicoFat::exeWipeIn((void))
 0002:802915B4       TicoFat::exeInfo((void))
 0002:80291640       TicoFat::exeAfter((void))
 0002:8029188C       __sinit__TicoFat_cpp
 0002:80291A64       TicoGalaxy::TicoGalaxy((char const *))
 0002:80291AA8       TicoGalaxy::init((JMapInfoIter const &))
 0002:80291B20       TicoGalaxy::initAfterPlacement((void))
 0002:80291B68       TicoGalaxy::shootStarPiece((void))
 0002:80291BE4       TicoGalaxy::startEat((void))
 0002:80291C1C       TicoGalaxy::enableAppear((void))
 0002:80291C24       TicoGalaxy::initStarPieceSaveData((JMapInfoIter const &))
 0002:80291C90       TicoGalaxy::addStarPieceSaveData((long))
 0002:80291C98       TicoGalaxy::disappear((bool))
 0002:80291CF0       TicoGalaxy::appearInformation(const(void))
 0002:80291D90       TicoRail::TicoRail((char const *))
 0002:80291DEC       TicoRail::init((JMapInfoIter const &))
 0002:80291F90       TicoRail::exeWait((void))
 0002:80291FF8       TicoRail::exeLookAround((void))
 0002:80292104       TicoRail::exeMoveSign((void))
 0002:802921FC       TicoRail::exeMove((void))
 0002:80292294       TicoRail::exeStop((void))
 0002:80292324       TicoRail::exeTalkStart((void))
 0002:80292450       TicoRail::exeTalk((void))
 0002:80292520       TicoRail::exeTalkCancel((void))
 0002:802925A4       TicoRail::exeGoodBye((void))
 0002:80292650       TicoRail::isGreaterEqualStepAndRandom(const(long))
 0002:802926D0       TicoRail::kill((void))
 0002:80292754       TicoRail::attackSensor((HitSensor *,HitSensor *))
 0002:80292884       TicoRail::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802929A4       TicoRail::isSameRailActor(const(LiveActor const *))
 0002:80292C38       TicoReading::init((JMapInfoIter const &))
 0002:80292E68       TicoShop::TicoShop((char const *))
 0002:80292EB8       TicoShop::kill((void))
 0002:80292F5C       TicoShop::init((JMapInfoIter const &))
 0002:802931CC       TicoComet::branchFunc((ulong))
 0002:802931D0       TicoShop::eventFunc((ulong))
 0002:80293200       TicoShop::startReactionSound((void))
 0002:802932D0       TicoShop::exeDemo((void))
 0002:802935B4       TicoStarRing::init((JMapInfoIter const &))
 0002:802936FC       TicoStarRing::kill((void))
 0002:80293764       TicoStarRing::initialize((LiveActor *,LiveActor *,char const *))
 0002:8029380C       TicoStarRing::exeWait((void))
 0002:802938E0       TrickRabbit::TrickRabbit((char const *))
 0002:802939A0       TrickRabbit::init((JMapInfoIter const &))
 0002:80293B48       MR::trySetMoveLimitCollision((LiveActor *))
 0002:80293B4C       TrickRabbit::initModel((void))
 0002:80293BC0       TrickRabbit::initSensor((void))
 0002:80293C88       TrickRabbit::initBind((void))
 0002:80293CD0       TrickRabbit::initRoute((JMapInfoIter const &))
 0002:80293D0C       TrickRabbit::initDemoCamera((JMapInfoIter const &))
 0002:80293D9C       TrickRabbit::initState((void))
 0002:80293E4C       TrickRabbit::control((void))
 0002:80293EB0       TrickRabbit::attackSensor((HitSensor *,HitSensor *))
 0002:80293F38       TrickRabbit::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80293F8C       TrickRabbit::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802940FC       TrickRabbitFreeRun::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80294184       TrickRabbit::receiveMsgTrample((void))
 0002:80294220       TrickRabbit::requestCaught((void))
 0002:8029429C       TrickRabbit::tryStartDemoRunnaway((void))
 0002:80294378       TrickRabbit::endDemoRunnaway((void))
 0002:802943E0       TrickRabbit::tryRunaway((void))
 0002:80294478       TrickRabbit::tryBrakeTurn((void))
 0002:802945A0       TrickRabbit::tryStop((void))
 0002:80294640       TrickRabbit::tryDemoJump((void))
 0002:80294698       TrickRabbit::tryDemoJumpEnd((void))
 0002:802946E8       TrickRabbit::tryEndFallDown((void))
 0002:80294844       TrickRabbit::tryEndTumble((void))
 0002:80294A34       TrickRabbit::exeWaitStart((void))
 0002:80294AB4       TrickRabbit::exeDemoRunaway((void))
 0002:80294B28       TrickRabbit::exeJumpStart((void))
 0002:80294B78       TrickRabbit::exeComebackRoute((void))
 0002:80294BF4       TrickRabbit::exeDemoEnd((void))
 0002:80294C7C       TrickRabbit::exeWait((void))
 0002:80294CF0       TrickRabbit::exeRunaway((void))
 0002:80294D88       TrickRabbit::exeBrakeTurn((void))
 0002:80294F10       TrickRabbit::exeFallDown((void))
 0002:80294FB8       TrickRabbit::exeGetUp((void))
 0002:8029500C       TrickRabbit::exeComebackRouteStart((void))
 0002:802950D4       TrickRabbit::exeTumble((void))
 0002:802951CC       TrickRabbit::exeCaught((void))
 0002:8029522C       TrickRabbit::exeWaitPowerStarDemo((void))
 0002:80295350       TrickRabbitFreeRun::exeGiveUp((void))
 0002:802953AC       TrickRabbit::doWait((void))
 0002:8029541C       TrickRabbit::doRunaway((void))
 0002:8029557C       TrickRabbit::doJumpStart((void))
 0002:80295650       TrickRabbit::doJump((void))
 0002:8029578C       TrickRabbit::tearDownWait((void))
 0002:802957D8       TrickRabbit::checkDivingThicket((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80295888       TrickRabbit::selectEdgeStartEvent((RailGraphIter *))
 0002:80295910       TrickRabbit::selectEdgeRunnaway((RailGraphIter *,JGeometry::TVec3<f> const &,float))
 0002:80295AD4       TrickRabbit::startRouteLevelControl((long,long))
 0002:80295AE8       TrickRabbit::controlRouteLevel((void))
 0002:80295B2C       TrickRabbit::addMovingAccel((JGeometry::TVec3<f> const &,float))
 0002:80295BFC       TrickRabbit::addKeepRouteRange((float,float,float))
 0002:80295D5C       TrickRabbit::updateFootPrint((void))
 0002:80295DB0       TrickRabbit::isCaughtable(const(void))
 0002:80295F78       TrickRabbit::isNextEdgeJump(const(void))
 0002:80295FD4       TrickRabbit::setUpJumpParam((void))
 0002:80296034       TrickRabbit::setUpJumpParamFromJMap((void))
 0002:802960A4       TrickRabbit::calcDefaultJumpTime(const(void))
 0002:802960F8       TrickRabbit::calcJumpStartTime(const(void))
 0002:80296130       TrickRabbit::calcJumpTime(const(void))
 0002:80296170       TrickRabbit::calcJumpHeight(const(void))
 0002:802961C4       TrickRabbit::initTimer((void))
 0002:802961DC       TrickRabbit::updateTime((void))
 0002:802962E8       @unnamed@TrickRabbit_cpp@::RunnawayNodeSelecter::isSatisfy((RailGraphIter &))
 0002:802966D0       TrickRabbitFreeRun::TrickRabbitFreeRun((char const *))
 0002:80296750       TrickRabbitFreeRun::init((JMapInfoIter const &))
 0002:802968C8       MR::trySetMoveLimitCollision((LiveActor *))
 0002:802968CC       TrickRabbitFreeRun::initSensor((void))
 0002:80296990       TrickRabbitFreeRun::initState((void))
 0002:80296A84       TrickRabbitFreeRun::control((void))
 0002:80296AD8       TrickRabbitFreeRun::attackSensor((HitSensor *,HitSensor *))
 0002:80296B64       TrickRabbitFreeRun::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80296C14       TrickRabbitFreeRun::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80296D70       TrickRabbitSnow::receiveMsgBlowDamage((HitSensor *,HitSensor *))
 0002:80296DE4       TrickRabbitFreeRun::requestCaught((void))
 0002:80296E40       TrickRabbitFreeRun::exeWaitStart((void))
 0002:80296EBC       TrickRabbitFreeRun::exeRunawayStart((void))
 0002:80296F88       TrickRabbitFreeRun::exeRunaway((void))
 0002:80297070       TrickRabbitFreeRun::exeCaught((void))
 0002:802970CC       TrickRabbitFreeRun::exePowerStarDemo((void))
 0002:80297294       TrickRabbitSnow::startJumpSound((void))
 0002:80297478       NrvTrickRabbitFreeRun::TrickRabbitFreeRunNrvBlowDamage::execute(const(Spine *))
 0002:802974A4       TrickRabbitSnowCollect::TrickRabbitSnowCollect((char const *))
 0002:80297510       TrickRabbitSnowCollect::init((JMapInfoIter const &))
 0002:80297644       TrickRabbitSnowCollect::initRabbits((JMapInfoIter const &))
 0002:80297730       TrickRabbitSnowCollect::initTalk((JMapInfoIter const &))
 0002:8029778C       TrickRabbitSnowCollect::setFinishPosition((void))
 0002:80297864       TrickRabbitSnowCollect::noticeCaught((TrickRabbitSnow *))
 0002:802978CC       TrickRabbitSnowCollect::noticeGiveUp((TrickRabbitSnow *))
 0002:80297944       TrickRabbitSnowCollect::startSuccessDemo((void))
 0002:802979AC       TrickRabbitSnowCollect::startFailedDemo((void))
 0002:802979D8       TrickRabbitSnowCollect::exeStartWipeOut((void))
 0002:80297A38       TrickRabbitSnowCollect::exeStartWipeIn((void))
 0002:80297AC0       TrickRabbitSnowCollect::exeStartTalk((void))
 0002:80297B18       TrickRabbitSnowCollect::exeWaitHideSnow((void))
 0002:80297C00       TrickRabbitSnowCollect::exeStart((void))
 0002:80297D5C       TrickRabbitSnowCollect::exeFailedWipeOut((void))
 0002:80297DD4       TrickRabbitSnowCollect::exeFailedWipeIn((void))
 0002:80297E64       TrickRabbitSnowCollect::exeFailedTalk((void))
 0002:80297EEC       TrickRabbitSnowCollect::exeSuccessWipeOut((void))
 0002:80297F58       TrickRabbitSnowCollect::exeSuccessWipeIn((void))
 0002:80297FF4       TrickRabbitSnowCollect::exeTakeOutStar((void))
 0002:802980A0       TrickRabbitSnowCollect::exeAppearPowerStar((void))
 0002:8029837C       NrvTrickRabbitFreeRunCollect::TrickRabbitSnowCollectNrvSuccessTalk::execute(const(Spine *))
 0002:80298410       NrvTrickRabbitFreeRunCollect::TrickRabbitSnowCollectNrvWait::execute(const(Spine *))
 0002:8029848C       TrickRabbitSnow::TrickRabbitSnow((char const *))
 0002:80298548       TrickRabbitSnow::setListener((TrickRabbitSnowListener *))
 0002:80298550       TrickRabbitSnow::init((JMapInfoIter const &))
 0002:80298748       MR::trySetMoveLimitCollision((LiveActor *))
 0002:8029874C       TrickRabbitSnow::initSensor((void))
 0002:80298810       TrickRabbitSnow::initState((void))
 0002:80298930       TrickRabbitSnow::clearFootPrint((void))
 0002:80298938       TrickRabbitSnow::control((void))
 0002:80298998       TrickRabbitSnow::calcAndSetBaseMtx((void))
 0002:802989A0       TrickRabbitSnow::attackSensor((HitSensor *,HitSensor *))
 0002:80298A3C       TrickRabbitSnow::receiveMsgPush((HitSensor *,HitSensor *))
 0002:80298B10       TrickRabbitSnow::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80298C0C       TrickRabbitSnow::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80298D54       TrickRabbitSnow::requestCaught((void))
 0002:80298DCC       TrickRabbitSnow::requestStartHideSnow((void))
 0002:80298E2C       TrickRabbitSnow::setFinishPosition((void))
 0002:80298F14       TrickRabbitSnow::setNotCaughtable((void))
 0002:80298F20       TrickRabbitSnow::exeWaitSnow((void))
 0002:80298F7C       TrickRabbitSnow::exeStartHideSnow((void))
 0002:8029901C       TrickRabbitSnow::exeVanish((void))
 0002:8029911C       TrickRabbitSnow::exeHideSnow((void))
 0002:802991A4       TrickRabbitSnow::exeAppearFromSnow((void))
 0002:80299288       TrickRabbitSnow::exeRunaway((void))
 0002:8029943C       TrickRabbitSnow::isEnableCaught(const(void))
 0002:80299638       NrvTrickRabbitFreeRun::TrickRabbitSnowNrvGiveUp::execute(const(Spine *))
 0002:8029964C       NrvTrickRabbitFreeRun::TrickRabbitSnowNrvBlowDamage::execute(const(Spine *))
 0002:80299790       TrickRabbitUtil::createRabbitFootPrint((LiveActor *))
 0002:80299824       CometEventExecutorTimeLimit::CometEventExecutorTimeLimit((ulong))
 0002:80299880       CometEventExecutorTimeLimit::init((JMapInfoIter const &))
 0002:802999B4       CometEventExecutorTimeLimit::exeStartEvent((void))
 0002:80299A30       CometEventExecutorTimeLimit::getTimeLimit(const(void))
 0002:80299AE4       CometEventKeeper::init((void))
 0002:80299BDC       CometEventKeeper::isStartEvent(const(char const *))
 0002:80299C08       TimeAttackEventKeeper::startEventIfExecute((void))
 0002:80299C28       CometEventKeeper::endCometEvent((void))
 0002:80299C7C       CometEventKeeper::getTimeLimitFromTable((GalaxyTimeLimitInfo const *,int))
 0002:80299D04       CometEventKeeper::initCometStatus((void))
 0002:80299D50       EventDirector::EventDirector((void))
 0002:80299DAC       EventDirector::init((JMapInfoIter const &))
 0002:80299E70       MR::declareEventPowerStar((char const *,long,bool))
 0002:80299ED0       EventFunction::getStageStateKeeper((void))
 0002:80299EFC       EventFunction::getPowerStarHolder((void))
 0002:80299F28       EventFunction::isStartCometEvent((char const *))
 0002:80299F68       EventFunction::endCometEvent((void))
 0002:80299FF0       MR::initEventSystemAfterPlacement((void))
 0002:8029A020       MR::declareEventPowerStar((NameObj const *,long,bool))
 0002:8029A07C       MR::isGrandEventPowerStar((char const *,long))
 0002:8029A1BC       MR::appearEventPowerStar((char const *,long,JGeometry::TVec3<f> const *,bool,bool))
 0002:8029A224       MR::isEndEventPowerStarAppearDemo((char const *))
 0002:8029A308       NPCActorCaps::NPCActorCaps((char const *))
 0002:8029A430       NPCActorCaps::setDefault((void))
 0002:8029A488       NPCActorCaps::setIndirect((void))
 0002:8029A494       NPCActor::NPCActor((char const *))
 0002:8029A680       NPCActor::addArchive((NameObjArchiveListCollector *,NPCActorItem const &))
 0002:8029A70C       NPCActor::makeArchiveListDefault((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:8029A768       NPCActor::setBaseMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:8029A8E4       NPCActor::setBaseMtx((float *[4]))
 0002:8029A93C       NPCActor::setInitPose((void))
 0002:8029A968       j_nullsub_5
 0002:8029A96C       NPCActor::initAfterPlacement((void))
 0002:8029A9E4       NPCActor::initialize((JMapInfoIter const &,NPCActorCaps const &))
 0002:8029AEA8       NPCActor::equipment((NPCActorItem const &,bool))
 0002:8029AF50       NPCActor::calcAndSetBaseMtx((void))
 0002:8029B014       NPCActor::makeActorAppeared((void))
 0002:8029B088       NPCActor::makeActorDead((void))
 0002:8029B148       NPCActor::control((void))
 0002:8029B26C       NPCActor::initTalkCtrl((JMapInfoIter const &,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:8029B2F0       NPCActor::initTalkCtrlDirect((JMapInfoIter const &,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:8029B328       NPCActor::calcJointScale((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:8029B364       @unnamed@NPCActor_cpp@::calcVecToPlayer((JGeometry::TVec3<f> *,LiveActor const *))
 0002:8029B3DC       NPCActor::turnToPlayer((float))
 0002:8029B478       NPCActor::turnToPlayer((float,float,float))
 0002:8029B568       NPCActor::turnToDefault((float))
 0002:8029B650       NPCActor::setToDefault((void))
 0002:8029B6EC       NPCActor::attackSensor((HitSensor *,HitSensor *))
 0002:8029B758       NPCActor::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8029B880       NPCActor::pushNerve((Nerve const *))
 0002:8029B8CC       NPCActor::popAndPushNerve((Nerve const *))
 0002:8029B924       NPCActor::popNerve((void))
 0002:8029B978       NPCActor::tryPushNullNerve((void))
 0002:8029B9D0       NPCActor::isEmptyNerve(const(void))
 0002:8029B9E0       NPCActor::isScaleAnim(const(void))
 0002:8029BA80       NPCActor::isPointingSe(const(void))
 0002:8029BAA8       NPCActor::updateReaction((void))
 0002:8029BBB4       NPCActor::updateScaleCtrl((void))
 0002:8029BD24       NPCActor::exeWait((void))
 0002:8029BD90       NPCActor::exeTalk((void))
 0002:8029BDE4       __sinit__NPCActor_cpp
 0002:8029BF98       NPCParameterEdit::NPCParameterEdit((char const *,char const **,bool))
 0002:8029BFB4       NPCParameterRange<f>::read((JMapInfo *,long))
 0002:8029BFCC       NPCParameterBool::NPCParameterBool((char const *,bool *))
 0002:8029BFE4       NPCParameterBool::read((JMapInfo *,long))
 0002:8029C06C       NPCParameterRange<f>::NPCParameterRange<f>((char const *,float *,float,float))
 0002:8029C08C       NPCParameterV3f::read((JMapInfo *,long))
 0002:8029C160       NPCParameterJoint::NPCParameterJoint((char const *,char const *,char const **))
 0002:8029C184       NPCParameterReader::NPCParameterReader((char const *))
 0002:8029C1A0       NPCParameterReader::read((JMapInfo *,long))
 0002:8029C244       NPCCapsParameterReader::NPCCapsParameterReader((char const *))
 0002:8029C2B0       NPCItemParameterReader::copy((NPCActorItem const *))
 0002:8029C2DC       NPCParameterRange<l>::NPCParameterRange<l>((char const *,long *,long,long))
 0002:8029C2FC       NPCParameterRange<l>::read((JMapInfo *,long))
 0002:8029C394       NPCParameterJoint::read((JMapInfo *,long))
 0002:8029C3F0       NPCCapsParameterReader::init((void))
 0002:8029C934       NPCItemParameterReader::NPCItemParameterReader((char const *))
 0002:8029CA70       MR::Vector<Q22MR34FixedArray<P16NPCParameterBase,48>>::push_back((NPCParameterBase *const &))
 0002:8029CAD0       NPCDirector::init((JMapInfoIter const &))
 0002:8029CBA0       nullsub_10
 0002:8029CBA4       nullsub_11
 0002:8029CBA8       NPCFunction::getNPCItemData((NPCActorItem *,long))
 0002:8029CCE4       NPCSupportRail::init((JMapInfoIter const &))
 0002:8029CDAC       LuigiLeftSupplier::LuigiLeftSupplier((void))
 0002:8029CDB8       TalkBalloon::TalkBalloon((char const *))
 0002:8029CE0C       TalkBalloon::create((char const *,bool,bool))
 0002:8029CECC       GalaxyMapTitle::appear((void))
 0002:8029CF00       TalkBalloon::open((TalkMessageCtrl *))
 0002:8029CF74       TalkBalloon::updateBalloon((void))
 0002:8029D180       TalkBalloon::updateTalking((void))
 0002:8029D1DC       j_NameObjFunction::requestMovementOn((NameObj *))
 0002:8029D1E0       TalkBalloonShort::TalkBalloonShort((char const *))
 0002:8029D28C       TalkBalloonShort::init((JMapInfoIter const &))
 0002:8029D2A0       TalkBalloonShort::open((TalkMessageCtrl *))
 0002:8029D3B4       TalkBalloonShort::close((void))
 0002:8029D3F4       TalkBalloonShort::updateBalloon((void))
 0002:8029D468       TalkBalloonShort::initInterval((void))
 0002:8029D474       TalkBalloonShort::exeTalk((void))
 0002:8029D50C       TalkBalloonEvent::TalkBalloonEvent((char const *))
 0002:8029D564       TalkBalloonEvent::init((JMapInfoIter const &))
 0002:8029D5B4       TalkBalloonEvent::open((TalkMessageCtrl *))
 0002:8029D664       TalkBalloonEvent::close((void))
 0002:8029D700       TalkBalloonEvent::updateBeak((void))
 0002:8029D814       TalkBalloonEvent::turnPage((void))
 0002:8029D888       TalkBalloonEvent::skipMessage((void))
 0002:8029D8C8       TalkBalloonEvent::isTextAppearedAll((void))
 0002:8029D928       TalkBalloonEvent::exeWait((void))
 0002:8029D994       TalkBalloonEvent::exeOpen((void))
 0002:8029DA7C       TalkBalloonEvent::exeTalk((void))
 0002:8029DB1C       TalkBalloonSign::TalkBalloonSign((char const *))
 0002:8029DBB8       TalkBalloonSign::init((JMapInfoIter const &))
 0002:8029DC44       TalkBalloonInfo::open((TalkMessageCtrl *))
 0002:8029DC74       TalkBalloonInfo::close((void))
 0002:8029DD50       TalkBalloonIcon::open((TalkMessageCtrl *))
 0002:8029DDD0       TalkBalloonHolder::TalkBalloonHolder((void))
 0002:8029DF84       TalkBalloonHolder::getBalloon((TalkMessageCtrl const *))
 0002:8029E128       TalkBalloonHolder::pauseOff((void))
 0002:8029E1E0       TalkBalloonHolder::balloonOff((void))
 0002:8029E1F4       nullsub_12
 0002:8029E1F8       TalkBalloonHolder::isActiveBalloonShort(const(void))
 0002:8029E434       NrvTalkBalloonEvent::TalkBalloonEventNrvClose::execute(const(Spine *))
 0002:8029E49C       NrvTalkBalloonShort::TalkBalloonShortNrvClose::execute(const(Spine *))
 0002:8029E508       NrvTalkBalloonShort::TalkBalloonShortNrvOpen::execute(const(Spine *))
 0002:8029E574       TalkPeekZ::TalkPeekZ((void))
 0002:8029E5C4       TalkPeekZ::setDrawSyncToken((void))
 0002:8029E614       TalkPeekZ::drawSyncCallback((ushort))
 0002:8029E74C       TalkDirector::TalkDirector((char const *))
 0002:8029E82C       TalkDirector::init((JMapInfoIter const &))
 0002:8029E920       TalkDirector::request((TalkMessageCtrl *,bool))
 0002:8029EB6C       TalkDirector::test((TalkMessageCtrl *,bool,bool))
 0002:8029EC64       TalkDirector::start((TalkMessageCtrl *,bool,bool,bool))
 0002:8029ED3C       TalkDirector::updateMessage((void))
 0002:8029EE6C       TalkDirector::prepTalk((TalkMessageCtrl *,bool,bool,bool))
 0002:8029EF50       TalkDirector::termTalk((void))
 0002:8029F048       TalkDirector::initState((TalkMessageCtrl *))
 0002:8029F134       TalkDirector::isInvalidTalk(const(void))
 0002:8029F190       TalkDirector::appearYesNoSelector(const(TalkMessageCtrl const *))
 0002:8029F248       TalkDirector::getDemoType(const(TalkMessageCtrl const *,bool))
 0002:8029F2C4       TalkDirector::getBranchResult((ushort))
 0002:8029F2EC       MR::isInvalidClipping((LiveActor const *))
 0002:8029F2F4       TalkDirector::initBranchResult((void))
 0002:8029F408       TalkDirector::pauseOff((void))
 0002:8029F444       TalkDirector::balloonOff((void))
 0002:8029F488       TalkDirector::isSystemTalking(const(void))
 0002:8029F504       TalkDirector::isNormalTalking(const(void))
 0002:8029F558       TalkDirector::getTalkingActor(const(void))
 0002:8029F5A0       TalkDirector::exePrep((void))
 0002:8029F620       TalkDirector::exeTalk((void))
 0002:8029F724       TalkDirector::exeSlct((void))
 0002:8029F7F8       TalkDirector::exeNext((void))
 0002:8029F8D8       TalkDirector::exeTerm((void))
 0002:8029F94C       TalkFunction::requestTalkSystem((TalkMessageCtrl *,bool))
 0002:8029F998       TalkFunction::startTalkSystem((TalkMessageCtrl *,bool,bool,bool))
 0002:8029F9F4       TalkFunction::endTalkSystem((TalkMessageCtrl *))
 0002:8029FA30       TalkFunction::isTalkSystemStart((TalkMessageCtrl const *))
 0002:8029FA88       TalkFunction::isTalkSystemEnd((TalkMessageCtrl const *))
 0002:8029FAE0       TalkFunction::getBranchAstroGalaxyResult((ushort))
 0002:8029FB1C       TalkFunction::registerTalkSystem((TalkMessageCtrl *))
 0002:8029FB68       MR::balloonOffTalkDirector((void))
 0002:8029FBC0       MR::invalidateTalkDirector((void))
 0002:8029FBF0       MR::setTalkDirectorDrawSyncToken((void))
 0002:8029FC34       MR::isActiveTalkBalloonShort((void))
 0002:8029FDE0       TalkDirector::~TalkDirector((void))
 0002:8029FE50       @unnamed@TalkMessageCtrl_cpp@::isNodeEventContinue((MessageSystem::FlowNodeEvent const *))
 0002:8029FE78       TalkMessageCtrl::createMessage((JMapInfoIter const &,char const *))
 0002:8029FF0C       TalkMessageCtrl::createMessageDirect((JMapInfoIter const &,char const *))
 0002:8029FF78       TalkMessageCtrl::getMessageID(const(void))
 0002:8029FFD4       TalkMessageCtrl::startTalk((void))
 0002:8029FFE4       TalkMessageCtrl::startTalkForce((void))
 0002:8029FFF4       TalkMessageCtrl::startTalkForcePuppetable((void))
 0002:802A0004       TalkMessageCtrl::startTalkForceWithoutDemo((void))
 0002:802A0014       TalkMessageCtrl::startTalkForceWithoutDemoPuppetable((void))
 0002:802A0024       TalkFunction::endTalkSystem((TalkMessageCtrl *))
 0002:802A0028       TalkMessageCtrl::updateBalloonPos((void))
 0002:802A0134       TalkMessageCtrl::isNearPlayer((TalkMessageCtrl const *))
 0002:802A01BC       TalkMessageCtrl::isNearPlayer(const(float))
 0002:802A0514       def_802A0430
 0002:802A0554       TalkMessageCtrl::rootNodePst((void))
 0002:802A05A8       TalkMessageCtrl::isCurrentNodeContinue(const(void))
 0002:802A05E0       TalkMessageCtrl::rootNodeEve((void))
 0002:802A075C       TalkMessageCtrl::rootNodeSel((bool))
 0002:802A07C4       TalkMessageCtrl::registerBranchFunc((TalkMessageFuncBase const &))
 0002:802A0804       TalkMessageCtrl::registerEventFunc((TalkMessageFuncBase const &))
 0002:802A0844       TalkMessageCtrl::registerAnimeFunc((TalkMessageFuncBase const &))
 0002:802A0884       TalkMessageCtrl::registerKillFunc((TalkMessageFuncBase const &))
 0002:802A08C4       TalkMessageCtrl::readMessage((void))
 0002:802A0918       TalkMessageCtrl::isSelectYesNo(const(void))
 0002:802A09A8       TalkFunction::isSelectTalk((TalkMessageCtrl const *))
 0002:802A09C4       TalkFunction::onTalkStateNone((TalkMessageCtrl *))
 0002:802A09D0       TalkFunction::onTalkStateEntry((TalkMessageCtrl *))
 0002:802A09DC       TalkFunction::onTalkStateEnableStart((TalkMessageCtrl *))
 0002:802A09E8       TalkFunction::onTalkStateTalking((TalkMessageCtrl *))
 0002:802A09F4       TalkFunction::onTalkStateEnableEnd((TalkMessageCtrl *))
 0002:802A0A00       TalkFunction::getMessageInfo((TalkMessageCtrl const *))
 0002:802A0A0C       TalkFunction::getMessage((TalkMessageCtrl const *))
 0002:802A0A78       TalkMessageCtrl::TalkMessageCtrl((LiveActor *,JGeometry::TVec3<f> const &,float *[4]))
 0002:802A0B60       TalkMessageCtrl::inMessageArea(const(void))
 0002:802A0BE8       TalkMessageCtrl::startCamera((long))
 0002:802A0D94       def_802A0CFC
 0002:802A0DA8       TalkMessageInfo::TalkMessageInfo((void))
 0002:802A0DE4       TalkMessageInfo::isShortTalk(const(void))
 0002:802A0DF8       TalkMessageInfo::isEventTalk(const(void))
 0002:802A0E0C       TalkMessageInfo::isComposeTalk(const(void))
 0002:802A0E20       TalkMessageInfo::isFlowTalk(const(void))
 0002:802A0E24       MR::isMsgPlayerHipDropFloor((ulong))
 0002:802A0E34       TalkMessageInfo::isNullTalk(const(void))
 0002:802A0E48       TalkMessageInfo::isBalloonCall(const(void))
 0002:802A0E5C       TalkMessageInfo::isBalloonFix(const(void))
 0002:802A0E70       TalkMessageInfo::isBalloonSign(const(void))
 0002:802A0E84       TalkMessageInfo::isBalloonInfo(const(void))
 0002:802A0E98       TalkMessageInfo::isBalloonIcon(const(void))
 0002:802A0E9C       MR::isMsgJetTurtleAttack((ulong))
 0002:802A0EAC       TalkMessageInfo::isCameraNormal(const(void))
 0002:802A0EBC       TalkMessageInfo::isCameraEvent(const(void))
 0002:802A0ED0       TalkMessageHistory::entry((ushort))
 0002:802A0EE8       TalkMessageHistory::search(const(ushort))
 0002:802A0F20       TalkNodeCtrl::TalkNodeCtrl((void))
 0002:802A0F7C       TalkNodeCtrl::createFlowNodeDirect((TalkMessageCtrl *,JMapInfoIter const &,char const *,ActorCameraInfo **))
 0002:802A10D0       TalkNodeCtrl::resetFlowNode((void))
 0002:802A10F0       TalkNodeCtrl::resetTempFlowNode((void))
 0002:802A110C       TalkNodeCtrl::recordTempFlowNode((void))
 0002:802A1118       TalkNodeCtrl::forwardFlowNode((void))
 0002:802A11C4       TalkNodeCtrl::isNextNodeMessage(const(void))
 0002:802A122C       TalkNodeCtrl::getNextNode(const(void))
 0002:802A12CC       TalkNodeCtrl::getNextNodeBranch(const(void))
 0002:802A130C       TalkNodeCtrl::getCurrentNodeBranch(const(void))
 0002:802A132C       TalkNodeCtrl::getCurrentNodeMessage(const(void))
 0002:802A134C       TalkNodeCtrl::getCurrentNodeEvent(const(void))
 0002:802A136C       TalkNodeCtrl::getNextNodeEvent(const(void))
 0002:802A13AC       TalkNodeCtrl::updateMessage((void))
 0002:802A149C       TalkNodeCtrl::readMessage((void))
 0002:802A1518       TalkNodeCtrl::getSubMessage(const(void))
 0002:802A15C4       TalkNodeCtrl::forwardCurrentBranchNode((bool))
 0002:802A1634       TalkNodeCtrl::createFlowNode((TalkMessageCtrl *,JMapInfoIter const &,char const *,ActorCameraInfo **))
 0002:802A16C4       TalkNodeCtrl::initNodeRecursive((TalkMessageCtrl *,JMapInfoIter const &,ActorCameraInfo *,RecursiveHelper *))
 0002:802A18D8       @unnamed@TurnJointCtrl_cpp@::makeMtxRotVecDegree((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:802A19AC       TurnJointCtrl::TurnJointCtrl((LiveActor *))
 0002:802A1AA4       TurnJointCtrl::init((float,float,float))
 0002:802A1AB4       TurnJointCtrl::addFace((char const *,float,TurnJointCtrl::AXIS,TurnJointCtrl::AXIS,TurnJointCtrl::AXIS))
 0002:802A1B64       TurnJointCtrl::addWaist((char const *,float,TurnJointCtrl::AXIS,TurnJointCtrl::AXIS,TurnJointCtrl::AXIS))
 0002:802A1C14       TurnJointCtrl::startCtrl((long))
 0002:802A1C54       TurnJointCtrl::endCtrl((long))
 0002:802A1CA4       TurnJointCtrl::setStarePos((JGeometry::TVec3<f> const &))
 0002:802A1D84       TurnJointCtrl::setCallBackFunction((void))
 0002:802A1DF8       TurnJointCtrl::updateJointMtxCallBackFace((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:802A1E00       TurnJointCtrl::updateJointMtxCallBackWaist((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:802A1E08       TurnJointCtrl::getMtxDir((JGeometry::TVec3<f> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *,TurnJointCtrl::AXIS))
 0002:802A1EA0       TurnJointCtrl::updateJointMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,TurnJointCtrl::Ctrl const &))
 0002:802A2330       TalkState::init((TalkMessageCtrl *,TalkBalloon *))
 0002:802A236C       TalkState::isLostMessage(const(TalkMessageCtrl const *))
 0002:802A23D4       TalkState::isSelfInterrupt(const(TalkMessageCtrl const *))
 0002:802A2434       TalkStateShort::open((void))
 0002:802A24BC       TalkStateEvent::clos((void))
 0002:802A24D8       TalkStateEvent::open((void))
 0002:802A25A0       TalkStateEvent::talk((TalkMessageCtrl const *))
 0002:802A2714       TalkStateEvent::term((TalkMessageCtrl const *))
 0002:802A2740       TalkStateNormal::test((void))
 0002:802A2798       TalkStateNormal::clos((void))
 0002:802A27DC       TalkStateNormal::term((TalkMessageCtrl const *))
 0002:802A2858       TalkStateNormal::updateButton((void))
 0002:802A2A58       TalkStateCompose::init((TalkMessageCtrl *,TalkBalloon *))
 0002:802A2AA8       TalkStateCompose::open((void))
 0002:802A2AE8       TalkStateCompose::prep((TalkMessageCtrl const *))
 0002:802A2B8C       TalkStateCompose::test((void))
 0002:802A2BDC       TalkStateHolder::getState((TalkMessageCtrl const *))
 0002:802A2C88       TalkStateNormal::prep((TalkMessageCtrl const *))
 0002:802A2D90       TalkStateHolder::TalkStateHolder((void))
 0002:802A2F48       TalkStateEvent::TalkStateEvent((void))
 0002:802A2FBC       TalkSupportPlayerWatcher::update((void))
 0002:802A301C       TalkSupportPlayerWatcher::isEnableTalkPlayerStateNormal(const(void))
 0002:802A30AC       TalkSupportPlayerWatcher::isEnableTalkPlayerStateEvent(const(void))
 0002:802A3140       TalkSupportPlayerWatcher::isEnableTalkPlayerSpeed(const(void))
 0002:802A3174       @unnamed@TalkTextFormer_cpp@::getTextBoxPane((LayoutActor *,char const *))
 0002:802A3328       MR::nextStepTagProcessorRecursive((LayoutActor *,char const *))
 0002:802A33EC       MR::isEndStepTagProcessorRecursive((LayoutActor const *,char const *,bool))
 0002:802A3500       TalkTextFormer::TalkTextFormer((LayoutActor *,char const *))
 0002:802A3518       TalkTextFormer::formMessage((wchar_t const *,long))
 0002:802A356C       TalkTextFormer::setArg((CustomTagArg const &,long))
 0002:802A35E8       TalkTextFormer::nextPage((void))
 0002:802A3640       TalkTextFormer::hasNextPage(const(void))
 0002:802A368C       TalkTextFormer::isTextAppearedAll(const(void))
 0002:802A36B8       nw4r::ut::detail::RuntimeTypeInfo::IsDerivedFrom(const(nw4r::ut::detail::RuntimeTypeInfo const *))
 0002:802A36E8       nw4r::ut::LinkList<Q34nw4r3lyt5Group,4>::Iterator::__rf(const(void))
 0002:802A3738       JASSimpleWaveBank::TWaveHandle::getWaveInfo(const(void))
 0002:802A3740       nw4r::ut::__ne((nw4r::ut::LinkList<Q34nw4r3lyt4Pane,4>::ConstIterator,nw4r::ut::LinkList<Q34nw4r3lyt4Pane,4>::ConstIterator))
 0002:802A3764       nullsub_13
 0002:802A3788       TimeAttackEventKeeper::endEvent((void))
 0002:802A3848       FireMarioBall::init((JMapInfoIter const &))
 0002:802A392C       FireMarioBall::appear((void))
 0002:802A39CC       FireMarioBall::appearAndThrow((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802A3A70       FireMarioBall::attackSensor((HitSensor *,HitSensor *))
 0002:802A3AC0       FireMarioBall::attackFire((HitSensor *))
 0002:802A3B44       FireMarioBall::initSensor((void))
 0002:802A3C1C       FireMarioBall::tryToKill((void))
 0002:802A3D3C       FireMarioBall::exeThrow((void))
 0002:802A3F60       GhostPacket::GhostPacket((void *,ulong))
 0002:802A3F74       GhostPacket::read((uchar *,ulong))
 0002:802A3FB8       GhostPacket::read((char **))
 0002:802A400C       GhostPacket::read((JGeometry::TVec3<Sc> *))
 0002:802A4068       GhostPacket::read((JGeometry::TVec3<s> *))
 0002:802A40C4       @unnamed@GhostPlayer_cpp@::playSound((LiveActor *,char const *))
 0002:802A4178       GhostPlayer::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:802A4200       GhostPlayer::GhostPlayer((char const *))
 0002:802A426C       GhostPlayer::init((JMapInfoIter const &))
 0002:802A4650       GhostPlayer::appear((void))
 0002:802A46F8       GhostPlayer::control((void))
 0002:802A487C       GhostPlayer::exeWait((void))
 0002:802A48C8       GhostPlayer::warpPosition((char const *))
 0002:802A4950       GhostPlayer::exePreStartDemo0((void))
 0002:802A4C18       GhostPlayer::isRequestSkipDemo(const(void))
 0002:802A4C5C       GhostPlayer::exePreStartDemo1((void))
 0002:802A4D24       GhostPlayer::exePreStartDemo2((void))
 0002:802A4F98       GhostPlayer::exeWinDemo((void))
 0002:802A51C8       GhostPlayer::exeLostDemo((void))
 0002:802A5238       GhostPlayer::calcAndSetBaseMtx((void))
 0002:802A52FC       GhostPlayer::initAnimation((void))
 0002:802A5408       GhostPlayer::setAnimation((char const *))
 0002:802A5454       GhostPlayer::setAnimationWeight((float const *))
 0002:802A54C8       GhostPlayer::attackSensor((HitSensor *,HitSensor *))
 0002:802A5648       GhostPlayer::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:802A5764       GhostPlayer::draw(const(void))
 0002:802A5804       GhostPlayer::receiveGhostPacket((GhostPacket *))
 0002:802A5E2C       getShiftRatio(signed char)
 0002:802A5EA8       MR::convToFloat((JGeometry::TVec3<s> &,signed char,JGeometry::TVec3<f> *))
 0002:802A5F58       MR::convToFloat((JGeometry::TVec3<Sc> &,signed char,JGeometry::TVec3<f> *))
 0002:802A6014       MR::convToFloat((short,signed char,float *))
 0002:802A6080       MR::convToFloat((signed char,signed char,float *))
 0002:802A6268       GroupChecker::GroupChecker((char const *,ulong))
 0002:802A62D4       GroupChecker::add((NameObj const *))
 0002:802A6324       GroupCheckManager::add((NameObj const *,long))
 0002:802A6334       GroupCheckManager::isExist((NameObj const *,long))
 0002:802A6400       GroupCheckManager::GroupCheckManager((char const *))
 0002:802A648C       J3DModelX::viewCalc2((void))
 0002:802A6544       J3DModelX::setDrawView((ulong))
 0002:802A6564       J3DModelX::setDrawViewBuffer((float *[4]))
 0002:802A6568       J3DMtxBuffer2::rotationMtx((float *[4]))
 0002:802A657C       J3DModelX::copyAnmMtxBuffer((J3DModelX const *))
 0002:802A6590       J3DModelX::viewCalc3((ulong,float *[4]))
 0002:802A6670       J3DModelX::viewCalcRef((ulong,J3DModel *))
 0002:802A6700       J3DModelX::viewCalcRefPos((ulong,J3DModel *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802A67A0       J3DMtxBuffer2::calcNrmMtx2((void))
 0002:802A6834       J3DMtxBuffer2::calcDrawMtx2((ulong,Vec const &,float const (&)[3][4],J3DMtxBuffer *))
 0002:802A690C       J3DMtxBuffer2::calcDrawMtx3((ulong,Vec const &,float const (&)[3][4],J3DMtxBuffer *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802A6B04       J3DModelX::directDraw((J3DModel *))
 0002:802A6C48       J3DModelX::drawIn((J3DMaterial *,bool,float *[4],J3DModel *))
 0002:802A6EA0       J3DModelX::simpleDrawSetup((J3DMaterial *))
 0002:802A6F58       J3DModelX::simpleDrawShape((J3DMaterial *))
 0002:802A6F70       J3DModelX::storeDisplayList((_GDLObj *,ulong))
 0002:802A7010       J3DModelX::J3DModelX((J3DModelData *,ulong,ulong))
 0002:802A7E0C       J3DModelX::shapePacketDrawFast(const(J3DShapePacketX *))
 0002:802A7E9C       J3DModelX::shapeDrawFast(const(J3DShapeX *))
 0002:802A8054       J3DModel2::~J3DModel2((void))
 0002:802A80B4       J3DMtxBuffer::swapNrmMtx((void))
 0002:802A80E4       J3DMtxBuffer::getDrawMtx((int))
 0002:802A8100       J3DModel::getDrawMtxPtr((void))
 0002:802A8118       J3DModel::~J3DModel((void))
 0002:802A81C4       JetTurtleShadow::calcType0((float *[4]))
 0002:802A8248       JetTurtleShadow::drawType0(const(void))
 0002:802A8298       JetTurtleShadow::drawType1(const(void))
 0002:802A82CC       JetTurtleShadow::init((JMapInfoIter const &))
 0002:802A8378       MarineSnow::MarineSnow((void))
 0002:802A84C4       MarineSnow::view((void))
 0002:802A84DC       MarineSnow::clear((void))
 0002:802A84F4       MarineSnow::draw(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:802A8B94       Mario::Mario((MarioActor *))
 0002:802A9818       Mario::updateAndClearStrideParameter((void))
 0002:802A9928       Mario::checkKeyLock((void))
 0002:802A99D8       Mario::updateTimers((void))
 0002:802A9A34       Mario::updateMorphResetTimer((void))
 0002:802A9A64       Mario::doExtraServices((void))
 0002:802A9C70       Mario::isEnableCheckGround((void))
 0002:802A9C9C       Mario::setGroundNorm((JGeometry::TVec3<f> const &))
 0002:802A9D24       Mario::checkForceGrounding((void))
 0002:802A9FEC       Mario::fixHeadFrontVecByGravity((void))
 0002:802AA710       Mario::createMtxDir((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802AA8F8       Mario::isNonFixHeadVec(const(void))
 0002:802AA9F8       Mario::createDirectionMtx((float *[4]))
 0002:802AAB7C       Mario::createCorrectionMtx((float *[4],JGeometry::TVec3<f> *))
 0002:802AAE18       Mario::slopeTiltHead((JGeometry::TVec3<f> *))
 0002:802AAEC4       Mario::fixFrontVecByGravity((void))
 0002:802AB0AC       Mario::fixFrontVecFromUpSide((void))
 0002:802AB158       Mario::fixSideVecFromFrontUp((void))
 0002:802AB1B8       Mario::setSideVec((JGeometry::TVec3<f> const &))
 0002:802AB1F0       Mario::setHeadVec((JGeometry::TVec3<f> const &))
 0002:802AB228       Mario::setFrontVec((JGeometry::TVec3<f> const &))
 0002:802AB358       Mario::setFrontVecKeepUp((JGeometry::TVec3<f> const &,float))
 0002:802AB43C       Mario::setFrontVecKeepUpAngle((JGeometry::TVec3<f> const &,float))
 0002:802AB4D8       Mario::setFrontVecKeepUp((JGeometry::TVec3<f> const &,ulong))
 0002:802AB5B8       Mario::setFrontVecKeepUp((JGeometry::TVec3<f> const &))
 0002:802AB720       Mario::setFrontVecKeepSide((JGeometry::TVec3<f> const &))
 0002:802AB83C       Mario::setHeadAndFrontVecFromRotate((JGeometry::TVec3<f> const &))
 0002:802AB8F8       Mario::forceSetHeadVecKeepSide((JGeometry::TVec3<f> const &))
 0002:802AB97C       Mario::draw(const(void))
 0002:802ABB98       Mario::addTrans((JGeometry::TVec3<f> const &,char const *))
 0002:802ABC58       Mario::setTrans((JGeometry::TVec3<f> const &,char const *))
 0002:802ABD30       Mario::isEnableRush(const(void))
 0002:802ABDC0       Mario::isInvincible(const(void))
 0002:802ABE20       Mario::inputStick((void))
 0002:802AC138       Mario::isCeiling(const(void))
 0002:802AC18C       Mario::setGravityVec((JGeometry::TVec3<f> const &))
 0002:802AC2C4       Mario::updateSoundCode((void))
 0002:802AC3FC       Mario::isForceStopRush(const(void))
 0002:802AC470       Mario::getShadowNorm(const(void))
 0002:802AC47C       Mario::getAirGravityVec(const(void))
 0002:802AC4B4       Mario::getAirFrontVec(const(void))
 0002:802AC524       Mario::initAfterConst((void))
 0002:802AC624       Mario::writeBackPhyisicalVector((void))
 0002:802ACDB4       Mario::update((void))
 0002:802AD338       Mario::actionMain((void))
 0002:802AD518       Mario::updateGroundInfo((void))
 0002:802AD764       Mario::postureCtrl((float *[4]))
 0002:802ADB68       Mario::createAngleMtx((float *[4],bool))
 0002:802ADEA8       Mario::updateLookOfs((void))
 0002:802AE31C       Mario::getGravityVec(const(void))
 0002:802AE598       Mario::touchWater((void))
 0002:802AE658       XanimeCore::getJointTransform((ulong))
 0002:802AE6AC       Triangle::__as((Triangle const &))
 0002:802AE850       MarioActor::MarioActor((char const *))
 0002:802AEBCC       MarioActor::~MarioActor((void))
 0002:802AEC44       MarioActor::init((JMapInfoIter const &))
 0002:802AED64       MarioActor::init2((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:802AF3FC       MarioActor::initAfterPlacement((void))
 0002:802AF520       MarioActor::initAfterOpeningDemo((void))
 0002:802AF560       MarioActor::calcBaseFrontVec((JGeometry::TVec3<f> const &))
 0002:802AF650       MarioActor::getAirGravityVec(const(void))
 0002:802AF668       MarioActor::changeAnimationUpper((char const *))
 0002:802AF6E8       MarioActor::stopAnimation((char const *))
 0002:802AF6FC       MarioActor::changeNullAnimation((char const *,signed char))
 0002:802AF75C       MarioActor::clearNullAnimation((signed char))
 0002:802AF774       MarioActor::isStopNullAnimation(const(void))
 0002:802AF7BC       MarioActor::changeGameOverAnimation((void))
 0002:802AFB28       def_802AFA60
 0002:802AFB5C       MarioActor::getJointCtrl(const(char const *))
 0002:802AFB9C       MarioActor::updateRotationInfo((void))
 0002:802AFD2C       MarioActor::exeWait((void))
 0002:802AFD80       MarioActor::movement((void))
 0002:802B0754       MarioActor::control((void))
 0002:802B087C       MarioActor::control2((void))
 0002:802B0A20       MarioActor::controlMain((void))
 0002:802B0B08       MarioActor::updateBehavior((void))
 0002:802B0D0C       MarioActor::updateBindRatio((void))
 0002:802B0E18       MarioActor::isInPunchTimerRange(const(void))
 0002:802B0E78       MarioActor::updatePunching((void))
 0002:802B0FE4       MarioActor::doRush((void))
 0002:802B12D8       MarioActor::updateSwingTimer((void))
 0002:802B1438       MarioActor::updateSwingAction((void))
 0002:802B1970       MarioActor::checkClapCatchStart((void))
 0002:802B19B0       MarioActor::updateRealMtx((void))
 0002:802B1BE4       MarioActor::setUpperRotateY((float))
 0002:802B1BEC       MarioActor::decLife((ushort))
 0002:802B1CA8       MarioActor::resetWaterLife((void))
 0002:802B1CB4       MarioActor::updateLife((void))
 0002:802B1CE4       MarioActor::incLife((ulong))
 0002:802B1DE8       MarioActor::changeMaxLife((long))
 0002:802B1E58       MarioActor::doPressing((void))
 0002:802B2020       MarioActor::careMovingObject((void))
 0002:802B2128       MarioActor::doStun((void))
 0002:802B2254       MarioActor::scaleMtx((float *[4]))
 0002:802B2424       MarioActor::updateBaseScaleMtx((void))
 0002:802B2450       MarioActor::getRealMtx(const(float *[4],char const *))
 0002:802B24B4       MarioActor::getRealPos(const(char const *,JGeometry::TVec3<f> *))
 0002:802B24F4       MarioActor::getGlobalJointMtx((char const *))
 0002:802B2550       MarioActor::calcAnimInMovement((void))
 0002:802B28E8       def_802B28B0
 0002:802B2968       MarioActor::forceSetBaseMtx((float *[4]))
 0002:802B2A28       MarioActor::calcAnim((void))
 0002:802B321C       MarioActor::calcAndSetBaseMtx((void))
 0002:802B42A0       MarioActor::setBlendMtxTimer((ushort))
 0002:802B42C4       MarioActor::getGroundPos(const(JGeometry::TVec3<f> *))
 0002:802B42D8       MarioActor::getShadowPos(const(void))
 0002:802B42E4       MarioActor::isTurning(const(void))
 0002:802B42F4       MarioActor::isJumping(const(void))
 0002:802B43BC       MarioActor::isJumpRising(const(void))
 0002:802B4408       MarioActor::isPunching(const(void))
 0002:802B4528       MarioActor::isItemSwinging(const(void))
 0002:802B45A8       MarioActor::isDamaging(const(void))
 0002:802B45D4       MarioActor::isNeedDamageFog(const(void))
 0002:802B464C       MarioActor::isStaggering(const(void))
 0002:802B467C       MarioActor::isSleeping(const(void))
 0002:802B46E8       MarioActor::isRefuseTalk(const(void))
 0002:802B485C       MarioActor::isDebugMode(const(void))
 0002:802B4860       WPadButton::testTrigger1(const(void))
 0002:802B486C       MarioActor::jumpHop((void))
 0002:802B49F0       MarioActor::calcCenterPos((void))
 0002:802B4BBC       MarioActor::calcHeadPos((void))
 0002:802B4C00       MarioActor::setPress((uchar,long))
 0002:802B4DF8       MarioActor::getResourceTable(const(void))
 0002:802B4E04       MarioActor::isEnableMoveMario(const(void))
 0002:802B4E6C       MarioActor::isEnableNerveChange(const(void))
 0002:802B4FF8       MarioActor::updateCameraInfo((void))
 0002:802B5118       MarioActor::binderFilter((Triangle const *))
 0002:802B5140       MR::getFrameBufferWidth((void))
 0002:802B5150       MarioActor::setPunchHitTimer((uchar))
 0002:802B520C       MarioActor::initDrawAndModel((void))
 0002:802B56B4       MarioActor::initBeeMario((void))
 0002:802B5854       MarioActor::initHopperMario((void))
 0002:802B5948       MarioActor::initIceMario((void))
 0002:802B5AAC       MarioActor::initInvincibleMario((void))
 0002:802B5BAC       MarioActor::initTeresaMario((void))
 0002:802B5CD4       MarioActor::initTornadoMario((void))
 0002:802B5D64       MarioActor::initBoneMario((void))
 0002:802B5E28       MarioActor::changeDisplayMode((uchar))
 0002:802B5EE8       MarioActor::calcViewAndEntry((void))
 0002:802B6110       MarioActor::drawMarioModel(const(void))
 0002:802B638C       MarioActor::isAllHidden(const(void))
 0002:802B63C0       MarioActor::swapTextureInit((void))
 0002:802B6704       MarioActor::initFace((void))
 0002:802B6830       MarioActor::updateFace((void))
 0002:802B6B48       MarioActor::initBlur((void))
 0002:802B6C40       MarioActor::getJ3DModel(const(void))
 0002:802B6C54       MarioActor::getModelData(const(void))
 0002:802B6C6C       MarioActor::getSimpleModel(const(void))
 0002:802B6C74       MarioActor::calcViewMainModel((void))
 0002:802B6CFC       MarioActor::draw(const(void))
 0002:802B6DB4       MarioActor::drawIndirect(const(void))
 0002:802B6E50       MarioActor::drawIndirectModel(const(void))
 0002:802B6FBC       MarioActor::drawReflectModel(const(void))
 0002:802B71FC       MarioActor::drawModelBlur(const(void))
 0002:802B73A0       MarioActor::createTextureDL((DLholder *,ushort,ushort))
 0002:802B747C       MarioActor::swapTexture(const(char const *,uchar))
 0002:802B7548       MarioActor::copyMaterial((J3DModel *,ushort,long))
 0002:802B762C       J3DModelX::copyExtraMtxBuffer((J3DModelX const *))
 0002:802B7668       J3DModelX::swapDrawBuffer((ulong))
 0002:802B7688       DLchanger::addDL((J3DModelX *))
 0002:802B76AC       J3DModelX::setDynamicDL((uchar *,ulong))
 0002:802B76C4       MarioActor::isEnableSpinPunch((void))
 0002:802B77D4       MarioActor::reactionPunch((HitSensor *))
 0002:802B7948       MarioActor::sendPunch((HitSensor *,bool))
 0002:802B7A54       MarioActor::doFreezeAttack((HitSensor *))
 0002:802B7A98       MarioActor::trySpinPunch((void))
 0002:802B7BD0       MarioActor::printHitMark((HitSensor *))
 0002:802B7C54       MarioActor::tryPunchAirAfter((HitSensor *))
 0002:802B7DB4       MarioActor::sendBodyAttack((HitSensor *))
 0002:802B7F84       MarioActor::doFreezeAttack((void))
 0002:802B8124       MarioActor::getMapBaseMtx(const(void))
 0002:802B8158       MarioActor::isFastRise(const(void))
 0002:802B81B4       MarioActor::isLongDrop(const(void))
 0002:802B81E4       MarioActor::isFastDrop(const(void))
 0002:802B81F4       MarioActor::getSpecialMode(const(void))
 0002:802B8260       MarioActor::isCameraStateOn(const(SPECIAL_STATUS_FOR_CAMERA))
 0002:802B82E4       MarioActor::getFrontVec(const(JGeometry::TVec3<f> *))
 0002:802B82F8       MarioActor::getSideVec(const(JGeometry::TVec3<f> *))
 0002:802B830C       MarioActor::getUpVec(const(JGeometry::TVec3<f> *))
 0002:802B831C       MarioActor::getLastMove(const(JGeometry::TVec3<f> *))
 0002:802B832C       MarioActor::getLastMove(const(void))
 0002:802B8334       MarioActor::getTransForCamera(const(void))
 0002:802B833C       MarioActor::updateTransForCamera((void))
 0002:802B8514       MarioActor::updateForCamera((void))
 0002:802B86E8       MarioActor::bodyClap((void))
 0002:802B8834       MarioActor::forceKill((ulong))
 0002:802B8A38       MarioActor::exeGameOver((void))
 0002:802B8B64       MarioActor::exeGameOverAbyss((void))
 0002:802B8C8C       MarioActor::exeGameOverFire((void))
 0002:802B8D4C       MarioActor::exeGameOverSink((void))
 0002:802B8F54       MarioActor::exeGameOverNonStop((void))
 0002:802B8FE0       MarioActor::exeTimeWait((void))
 0002:802B9044       MarioActor::getGravityVector(const(JGeometry::TVec3<f> *))
 0002:802B908C       MarioActor::getGravityRatio(const(void))
 0002:802B9094       MarioActor::getGravityInfo(const(void))
 0002:802B909C       MarioActor::getGravityLevel(const(void))
 0002:802B90C4       MarioActor::checkBeeWallStick((JGeometry::TVec3<f> &))
 0002:802B921C       MarioActor::checkBeeFloorStick((JGeometry::TVec3<f> &))
 0002:802B92BC       MarioActor::syncJumpBeeStickMode((void))
 0002:802B93B8       MarioActor::updateBeeModeGravity((JGeometry::TVec3<f> &))
 0002:802B94AC       MarioActor::isInZeroGravitySpot(const(void))
 0002:802B94B8       MarioActor::updateGravityVec((bool,bool))
 0002:802B9DE8       MarioActor::checkBeeCeilStick((JGeometry::TVec3<f> &))
 0002:802B9F04       MarioActor::updateBeeStickMode((JGeometry::TVec3<f> &))
 0002:802BA274       MarioActor::initHand((void))
 0002:802BA52C       MarioActor::updateHand((void))
 0002:802BA7B4       nullsub_14
 0002:802BA7B8       MarioActor::updateHandAtMorph((void))
 0002:802BA85C       MarioActor::drawHand(const(void))
 0002:802BA938       MarioActor::drawIndirectHand(const(void))
 0002:802BA9F0       MarioActor::initMember((void))
 0002:802BB2C8       MarioActor::resetPadSwing((void))
 0002:802BB2F4       MarioActor::isRequestHipDrop(const(void))
 0002:802BB338       MarioActor::isRequestRush(const(void))
 0002:802BB410       MarioActor::isRequestThrow(const(void))
 0002:802BB498       MarioActor::isRequestSpin(const(void))
 0002:802BB534       MarioActor::isRequestJump(const(void))
 0002:802BB578       MarioActor::isRequestJump2P(const(void))
 0002:802BB638       MarioActor::isKeepJump(const(void))
 0002:802BB644       MarioActor::isKeepJump2P(const(void))
 0002:802BB6A0       MarioActor::checkButtonType(const(ushort,bool))
 0002:802BB7F8       def_802BB70C
 0002:802BB814       MarioActor::getStickValue((float *,float *))
 0002:802BB898       MarioActor::updateActionTrigger((void))
 0002:802BB92C       MarioActor::updateControllerSwing((void))
 0002:802BBA24       MarioActor::updateControllerSwingLeft((void))
 0002:802BBB00       nullsub_15
 0002:802BBB04       MarioActor::isRequestSpinJump2P(const(void))
 0002:802BBCC8       MarioActor::init2D((void))
 0002:802BBD20       MarioActor::initParts((void))
 0002:802BBEA8       MarioActor::updateBeeWingAnimation((void))
 0002:802BC080       MarioActor::updateTornado((void))
 0002:802BC16C       MarioActor::updateTakingPosition((void))
 0002:802BC664       MarioActor::getCarrySensor(const(void))
 0002:802BC680       MarioActor::changeSpecialModeAnimation((char const *))
 0002:802BC724       MarioActor::updateSpecialModeAnimation((void))
 0002:802BC904       MarioActor::initFireBall((void))
 0002:802BC974       MarioActor::shootFireBall((void))
 0002:802BCBF0       MarioActor::showFreezeModel((void))
 0002:802BCC44       MarioActor::hideFreezeModel((void))
 0002:802BCC9C       MarioActor::updateFairyStar((void))
 0002:802BCE80       MarioActor::update2D((void))
 0002:802BCFA4       MarioActor::updateThrowVector((void))
 0002:802BD198       MarioActor::createIceFloor((JGeometry::TVec3<f> const &))
 0002:802BD23C       MarioActor::createIceFloor((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802BD2D0       MarioActor::createIceWall((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802BD3B0       MarioActor::updateBaseMtxTeresa((float *[4]))
 0002:802BD4E0       MarioActor::finalizeFreezeModel((void))
 0002:802BD540       MarioActor::offTakingFlag((void))
 0002:802BD54C       XjointTransform::setLocalScale((float))
 0002:802BD55C       MarioActor::settingRush((void))
 0002:802BD5C8       MarioActor::isFixJumpRushSensor(const(HitSensor const *))
 0002:802BD618       MarioActor::isLandEffectRushSensor(const(HitSensor const *))
 0002:802BD644       MarioActor::resetCondition((void))
 0002:802BD9BC       MarioActor::beginRush((void))
 0002:802BDB70       MarioActor::endRush((RushEndInfo const *))
 0002:802BE3B8       MarioActor::takeSensor((HitSensor *))
 0002:802BE4C8       MarioActor::setupSensors((void))
 0002:802BE614       MarioActor::updateHitSensor((HitSensor *))
 0002:802BEC98       MarioActor::trampleJump((float,float))
 0002:802BEFC4       MarioActor::attackSensor((HitSensor *,HitSensor *))
 0002:802BF140       MarioActor::sendMsgToSensor((HitSensor *,ulong))
 0002:802BF190       MarioActor::resetSensorCount((void))
 0002:802BF1A4       MarioActor::recordScoutingObject((HitSensor *))
 0002:802BF28C       MarioActor::updateScouter((void))
 0002:802BF518       MarioActor::initScouter((void))
 0002:802BF590       MarioActor::initForJump((void))
 0002:802BF5A0       MarioActor::initShadow((void))
 0002:802BF678       MarioActor::calcViewReflectionModel((void))
 0002:802BFD98       MarioActor::calcViewWallShadowModel((void))
 0002:802C0160       MarioActor::drawShadow(const(void))
 0002:802C03FC       MarioActor::decideShadowMode((void))
 0002:802C063C       MarioActor::calcViewSilhouetteModel((void))
 0002:802C07D0       MarioActor::calcCylinderToCenter((AreaObj const *,JGeometry::TVec3<f> *))
 0002:802C08C0       MarioActor::calcViewBlurModel((void))
 0002:802C0A98       MarioActor::calcViewFootPrint((void))
 0002:802C0BC8       MarioActor::drawSilhouette(const(void))
 0002:802C0D48       MarioSwim::getWaterEdgeDist(const(void))
 0002:802C0D80       J3DModel::getDrawMtx((int))
 0002:802C0DA0       MarioActor::initScreenBox((void))
 0002:802C0DFC       MarioActor::isUseScreenBox(const(void))
 0002:802C0E20       MarioActor::calcScreenBoxRange((void))
 0002:802C12E4       MarioActor::captureScreenBox(const(void))
 0002:802C1424       MarioActor::writeBackScreenBox(const(void))
 0002:802C1654       MarioActor::calc1stPersonView((void))
 0002:802C1710       MarioActor::hideBeeFur((void))
 0002:802C17B0       MarioActor::calcFogLighting((void))
 0002:802C1A90       MarioActor::resetFog((void))
 0002:802C1AEC       MarioActor::updateAlphaDL((uchar))
 0002:802C1CF4       MarioActor::updateSimpleAlphaDL((uchar))
 0002:802C1DC4       MarioActor::updateReflectAlphaDL((uchar))
 0002:802C1EFC       MarioActor::updateLightDL((Color8 const &,Color8 const &,Color8 const &,float))
 0002:802C2144       MarioActor::createRainbowDL((void))
 0002:802C2330       MarioActor::drawScreenBlend(const(void))
 0002:802C2618       MarioActor::updateRandomTexture((float))
 0002:802C2728       MarioActor::drawWallShade(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:802C2AF0       nullsub_16
 0002:802C2AF4       MarioActor::drawColdWaterDamage(const(void))
 0002:802C2E44       MarioActor::setRasterScroll((long,long,long))
 0002:802C2EB0       MarioActor::updateRasterScroll((void))
 0002:802C2F10       MarioActor::drawRasterScroll(const(float,short,float))
 0002:802C3234       nullsub_17
 0002:802C3238       nullsub_18
 0002:802C323C       MarioActor::calcSpinEffect((void))
 0002:802C3384       MarioActor::drawSpinEffect(const(void))
 0002:802C36C4       MarioActor::drawSphereMask(const(void))
 0002:802C3780       MarioActor::initDarkMask((void))
 0002:802C37F4       MarioActor::updateDarkMask((ushort))
 0002:802C38A4       MarioActor::drawDarkMask(const(void))
 0002:802C3C80       MarioActor::showBeeFur((void))
 0002:802C3DA0       DLchanger::swap((void))
 0002:802C3DD4       MarioActor::initActionMatrix((void))
 0002:802C3EA4       MarioActor::isActionOk(const(char const *))
 0002:802C3EE0       MarioActor::selectAction(const(char const *))
 0002:802C3EF4       MarioActor::selectAutoBind(const(char const *,uchar *))
 0002:802C3F0C       MarioActor::selectCustomEffectSpinHitSound(const(char const *))
 0002:802C3F18       MarioActor::selectSpinCatchInRush(const(char const *))
 0002:802C3F24       MarioActor::selectHomingInSuperHipDrop(const(char const *))
 0002:802C3F80       MarioActor::selectNotHomingSensor(const(HitSensor const *))
 0002:802C3FF0       MarioActor::selectInvalidMovingCollision(const(char const *))
 0002:802C404C       MarioActor::selectQuickResetBeeWallGravity(const(char const *))
 0002:802C40A8       MarioActor::selectJumpRushSensor(const(char const *))
 0002:802C4104       MarioActor::selectDamageFireColor(const(char const *))
 0002:802C4110       MarioActor::selectWaterInOutEffect(const(char const *))
 0002:802C411C       MarioActor::selectOnDamageRush(const(char const *))
 0002:802C4128       MarioActor::selectTiltPress(const(HitSensor const *))
 0002:802C413C       MarioActor::selectHandyRush(const(HitSensor const *))
 0002:802C4150       MarioActor::selectRecoverFlyMeter(const(HitSensor const *))
 0002:802C4164       MarioActor::selectHideFlyMeter(const(HitSensor const *))
 0002:802C4178       MarioActor::selectTeresaThru(const(HitSensor const *))
 0002:802C418C       MarioActor::selectRebindTimer(const(HitSensor const *))
 0002:802C41A0       MarioActor::selectHipDropRush(const(HitSensor const *))
 0002:802C41B4       MarioActor::selectPushOff(const(HitSensor const *))
 0002:802C41C8       MarioActor::selectWaterInOutRush(const(HitSensor const *))
 0002:802C41DC       MarioActor::selectLandEffect(const(HitSensor const *))
 0002:802C41F0       MarioActor::selectNoShadow(const(HitSensor const *))
 0002:802C4204       MarioActor::selectDamagePop(const(HitSensor const *))
 0002:802C4218       MarioActor::getFaceLookHeight(const(char const *))
 0002:802C42C0       MarioActor::setPlayerMode((ushort,bool))
 0002:802C4564       def_802C4418
 0002:802C4908       def_802C458C
 0002:802C4A08       MarioActor::resetPlayerModeOnNoDamage((void))
 0002:802C4B0C       MarioActor::updatePlayerMode((void))
 0002:802C4B38       MarioActor::touchSensor((HitSensor *))
 0002:802C4BF4       MarioActor::initMorphStringTable((void))
 0002:802C4C3C       MarioActor::changeMorphString(const(char const *))
 0002:802C4CE8       MarioActor::initBlink((void))
 0002:802C4D00       MarioActor::setBlink((char const *))
 0002:802C4D8C       MarioActor::updateBlink((void))
 0002:802C4FFC       MarioActor::attackOrPushSensor((HitSensor *,float))
 0002:802C56DC       MarioActor::attackOrPushSensorInDamage((HitSensor *,float))
 0002:802C58EC       MarioActor::attackOrPushSensorInRush((HitSensor *,float))
 0002:802C5A14       MarioActor::tryAddClapCoin((HitSensor *))
 0002:802C5A84       MarioActor::tryTornadoAttack((HitSensor *))
 0002:802C5AF0       MarioActor::isUnderTarget((HitSensor *))
 0002:802C5BA0       MarioActor::tryHipDropAttack((HitSensor *))
 0002:802C5C40       MarioActor::checkAndTryTrampleAttack((HitSensor *,float,bool))
 0002:802C5DAC       MarioActor::tryTrampleAttack((HitSensor *))
 0002:802C5E9C       MarioActor::cylinderHorizontalCheck((HitSensor *))
 0002:802C5F9C       MarioActor::tryJetAttack((HitSensor *))
 0002:802C5FE0       MarioActor::tryCounterJetAttack((HitSensor *))
 0002:802C5FEC       MarioActor::tryGetItem((HitSensor *))
 0002:802C6460       MarioActor::cylinderPushCheck((JGeometry::TVec3<f> const &,float,float,float))
 0002:802C66F8       MarioActor::attackOrPushPolygons((void))
 0002:802C68DC       MarioActor::sendWallTouch((HitSensor *,HitSensor *))
 0002:802C695C       MarioActor::sendMsgUpperPunch((HitSensor *))
 0002:802C6A94       MarioActor::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:802C6E44       MarioActor::tryAttackMsg((ulong,HitSensor const *,bool *))
 0002:802C6F2C       def_802C6E88
 0002:802C6F54       MarioActor::receiveMsgPush((HitSensor *,HitSensor *))
 0002:802C72E0       MarioActor::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:802C7B84       MarioActor::tryVectorAttackMsg((ulong,JGeometry::TVec3<f> const &))
 0002:802C7D44       def_802C7BC8
 0002:802C7D9C       MarioActor::receiveMsgTaken((HitSensor *,HitSensor *))
 0002:802C7E80       MarioActor::cylinderHitCheck((HitSensor const *,JGeometry::TVec3<f> *))
 0002:802C824C       MarioActor::addRushSensor((HitSensor *,bool))
 0002:802C82CC       MarioActor::tryStandardRush((void))
 0002:802C83D0       MarioActor::checkPriorRushTarget((void))
 0002:802C848C       MarioActor::getNearestRushTarget(const(bool))
 0002:802C8788       MarioActor::getNearestJumpTarget(const(void))
 0002:802C8908       MarioActor::getHighPriorityTarget(const(void))
 0002:802C89F0       MarioActor::getRescueTarget(const(void))
 0002:802C8AB0       MarioActor::tryStartRush((bool))
 0002:802C8C80       MarioActor::tryJumpRush((void))
 0002:802C8E3C       MarioActor::tryRushInRush((void))
 0002:802C905C       MarioActor::memorizeSensorThrow((HitSensor *))
 0002:802C911C       MarioActor::tryThrow((void))
 0002:802C9254       MarioActor::tryReleaseDirect((HitSensor const *))
 0002:802C9350       MarioActor::damageDropThrowMemoSensor((void))
 0002:802C93C4       MarioActor::rushDropThrowMemoSensor((void))
 0002:802C9430       MarioActor::trySetLockOnTarget((HitSensor *))
 0002:802C9564       MarioActor::tryCoinPull((void))
 0002:802C95E4       MarioActor::tryCoinPullInRush((void))
 0002:802C966C       MarioActor::flushCoinPull((void))
 0002:802C96F4       MarioActor::tryCoinPullOne((HitSensor *))
 0002:802C9758       MarioActor::tryPullTrans((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:802C9AA8       MarioActor::releaseThrowMemoSensor((void))
 0002:802C9CC0       MarioActor::tryReleaseWithMsg((ulong))
 0002:802C9E24       MarioActor::tryTornadoPull((HitSensor *))
 0002:802CA11C       MarioActor::tryReleaseBombTeresa((void))
 0002:802CA214       MarioActor::initBlackHoleOut((void))
 0002:802CA324       MarioActor::exeGameOverBlackHole2((void))
 0002:802CA74C       MarioAnimator::MarioAnimator((MarioActor *))
 0002:802CA78C       MarioAnimator::init((void))
 0002:802CA9C8       MarioAnimator::isAnimationStop(const(void))
 0002:802CA9E4       MarioAnimator::targetWeight((float *,float,float))
 0002:802CAAD4       MarioAnimator::setWalkWeight((float const *))
 0002:802CAB54       MarioAnimator::setBlendWeight((float const *,float))
 0002:802CAC14       MarioAnimator::forceSetBlendWeight((float const *))
 0002:802CAC7C       MarioAnimator::initWalkWeight((void))
 0002:802CAC98       MarioAnimator::isLandingAnimationRun(const(void))
 0002:802CADF8       MarioAnimator::isCancelableAnimationRun(const(void))
 0002:802CAEC4       MarioAnimator::isWalkOrWaitingMotion(const(void))
 0002:802CAF9C       MarioAnimator::update((void))
 0002:802CB6A8       MarioAnimator::updateWalkBas((char const *,float))
 0002:802CB820       MarioAnimator::setHand((void))
 0002:802CB8C8       MarioAnimator::setTilt((void))
 0002:802CBAF4       MarioAnimator::resetTilt((void))
 0002:802CBB38       MarioAnimator::setHoming((void))
 0002:802CBF10       MarioAnimator::setHipSlidingTilt((float,float))
 0002:802CC0A4       MarioAnimator::setHipSliderTilt((void))
 0002:802CC100       MarioAnimator::setHipSlipTilt((void))
 0002:802CC1A0       MarioAnimator::setWalkMode((void))
 0002:802CC314       MarioAnimator::calc((void))
 0002:802CC4C4       MarioAnimator::change((char const *))
 0002:802CC604       MarioAnimator::changeUpper((char const *))
 0002:802CC63C       MarioAnimator::stopUpper((char const *))
 0002:802CC6F8       MarioAnimator::changeDefault((char const *))
 0002:802CC750       MarioAnimator::isDefaultAnimationRun(const(char const *))
 0002:802CC790       MarioAnimator::changeDefaultUpper((char const *))
 0002:802CC7B4       GameDataHolder::getPictureBookChapterAlreadyRead(const(void))
 0002:802CC7C4       MarioAnimator::updateJointRumble((void))
 0002:802CCAAC       MarioAnimator::addRumblePower((float,ulong))
 0002:802CCAC4       MarioAnimator::setUpperRotateY((float))
 0002:802CCB2C       MarioAnimator::clearAllJointTransform((void))
 0002:802CCCD0       MarioAnimator::isMirrorAnimation((void))
 0002:802CCECC       MarioAnimator::switchMirrorMode((void))
 0002:802CD004       MarioAnimator::changePickupAnimation((HitSensor const *))
 0002:802CD1A0       MarioAnimator::updateTakingAnimation((HitSensor const *))
 0002:802CD314       MarioAnimator::changeThrowAnimation((HitSensor const *))
 0002:802CD3F0       MarioAnimator::waterToGround((void))
 0002:802CD4BC       MarioActor::getLookTargetSensor(const(void))
 0002:802CD57C       XanimePlayer::tellAnimationFrame(const(void))
 0002:802CD5E4       MarioAnimator::initCallbackTable((void))
 0002:802CD6A4       MarioAnimator::entryCallback((char const *))
 0002:802CD740       MarioAnimator::runningCallback((void))
 0002:802CD820       MarioAnimator::closeCallback((void))
 0002:802CD8A0       MarioAnimator::spinClose((void))
 0002:802CD91C       MarioAnimator::spinUpdate((void))
 0002:802CD9E0       MarioAnimator::stageInCheck((void))
 0002:802CDA54       MarioAnimator::throwCheck((void))
 0002:802CDAC0       MarioAnimator::throwClose((void))
 0002:802CDB48       MarioAnimator::squatSpinCheck((void))
 0002:802CDBA8       MarioAnimator::walkinClose((void))
 0002:802CDBF8       __sinit__MarioAnimationEfx_cpp
 0002:802CDDB4       MarioAnimator::controlWaitAnimation((void))
 0002:802CE0BC       MarioAnimator::stopWaitAnimation((void))
 0002:802CE154       MarioWait::checkStart((void))
 0002:802CE4D8       MarioWait::start((void))
 0002:802CE550       MarioWait::update((void))
 0002:802CE738       MarioWait::close((void))
 0002:802CE814       Mario::isBlendWaitGround(const(void))
 0002:802CE848       Mario::checkSpecialWaitAnimation((void))
 0002:802CE88C       Mario::resetSleepTimer((void))
 0002:802CE8DC       MarioWait::MarioWait((MarioActor *))
 0002:802CE944       Mario::connectToClimb((void))
 0002:802CE9A0       MarioClimb::MarioClimb((MarioActor *))
 0002:802CE9E8       MarioClimb::update((void))
 0002:802CEA8C       MarioClimb::start((void))
 0002:802CEAF4       MarioClimb::close((void))
 0002:802CEC00       Mario::isIgnoreTriangle((Triangle const *))
 0002:802CEC54       Mario::checkBaseTransBall((void))
 0002:802CEE10       Mario::createAtField((bool,float))
 0002:802CF258       Mario::doSwimmingHitCheck((HitInfo const *,ulong))
 0002:802CF36C       Mario::doSpinPunchAroundPolygons((void))
 0002:802CF58C       Mario::checkMap((void))
 0002:802CF788       Mario::calcDistToCeil((bool))
 0002:802CF9FC       Mario::calcDistToCeilOnPress((void))
 0002:802CFC44       Mario::calcDistToCeilHead((void))
 0002:802CFD28       Mario::fixTransBetweenWall((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802CFDE0       Mario::calcDistWidth((void))
 0002:802D0154       Mario::updateCameraPolygon((void))
 0002:802D0254       Mario::setCameraPolygon((Triangle const *))
 0002:802D02B8       Mario::checkAllWall((JGeometry::TVec3<f> const &,float))
 0002:802D0E78       Mario::calcFrontFloor((void))
 0002:802D1384       Mario::getWallNorm(const(void))
 0002:802D141C       Mario::getSideWallNorm(const(void))
 0002:802D1464       Mario::getFrontWallNorm(const(void))
 0002:802D14AC       Mario::getBackWallNorm(const(void))
 0002:802D14F4       Mario::getWallPos(const(void))
 0002:802D1534       Mario::getWallPolygon(const(void))
 0002:802D15AC       Mario::getGroundPolygon(const(void))
 0002:802D15B4       Mario::updateFloorCode((void))
 0002:802D16B4       Mario::updateWallFloorCode((void))
 0002:802D1754       Mario::saveLastSafetyTrans((void))
 0002:802D1A4C       def_802D17D4
 0002:802D1A64       Mario::setNotSafetyTimer((void))
 0002:802D1A88       Mario::getLastSafetyTrans(const(JGeometry::TVec3<f> *))
 0002:802D1B64       Mario::checkCurrentFloorCodeSevere(const(ulong))
 0002:802D1C3C       Mario::isCurrentFloorSink(const(void))
 0002:802D1CC4       Mario::isCurrentFloorSand(const(void))
 0002:802D1D5C       Mario::isCurrentShadowFloorDangerAction(const(void))
 0002:802D1DFC       def_802D1DD8
 0002:802D1E18       Mario::checkBaseTransPoint((void))
 0002:802D20C0       Mario::checkHeadPoint((void))
 0002:802D2738       Mario::calcShadowPos((void))
 0002:802D2A04       Mario::updateBinderInfo((void))
 0002:802D33CC       Mario::isThroughWall(const(Triangle const *))
 0002:802D3454       Mario::checkGround((void))
 0002:802D488C       Mario::getCameraCubeCode(const(void))
 0002:802D4964       Mario::updateCubeCode((void))
 0002:802D4E00       MarioConst::MarioConst((void))
 0002:802D4E24       Mario::isDamaging(const(void))
 0002:802D4F48       Mario::damageLarge((JGeometry::TVec3<f> const &))
 0002:802D5050       Mario::decDamageAfterTimer((void))
 0002:802D50F4       Mario::checkDamage((void))
 0002:802D5320       Mario::getDamageAfterTimer(const(void))
 0002:802D53A0       Mario::damageFloorCheck((void))
 0002:802D5554       Mario::damageWallCheck((void))
 0002:802D5704       Mario::damagePolygonCheck((Triangle const *))
 0002:802D5880       Mario::flipLarge((JGeometry::TVec3<f> const &))
 0002:802D5918       Mario::isEnableAddDamage(const(void))
 0002:802D59B0       Mario::damage((JGeometry::TVec3<f> const &))
 0002:802D5A9C       MarioDamage::MarioDamage((MarioActor *))
 0002:802D5B0C       MarioDamage::start((void))
 0002:802D5D5C       MarioDamage::setVec((JGeometry::TVec3<f> const &))
 0002:802D5DB8       MarioDamage::setVecSize((float,float))
 0002:802D5E28       MarioDamage::stopHead((JGeometry::TVec3<f> const &))
 0002:802D5FA8       MarioDamage::update((void))
 0002:802D63FC       MarioDamage::close((void))
 0002:802D6468       MarioDamage::notice((void))
 0002:802D64C0       MarioFireDamage::MarioFireDamage((MarioActor *))
 0002:802D6508       MarioFireDamage::decAfterTimer((void))
 0002:802D656C       Mario::doAbyssDamage((void))
 0002:802D65D8       MarioAbyssDamage::MarioAbyssDamage((MarioActor *))
 0002:802D662C       MarioAbyssDamage::start((void))
 0002:802D6660       MarioAbyssDamage::update((void))
 0002:802D6708       Mario::connectToFireRun((void))
 0002:802D675C       MarioFireRun::MarioFireRun((MarioActor *))
 0002:802D67B0       MarioFireRun::start((void))
 0002:802D6860       MarioFireRun::move((void))
 0002:802D6940       MarioFireRun::update((void))
 0002:802D6F04       MarioFireRun::close((void))
 0002:802D6FE0       Mario::doFireDanceWithInitialDamage((uchar))
 0002:802D7070       Mario::doFireObjHitWithInitialDamage((void))
 0002:802D70B8       Mario::doNeedleWithInitialDamage((uchar))
 0002:802D7180       Mario::doNeedleWithInitialDamage((Triangle const *))
 0002:802D7234       Mario::doNeedle((Triangle const *))
 0002:802D736C       Mario::doFireDance((void))
 0002:802D74A0       MarioFireDance::MarioFireDance((MarioActor *))
 0002:802D7504       MarioFireDance::start((void))
 0002:802D76B4       MarioFireDance::impact((void))
 0002:802D77A4       MarioFireDance::impactEffect((void))
 0002:802D7880       MarioFireDance::update((void))
 0002:802D7C78       MarioFireDance::close((void))
 0002:802D7CD8       Mario::checkKarikariDamage((void))
 0002:802D7E08       Mario::doDarkDamage((void))
 0002:802D7EA0       MarioDarkDamage::MarioDarkDamage((MarioActor *))
 0002:802D7EEC       MarioDarkDamage::start((void))
 0002:802D7F00       MarioDarkDamage::update((void))
 0002:802D7FF8       Mario::doParalyze((void))
 0002:802D80EC       MarioParalyze::MarioParalyze((MarioActor *))
 0002:802D8140       MarioParalyze::close((void))
 0002:802D8268       MarioParalyze::start((void))
 0002:802D831C       MarioParalyze::update((void))
 0002:802D84D4       Mario::doFreeze((void))
 0002:802D859C       MarioFreeze::MarioFreeze((MarioActor *))
 0002:802D85F8       MarioFreeze::close((void))
 0002:802D8650       MarioFreeze::notice((void))
 0002:802D86B4       MarioFreeze::start((void))
 0002:802D8780       MarioFreeze::update((void))
 0002:802D8B3C       Mario::setJumpVec((JGeometry::TVec3<f> const &))
 0002:802D8B50       MarioStun::MarioStun((MarioActor *))
 0002:802D8B9C       MarioStun::close((void))
 0002:802D8BCC       MarioStun::start((void))
 0002:802D8C3C       MarioCrush::update((void))
 0002:802D8DC0       Mario::requestCrush((void))
 0002:802D8DD4       Mario::tryCrush((void))
 0002:802D8E90       MarioCrush::MarioCrush((MarioActor *))
 0002:802D8EDC       MarioCrush::close((void))
 0002:802D8F5C       MarioCrush::start((void))
 0002:802D91A8       Mario::doFlipWeak((JGeometry::TVec3<f> const &))
 0002:802D924C       Mario::faint((JGeometry::TVec3<f> const &))
 0002:802D930C       MarioFaint::MarioFaint((MarioActor *))
 0002:802D9374       MarioFaint::setVec((JGeometry::TVec3<f> const &))
 0002:802D9448       MarioFaint::update((void))
 0002:802D95AC       MarioFaint::start((void))
 0002:802D9784       MarioFaint::close((void))
 0002:802D9870       Mario::doFlipJump((JGeometry::TVec3<f> const &))
 0002:802D99A8       Mario::doFlipBackRoll((JGeometry::TVec3<f> const &))
 0002:802D9A74       MarioFlip::start((void))
 0002:802D9B28       MarioFlip::update((void))
 0002:802DA144       Mario::doFlipRot((JGeometry::TVec3<f> const &))
 0002:802DA1DC       Mario::doFlipLarge((JGeometry::TVec3<f> const &))
 0002:802DA274       MarioFlip::MarioFlip((MarioActor *))
 0002:802DA2D4       MarioFlip::setVec((JGeometry::TVec3<f> const &))
 0002:802DA3CC       MarioFlip::close((void))
 0002:802DA460       Mario::doFrontStep((void))
 0002:802DA640       MarioFrontStep::start((void))
 0002:802DA708       MarioFrontStep::MarioFrontStep((MarioActor *))
 0002:802DA748       MarioFrontStep::update((void))
 0002:802DA924       MarioFrontStep::close((void))
 0002:802DA974       MarioFrontStep::postureCtrl((float *[4]))
 0002:802DAA44       Mario::beeMarioOnGround((void))
 0002:802DAAE4       MarioActor::entryWallWalkMode((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802DABFC       Mario::beeMarioOnAir((void))
 0002:802DB4F4       Mario::blown((JGeometry::TVec3<f> const &))
 0002:802DB5B0       MarioBlown::MarioBlown((MarioActor *))
 0002:802DB614       MarioBlown::close((void))
 0002:802DB6D0       MarioBlown::start((void))
 0002:802DB830       MarioBlown::update((void))
 0002:802DBC74       @unnamed@MarioEffect_cpp@::addMarioEffectAtJoint((LiveActor *,char const *,char const *,char const *))
 0002:802DBCF4       MarioEffect::execute((JPABaseEmitter *))
 0002:802DBD30       MarioEffect::addRequest((char const *,float *[4]))
 0002:802DBE78       MarioEffect::updateFollowMtx((MovingFollowMtx *))
 0002:802DBFCC       MarioActor::initMaterialEffect((void))
 0002:802DC0EC       MarioActor::getFloorMaterialIndex(const(ulong))
 0002:802DC2B8       def_802DC244
 0002:802DC320       MarioActor::playMaterialEffect((char const *))
 0002:802DC498       MarioActor::stopMaterialEffect((char const *))
 0002:802DC504       MarioActor::initCommonEffect((void))
 0002:802DC74C       def_802DC71C
 0002:802DC99C       MarioActor::playCommonEffect((char const *))
 0002:802DCA78       def_802DCA60
 0002:802DCD8C       def_802DCD6C
 0002:802DCE48       MarioActor::initEffect((void))
 0002:802DD60C       MarioActor::emitEffectWaterColumn((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802DD730       MarioActor::isCommonEffect(const(char const *))
 0002:802DD758       MarioActor::isMaterialEffect(const(char const *))
 0002:802DD780       MarioActor::playEffect((char const *))
 0002:802DD838       MarioActor::playEffectTrans((char const *,JGeometry::TVec3<f> const &))
 0002:802DD878       MarioActor::playEffectRTZ((char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802DDA00       MarioActor::playEffectRTW((char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802DDAAC       MarioActor::playEffectSRT((char const *,float,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:802DDB9C       MarioActor::stopCommonEffect((char const *))
 0002:802DDC28       MarioActor::stopEffectForce((char const *))
 0002:802DDD28       MarioActor::updateEffect((void))
 0002:802DE180       MarioEffect::MarioEffect((MarioActor *))
 0002:802DE25C       MarioEffect::playSwingEffect((void))
 0002:802DE2EC       MarioEffect::doCubeEffect((void))
 0002:802DE474       Mario::taskOnEffectCheck((ulong))
 0002:802DE48C       MarioActor::checkEffectWaterColumn((void))
 0002:802DE4E4       MarioActor::stopSpinTicoEffect((bool))
 0002:802DE518       MarioEffect::~MarioEffect((void))
 0002:802DE574       MultiEmitter::setGlobalScale((float,long))
 0002:802DE624       Mario::doFlow((void))
 0002:802DE694       MarioFlow::start((void))
 0002:802DE7FC       MarioFlow::update((void))
 0002:802DEA48       MarioFlow::close((void))
 0002:802DEB0C       MarioFlow::MarioFlow((MarioActor *))
 0002:802DEB68       Mario::tryStartFoo((void))
 0002:802DEBF0       MarioFoo::MarioFoo((MarioActor *))
 0002:802DED0C       MarioFoo::init((void))
 0002:802DED8C       MarioFoo::start((void))
 0002:802DEEDC       MarioFoo::update((void))
 0002:802DF9F0       MarioFoo::notice((void))
 0002:802DFA40       MarioFoo::close((void))
 0002:802DFC88       MarioModule::stopSound((char const *,ulong))
 0002:802DFC8C       MarioFoo::jet((void))
 0002:802DFFDC       MarioFoo::updateTilt((void))
 0002:802E0274       MarioFoo::hitWall((JGeometry::TVec3<f> const &,HitSensor *))
 0002:802E0368       MarioFoo::spin((void))
 0002:802E0468       MarioFoo::passRing((HitSensor const *))
 0002:802E0544       MarioFoo::calcRingAcc((void))
 0002:802E06C4       MarioFoo::draw3D(const(void))
 0002:802E13A8       __sinit__MarioSwim_cpp
 0002:802E1528       MR::getMarioHolder((void))
 0002:802E1550       Mario::initMember((void))
 0002:802E178C       Mario::isRising(const(void))
 0002:802E182C       Mario::checkWallRiseAndSlipFront((void))
 0002:802E1860       Mario::tryJump((void))
 0002:802E2580       Mario::tryTurnJump((void))
 0002:802E27DC       Mario::trySquatJump((void))
 0002:802E2B38       Mario::tryBackJump((void))
 0002:802E2D58       Mario::tryTornadoJump((void))
 0002:802E2F70       Mario::startTornadoCentering((HitSensor *))
 0002:802E2FD8       Mario::taskOnTornadoCentering((ulong))
 0002:802E30D4       Mario::trySpinJump((uchar))
 0002:802E3364       Mario::tryForceJumpDelay((JGeometry::TVec3<f> const &))
 0002:802E3378       Mario::tryFreeJumpDelay((JGeometry::TVec3<f> const &))
 0002:802E338C       Mario::tryForceJump((JGeometry::TVec3<f> const &,bool))
 0002:802E34C8       Mario::tryForceFreeJump((JGeometry::TVec3<f> const &))
 0002:802E357C       Mario::tryForcePowerJump((JGeometry::TVec3<f> const &,bool))
 0002:802E3658       Mario::tryFreeJump((JGeometry::TVec3<f> const &,bool))
 0002:802E3758       Mario::tryWallJump((JGeometry::TVec3<f> const &,bool))
 0002:802E38B8       Mario::tryStickJump((JGeometry::TVec3<f> const &))
 0002:802E39D0       Mario::trySlipUpJump((void))
 0002:802E3D10       Mario::tryHangSlipUp((void))
 0002:802E3E70       Mario::tryDrop((void))
 0002:802E4400       Mario::isDigitalJump(const(void))
 0002:802E440C       Mario::initActiveJumpVec((void))
 0002:802E4470       Mario::initJumpParam((void))
 0002:802E45F4       Mario::isEnableFutureJump(const(void))
 0002:802E46A4       Mario::procJump((bool))
 0002:802E5354       nullsub_19
 0002:802E5358       Mario::checkWallJumpHit((void))
 0002:802E55B8       Mario::decideSlipUp((void))
 0002:802E5804       Mario::moveWallSlide((float))
 0002:802E58F4       Mario::jumpToHipDrop((void))
 0002:802E5C84       Mario::procHipDrop((void))
 0002:802E6518       Mario::doAirWalk((void))
 0002:802E7138       Mario::stopJump((void))
 0002:802E7248       Mario::cancelTornadoJump((void))
 0002:802E72CC       Mario::setRocketBooster((JGeometry::TVec3<f> const &,float,ushort))
 0002:802E72DC       Mario::procRocketBooster((void))
 0002:802E7330       Mario::isSoftLandingFloor(const(void))
 0002:802E7370       Mario::checkAndTryForceJump((void))
 0002:802E76F0       Mario::doLanding((void))
 0002:802E7C18       def_802E7C04
 0002:802E7E9C       def_802E7E94
 0002:802E8190       def_802E80D8
 0002:802E8440       Mario::startSlidingTask((ulong,float,ushort))
 0002:802E84D8       Mario::taskOnSlide((ulong))
 0002:802E852C       Mario::taskOnWallRising((ulong))
 0002:802E857C       Mario::incAirWalkTimer((void))
 0002:802E869C       MarioMessenger::MarioMessenger((HitSensor *))
 0002:802E8728       MarioMessenger::movement((void))
 0002:802E8798       MarioMessenger::addRequest((HitSensor *,ulong))
 0002:802E8828       MarioModule::getPlayer(const(void))
 0002:802E8834       MarioModule::getAnimator(const(void))
 0002:802E8840       MarioModule::getShadowPos(const(void))
 0002:802E8850       MarioModule::stopSound((char const *,ulong))
 0002:802E8868       MarioModule::getFrontVec(const(void))
 0002:802E8884       MarioModule::isStatusActiveS(const(MarioState *))
 0002:802E8894       MarioModule::getPlayerMode(const(void))
 0002:802E88A0       MarioModule::isPlayerModeBee(const(void))
 0002:802E88B8       MarioModule::isPlayerModeIce(const(void))
 0002:802E88D0       MarioModule::isPlayerModeTeresa(const(void))
 0002:802E88E8       MarioModule::isPlayerModeHopper(const(void))
 0002:802E8900       MarioModule::isPlayerModeInvincible(const(void))
 0002:802E8918       MarioModule::isPlayerModeFoo(const(void))
 0002:802E8930       MarioModule::changeAnimation((char const *,char const *))
 0002:802E89A0       MarioModule::changeAnimationNonStop((char const *))
 0002:802E8A0C       MarioModule::changeAnimationWithAttr((char const *,ulong))
 0002:802E8A74       MarioModule::stopAnimation((char const *,char const *))
 0002:802E8AFC       MarioModule::getAnimationFrame(const(void))
 0002:802E8B08       MarioModule::getAnimationStringPointer(const(char const *))
 0002:802E8B18       MarioModule::isAnimationRun(const(char const *))
 0002:802E8BBC       MarioModule::isAnimationTerminate(const(char const *))
 0002:802E8BE4       MarioModule::isAnimationTerminateUpper(const(char const *))
 0002:802E8C1C       MarioModule::getCurrentBckName(const(void))
 0002:802E8C7C       MarioModule::changeAnimationUpper((char const *,char const *))
 0002:802E8CE4       MarioModule::changeAnimationUpperWeak((char const *,char const *))
 0002:802E8D58       MarioModule::stopAnimationUpper((char const *,char const *))
 0002:802E8DB8       MarioModule::stopAnimationUpperForce((void))
 0002:802E8DD4       MarioModule::changeAnimation((char const *,ulong))
 0002:802E8E34       MarioModule::isAnimationRun((char const *,ulong))
 0002:802E8EA8       MarioModule::stopAnimation((char const *,ulong))
 0002:802E8F1C       MarioModule::setJointGlobalMtx((ushort,float *[4]))
 0002:802E8F50       MarioModule::setYangleOffset((float))
 0002:802E8F60       MarioModule::isStickOn(const(void))
 0002:802E8F98       MarioModule::isStickFull(const(void))
 0002:802E8FB8       MarioModule::getWorldPadDir(const(void))
 0002:802E8FC8       MarioModule::calcWorldPadDir((JGeometry::TVec3<f> *,float,float,bool))
 0002:802E914C       MarioModule::clearVelocity((void))
 0002:802E915C       MarioModule::addVelocity((JGeometry::TVec3<f> const &,float))
 0002:802E9188       MarioModule::addVelocityAfter((JGeometry::TVec3<f> const &))
 0002:802E91A8       MarioModule::getVelocity(const(void))
 0002:802E91C4       MarioModule::cutGravityElementFromJumpVec((bool))
 0002:802E922C       MarioModule::cutVecElementFromJumpVec((JGeometry::TVec3<f> const &))
 0002:802E9240       MarioModule::getJumpVec(const(void))
 0002:802E9250       MarioModule::setJumpVec((JGeometry::TVec3<f> const &))
 0002:802E92C4       MarioModule::startCamVib((ulong))
 0002:802E9308       MarioModule::getCamPos(const(void))
 0002:802E9314       MarioModule::getCamDirX(const(void))
 0002:802E9320       MarioModule::getCamDirY(const(void))
 0002:802E932C       MarioModule::getCamDirZ(const(void))
 0002:802E9338       MarioModule::startPadVib((ulong))
 0002:802E9394       MarioModule::startPadVib((char const *))
 0002:802E93A0       MarioModule::getStickX(const(void))
 0002:802E93B0       MarioModule::getStickY(const(void))
 0002:802E93C0       MarioModule::getStickP(const(void))
 0002:802E93D0       MarioModule::checkTrgA(const(void))
 0002:802E93E0       MarioModule::checkLvlA(const(void))
 0002:802E93F0       MarioModule::checkTrgZ(const(void))
 0002:802E9400       MarioModule::checkLvlZ(const(void))
 0002:802E9410       MarioModule::checkPreLvlZ(const(void))
 0002:802E9420       MarioModule::checkSquat((bool))
 0002:802E9514       MarioModule::getTrans(const(void))
 0002:802E9524       MarioModule::getGroundPolygon(const(void))
 0002:802E9534       MarioModule::isOnSlipGround(const(void))
 0002:802E9580       MarioModule::isSlipFloorCode(const(long))
 0002:802E95B0       def_802E959C
 0002:802E95B8       MarioModule::isSlipPolygon(const(Triangle const *))
 0002:802E9660       def_802E961C
 0002:802E96C0       MarioModule::getFloorCode(const(void))
 0002:802E96D4       MarioModule::calcPolygonAngleD(const(Triangle const *))
 0002:802E975C       MarioModule::calcAngleD(const(JGeometry::TVec3<f> const &))
 0002:802E97F8       MarioModule::getTmpPolygon(const(void))
 0002:802E9808       MarioModule::sendPunch((HitSensor *,bool))
 0002:802E9870       MarioModule::getSensor(const(Triangle const *))
 0002:802E98B4       MR::acosEx((float))
 0002:802E98B8       MarioModule::isInputDisable(const(void))
 0002:802E9A08       Mario::mainMove((void))
 0002:802EB42C       Mario::isEnableTurn((void))
 0002:802EB6BC       Mario::recordTurnSlipAngle((void))
 0002:802EB71C       Mario::decideInertia((float))
 0002:802EB9E0       Mario::decideInertiaOnIce((float))
 0002:802EBA4C       Mario::decideInertiaOnSlip((float))
 0002:802EBAAC       Mario::calcShadowDir((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:802EBBC0       Mario::retainMoveDir((float,float,JGeometry::TVec3<f> *))
 0002:802EBEA0       Mario::calcMoveDir((float,float,JGeometry::TVec3<f> *,bool))
 0002:802EC1E4       Mario::checkLockOnHoming((void))
 0002:802EC28C       Mario::doLockOnHoming((void))
 0002:802EC36C       Mario::fixPositionInTower((void))
 0002:802EC430       Mario::check2DMode((void))
 0002:802EC604       Mario::calcMoveDir2D((float,float,JGeometry::TVec3<f> *))
 0002:802EC7D0       Mario::calcShadowDir2D((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:802EC808       Mario::stick2Dadjust((float &,float &))
 0002:802ECFF4       Mario::set2Dmode((bool))
 0002:802ED038       Mario::beforeJumping2D((void))
 0002:802ED048       nullsub_20
 0002:802ED04C       Mario::clear2DStick((void))
 0002:802ED0CC       Mario::set25Dmode((AreaObj const *))
 0002:802ED1A4       Mario::update25Dmode((void))
 0002:802ED414       Mario::updateAxisFromMode((uchar))
 0002:802ED778       Mario::calcMoveDir25D((float,float,JGeometry::TVec3<f> *))
 0002:802ED898       MarioMove::initAfter((void))
 0002:802ED934       MarioParts::MarioParts((LiveActor *,char const *,char const *,bool,float *[4],float *[4]))
 0002:802EDA18       MarioParts::MarioParts((LiveActor *,char const *,char const *,float *[4]))
 0002:802EDA94       MarioParts::init((JMapInfoIter const &))
 0002:802EDB64       Mario::checkPressDamage((void))
 0002:802EDE2C       Mario::checkVerticalPress((bool))
 0002:802EE25C       Mario::checkSidePressPre((void))
 0002:802EE48C       Mario::checkSidePress((void))
 0002:802EEF7C       Mario::startRabbitMode((void))
 0002:802EEFC0       Mario::endRabbitMode((void))
 0002:802EF004       MarioRabbit::MarioRabbit((MarioActor *))
 0002:802EF0A4       MarioRabbit::start((void))
 0002:802EF234       MarioRabbit::hop((void))
 0002:802EF2A4       MarioRabbit::forceJump((void))
 0002:802EF2F0       MarioRabbit::impact((void))
 0002:802EF518       MarioRabbit::update((void))
 0002:802EFCEC       MarioRabbit::close((void))
 0002:802EFE20       MarioSearchLight::MarioSearchLight((LiveActor *))
 0002:802EFE8C       MarioSearchLight::init((JMapInfoIter const &))
 0002:802EFEF0       MarioActor::initThrowing((void))
 0002:802EFF84       MarioActor::updateSearchLight((void))
 0002:802F00A0       MarioSearchLight::attackSensor((HitSensor *,HitSensor *))
 0002:802F0134       MarioSearchLight::updateHitSensor((HitSensor *))
 0002:802F0218       MarioSearchLight::calcAndSetBaseMtx((void))
 0002:802F02C4       MarioActor::initSearchLight((void))
 0002:802F03C8       MarioActor::updateThrowing((void))
 0002:802F046C       MarioActor::calcViewSearchLight((void))
 0002:802F0580       MarioActor::drawSearchLight(const(void))
 0002:802F0C14       MarioActor::getThrowVec(const(JGeometry::TVec3<f> *))
 0002:802F0CE4       Mario::checkWallJumpCode((void))
 0002:802F0ED0       MarioSideStep::MarioSideStep((MarioActor *))
 0002:802F0F10       MarioSideStep::close((void))
 0002:802F0FA4       Mario::doSideStep((void))
 0002:802F119C       MarioSideStep::start((void))
 0002:802F1210       MarioSideStep::update((void))
 0002:802F1660       Mario::isSkatableFloor(const(void))
 0002:802F1684       Mario::doSkate((void))
 0002:802F16AC       MarioSkate::MarioSkate((MarioActor *))
 0002:802F1718       MarioSkate::postureCtrl((float *[4]))
 0002:802F17C0       MarioSkate::exitJump((void))
 0002:802F180C       MarioSkate::start((void))
 0002:802F1984       MarioSkate::update((void))
 0002:802F20C8       MarioSkate::close((void))
 0002:802F22D0       Mario::initSoundTable((SoundList *,ulong))
 0002:802F2398       Mario::initSound((void))
 0002:802F2440       Mario::playSoundJ((char const *,long))
 0002:802F25F8       Mario::stopSoundJ((char const *,ulong))
 0002:802F26F4       Mario::startBas((char const *,bool,float,float))
 0002:802F27D0       Mario::isRunningBas(const(char const *))
 0002:802F280C       Mario::skipBas((float))
 0002:802F2818       Mario::playSoundTeresaFlying((void))
 0002:802F28AC       Mario::playSoundTrampleCombo((uchar))
 0002:802F293C       Mario::checkOnimasu((HitSensor const *))
 0002:802F2A00       Mario::isDossun(const(Triangle const *))
 0002:802F2A60       Mario::isStageCameraRotate2D(const(void))
 0002:802F2AB0       Mario::isNoWalkFallOnDossun(const(void))
 0002:802F2B28       Mario::isNotReflectGlassGround(const(void))
 0002:802F2C4C       Mario::isUseAnotherMovingPolygon(const(void))
 0002:802F2CB0       Mario::isUseFooSpecialGravity(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:802F2DD8       Mario::updateOnimasu((void))
 0002:802F36D8       Mario::isHeadPushEnableArea(const(void))
 0002:802F374C       Mario::isOnimasuBinderPressSkip(const(void))
 0002:802F37BC       Mario::checkTornado((void))
 0002:802F37D8       Mario::resetTornado((void))
 0002:802F380C       Mario::calcTornadoTilt((void))
 0002:802F3A44       Mario::reflectWallOnSpinning((JGeometry::TVec3<f> const &,ushort))
 0002:802F3A94       Mario::forceStopTornado((void))
 0002:802F3B0C       Mario::startRotationTask((ulong))
 0002:802F3B50       Mario::doSpinWallEffect((void))
 0002:802F3C20       Mario::taskOnRotation((ulong))
 0002:802F3D40       MarioState::MarioState((MarioActor *,ulong))
 0002:802F3D64       MarioState::proc((ulong))
 0002:802F3E3C       Mario::sendStateMsg((ulong))
 0002:802F3EF4       Mario::updatePosture((float *[4]))
 0002:802F3F48       MarioState::postureCtrl((float *[4]))
 0002:802F3F8C       Mario::changeStatus((MarioState *))
 0002:802F4028       Mario::closeStatus((MarioState *))
 0002:802F40D0       Mario::getCurrentStatus(const(void))
 0002:802F40EC       Mario::isStatusActive(const(ulong))
 0002:802F4140       MarioState::getNoticedStatus(const(void))
 0002:802F41D4       nullsub_21
 0002:802F41D8       Mario::tryBeeStick((HitSensor const *))
 0002:802F421C       MarioStick::MarioStick((MarioActor *))
 0002:802F42D0       MarioStick::startJump((void))
 0002:802F43A0       MarioStick::postureCtrl((float *[4]))
 0002:802F43D4       MarioStick::setStickSensor((HitSensor const *))
 0002:802F4590       MarioStick::start((void))
 0002:802F4688       MarioStick::update((void))
 0002:802F491C       MarioStick::close((void))
 0002:802F4A30       MarioSukekiyo::MarioSukekiyo((MarioActor *))
 0002:802F4AB4       MarioBury::MarioBury((MarioActor *))
 0002:802F4AF8       MarioSukekiyo::close((void))
 0002:802F4B54       MarioSukekiyo::postureCtrl((float *[4]))
 0002:802F4B88       MarioSukekiyo::start((void))
 0002:802F4CBC       MarioSukekiyo::update((void))
 0002:802F4E3C       Mario::startTalk((LiveActor const *))
 0002:802F4E88       Mario::endTalk((void))
 0002:802F4E90       MarioTalk::MarioTalk((MarioActor *))
 0002:802F4EDC       MarioTalk::update((void))
 0002:802F5010       MarioTalk::close((void))
 0002:802F5070       MarioTalk::start((void))
 0002:802F5168       Mario::setLastNonFixMoveVec((JGeometry::TVec3<f> const &))
 0002:802F51A8       Mario::checkWallStick((void))
 0002:802F531C       Mario::checkStickWallSide((void))
 0002:802F53C4       Mario::checkStickFrontBack((void))
 0002:802F5474       MarioWall::MarioWall((MarioActor *))
 0002:802F54E4       MarioWall::initTriangleJump((void))
 0002:802F5544       MarioWall::isCancel((void))
 0002:802F55F0       Mario::fixWallingPosition((bool))
 0002:802F5648       Mario::fixWallingDir((bool))
 0002:802F5768       Mario::fixWallingTop((void))
 0002:802F5840       Mario::checkWallFloorCode(const(ushort))
 0002:802F58B4       Mario::checkWallCode(const(char const *,bool))
 0002:802F59A8       Mario::checkWallCodeNorm(const(ushort,JGeometry::TVec3<f> *,bool))
 0002:802F5ADC       Mario::setWallCancel((void))
 0002:802F5B24       Mario::keepDistFrontWall((void))
 0002:802F5BEC       Mario::isEnableStickWall((void))
 0002:802F6108       MarioWall::start((void))
 0002:802F62C0       MarioWall::update((void))
 0002:802F6A10       MarioWall::close((void))
 0002:802F6ABC       MarioWall::startJump((void))
 0002:802F6C9C       MarioWall::startBackJump((ulong))
 0002:802F6EC8       Mario::fixWallingDist((void))
 0002:802F720C       Mario::isInhibitWall(const(void))
 0002:802F727C       Mario::tryWallPunch((void))
 0002:802F75EC       Mario::isHanging(const(void))
 0002:802F7618       Mario::fixHangDir((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:802F7714       Mario::isEnableBackHang((void))
 0002:802F79D0       Mario::isEnableSideHang((void))
 0002:802F7C64       MarioHang::recordWallPolygon((Triangle const *))
 0002:802F7D58       MarioHang::recordHangNorm((JGeometry::TVec3<f> const &))
 0002:802F7DC4       MarioHang::MarioHang((MarioActor *))
 0002:802F7E78       MarioHang::close((void))
 0002:802F7F7C       MarioHang::notice((void))
 0002:802F800C       MarioHang::postureCtrl((float *[4]))
 0002:802F81A0       Mario::checkHang((void))
 0002:802F8C24       Mario::isEnableHang((void))
 0002:802F8EA4       MarioHang::start((void))
 0002:802F8F64       MarioHang::update((void))
 0002:802F96C4       MarioHang::tryClimb((bool))
 0002:802F9A40       Mario::isSwimming(const(void))
 0002:802F9A8C       Mario::forceStartSwimAndShoot((JGeometry::TVec3<f> const &))
 0002:802F9B04       Mario::forceExitSwim((void))
 0002:802F9B60       MarioSwim::setDamage((JGeometry::TVec3<f> const &,ushort))
 0002:802F9BE8       Mario::checkStartSwim((void))
 0002:802F9D68       Mario::startSwim((void))
 0002:802F9ED8       MarioSwim::MarioSwim((MarioActor *))
 0002:802FA0D4       MarioSwim::init((void))
 0002:802FA0F4       MarioSwim::start((void))
 0002:802FAA5C       MarioSwim::getSurface(const(void))
 0002:802FABBC       MarioSwim::update((void))
 0002:802FCB0C       MarioSwim::procBuoyancy((void))
 0002:802FCF20       MarioSwim::flowOnWave((float))
 0002:802FCFFC       MarioSwim::decideVelocity((void))
 0002:802FD810       MarioSwim::decideAnimation((void))
 0002:802FDBAC       MarioSwim::decideEffect((bool))
 0002:802FDF40       MarioSwim::notice((void))
 0002:802FDF90       MarioSwim::close((void))
 0002:802FE5DC       MarioSwim::checkWaterCube((bool))
 0002:802FEA64       WaterInfo::__as((WaterInfo const &))
 0002:802FEB0C       MarioSwim::updateUnderWater((void))
 0002:802FEEA4       MarioSwim::checkUnderWaterFull((JGeometry::TVec3<f> const &))
 0002:802FF020       MarioSwim::checkWaterBottom((void))
 0002:802FF144       MarioSwim::getWaterAreaInfo((WaterInfo *,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> *))
 0002:802FF2F8       MarioModule::stopSound((char const *,ulong))
 0002:802FF2FC       MarioSwim::surfacePaddle((void))
 0002:802FF378       MarioSwim::spin((void))
 0002:802FF598       MarioSwim::startSpinDash((void))
 0002:802FF70C       MarioSwim::hitPunch((JGeometry::TVec3<f> const &))
 0002:802FF774       MarioSwim::jet((void))
 0002:802FFA3C       MarioSwim::resetJet((void))
 0002:802FFA9C       MarioSwim::dropJet((bool))
 0002:802FFB9C       MarioSwim::startJet((ulong))
 0002:802FFC3C       MarioSwim::forceStopSpin((void))
 0002:802FFCE0       MarioSwim::addFaint((JGeometry::TVec3<f> const &))
 0002:802FFE34       MarioSwim::addDamage((JGeometry::TVec3<f> const &))
 0002:8030017C       MarioSwim::updateTilt((void))
 0002:80300550       MarioSwim::pushedByWaterWall((void))
 0002:80300700       MarioSwim::tryJetAttack((HitSensor *))
 0002:80300780       MarioSwim::hitHead((HitInfo const *))
 0002:8030096C       MarioSwim::hitPoly((uchar,JGeometry::TVec3<f> const &,HitSensor *))
 0002:80300A30       MarioSwim::hitWall((JGeometry::TVec3<f> const &,HitSensor *))
 0002:8030129C       MarioSwim::decLife((void))
 0002:8030133C       MarioSwim::incLife((void))
 0002:80301380       MarioSwim::incOxygen((void))
 0002:80301458       MarioSwim::decOxygen((ushort))
 0002:80301504       MarioSwim::draw3D(const(void))
 0002:8030158C       MarioSwim::onSurface((void))
 0002:803015A4       MarioSwim::updateLifeByTime((void))
 0002:803017D0       MarioSwim::doDecLifeByCold((void))
 0002:80301894       MarioSwim::passRing((HitSensor const *))
 0002:803019A0       MarioSwim::calcRingAcc((void))
 0002:80301B38       MarioSwim::ringDash((void))
 0002:80301BFC       MarioSwim::resetAndFixPose((void))
 0002:80301CCC       MarioSwim::getStickY(const(void))
 0002:80301D30       MarioSwim::updateOxygenWatch((void))
 0002:80301E1C       MarioSwim::addVelocity((JGeometry::TVec3<f> const &))
 0002:80301EB4       MarioSwim::addVelocity((JGeometry::TVec3<f> const &,float))
 0002:80301F80       MarioSwim::doJetJump((uchar))
 0002:80302284       MarioSwim::getBlurOffset(const(void))
 0002:8030228C       Mario::checkWaterDamage((void))
 0002:80302368       MarioAccess::getTakePos((JGeometry::TVec3<f> *))
 0002:803023D4       MarioAccess::isOnActor((LiveActor const *))
 0002:803024E8       MarioAccess::isOnGround((ulong))
 0002:80302554       MarioAccess::isHipDropFalling((void))
 0002:803025D8       MarioAccess::isHipDropLand((void))
 0002:80302608       MarioAccess::isSwingAction((void))
 0002:8030266C       MarioAccess::isInRush((void))
 0002:803026CC       MarioAccess::isSquat((void))
 0002:8030272C       MarioAccess::isParalyzing((void))
 0002:8030275C       MarioAccess::isTeresaDisappear((void))
 0002:803027AC       MarioAccess::isFlying((void))
 0002:80302800       MarioAccess::isNeedBrakingCamera((void))
 0002:80302830       MarioAccess::endTalk((void))
 0002:80302888       MarioAccess::isSkating((void))
 0002:803028B8       MarioAccess::getGroundingPolygon((ulong))
 0002:80302978       MarioAccess::getShadowingPolygon((void))
 0002:803029C4       MarioAccess::getShadowHeight((void))
 0002:80302A28       MarioAccess::isOnPress((void))
 0002:80302A84       MarioAccess::isFpViewChangingFailure((void))
 0002:80302AB0       MarioAccess::stopFpView((void))
 0002:80302B10       MarioAccess::noticeDashChance((void))
 0002:80302B40       MarioAccess::setWalkingResist((float))
 0002:80302B78       MarioAccess::forceFly((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:80302BCC       MarioAccess::setJumpVec((JGeometry::TVec3<f> const &))
 0002:80302C0C       MarioAccess::freeJump((JGeometry::TVec3<f> const &,ulong))
 0002:80302CB4       MarioAccess::tornadoJump((void))
 0002:80302D34       MarioAccess::tornadoJumpMini((void))
 0002:80302E7C       MarioAccess::becomeNormalJumpStatus((void))
 0002:80302EAC       MarioAccess::setFrontVecKeepUp((JGeometry::TVec3<f> const &,ushort))
 0002:80302F64       MarioAccess::setFrontVecTarget((JGeometry::TVec3<f> const &,ushort))
 0002:80302FB4       MarioAccess::getThrowVec((JGeometry::TVec3<f> *))
 0002:80303078       MarioAccess::setTrans((JGeometry::TVec3<f> const &,ushort))
 0002:80303164       MarioAccess::incLife((ulong))
 0002:80303240       MarioAccess::isConfrontDeath((void))
 0002:80303324       MarioAccess::addStarPiece((void))
 0002:803033F8       MarioAccess::getVelocity((void))
 0002:80303454       MarioAccess::getLastMove((void))
 0002:80303488       MarioAccess::hide((void))
 0002:803034D8       MarioAccess::show((void))
 0002:80303504       MarioAccess::getTakingSensor((void))
 0002:8030356C       MR::resetSystemAndGameStatus((void))
 0002:803035BC       MarioAccess::getAnimationFrameMax((void))
 0002:80303648       MarioAccess::changeAnimationE((char const *,long))
 0002:8030375C       MarioAccess::changeAnimationE((char const *,char const *))
 0002:80303818       MarioAccess::changeAnimationE((char const *,BckCtrlData const &))
 0002:803038E4       MarioAccess::keepCurrentAnimation((void))
 0002:8030393C       MarioAccess::progressAnimation((void))
 0002:803039C8       MarioAccess::setAnimationBlendWeight((float const *))
 0002:80303A08       MarioAccess::offControl((void))
 0002:80303A34       MarioAccess::isOffControl((void))
 0002:80303A5C       MarioAccess::onControl((bool))
 0002:80303AA8       MarioAccess::setStateWait((void))
 0002:80303AE4       MarioAccess::startTalk((LiveActor const *))
 0002:80303B5C       MarioAccess::readyRemoteDemo((void))
 0002:80303E04       MarioAccess::onFollowDemo((void))
 0002:80303E7C       MarioAccess::getBaseMtx((void))
 0002:80303ED4       MarioAccess::calcSpinPullVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80303F20       MarioAccess::tryCoinPull((void))
 0002:80303F98       MarioAccess::addVelocity((JGeometry::TVec3<f> const &))
 0002:80304060       MarioAccess::addVelocityFromArea((JGeometry::TVec3<f> const &))
 0002:803040F8       MarioAccess::isOnWaterSurface((void))
 0002:80304178       MarioAccess::calcWorldPadDir((JGeometry::TVec3<f> *,float,float))
 0002:803041D8       MarioAccess::preventRush((void))
 0002:80304228       MarioAccess::validateSensor((void))
 0002:80304258       MarioAccess::incOxygen((ulong))
 0002:803042DC       MarioAccess::scatterStarPiece((ulong))
 0002:8030438C       MarioAccess::startDownWipe((void))
 0002:80304400       MarioAccess::readyDemo((void))
 0002:80304538       MarioAccess::endRemoteDemo((RushEndInfo const *))
 0002:80304684       MarioAccess::isInWaterMode((void))
 0002:803046D8       MarioAccess::changeItemStatus((long))
 0002:8030485C       def_80304700
 0002:803048D8       Mario::clearSlope((void))
 0002:80304958       Mario::isEnableSlopeMove(const(void))
 0002:803049F0       Mario::moveSlopeSlide((void))
 0002:80304C8C       Mario::slopeMove((void))
 0002:80305C64       Mario::taskOnSlipTurn((ulong))
 0002:80305D78       Mario::lockGroundCheck((void *,bool))
 0002:80305D9C       Mario::unlockGroundCheck((void *))
 0002:80305DC8       Mario::isUseSimpleGroundCheck(const(void))
 0002:80305F54       Mario::checkGroundOnSlope((void))
 0002:80306584       Mario::stopWalk((void))
 0002:80306654       Mario::cancelSquatMode((void))
 0002:80306780       Mario::getTargetWalkSpeed(const(void))
 0002:80306890       Mario::decideSquatWalkAnimation((void))
 0002:80306DB8       Mario::decideWalkSpeed((void))
 0002:80306F88       Mario::decideWalkAnimation((void))
 0002:803078FC       Mario::doBrakingAnimation((void))
 0002:80307984       Mario::checkWallPush((void))
 0002:80307B20       Mario::updateBrakeAnimation((void))
 0002:80307CB8       Mario::updateWalkSpeed((void))
 0002:803081B8       Mario::decideOnIceAnimation((void))
 0002:803082C4       Mario::updateOnSand((void))
 0002:80308568       Mario::updateOnPoison((void))
 0002:80308698       Mario::updateOnWater((void))
 0002:8030885C       MarioNullBck::appear((void))
 0002:803088D4       MarioNullBck::init((JMapInfoIter const &))
 0002:80308938       MarioNullBck::getFramePos((float,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:80308AC8       Mario::doRecovery((void))
 0002:80308C08       MarioRecovery::MarioRecovery((MarioActor *))
 0002:80308CC8       MarioRecovery::calcFirstVector((void))
 0002:80308FD0       MarioRecovery::updateJump((void))
 0002:8030926C       MarioRecovery::start((void))
 0002:80309458       MarioRecovery::update((void))
 0002:80309850       MarioRecovery::close((void))
 0002:80309988       Mario::isSliderFloor(const(void))
 0002:8030998C       MR::isMsgSearchlightAttack((ulong))
 0002:8030999C       Mario::checkSliderMode(const(void))
 0002:803099E4       MarioSlider::MarioSlider((MarioActor *))
 0002:80309A50       MarioSlider::calcGroundAccel((void))
 0002:80309AC4       MarioSlider::postureCtrl((float *[4]))
 0002:80309B7C       MarioSlider::calcWallHit((void))
 0002:80309D38       Mario::startSlider((void))
 0002:80309E24       MarioSlider::start((void))
 0002:80309EC8       MarioSlider::update((void))
 0002:8030A3E8       MarioSlider::close((void))
 0002:8030A7D4       MarioStep::MarioStep((MarioActor *))
 0002:8030A820       MarioStep::start((void))
 0002:8030A904       MarioStep::update((void))
 0002:8030AA18       Mario::startStep((JGeometry::TVec3<f> const &))
 0002:8030AC84       Mario::checkBump((void))
 0002:8030ADE4       Mario::startBump((JGeometry::TVec3<f> const &))
 0002:8030B018       MarioBump::MarioBump((MarioActor *))
 0002:8030B070       MarioBump::start((void))
 0002:8030B138       MarioBump::update((void))
 0002:8030B238       Mario::checkEnforceMoveInner((void))
 0002:8030B458       Mario::recordRelativePosition((void))
 0002:8030B908       Mario::invalidateRelativePosition((void))
 0002:8030B928       Mario::getMoveBaseMtx(const(void))
 0002:8030B970       Mario::moveRelativePosition((ulong))
 0002:8030BC08       Mario::moveRelativePositionWall((void))
 0002:8030BDF0       Mario::recordLastGround((void))
 0002:8030BE38       Mario::getLastGroundPos(const(JGeometry::TVec3<f> *))
 0002:8030BE9C       Mario::getLastGroundEdgeNrm(const(ulong))
 0002:8030BEA4       Mario::getLastGroundEdgeIndex(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8030C0A4       Mario::pushedByReaction((void))
 0002:8030C0EC       Mario::addReaction((JGeometry::TVec3<f> const &))
 0002:8030C0F4       Mario::tryPushToVelocity((void))
 0002:8030C330       Mario::push((JGeometry::TVec3<f> const &))
 0002:8030C36C       Mario::push2((JGeometry::TVec3<f> const &))
 0002:8030C3A8       Mario::powerAreaMove((void))
 0002:8030C490       Mario::powerRailMove((void))
 0002:8030C5F8       Mario::recordJumpEnforceMove((void))
 0002:8030C64C       Mario::doEnforceJump((float))
 0002:8030C764       Mario::pushedByWind((void))
 0002:8030CB04       Mario::delTask((MarioModuleTask *))
 0002:8030CBA0       Mario::execTask((void))
 0002:8030CC18       Mario::drawTask(const(void))
 0002:8030CC78       Mario::initTask((void))
 0002:8030CCBC       Mario::isActiveTask((bool (Mario::)(void const *,void *,ulong)))
 0002:8030CD2C       Mario::isActiveTaskID((ulong))
 0002:8030CDB0       Mario::pushTask((bool (Mario::)(void const *,void *,ulong),ulong))
 0002:8030CE74       Mario::popTask((bool (Mario::)(void const *,void *,ulong)))
 0002:8030CEFC       Mario::callExtraTasks((ulong))
 0002:8030CFC8       Mario::startHandy((void))
 0002:8030D00C       Mario::taskOnHipDropBlur((ulong))
 0002:8030D134       Mario::taskOnHipDropSlide((ulong))
 0002:8030D328       Mario::startFreezeEnd((void))
 0002:8030D36C       Mario::taskOnHandy((ulong))
 0002:8030D3D8       Mario::startHipDropBlur((void))
 0002:8030D4C8       Mario::startHipDropSlide((HitSensor const *))
 0002:8030D624       Mario::startJumpDropSlide((HitSensor const *))
 0002:8030D8B0       Mario::startTeresaMode((void))
 0002:8030D93C       MarioTeresa::updateDropFlag((void))
 0002:8030D9E4       Mario::getHitWallNorm((JGeometry::TVec3<f> *))
 0002:8030DAF0       Mario::resetTeresaMode((void))
 0002:8030DB04       Mario::doTeresaReflection((JGeometry::TVec3<f> const &,bool))
 0002:8030DB0C       MarioTeresa::resetTeresaMode((void))
 0002:8030DB60       MarioTeresa::isTeresaAccel(const(void))
 0002:8030DB70       MarioTeresa::MarioTeresa((MarioActor *))
 0002:8030DBEC       MarioTeresa::update((void))
 0002:8030DDC8       MarioTeresa::checkHeight((void))
 0002:8030E010       MarioTeresa::checkAccel((void))
 0002:8030E0A0       MarioTeresa::checkGroundReflect((void))
 0002:8030E1B4       MarioTeresa::procNoControl((void))
 0002:8030E258       MarioTeresa::procNearGroundControl((void))
 0002:8030E3F0       MarioTeresa::procDrop((void))
 0002:8030E6A4       MarioTeresa::addTeresaVerticalVelocity((float))
 0002:8030E8F0       MarioTeresa::addTeresaHorizontalVelocity((JGeometry::TVec3<f> const &))
 0002:8030EA38       MarioTeresa::doTeresaReflection((JGeometry::TVec3<f> const &,bool))
 0002:8030EC20       MarioActor::initTeresaMarioAnimation((void))
 0002:8030ED10       Mario::startTeresaDisappear((void))
 0002:8030EDEC       MarioTeresa::start((void))
 0002:8030EE98       MarioTeresa::checkWind((void))
 0002:8030F010       MarioTeresa::checkWallCeilReflect((void))
 0002:8030F210       MarioTeresa::procAirControl((void))
 0002:8030F388       MarioTeresa::procControl((void))
 0002:8030F5A8       MarioActor::runTeresaBaseAnimation((void))
 0002:8030F630       MarioActor::changeTeresaAnimation((char const *,long))
 0002:8030F738       MarioActor::updateTeresaAnimation((void))
 0002:8030FC14       Mario::stopPunch((void))
 0002:8030FC7C       Mario::startMagic((void))
 0002:8030FD28       MarioMagic::MarioMagic((MarioActor *))
 0002:8030FD70       MarioMagic::close((void))
 0002:8030FDC4       MarioMagic::start((void))
 0002:8030FE64       MarioMagic::update((void))
 0002:8030FFBC       Mario::doObjWarp((LiveActor *))
 0002:80310154       Mario::doPointWarp((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:8031027C       Mario::isVisibleRecoveryWarpBubble(const(void))
 0002:803102D0       MarioWarp::MarioWarp((MarioActor *))
 0002:80310394       MarioWarp::calcAxis((void))
 0002:803105A8       Mario::doCubeWarp((void))
 0002:80310728       Mario::doPointWarpRecovery((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80310848       MarioWarp::updateJump((void))
 0002:80310A98       MarioWarp::start((void))
 0002:80310C98       MarioWarp::update((void))
 0002:803110E0       MarioWarp::close((void))
 0002:8031154C       Mario::isDisableStayHere(const(void))
 0002:80311794       Mario::isDisableFpViewMode(const(void))
 0002:803117B0       MarioFpView::MarioFpView((MarioActor *))
 0002:80311804       MarioFpView::start((void))
 0002:80311868       MarioFpView::update((void))
 0002:80311954       MarioFpView::close((void))
 0002:803119B0       MarioFpView::forceClose((void))
 0002:803119E8       Mario::tryFpViewMode((void))
 0002:80311AB4       MarioFpView::getBlurOffset(const(void))
 0002:80311ABC       Mario::stick2DadjustGround((float &,float &))
 0002:80311D6C       Mario::calcDir2D((float,float,JGeometry::TVec3<f> *))
 0002:80311EAC       MatrixControl::MatrixControl((char const *,MatrixMap *,MatrixSelectList *,long))
 0002:80312024       MatrixControl::getValue(const(char const *,uchar))
 0002:8031207C       MatrixControl::getValueOrNone(const(char const *,uchar,uchar *))
 0002:803120F8       MatrixControl::getBit(const(char const *,uchar))
 0002:80312164       MatrixControl::isExist(const(char const *))
 0002:8031218C       MatrixControl::getBitOrNone(const(char const *,uchar))
 0002:80312208       MatrixValueGetter::MatrixValueGetter((char const *,MatrixValueTable *))
 0002:803122D0       MatrixValueGetter::getValue(const(char const *,float *))
 0002:803123F4       RushEndInfo::RushEndInfo((LiveActor *,ulong,JGeometry::TVec3<f> const &,bool,ulong))
 0002:8031242C       TornadoMario::TornadoMario((char const *))
 0002:8031247C       TornadoMario::init((JMapInfoIter const &))
 0002:80312568       TornadoMario::hideForce((void))
 0002:803125BC       LiveActor::calcAnim((void))
 0002:803125C0       TornadoMario::setTrHeight((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8031262C       TornadoMario::calcAndSetBaseMtx((void))
 0002:803126D0       TornadoMario::show((void))
 0002:80312744       TornadoMario::hide((void))
 0002:803127A4       TornadoMario::control((void))
 0002:80312844       ModelHolder::ModelHolder((char const *,bool))
 0002:803128C0       ModelHolder::updateMtx((float *[4]))
 0002:803129E0       CollisionShadow::setMode((ulong))
 0002:80312A50       CollisionShadow::CollisionShadow((float,float))
 0002:80312CEC       CollisionShadow::create((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80313438       CollisionShadow::draw1(const(void))
 0002:803134F0       CollisionShadow::sendVtx(const(void))
 0002:803135D8       CollisionShadow::sendZsortedVtx(const(bool))
 0002:8031370C       CollisionShadow::initCaptureTex((void))
 0002:803137CC       CollisionShadow::setViewMtx((JGeometry::TVec3<f> const &))
 0002:803139D4       CollisionShadow::setUpdateFlag((void))
 0002:80313A18       CollisionShadow::calcView((J3DModelX *,ulong,J3DModelX *))
 0002:80313AF4       CollisionShadow::drawAndCaptureTex((J3DModelX *,JGeometry::TVec3<f> const &))
 0002:80313E5C       CollisionShadow::clearAlphaBuffer((void))
 0002:80313EEC       CollisionShadow::drawVolumeBox(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8031413C       CollisionShadow::draw(const(void))
 0002:803141D4       CollisionShadow::draw2(const(void))
 0002:8031431C       CollisionShadow::draw3(const(void))
 0002:803146D8       CollisionShadow::createDL((void))
 0002:80314864       CollisionShadow::drawVolume(const(void))
 0002:8031493C       CollisionShadow::doSortPolygons((void))
 0002:80314A30       CollisionShadow::getDrawPos(const(ulong))
 0002:80314A4C       CollisionShadow::getDrawPos(const(ulong,ulong))
 0002:80314A80       CollisionShadow::getDrawTx(const(ulong,ulong))
 0002:80314AD8       nullsub_22
 0002:80314ADC       FloorCode::getCode((Triangle const *))
 0002:80314B34       MarioActor::drawPreWipe(const(void))
 0002:80314CB8       DrawAdaptor::DrawAdaptor((MR::FunctorBase const &,int))
 0002:80314D40       DrawAdaptor::draw(const(void))
 0002:80314DAC       EventSequencer::EventSequencer((void))
 0002:80314E1C       EventSequencer::init((JMapInfoIter const &))
 0002:80314F7C       EventSequencer::movement((void))
 0002:80314FD8       EventSequencer::startEvent((char const *))
 0002:8031502C       EventSequence::EventSequence((ulong))
 0002:803150C8       EventSequence::clearFlag((void))
 0002:80315108       EventSequence::addEventOnTime((char const *,void (EventSequence::)(void const *,void *,ushort,ushort),ushort))
 0002:80315160       EventSequence::addEventInTime((char const *,void (EventSequence::)(void const *,void *,ushort,ushort),ushort,ushort))
 0002:803151B8       EventSequence::addEventInStatus((char const *,void (EventSequence::)(void const *,void *,ushort,ushort),bool (EventSequence::)(void const *,void *,ushort)))
 0002:80315238       EventSequence::addEventInPhase((char const *,void (EventSequence::)(void const *,void *,ushort,ushort),ushort))
 0002:803152C0       EventSequence::checkAndRun((ulong))
 0002:80315468       EventSequence::isMissLayoutClosed((ushort))
 0002:803154C0       MR::decPlayerLeft((void))
 0002:803154C8       EventSequence::doCloseWipe((ushort,ushort))
 0002:80315514       EventSequence::doWaitAfterWipe((ushort,ushort))
 0002:803155B0       EventGameOver::EventGameOver((void))
 0002:803156F0       EventGameOver::init((ushort,ushort))
 0002:8031575C       EventGameOver::sound((ushort,ushort))
 0002:803157A4       MR::startDownWipe((void))
 0002:803157A8       EventGameOver::finish((ushort,ushort))
 0002:803157DC       EventAbyss::EventAbyss((void))
 0002:80315968       EventAbyss::init((ushort,ushort))
 0002:803159C0       EventFireDown::sound((ushort,ushort))
 0002:80315A64       EventFireDown::updateAfter((void))
 0002:80315A70       EventDown::EventDown((void))
 0002:80315C14       EventDown::init((ushort,ushort))
 0002:80315C80       EventDown::sound((ushort,ushort))
 0002:80315D30       EventRaceDown::missLayoutOpen((ushort,ushort))
 0002:80315D64       EventFireDown::EventFireDown((void))
 0002:80315F20       EventFireDown::init((ushort,ushort))
 0002:80316048       EventFireDown::sound2((ushort,ushort))
 0002:80316054       EventRaceDown::EventRaceDown((void))
 0002:80316270       EventRaceDown::init((ushort,ushort))
 0002:803162E8       EventGhostRaceDown::sound((ushort,ushort))
 0002:803163B0       EventRaceDown::checkCloseWipeStart((ushort))
 0002:80316430       EventGhostRaceDown::EventGhostRaceDown((void))
 0002:80316604       EventGhostRaceDown::init((ushort,ushort))
 0002:8031673C       AudRhythmSeqParser::AudRhythmSeqParser((void))
 0002:80316814       AudRhythmSeqParser::noteOnProcess((ulong,ulong,ulong,ulong))
 0002:80316868       AudRhythmSeqParser::noteOffProcess((ulong))
 0002:803168D8       AudRhythmSeqParser::execNoteOnMidi((JASTrack *,ulong,ulong,ulong))
 0002:80316A38       AudRhythmSeqParser::execNoteOff((JASTrack *,ulong))
 0002:80316AA0       AudRhythmSeqParser::parse((JASTrack *))
 0002:80316BD4       AudRhythmSeqParser::checkNoteOn((ulong,ulong &,ulong &,ulong &,long long &,bool))
 0002:80316C80       AudRhythmSeqParser::checkNoteOnKey((ulong,ulong &,ulong &,long long &,ulong &))
 0002:80316D48       AudRhythmSeqParser::getTempo(const(void))
 0002:80316D90       AudRhythmSeqParser::getModifiedTempo(const(void))
 0002:80316DD8       AudRhythmSeqParser::getRhythmType((ulong))
 0002:80316E38       J3DAnmTextureSRTKey::getKind(const(void))
 0002:80316E40       AudRhythmSeqParser::getTempoData((JASTrack *))
 0002:80316E58       AudRhythmSeqParser::getScaleNumberData((JASTrack *))
 0002:80316E88       AudRhythmSeqParser::getNextNoteOff((JASTrack *,ulong))
 0002:80316F94       JASSeqParser::parseRegCommand((JASTrack *,int))
 0002:80316FE8       AudRhythmSeqParser::passCommand((JASTrack *,uchar,ushort))
 0002:8031728C       AudRhythmSeqParser::callTmp((JASTrack *,ulong))
 0002:803172CC       AudRhythmSeqParser::retTmp((JASTrack *))
 0002:80317300       AudRhythmSeqParser::initNoteInfo((ulong))
 0002:80317328       AudRhythmSeqParser::init((void))
 0002:803173A0       AudRhythmSeqParser::activate((void))
 0002:803173D8       AudRhythmSeqParser::setNoteInfo((ulong,ulong,ulong,ulong))
 0002:80317434       AudRhythmSeqParser::registChordNumToInfo((void))
 0002:803174B0       AudRhythmSeqParser::registScaleNumToInfo((void))
 0002:803175E0       AudChordInfo::isAvailable(const(void))
 0002:80317614       AudBgmTempoAdjuster::AudBgmTempoAdjuster((void))
 0002:8031766C       AudBgmTempoAdjuster::init((void))
 0002:80317684       AudBgmTempoAdjuster::setInfo((float,ulong,ulong,ulong,ulong))
 0002:803176C8       AudBgmTempoAdjuster::setStream((JAIStream *))
 0002:80317718       AudBgmTempoAdjuster::reject((void))
 0002:80317768       AudBgmTempoAdjuster::beatProc((float))
 0002:8031790C       AudBgmTempoAdjuster::calcAdjustRate((float,float))
 0002:8031797C       AudMeTrack::AudMeTrack((void))
 0002:80317A18       AudMeTrack::~AudMeTrack((void))
 0002:80317ACC       AudMeTrack::init((void))
 0002:80317BC8       JASOscillator::Data::__as((JASOscillator::Data const &))
 0002:80317BFC       JASOscillator::Point::__as((JASOscillator::Point const &))
 0002:80317C18       AudMeTrack::initPlayParam((void))
 0002:80317C3C       AudMeTrack::inherit((AudMeTrack *))
 0002:80317D70       AudMeTrack::newChild((long))
 0002:80317E0C       AudMeTrack::deleteChild((long))
 0002:80317E6C       AudMeTrack::isHaveChild(const(void))
 0002:80317EA0       AudMeTrack::setSeqData((void *,ulong))
 0002:80317EE4       AudMeTrack::startSeq((void))
 0002:80317F3C       AudMeTrack::stopSeq((void))
 0002:80317FD0       AudMeTrack::suspendSeq((void))
 0002:80318054       AudMeTrack::stopAtCurrentNoteEnd((void))
 0002:803180E0       AudMeTrack::rhythmProc((long,long))
 0002:80318244       AudMeTrack::setPauseFlag((bool))
 0002:803182F0       AudMeTrack::channelStart((AudMeChannelMgr *,ulong,ulong,ulong))
 0002:803183C8       AudMeTrack::noteOn((ulong,ulong,ulong))
 0002:80318478       AudMeTrack::noteOff((ulong,ushort))
 0002:80318500       AudMeTrack::noteOffAll((ushort))
 0002:80318554       AudMeTrack::startNote((void))
 0002:80318634       AudMeTrack::channelUpdateCallback((ulong,JASChannel *,JASDsp::TChannel *,void *))
 0002:803186E8       AudMeTrack::initRegister((void))
 0002:8031870C       AudMeTrack::overwriteOsc((JASChannel *))
 0002:80318778       AudMeTrack::setOscAdsr((short,short,short,short,ushort))
 0002:803187E8       AudMeTrack::updateChannelParams((void))
 0002:80318934       AudMeTrack::gframeProc((void))
 0002:803189AC       AudMeTrack::setBaseNoteFromChord((uchar *,long,bool))
 0002:80318C0C       AudMeTrack::setBaseNoteFromScale((uchar *,long,bool))
 0002:80318CE8       AudMeTrack::setBaseNoteFromChromatic((uchar *,long,bool))
 0002:80318D68       AudMeTrack::setBaseNoteFromOtherPart((long))
 0002:80318D9C       AudMeTrack::setBaseNoteFromUpperPart((void))
 0002:80318DE0       AudMeTrack::setBaseNoteFix((uchar))
 0002:80318DE8       AudMeTrack::setBaseNoteFromRegister((long))
 0002:80318DFC       AudMeTrack::adjustNote((long,long))
 0002:80318F2C       AudMeTrack::modifyNote((long,long,long))
 0002:803190C8       AudMeTrack::modifyNoteRnd((long,long,long))
 0002:8031911C       AudMeTrack::getRandom((ulong))
 0002:80319190       AudMeTrack::makeRandomSearchList((long *,long,bool))
 0002:8031923C       AudMeTrack::adjustInNoteRange((uchar &))
 0002:80319280       AudMeTrack::adjustInStartNoteRange((uchar &))
 0002:803192E4       AudMeTrack::getMyOrderInBrother((void))
 0002:80319300       AudMeTrack::getBrother((long))
 0002:80319328       AudMeTrack::TTrackInfo::init((void))
 0002:80319374       AudMeTrack::TList::cbSeqMain((long,long,void *))
 0002:803193AC       AudMeTrack::TList::append((AudMeTrack *))
 0002:8031942C       AudMeTrack::TList::seqMain((long,long))
 0002:803194C0       AudMeTrack::TList::getSameME((AudMeTrack *,ulong))
 0002:8031954C       __sinit(char ()[udMeTrack],**)
 0002:803195D0       JASChannel::setParams((JASChannelParams const &))
 0002:8031962C       AudMeTrack::TList::TList((void))
 0002:803196A4       AudMeChannelMgr::AudMeChannelMgr((AudMeTrack *))
 0002:80319750       JASTrack::TChannelMgr::noteOff((ulong,ushort))
 0002:803197D0       AudMeChannelMgr::setPauseFlag((bool))
 0002:803197F8       AudMeSeqCtrl::AudMeSeqCtrl((void))
 0002:80319868       AudMeSeqCtrl::start((void *,ulong))
 0002:803198C4       AudMeSeqCtrl::autoWait((void))
 0002:803198E0       AudMeSeqCtrl::inherit((AudMeSeqCtrl *))
 0002:803198EC       AudMeSeqCtrl::rhythmProc((AudMeTrack *,long))
 0002:803199D4       __sinit__JASSeqCtrl_cpp
 0002:80319A50       AudMeSeqParser::AudMeSeqParser((void))
 0002:80319A60       AudMeSeqReader::init((void *))
 0002:80319AA0       AudMeSeqReader::call((ulong))
 0002:80319AE0       AudMeSeqReader::ret((void))
 0002:80319B14       AudMeSeqReader::loopStart((ushort))
 0002:80319B58       AudMeSeqReader::loopEnd((void))
 0002:80319BC4       AudMeSeqParser::cmdBank((AudMeTrack *,ulong *))
 0002:80319BD4       AudMeSeqParser::cmdPrg((AudMeTrack *,ulong *))
 0002:80319BE4       AudMeSeqParser::cmdBProg((AudMeTrack *,ulong *))
 0002:80319C00       AudMeSeqParser::cmdRelease((AudMeTrack *,ulong *))
 0002:80319C10       JASSeqParser::cmdSimpleADSR((JASTrack *,ulong *))
 0002:80319C64       AudMeSeqParser::cmdOpenTrack((AudMeTrack *,ulong *))
 0002:80319CE0       JASSeqParser::cmdDisInterrupt((JASTrack *,ulong *))
 0002:80319D0C       AudMeSeqParser::cmdStart((AudMeTrack *,ulong *))
 0002:80319D58       JASSeqParser::cmdBusConnect((JASTrack *,ulong *))
 0002:80319D88       AudMeSeqParser::cmdProgressOn((AudMeTrack *,ulong *))
 0002:80319D98       AudMeSeqParser::cmdProgressOff((AudMeTrack *,ulong *))
 0002:80319DA8       AudMeSeqParser::cmdJump((AudMeTrack *,ulong *))
 0002:80319DC0       AudMeSeqParser::cmdCall((AudMeTrack *,ulong *))
 0002:80319DEC       AudMeSeqParser::cmdJumpZ((AudMeTrack *,ulong *))
 0002:80319E18       AudMeSeqParser::cmdJumpNZ((AudMeTrack *,ulong *))
 0002:80319E44       AudMeSeqParser::cmdCallZ((AudMeTrack *,ulong *))
 0002:80319E94       AudMeSeqParser::cmdCallNZ((AudMeTrack *,ulong *))
 0002:80319EE4       AudMeSeqParser::cmdLoopEnd((AudMeTrack *,ulong *))
 0002:80319F0C       AudMeSeqParser::cmdLoopStart((AudMeTrack *,ulong *))
 0002:80319F64       AudMeSeqParser::cmdLock((AudMeTrack *,ulong *))
 0002:80319F74       AudMeSeqParser::cmdNoWait((AudMeTrack *,ulong *))
 0002:80319F8C       AudMeSeqParser::cmdNote((AudMeTrack *,ulong *))
 0002:80319FDC       AudMeSeqParser::cmdNoteDefineStart((AudMeTrack *,ulong *))
 0002:8031A030       AudMeSeqParser::cmdRest((AudMeTrack *,ulong *))
 0002:8031A070       AudMeSeqParser::cmdNoteRangeUpper((AudMeTrack *,ulong *))
 0002:8031A080       AudMeSeqParser::cmdNoteRangeLower((AudMeTrack *,ulong *))
 0002:8031A090       AudMeSeqParser::cmdNoteRangeStart((AudMeTrack *,ulong *))
 0002:8031A0A0       AudMeSeqParser::cmdNoteRangeStartU((AudMeTrack *,ulong *))
 0002:8031A0B0       AudMeSeqParser::cmdNoteRangeStartD((AudMeTrack *,ulong *))
 0002:8031A0C0       AudMeSeqParser::cmdNoStartRange((AudMeTrack *,ulong *))
 0002:8031A0D0       AudMeSeqParser::cmdPan((AudMeTrack *,ulong *))
 0002:8031A110       AudMeSeqParser::cmdDolby((AudMeTrack *,ulong *))
 0002:8031A150       AudMeSeqParser::cmdVolume((AudMeTrack *,ulong *))
 0002:8031A190       AudMeSeqParser::cmdPitchBend((AudMeTrack *,ulong *))
 0002:8031A1D4       AudMeSeqParser::cmdBendSense((AudMeTrack *,ulong *))
 0002:8031A1E4       AudMeSeqParser::cmdFxMix((AudMeTrack *,ulong *))
 0002:8031A224       AudMeSeqParser::cmdNoteReg((AudMeTrack *,ulong *))
 0002:8031A234       AudMeSeqParser::cmdCmpNI((AudMeTrack *,ulong *))
 0002:8031A26C       AudMeSeqParser::cmdCmpCI((AudMeTrack *,ulong *))
 0002:8031A2CC       AudMeSeqParser::cmdNoteDefineEnd((AudMeTrack *,ulong *))
 0002:8031A320       AudMeSeqParser::cmdBasenotePrev((AudMeTrack *,ulong *))
 0002:8031A330       AudMeSeqParser::cmdBasenoteChromatic((AudMeTrack *,ulong *))
 0002:8031A45C       AudMeSeqParser::cmdBasenoteFix((AudMeTrack *,ulong *))
 0002:8031A4E8       AudMeSeqParser::cmdModifyRnd((AudMeTrack *,ulong *))
 0002:8031A568       AudMeSeqParser::parse((AudMeTrack *))
 0002:8031A6D8       __sinit__AudMeSeqParser_cpp
 0002:8031ABB8       AudCallback::regist((long (*)(long,long,void *),void *))
 0002:8031AC34       AudCallback::callback((long,long))
 0002:8031ACBC       JASDriver::registerSubFrameCallback((long (*)(void *),void *))
 0002:8031ACF8       JASCallbackMgr::JASCallbackMgr((void))
 0002:8031AD1C       AudMeHandle::releaseMe((void))
 0002:8031AD38       AudMe::AudMe((void))
 0002:8031ADAC       AudMe::~AudMe((void))
 0002:8031AE20       AudMe::requestStart((void *,ulong))
 0002:8031AE34       AudMe::start((void *,ulong))
 0002:8031AED4       AudMe::stop((long))
 0002:8031AEDC       MarioSubMeter::activate((void))
 0002:8031AF28       AudMe::release((void))
 0002:8031AF94       SpkSound::attachHandle((SpkSoundHandle *))
 0002:8031AFE0       SpkSound::releaseHandle((void))
 0002:8031AFFC       AudMe::update((void))
 0002:8031B0F0       AudMe::setTimedParam((long,float,ulong))
 0002:8031B158       AudMe::initTimed((void))
 0002:8031B1A4       AudMe::updateTimedParams((bool))
 0002:8031B338       AudMe::setOuterPlayingParams((float,float,float,long,long))
 0002:8031B350       AudMe::doneStop((void))
 0002:8031B3A4       AudMe::setPauseFlag((bool))
 0002:8031B400       AudMeMgr::AudMeMgr((void))
 0002:8031B484       AudMeMgr::setMeTable((void *))
 0002:8031B48C       AudMeMgr::startMe((ulong,AudMeHandle *,JGeometry::TVec3<f> const *))
 0002:8031B628       AudMeMgr::freeDeadMe((void))
 0002:8031B698       AudMeMgr::updateEachMe((void))
 0002:8031B6F8       AudMeMgr::setPauseFlagAll((bool))
 0002:8031B7CC       AudMeMgr::getSeqStartPos((ulong))
 0002:8031B804       AudMeMgr::isRequestedMe((ulong))
 0002:8031B8A0       AudMeMgr::setOuterPlayingParam((long,AudMe *))
 0002:8031B934       AudMePlayingParamsHolder::setResource((void *))
 0002:8031BA10       AudRhythmMeSystem::AudRhythmMeSystem((JKRHeap *,ulong,bool))
 0002:8031BB4C       AudRhythmMeSystem::setSeq((JAISoundHandle &,long))
 0002:8031BC5C       AudRhythmMeSystem::rejectSeq((long))
 0002:8031BCB0       AudRhythmMeSystem::rhythmProc((void))
 0002:8031BD0C       AudRhythmMeSystem::update((void))
 0002:8031BD78       AudRhythmMeSystem::setIdle((bool))
 0002:8031BDB8       AudRhythmMeSystem::setUsingRhythmParser((ulong))
 0002:8031BF1C       AudMeHandles::AudMeHandles((AudMeHandle *,int))
 0002:8031BF28       AudMeHandles::getHandleMeID((ulong))
 0002:8031BF74       AudMeHandles::getFreeHandle((void))
 0002:8031BFB4       AudMeObject::AudMeObject((JGeometry::TVec3<f> *,uchar,JKRHeap *))
 0002:8031C058       AudMeObject::~AudMeObject((void))
 0002:8031C0D8       AudMeObject::dispose((void))
 0002:8031C148       AudMeObject::startMe((ulong))
 0002:8031C220       AudMeObject::getLowestPrioHandle((ulong))
 0002:8031C32C       AudScaleData::initScaleData((ulong))
 0002:8031C348       AudChordTable::AudChordTable((void))
 0002:8031C364       AudChordTable::setChordTable((long,JKRArchive *))
 0002:8031C3C0       AudChordTable::setChordTableResource((void *))
 0002:8031C4F0       AudChordInfo::AudChordInfo((void))
 0002:8031C580       AudChordInfo::loadChordInfo((short,bool))
 0002:8031C62C       AudChordInfo::initParams((void))
 0002:8031C630       AudChordInfo::setCurChord((long))
 0002:8031C6A8       AudChordInfo::setCurScale((long))
 0002:8031C6EC       AudChordInfo::getBassNote(const(void))
 0002:8031C6FC       JAUStdSoundInfo::getCategory(const(JAISoundID))
 0002:8031C704       AudChordInfo::getThird((void))
 0002:8031C7CC       AudChordInfo::getFifth((void))
 0002:8031C894       AudChordInfo::getSeventh((void))
 0002:8031C95C       AudChordInfo::getSixth((void))
 0002:8031CA18       AudChordInfo::getNinth((void))
 0002:8031CAF0       AudChordInfo::getEleventh((void))
 0002:8031CBAC       AudChordInfo::isOnChord((uchar,bool,bool))
 0002:8031CC84       AudChordInfo::getNearestChordNoteDir((uchar,bool))
 0002:8031CDA0       AudChordInfo::getNearestChordNote((uchar))
 0002:8031CE28       AudChordInfo::getUpperNoteOnChord((uchar,long))
 0002:8031CEF0       AudChordInfo::getLowerNoteOnChord((uchar,long))
 0002:8031CFC4       AudChordInfo::getOnScaleType((uchar))
 0002:8031D090       AudChordInfo::getNearestScaleNoteDir((uchar,bool))
 0002:8031D1C0       AudChordInfo::getNearestScaleNote((uchar))
 0002:8031D240       AudChordInfo::getUpperNoteOnScale((uchar,long))
 0002:8031D30C       AudChordInfo::getLowerNoteOnScale((uchar,long))
 0002:8031D3E4       AudChordInfo::expandChordNote((void))
 0002:8031D53C       AudChordInfo::getChordNoteIndex((uchar))
 0002:8031D570       AudChordInfo::addIndexInChordNoteList((long,long,long &))
 0002:8031D5F4       AudChordInfo::subIndexInChordNoteList((long,long,long &))
 0002:8031D674       AudChordInfo::getScaleNoteIndex((uchar,bool))
 0002:8031D710       AudChordInfo::addIndexInScaleNoteList((long,long,long &))
 0002:8031D7D4       AudChordInfo::subIndexInScaleNoteList((long,long,long &))
 0002:8031D894       AudChordInfo::initParams((void))
 0002:8031D900       AudChordInfo::getRoot(const(void))
 0002:8031D90C       AudChordInfo::getChordTone(const(int))
 0002:8031D91C       AudChordInfo::getAddNote(const(int))
 0002:8031D92C       AudChordInfo::getScaleNoteUp((long))
 0002:8031D93C       AudChordInfo::getScaleNoteDown((long))
 0002:8031D94C       AudRhythmHolder::AudRhythmHolder((void))
 0002:8031D98C       AudRhythmHolder::movement((void))
 0002:8031D9B0       AudRhythmHolder::copyInfoFromParser((void))
 0002:8031DC04       AudRhythmHolder::init((void))
 0002:8031DC78       AudRhythmHolder::copyInfoFromParserOne((ulong,ulong,ulong,long long))
 0002:8031DD18       AudRhythmWrap::rhythmProc((void))
 0002:8031DD20       __sinit(char ()[udRhythmWrap],**)
 0002:8031DDB4       BigBubble::BigBubble((char const *))
 0002:8031DF60       BigBubble::init((JMapInfoIter const &))
 0002:8031E0B4       BigBubble::initSensor((void))
 0002:8031E194       BigBubble::makeActorAppeared((void))
 0002:8031E22C       BigBubble::makeActorDead((void))
 0002:8031E29C       BigBubble::control((void))
 0002:8031E36C       BigBubble::calcAnim((void))
 0002:8031E400       MR::initFurPlanet((LiveActor *))
 0002:8031E484       BigBubble::draw(const(void))
 0002:8031E4F8       BigBubble::generate((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,bool,long,long,BigBubbleMoveLimitter const *))
 0002:8031E66C       BigBubble::setActionType((long))
 0002:8031E6A4       BigBubble::setShapeType((long))
 0002:8031E6F4       BigBubble::getBaseRadius(const(void))
 0002:8031E744       BigBubble::setScale((float))
 0002:8031E834       BigBubble::attackSensor((HitSensor *,HitSensor *))
 0002:8031E970       BigBubble::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8031EA30       BigBubble::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8031EABC       BigBubble::receiveMsgPush((HitSensor *,HitSensor *))
 0002:8031EC84       BigBubble::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8031ED18       BigBubble::requestBind((HitSensor *))
 0002:8031EDE8       BigBubble::requestMerged((HitSensor *,HitSensor *))
 0002:8031EE98       BigBubble::requestAssimilate((HitSensor *,HitSensor *))
 0002:8031F064       BigBubble::requestCancelBind((void))
 0002:8031F154       BigBubble::tryBreak((void))
 0002:8031F24C       BigBubble::tryAutoBreak((void))
 0002:8031F2D4       BigBubble::tryBreakEnd((void))
 0002:8031F32C       BigBubble::tryEscape((void))
 0002:8031F37C       BigBubble::tryEscapeEnd((void))
 0002:8031F440       BigBubble::tryMergedCancel((void))
 0002:8031F498       BigBubble::tryMergedEnd((void))
 0002:8031F548       BigBubble::tryGoal((void))
 0002:8031F5B4       BigBubble::exeAppear((void))
 0002:8031F6CC       BigBubble::exeWait((void))
 0002:8031F738       BigBubble::exeCapture((void))
 0002:8031F8B8       BigBubble::exeMerged((void))
 0002:8031FB1C       BigBubble::exeBreak((void))
 0002:8031FBDC       BigBubble::exeEscape((void))
 0002:8031FCB8       BigBubble::exeGoal((void))
 0002:8031FD10       BigBubble::addDeformVelocityOuter((JGeometry::TVec3<f> const &,bool))
 0002:8031FF14       BigBubble::addDeformVelocityInternalOressure((void))
 0002:8031FFD8       BigBubble::addDeformVelocityRebound((void))
 0002:80320040       BigBubble::addCoriolisAccel((void))
 0002:8032011C       BigBubble::addAccelMoment((long))
 0002:803201B8       BigBubble::addAccelPointing((long))
 0002:80320350       BigBubble::doMoveLimit((void))
 0002:803203DC       BigBubble::updatePose((void))
 0002:803204F8       BigBubble::updateBindActorMatrix((void))
 0002:803205CC       BigBubble::updateNormalVelocity((void))
 0002:803206C4       BigBubble::resetDeformVelocity((void))
 0002:803206EC       BigBubble::updateDeformVelocity((void))
 0002:80320740       BigBubble::updateMeshPoint((void))
 0002:8032093C       BigBubble::updateCaptureReduceVolume((void))
 0002:803209E4       BigBubble::updateCaptureWarningColor((void))
 0002:80320AE8       BigBubble::calcMergePosition(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,BigBubble const *))
 0002:80320B94       BigBubble::calcLocalDirection(const(JGeometry::TVec3<f> *,long))
 0002:80320C7C       BigBubble::getNearAxisIndex(const(JGeometry::TVec3<f> const &))
 0002:80320D50       MR::isKinopioExplorerTalkGetGrandStar4((void))
 0002:80320D78       BigBubble::getMergeIndex(const(JGeometry::TVec3<f> const &))
 0002:80320E1C       BigBubble::isBindMario(const(void))
 0002:80320E2C       BigBubble::isDraw(const(void))
 0002:80321020       NrvBigBubble::BigBubbleNrvCapture::executeOnEnd(const(Spine *))
 0002:80321078       JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setQT((JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &))
 0002:80321120       BigBubble::getBaseMtx(const(void))
 0002:80321128       CreeperPoint::CreeperPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,CreeperPoint const *))
 0002:80321274       CreeperPoint::updateFree((void))
 0002:80321338       CreeperPoint::updateBend((bool,JGeometry::TVec3<f> const &,float,float))
 0002:803214E8       CreeperPoint::updateLocalAxis((void))
 0002:80321580       Creeper::Creeper((char const *))
 0002:80321644       Creeper::init((JMapInfoIter const &))
 0002:8032186C       Creeper::exeHangStart((void))
 0002:803218E0       Creeper::exeHangUp((void))
 0002:8032196C       Creeper::exeHangDown((void))
 0002:80321AC8       Creeper::initPoints((void))
 0002:80321CA8       Creeper::control((void))
 0002:80321DB4       Creeper::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80321FE4       Creeper::updatePoints((void))
 0002:80322040       Creeper::bendPoints((void))
 0002:80322130       Creeper::tryHangUp((void))
 0002:803221B8       Creeper::tryJump((void))
 0002:80322398       Creeper::updateHangUp((float))
 0002:803224F8       Creeper::calcAndGetCurrentInfo(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:80322678       @unnamed@SwingRope_cpp@::sendPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,ulong,float,float))
 0002:803226EC       Creeper::draw(const(void))
 0002:803229A0       Creeper::loadMaterial(const(void))
 0002:80322BF0       __sinit__Creeper_cpp
 0002:80322CE4       NrvCreeper::CreeperNrvFreeInvalid::execute(const(Spine *))
 0002:80322D44       Creeper::getHeadPoint(const(void))
 0002:80322D5C       Fluff::Fluff((char const *))
 0002:80322E04       Fluff::init((JMapInfoIter const &))
 0002:80323078       Fluff::initAfterPlacement((void))
 0002:803230FC       Fluff::exeFreeBloom((void))
 0002:803231C8       Fluff::exeFreeWaitOnGround((void))
 0002:80323230       Fluff::exeFreeWaitAir((void))
 0002:80323360       Fluff::exeFreeWaitInvalid((void))
 0002:80323438       Fluff::exeRideStart((void))
 0002:8032350C       Fluff::exeRideFly((void))
 0002:803235E8       Fluff::exeRideFlyOnWind((void))
 0002:803236A8       Fluff::exeRideSpinUp((void))
 0002:803238FC       Fluff::calcAndSetBaseMtx((void))
 0002:80323944       Fluff::attackSensor((HitSensor *,HitSensor *))
 0002:80323960       Fluff::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80323A88       Fluff::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:80323B24       Fluff::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80323E1C       Fluff::endBind((float))
 0002:80323F88       Fluff::updateRide((void))
 0002:80324164       Fluff::updateWind((void))
 0002:803244A8       Fluff::trySpinUp((long))
 0002:803246E4       FluffWindEffect::FluffWindEffect((char const *))
 0002:80324738       FluffWindEffect::initEffectInfo((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *,float))
 0002:80324844       FluffWindEffect::exeBrowWind((void))
 0002:803248D8       LiveActor::startClipped((void))
 0002:80324924       FluffWind::init((JMapInfoIter const &))
 0002:80324B28       FluffWind::makeActorDead((void))
 0002:80324B98       FluffWindHolder::FluffWindHolder((void))
 0002:80324BE0       FluffWindHolder::calcWindInfo(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float *))
 0002:80324CDC       FluffFunction::calcFluffWindInfo((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float *))
 0002:80324F28       JumpBranch::JumpBranch((char const *))
 0002:80324FAC       JumpBranch::init((JMapInfoIter const &))
 0002:8032510C       JumpBranch::exeWait((void))
 0002:8032515C       JumpBranch::exeWaitInvalid((void))
 0002:803251C4       JumpBranch::updateHitSensor((HitSensor *))
 0002:80325298       JumpBranch::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80325704       JumpBranch::updateBind((void))
 0002:80325A3C       MR::setMtxAxisXYZ((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80325A88       Plant::Plant((char const *))
 0002:80325B44       Plant::init((JMapInfoIter const &))
 0002:80325DFC       Plant::initAfterPlacement((void))
 0002:80325E0C       Plant::appear((void))
 0002:80325E68       Plant::exeWaitFar((void))
 0002:80325ED8       Plant::exeSeedWait((void))
 0002:80325F54       Plant::exeWaitDemoWaitGrowUp((void))
 0002:80325FCC       Plant::exeDemoWaitGrowUp((void))
 0002:8032604C       Plant::exeGrowUp((void))
 0002:803260E0       Plant::exeHangWaitGrowUp((void))
 0002:80326180       Plant::exeHangUpGrowUp((void))
 0002:80326330       Plant::exeGrowthWait((void))
 0002:803263C8       Plant::exeGrowthWaitInvalid((void))
 0002:80326454       Plant::exeHangStart((void))
 0002:803264C8       Plant::exeHangUp((void))
 0002:80326574       Plant::exeHangDown((void))
 0002:8032674C       Plant::initLeaf((void))
 0002:80326AC0       Plant::calcAnim((void))
 0002:80326B84       Plant::startClipped((void))
 0002:80326C04       Plant::endClipped((void))
 0002:80326C84       Plant::updateHitSensor((HitSensor *))
 0002:80326D04       Plant::attackSensor((HitSensor *,HitSensor *))
 0002:80326DB8       Plant::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:80326E3C       Plant::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8032718C       Plant::updateTopMtx((void))
 0002:803271E8       Plant::updateGrowUp((void))
 0002:8032738C       Plant::updateHangUp((float))
 0002:803274A0       Plant::updateBindLeaf((void))
 0002:8032757C       Plant::startGrowUp((void))
 0002:80327598       Plant::tryHangUp((void))
 0002:8032762C       Plant::tryReachGoal((void))
 0002:803277C0       Plant::tryAccelHangUp((void))
 0002:8032785C       Plant::draw(const(void))
 0002:80327B28       MR::clampMax((float *,float))
 0002:80327B48       PlantLeaf::getBaseMtx(const(void))
 0002:80327B50       PlantLeaf::PlantLeaf((float,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80327C64       PlantLeafDrawInit::PlantLeafDrawInit((char const *))
 0002:80327D68       PlantLeaf::updateGrowUp((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:80327E90       PlantLeaf::updateSpring((JGeometry::TVec3<f> const &,float,float))
 0002:80327F54       PlantLeaf::updateSpring((float))
 0002:803282D8       PlantStalk::PlantStalk((void))
 0002:80328360       PlantStalk::init((JMapInfoIter const &))
 0002:80328534       PlantStalk::draw(const(void))
 0002:8032857C       PlantStalk::updateGrowUp((void))
 0002:80328794       PlantStalk::calcNearestPos(const(JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803287A0       PlantStalk::calcPlayerCoord(const(void))
 0002:803288D4       PlantStalk::drawGrowUp(const(void))
 0002:80328D84       PlantStalkDrawInit::PlantStalkDrawInit((char const *))
 0002:80328E54       PlantStalkDrawInit::initDraw(const(void))
 0002:80329074       __sinit__PlantStalk_cpp
 0002:80329238       Pole::Pole((char const *))
 0002:80329308       Pole::init((JMapInfoIter const &))
 0002:80329824       Pole::calcAnim((void))
 0002:80329838       Pole::exeDemoAppear((void))
 0002:803298FC       Pole::exeFreeInvalid((void))
 0002:80329998       Pole::exeBindStart((void))
 0002:80329AE0       Pole::exeBindWait((void))
 0002:80329BE4       Pole::exeBindTurn((void))
 0002:80329DF4       Pole::exeBindClimbUp((void))
 0002:80329F64       Pole::exeBindFallDown((void))
 0002:8032A1DC       Pole::exeBindHandstandStart((void))
 0002:8032A2C8       Pole::exeBindHandstandWait((void))
 0002:8032A354       Pole::exeBindHandstandEnd((void))
 0002:8032A40C       Pole::exeBindHandstandTurn((void))
 0002:8032A4C8       Pole::attackSensor((HitSensor *,HitSensor *))
 0002:8032A56C       Pole::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8032A604       Pole::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8032AA20       Pole::tryJump((bool,float))
 0002:8032AC34       Pole::tryTurn((void))
 0002:8032ACA4       Pole::tryClimbUp((void))
 0002:8032ACF4       Pole::tryFallDown((void))
 0002:8032AD90       Pole::isEnableTurn(const(void))
 0002:8032ADC4       Pole::updateBindTrans((void))
 0002:8032AE10       Pole::calcGravityMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8032AE84       Pole::updateTopPos((float))
 0002:8032AF18       Pole::getPoleSubPadStickY(const(void))
 0002:8032B1E0       NrvPole::PoleNrvFree::execute(const(Spine *))
 0002:8032B228       Pole::getBaseMtx(const(void))
 0002:8032B244       SledRopePoint::SledRopePoint((JGeometry::TVec3<f> const &,float))
 0002:8032B308       SledRopePoint::updatePos((float))
 0002:8032B388       SledRopePoint::bindToMapCollision((float))
 0002:8032B478       SlingShooter::SlingShooter((char const *))
 0002:8032B518       SlingShooter::init((JMapInfoIter const &))
 0002:8032B704       SlingShooter::initAfterPlacement((void))
 0002:8032B75C       SlingShooter::calcAnim((void))
 0002:8032B7C4       SlingShooter::exeFree((void))
 0002:8032B81C       SlingShooter::exeFreeInvalid((void))
 0002:8032B888       SlingShooter::exeLand((void))
 0002:8032B98C       SlingShooter::exeWait((void))
 0002:8032BA28       SlingShooter::exeAim((void))
 0002:8032BBE0       SlingShooter::exeAttack((void))
 0002:8032BCAC       SlingShooter::exeAttackSuccess((void))
 0002:8032BE00       SlingShooter::updateHitSensor((HitSensor *))
 0002:8032BE90       SlingShooter::attackSensor((HitSensor *,HitSensor *))
 0002:8032C114       SlingShooter::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8032C264       SlingShooter::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8032C524       SlingShooter::calcAndSetBaseMtx((void))
 0002:8032C5C8       SlingShooter::calcBaseMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:8032C680       SlingShooter::updateWait((void))
 0002:8032C82C       SlingShooter::updateHang((void))
 0002:8032CA50       SlingShooter::updateActorMtx((void))
 0002:8032CB80       SlingShooter::tryCancel((void))
 0002:8032CC50       SlingShooter::tryRelease((void))
 0002:8032CF08       SlingShooter::tryAttackMap((void))
 0002:8032D0B0       SlingShooter::startBind((LiveActor *))
 0002:8032D1CC       SlingShooter::startCancelWait((void))
 0002:8032D264       SlingShooter::startCancelAim((void))
 0002:8032D2EC       SlingShooter::endBind((void))
 0002:8032D3BC       SlingShooter::endCommandStream((void))
 0002:8032D568       SpaceCocoon::SpaceCocoon((char const *))
 0002:8032D65C       SpaceCocoon::init((JMapInfoIter const &))
 0002:8032DB1C       SpaceCocoon::exeStop((void))
 0002:8032DB60       SpaceCocoon::exeFree((void))
 0002:8032DBF8       SpaceCocoon::exeFreeInvalid((void))
 0002:8032DCA8       SpaceCocoon::exeBindLand((void))
 0002:8032DDCC       SpaceCocoon::exeBindWait((void))
 0002:8032DED0       SpaceCocoon::exeWaitKinopioAimDemo((void))
 0002:8032DF30       SpaceCocoon::exeBindAim((void))
 0002:8032E020       SpaceCocoon::exeBindAttack((void))
 0002:8032E180       SpaceCocoon::exeBindAttackSuccess((void))
 0002:8032E210       SpaceCocoon::calcAnim((void))
 0002:8032E268       SpaceCocoon::attackSensor((HitSensor *,HitSensor *))
 0002:8032E400       SpaceCocoon::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8032E4A8       SpaceCocoon::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:8032E53C       SpaceCocoon::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8032E73C       SpaceCocoon::updateBindWait((void))
 0002:8032E8BC       SpaceCocoon::updateSpringPoint((void))
 0002:8032E9A8       SpaceCocoon::updateHang((void))
 0002:8032EC04       SpaceCocoon::updateBindAttack((void))
 0002:8032EC70       SpaceCocoon::updateActorMtx((void))
 0002:8032ED00       SpaceCocoon::updateDrawPoints((void))
 0002:8032EFBC       @unnamed@SpaceCocoon_cpp@::tryTouchPointer((LiveActor *,long))
 0002:8032F018       SpaceCocoon::tryTouch((void))
 0002:8032F12C       SpaceCocoon::tryRelease((void))
 0002:8032F340       SpaceCocoon::tryAttackMap((void))
 0002:8032F4F0       SpaceCocoon::endBind((JGeometry::TVec3<f> const &,bool))
 0002:8032F624       SpaceCocoon::endCommandStream((void))
 0002:8032F678       SpaceCocoon::draw(const(void))
 0002:8032F81C       @unnamed@SpaceCocoon_cpp@::drawPoints((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float,float,float,Color8,Color8,float,float,float))
 0002:8032F9F8       SpaceCocoon::drawPlane(const(float,float,float,float,Color8,Color8,float,float))
 0002:8032FC28       SpaceCocoon::initDraw(const(void))
 0002:8032FEAC       __sinit__SpaceCocoon_cpp
 0002:803300B4       SphereAccelSensorController::SphereAccelSensorController((void))
 0002:8033015C       SphereAccelSensorController::getPadAcceleration(const(JGeometry::TVec3<f> *))
 0002:80330180       SphereAccelSensorController::testBrake(const(void))
 0002:803301E8       SphereAccelSensorController::calcJumpPower(const(void))
 0002:80330228       SphereAccelSensorController::testBrake(const(void))
 0002:80330230       SphereAccelSensorController::clacXY((float *,float *))
 0002:8033051C       SphereController::calcMoveVector((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80330544       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setRotate((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8033068C       SpherePadController::clacXY((float *,float *))
 0002:803306D8       SpherePadController::calcDirSphereMove((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,ulong))
 0002:803309A4       @unnamed@SurfRay_cpp@::calcWaterShadowPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80330A68       SurfRay::SurfRay((char const *,long))
 0002:80330B90       SurfRay::init((JMapInfoIter const &))
 0002:80330E50       SurfRay::exeWaitPlayer((void))
 0002:80330F44       SurfRay::exeRideAccel((void))
 0002:80330FC4       SurfRay::exeRideFreeTwist((void))
 0002:8033102C       SurfRay::exeRideFree((void))
 0002:80331110       SurfRay::exeRideJump((void))
 0002:803311B4       SurfRay::exeRideJumpHigh((void))
 0002:80331258       SurfRay::exeRideFall((void))
 0002:80331308       SurfRay::exeRideLand((void))
 0002:80331398       SurfRay::exeTutorial((void))
 0002:80331610       def_80331438
 0002:80331628       SurfRay::exeWipeOut((void))
 0002:803316B8       SurfRay::exeWipeIn((void))
 0002:8033170C       SurfRay::exeReady((void))
 0002:803317F8       SurfRay::control((void))
 0002:80331880       SurfRay::calcAndSetBaseMtx((void))
 0002:803319B4       SurfRay::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80331C9C       SurfRay::resetAllInfo((void))
 0002:80331D98       SurfRay::updateRideAccel((void))
 0002:80331E14       SurfRay::updateRideFree((void))
 0002:80331E90       SurfRay::updateRide((void))
 0002:80331F28       SurfRay::updateInfo((void))
 0002:803320A4       SurfRay::updateToMap((void))
 0002:80332230       SurfRay::updateToWater((void))
 0002:80332590       SurfRay::updateAccel((void))
 0002:803327C4       SurfRay::updateRotate((void))
 0002:80332B44       SurfRay::updateSound((void))
 0002:80332DA4       SurfRay::updateRiderMtx((void))
 0002:80332E7C       SurfRay::tryInWater((void))
 0002:803330D4       SurfRay::tryJumpOrFall((void))
 0002:80333284       SurfRay::isTwistStart(const(void))
 0002:803332DC       SurfRay::isRotateStart(const(void))
 0002:803335F8       SurfRayTutorial::SurfRayTutorial((LiveActor *,TalkMessageCtrl *,JMapInfoIter const &))
 0002:803336B0       SurfRayTutorial::update((void))
 0002:803336F0       SurfRayTutorial::exeTutorialAllStart((void))
 0002:80333780       SurfRayTutorial::exeTutorialStraightStart((void))
 0002:803337F8       SurfRayTutorial::exeTutorialTurnRightFailure((void))
 0002:80333874       SurfRayTutorial::exeTutorialTurnLeftUpkeep((void))
 0002:8033398C       SurfRayTutorial::exeTutorialStraightSuccess((void))
 0002:803339F8       SurfRayTutorial::exeTutorialTurnLeftStart((void))
 0002:80333C04       SurfRayTutorial::exeTutorialTurnLeftSuccess((void))
 0002:80333C70       SurfRayTutorial::exeTutorialTurnRightStart((void))
 0002:80333D64       SurfRayTutorial::exeTutorialTurnRightUpkeep((void))
 0002:80333E7C       SurfRayTutorial::exeTutorialTurnRightSuccess((void))
 0002:80333EE8       SurfRayTutorial::exeTutorialAllEnd((void))
 0002:80333F78       SurfRayTutorial::isSuccessStraight(const(void))
 0002:80333FB0       SurfRayTutorial::isSuccessTurnRight(const(void))
 0002:80334050       SurfRayTutorial::isFailureTwistLeftMore(const(void))
 0002:80334068       SurfRayTutorial::isFailureTwistRightMore(const(void))
 0002:80334080       SurfRayTutorial::isFailureStand(const(void))
 0002:80334098       SurfRayTutorial::omitTutorial(const(void))
 0002:803340E4       SurfRayTutorial::nextTutorial((void))
 0002:803342FC       SurfRayTutorial::prevTutorial((void))
 0002:803343AC       SurfRayTutorial::startTimerSound((long,long))
 0002:80334664       SwingRope::SwingRope((char const *))
 0002:80334718       SwingRope::init((JMapInfoIter const &))
 0002:80334854       SwingRope::draw(const(void))
 0002:803348E4       SwingRope::exeStop((void))
 0002:80334960       SwingRope::exeFree((void))
 0002:80334ACC       SwingRope::exeBindSlideDownStart((void))
 0002:80334B44       SwingRope::exeBindStretch((void))
 0002:80334BC0       SwingRope::initPoints((void))
 0002:80334CE4       SwingRope::updateHitSensor((HitSensor *))
 0002:80334DB0       SwingRope::attackSensor((HitSensor *,HitSensor *))
 0002:80334DCC       SwingRope::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8033508C       SwingRope::calcPointNo(const(float))
 0002:803350E8       SwingRope::calcFriction(const(long))
 0002:80335198       SwingRope::addPointGravity((void))
 0002:80335210       SwingRope::restrictPointToTail((long,JGeometry::TVec3<f> const *,float))
 0002:803352EC       SwingRope::restrictPointToHead((long,JGeometry::TVec3<f> const &,float))
 0002:8033539C       SwingRope::isAllPointsStop(const(void))
 0002:8033541C       SwingRope::isStretched(const(void))
 0002:80335470       SwingRope::tryJump((void))
 0002:80335710       SwingRope::updateHangPoint((void))
 0002:8033597C       SwingRope::updateRideMtx((void))
 0002:803359E4       SwingRope::updateFootPos((void))
 0002:80335B20       SwingRope::updateStretch((void))
 0002:80335B8C       SwingRope::updateLoose((void))
 0002:80335BE4       SwingRope::updateLooseUpperPoints((void))
 0002:80335D18       SwingRope::updateSlideDown((void))
 0002:80335E40       SwingRope::updateStretchHangUpperPoints((void))
 0002:8033605C       SwingRope::updateHangLowerPoints((void))
 0002:803361DC       SwingRope::updateHangLowerPointPos((long))
 0002:80336304       @unnamed@SwingRope_cpp@::drawLine((SwingRope const *,ulong,ulong,float,float,float,float))
 0002:803364DC       @unnamed@SwingRope_cpp@::drawLineAtHanging((SwingRope const *,ulong,ulong,float,float,float,float,float,float))
 0002:803366B4       SwingRope::drawStop(const(void))
 0002:8033692C       SwingRope::drawFree(const(void))
 0002:803369B0       SwingRope::drawBind(const(void))
 0002:80336A9C       SwingRopeGroup::SwingRopeGroup((char const *))
 0002:80336B6C       TrapezeRopeDrawInit::initDraw(const(void))
 0002:80336D60       __sinit__SwingRope_cpp
 0002:80336EC8       NrvSwingRope::SwingRopeNrvBindSlideDown::execute(const(Spine *))
 0002:80336F20       @unnamed@GameSequenceProgress_cpp@::GameSequenceProgressBooting::execute(const(Spine *))
 0002:803370C4       SwingRopePoint::SwingRopePoint((JGeometry::TVec3<f> const &))
 0002:80337144       SwingRopePoint::restrict((JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const *))
 0002:803372D0       SwingRopePoint::strain((JGeometry::TVec3<f> const &,float))
 0002:80337414       SwingRopePoint::updatePos((float))
 0002:80337460       SwingRopePoint::updateAxis((JGeometry::TVec3<f> const &))
 0002:80337524       SwingRopePoint::updatePosAndAxis((JGeometry::TVec3<f> const &,float))
 0002:8033757C       SwingRopePoint::setInfo((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803376B8       SwingRopePoint::setPosAndAxis((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80337720       SwingRopePoint::setAndUpdatePosAndAxis((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80337798       Tamakoro::Tamakoro((char const *))
 0002:80337924       Tamakoro::init((JMapInfoIter const &))
 0002:80337AB8       Tamakoro::initSensor((void))
 0002:80337C5C       Tamakoro::ringMtxCallBack((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JointControllerInfo const &))
 0002:80337D00       Tamakoro::control((void))
 0002:80337DAC       Tamakoro::calcAndSetBaseMtx((void))
 0002:80337DE4       Tamakoro::updateBindActorMatrix((void))
 0002:80337F00       Tamakoro::updateRingUpVec((void))
 0002:80337FC8       Tamakoro::attackSensor((HitSensor *,HitSensor *))
 0002:80338210       Tamakoro::receiveMsgEnemyAttack((ulong,HitSensor *,HitSensor *))
 0002:803382A8       Tamakoro::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:80338458       Tamakoro::requestBind((HitSensor *))
 0002:803386DC       Tamakoro::requestEndBind((void))
 0002:80338820       Tamakoro::requestTutorialEnd((void))
 0002:803388BC       Tamakoro::tryFall((void))
 0002:803388F8       Tamakoro::tryJump((void))
 0002:80338968       Tamakoro::tryBumpWall((void))
 0002:80338A20       Tamakoro::tryLand((void))
 0002:80338B40       Tamakoro::reactionCollision((void))
 0002:80338CC4       Tamakoro::exeBindStart((void))
 0002:80338E68       Tamakoro::exeBindStartLand((void))
 0002:80339080       Tamakoro::exeTutorial((void))
 0002:803391AC       Tamakoro::exeWait((void))
 0002:80339294       Tamakoro::exeFall((void))
 0002:80339378       Tamakoro::exeJump((void))
 0002:803394CC       Tamakoro::exeBumpWall((void))
 0002:803395C4       Tamakoro::exeLand((void))
 0002:803396D4       Tamakoro::exeJumpHole((void))
 0002:80339768       Tamakoro::exeJumpHoleSetUp((void))
 0002:803397C8       Tamakoro::exeJumpHoleLaunch((void))
 0002:80339860       Tamakoro::exeDashRail((void))
 0002:8033991C       Tamakoro::exeDashRailEnd((void))
 0002:80339A48       Tamakoro::exeRideRail((void))
 0002:80339AD0       Tamakoro::exeRideRailFastStart((void))
 0002:80339B44       Tamakoro::exeRideRailFast((void))
 0002:80339BE0       Tamakoro::exeRideRailFastEnd((void))
 0002:80339C4C       Tamakoro::exeBindEnd((void))
 0002:80339D54       Tamakoro::addVelocityOperate((void))
 0002:80339DDC       Tamakoro::updateRideRail((void))
 0002:80339E6C       Tamakoro::updateMoment((void))
 0002:80339F28       Tamakoro::updateAirTime((void))
 0002:80339F74       Tamakoro::updateMarioPose((float))
 0002:8033A200       Tamakoro::updateMarioOffset((void))
 0002:8033A25C       Tamakoro::updateMoveBckBlend((float))
 0002:8033A3B8       Tamakoro::updateSquatBckBlend((float))
 0002:8033A648       Tamakoro::isGroundMomentBall(const(void))
 0002:8033A740       Tamakoro::isNeedTutorial(const(void))
 0002:8033A75C       Tamakoro::startRotateLevelSound((void))
 0002:8033A810       MR::createTamakoroWithTutorial((char const *))
 0002:8033AA8C       NrvTamakoro::TamakoroNrvJumpHoleLaunch::executeOnEnd(const(Spine *))
 0002:8033AB34       NrvTamakoro::TamakoroNrvStandByTutorial::execute(const(Spine *))
 0002:8033AD90       TamakoroTutorial::TamakoroTutorial((char const *))
 0002:8033ADF4       TamakoroTutorial::init((JMapInfoIter const &))
 0002:8033B058       TamakoroTutorial::requestStart((void))
 0002:8033B09C       TamakoroTutorial::control((void))
 0002:8033B0D8       TamakoroTutorial::exeFirst((void))
 0002:8033B22C       TamakoroTutorial::exeDenyTalk((void))
 0002:8033B278       TamakoroTutorial::exeFirstForceTalk((void))
 0002:8033B2D0       TamakoroTutorial::exeWaitRideTalk((void))
 0002:8033B344       TamakoroTutorial::exeWaitRide((void))
 0002:8033B388       TamakoroTutorial::exeWaitRaiseTalk((void))
 0002:8033B424       TamakoroTutorial::exeWaitRaiseStable((void))
 0002:8033B4F0       TamakoroTutorial::exeRaiseOk((void))
 0002:8033B54C       TamakoroTutorial::exeRaiseOkTalk((void))
 0002:8033B5BC       TamakoroTutorial::exeFinalTalk((void))
 0002:8033B658       TamakoroTutorial::exeWait((void))
 0002:8033B6E0       TamakoroTutorial::exeTrample((void))
 0002:8033B7D4       TamakoroTutorial::exeRecover((void))
 0002:8033B878       TamakoroTutorial::attackSensor((HitSensor *,HitSensor *))
 0002:8033B8F8       TamakoroTutorial::receiveMsgPlayerAttack((ulong,HitSensor *,HitSensor *))
 0002:8033BA50       TamakoroTutorial::updateHitSensor((HitSensor *))
 0002:8033BB3C       TamakoroTutorial::startTimerSound((long,long))
 0002:8033BC04       __sinit__TamakoroTutorial_cpp
 0002:8033BE38       Trapeze::Trapeze((char const *))
 0002:8033BEE4       Trapeze::init((JMapInfoIter const &))
 0002:8033C114       Trapeze::draw(const(void))
 0002:8033C328       Trapeze::exeStop((void))
 0002:8033C378       Trapeze::exeFree((void))
 0002:8033C420       Trapeze::exeFreeInvalid((void))
 0002:8033C4C0       Trapeze::exeSwingWait((void))
 0002:8033C548       Trapeze::exeSwingSlideDownStart((void))
 0002:8033C5B8       Trapeze::exeSwingSlideDown((void))
 0002:8033C604       Trapeze::exeSwingFrontStart((void))
 0002:8033C784       Trapeze::exeSwingFrontEnd((void))
 0002:8033C898       Trapeze::exeSwingBackStart((void))
 0002:8033CA18       Trapeze::exeSwingBackEnd((void))
 0002:8033CB2C       Trapeze::updateHitSensor((HitSensor *))
 0002:8033CC30       Trapeze::attackSensor((HitSensor *,HitSensor *))
 0002:8033CC68       Trapeze::receiveOtherMsg((ulong,HitSensor *,HitSensor *))
 0002:8033D0A8       Trapeze::tryJump((void))
 0002:8033D308       Trapeze::updateStick((JGeometry::TVec3<f> const &,float))
 0002:8033D394       Trapeze::updateStickMtx((void))
 0002:8033D3E4       Trapeze::updateHangPoint((void))
 0002:8033D674       Trapeze::updateBind((void))
 0002:8033D734       Trapeze::updateSwing((void))
 0002:8033D7CC       Trapeze::updateSlideDown((void))
 0002:8033D898       Trapeze::isStartSwingFront(const(void))
 0002:8033D8C0       Trapeze::isStartSwingBack(const(void))
 0002:8033D8E8       Trapeze::drawRope(const(JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:8033DF20       TrapezeRopeDrawInit::TrapezeRopeDrawInit((char const *))
 0002:8033E344       __sinit__Trapeze_cpp
 0002:8033E418       GameScene::GameScene((void))
 0002:8033E480       GameScene::~GameScene((void))
 0002:8033E4F4       GameScene::init((void))
 0002:8033E6EC       GameScene::start((void))
 0002:8033E750       GameScene::update((void))
 0002:8033E7E0       GameScene::draw(const(void))
 0002:8033E844       GameScene::calcAnim((void))
 0002:8033E938       GameScene::requestEndMissDemo((void))
 0002:8033EA0C       GameScene::exeScenarioOpeningCamera((void))
 0002:8033EABC       GameScene::exeCometRetryAfterMiss((void))
 0002:8033EB40       GameScene::exeSaveAfterGameOver((void))
 0002:8033EBA4       GameScene::exePlayMovie((void))
 0002:8033EC00       GameScene::exeGalaxyMap((void))
 0002:8033EC68       GameScene::initSequences((void))
 0002:8033ED60       GameScene::initEffect((void))
 0002:8033EDF8       GameScene::drawMirror(const(void))
 0002:8033EE8C       GameScene::draw3D(const(void))
 0002:8033F040       GameScene::draw2D(const(void))
 0002:8033F120       GameScene::drawOdhCapture(const(void))
 0002:8033F168       GameScene::startStagePlayFirst((void))
 0002:8033F2A0       GameScene::startStagePlayRetry((void))
 0002:8033F384       GameScene::isPermitToPauseMenu(const(void))
 0002:8033F42C       GameScene::isDrawMirror(const(void))
 0002:8033F4C0       GameScene::stageClear((void))
 0002:8033F6A0       NrvGameScene::GameSceneStaffRoll::execute(const(Spine *))
 0002:8033F76C       NrvGameScene::GameScenePauseMenu::execute(const(Spine *))
 0002:8033F8A0       @unnamed@GameSceneFunction_cpp@::getGameScene((void))
 0002:8033FA60       MR::isScenarioDecided((void))
 0002:8033FA78       GameSceneFunction::activateDraw3D((void))
 0002:8033FAA0       GameSceneFunction::deactivateDraw3D((void))
 0002:8033FAC8       GameScenePauseControl::GameScenePauseControl((GameScene *))
 0002:8033FB64       GameScenePauseControl::exeNormal((void))
 0002:8033FBC0       GameScenePauseControl::tryStartPauseMenu((void))
 0002:8033FCE4       GameSceneScenarioOpeningCameraState::GameSceneScenarioOpeningCameraState((void))
 0002:8033FD6C       NerveExecutor::updateNerve((void))
 0002:8033FD78       GameSceneScenarioOpeningCameraState::start((void))
 0002:8033FDFC       GameSceneScenarioOpeningCameraState::end((void))
 0002:8033FE5C       GameSceneScenarioOpeningCameraState::exePlay((void))
 0002:8033FF4C       GameSceneScenarioOpeningCameraState::trySkipTrigger(const(void))
 0002:80340044       IntermissionScene::IntermissionScene((void))
 0002:80340094       IntermissionScene::update((void))
 0002:803400A4       IntermissionScene::draw(const(void))
 0002:80340220       IntermissionScene::setCurrentSceneControllerState((char const *,...))
 0002:80340388       LogoScene::~LogoScene((void))
 0002:80340454       LogoScene::update((void))
 0002:80340700       PowerStarList::exeCaptureWait((void))
 0002:80340A5C       MultiSceneEffectKeeper::MultiSceneEffectKeeper((char const *,ModelManager *,int,char const *))
 0002:80340AE8       MultiSceneEffectKeeper::init((MultiSceneActor const *,EffectSystem const *))
 0002:80340B08       MultiSceneEffectKeeper::add((char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,char const *))
 0002:80340BA4       MultiSceneEffectKeeper::add((char const *,float *[4],char const *))
 0002:80340C30       MultiSceneEffectKeeper::create((char const *,EffectSystem *))
 0002:80340CD8       MultiSceneEffectKeeper::forceDeleteAll((EffectSystem *))
 0002:80340DD0       MultiSceneEffectKeeper::find(const(char const *))
 0002:80340EB0       MultiSceneEffectKeeper::registerEmitter((MultiEmitter *,char const *))
 0002:80340F10       MultiSceneActor::MultiSceneActor((char const *,char const *,bool))
 0002:80340FD0       MultiSceneActor::movement((void))
 0002:8034103C       MultiSceneActor::calcAnim((void))
 0002:803410C8       MultiSceneActor::calcViewAndEntry((void))
 0002:8034110C       MultiSceneActor::appear((void))
 0002:80341124       MultiSceneActor::kill((void))
 0002:80341168       MultiSceneActor::initEffect((EffectSystem *,int,char const *))
 0002:803411E4       MultiSceneActor::isNerve(const(Nerve const *))
 0002:80341220       MultiSceneActor::initNerve((Nerve const *))
 0002:80341274       MultiScene::startBck((MultiSceneActor *,char const *))
 0002:80341298       MultiScene::setBvaFrameAndStop((MultiSceneActor *,float))
 0002:80341350       MultiScene::isStep((MultiSceneActor const *,long))
 0002:80341368       MultiScene::isFirstStep((MultiSceneActor const *))
 0002:8034137C       MultiScene::isGreaterStep((MultiSceneActor const *,long))
 0002:8034139C       MultiScene::isLessStep((MultiSceneActor const *,long))
 0002:803413BC       MultiScene::isLessEqualStep((MultiSceneActor const *,long))
 0002:803413D8       MultiScene::setNerveAtStep((MultiSceneActor *,Nerve const *,long))
 0002:803413F4       MultiScene::setNerveAtBckStopped((MultiSceneActor *,Nerve const *))
 0002:80341444       MultiScene::calcNerveRate((MultiSceneActor const *,long))
 0002:803414BC       MultiScene::calcNerveRate((MultiSceneActor const *,long,long))
 0002:80341538       MultiScene::calcNerveEaseOutRate((MultiSceneActor const *,long))
 0002:80341568       MultiScene::calcNerveValue((MultiSceneActor const *,long,float,float))
 0002:803415C0       MultiScene::emitEffect((MultiSceneActor const *,char const *))
 0002:803415D0       MultiScene::deleteEffectAll((MultiSceneActor const *))
 0002:803415D8       MultiScene::forceDeleteEffectAll((MultiSceneActor const *))
 0002:803415E8       MultiScene::getJointMtx((MultiSceneActor const *,char const *))
 0002:80341624       PlayTimerScene::PlayTimerScene((void))
 0002:803416B0       PlayTimerScene::init((void))
 0002:80341768       PlayTimerScene::start((void))
 0002:803417B4       PlayTimerScene::update((void))
 0002:803418D8       PlayTimerScene::draw(const(void))
 0002:80341A44       PlayTimerScene::isActive(const(void))
 0002:80341A80       PlayTimerScene::isEndGlobalTimer(const(void))
 0002:80341AC4       PlayTimerScene::stop((void))
 0002:80341B18       PlayTimerScene::startTimeUp((void))
 0002:80341B20       PlayTimerScene::exeTimeUp((void))
 0002:80341BB0       PlayTimerScene::exeFadeoutAfterTimeUp((void))
 0002:80341D04       NrvGalaxySelectBackButton::GalaxySelectBackButtonNrvAppear::execute(const(Spine *))
 0002:80341D44       @unnamed@PlacementInfoOrdered_cpp@::getCreator((PlacementInfoOrdered::Identifier const &))
 0002:80341D60       PlacementInfoOrdered::PlacementInfoOrdered((int))
 0002:80341E20       PlacementInfoOrdered::sort((void))
 0002:80341FB8       PlacementInfoOrdered::requestFileLoad((void))
 0002:80342060       PlacementInfoOrdered::initPlacement((void))
 0002:8034214C       PlacementInfoOrdered::insert((PlacementInfoOrdered::Identifier const &,JMapInfoIter const &))
 0002:803421BC       PlacementInfoOrdered::getUsedArrayNum(const(void))
 0002:803421FC       PlacementInfoOrdered::find(const(PlacementInfoOrdered::Identifier const &))
 0002:803422A4       PlacementInfoOrdered::createSameIdSet((PlacementInfoOrdered::Identifier const &))
 0002:80342304       PlacementInfoOrdered::createIndex((JMapInfoIter const &))
 0002:80342330       PlacementInfoOrdered::Index::Index((void))
 0002:803423D0       PlacementInfoOrdered::SameIdSet::SameIdSet((void))
 0002:8034246C       PlacementInfoOrdered::SameIdSet::~SameIdSet((void))
 0002:803424C8       PlacementInfoOrdered::attach((JMapInfo const *,PlacementInfoOrdered *))
 0002:803425AC       PlacementStateChecker::PlacementStateChecker((char const *))
 0002:803425F8       PlacementStateChecker::clearCurrentPlacementZoneId((void))
 0002:8034260C       MR::getPlacementStateChecker((void))
 0002:8034268C       @unnamed@ScenarioSelectScene_cpp@::createDrawBuffer((void))
 0002:803426E0       @unnamed@ScenarioSelectScene_cpp@::tryResumeInitializeThread((void))
 0002:80342730       ScenarioSelectScene::ScenarioSelectScene((void))
 0002:80342798       ScenarioSelectScene::init((void))
 0002:80342A84       ScenarioSelectScene::start((void))
 0002:80342A98       ScenarioSelectScene::startBackground((void))
 0002:80342AD8       ScenarioSelectScene::update((void))
 0002:80342B74       ScenarioSelectScene::calcAnim((void))
 0002:80342C10       ScenarioSelectScene::calcViewAndEntry((void))
 0002:80342CA4       ScenarioSelectScene::draw(const(void))
 0002:80342D9C       ScenarioSelectScene::isActive(const(void))
 0002:80342DE8       ScenarioSelectScene::isExecForeground(const(void))
 0002:80342E4C       ScenarioSelectScene::isScenarioSelecting(const(void))
 0002:80342EA8       ScenarioSelectScene::validateScenarioSelect((void))
 0002:80342ED8       ScenarioSelectScene::requestReset((bool))
 0002:80342FC4       ScenarioSelectScene::isResetEnd(const(void))
 0002:80342FD4       ScenarioSelectScene::setupCameraMtx(const(void))
 0002:80343020       ScenarioSelectScene::trySetCurrentScenarioNo(const(void))
 0002:803430C0       ScenarioSelectScene::suspend((void))
 0002:80343150       ScenarioSelectScene::tryStartScreenToFrame((void))
 0002:8034319C       ScenarioSelectScene::exeDeactive((void))
 0002:803431F4       ScenarioSelectScene::exeStartScenarioSelect((void))
 0002:803432AC       ScenarioSelectScene::exeWaitScenarioSelect((void))
 0002:8034333C       ScenarioSelectScene::exeWaitResumeInitializeThread((void))
 0002:80343380       ScenarioSelectScene::exeWaitInitializeEnd((void))
 0002:803433FC       ScenarioSelectScene::exeWaitDisappearLayout((void))
 0002:80343464       ScenarioSelectScene::exeWaitResumeInitializeThreadIfRequestedReset((void))
 0002:803434BC       ScenarioSelectScene::exeWaitResumeInitializeThreadIfCanceledSelect((void))
 0002:80343760       Scene::~Scene((void))
 0002:80343814       Scene::initNameObjListExecutor((void))
 0002:80343874       Scene::initSceneObjHolder((void))
 0002:803438B4       ScenePlayingResult::ScenePlayingResult((void))
 0002:80343904       SceneDataInitializer::startStageFileLoad((void))
 0002:8034398C       SceneDataInitializer::startStageFileLoadAfterScenarioSelected((void))
 0002:80343A00       SceneDataInitializer::waitDoneStageFileLoad((void))
 0002:80343AB4       SceneFunction::movementStopSceneController((void))
 0002:80343AEC       SceneFunction::executeMovementList((void))
 0002:80343CC8       SceneFunction::executeMovementListOnPlayingMovie((void))
 0002:80343D2C       SceneFunction::executeCalcAnimList((void))
 0002:80343DC4       SceneFunction::executeCalcAnimListOnPlayingMovie((void))
 0002:80343DCC       SceneFunction::executeCalcViewAndEntryList((void))
 0002:80343E0C       SceneFunction::executeCalcViewAndEntryList2D((void))
 0002:80343E44       SceneFunction::executeDrawBufferListNormalOpaBeforeVolumeShadow((void))
 0002:80343F24       SceneFunction::executeDrawBufferListNormalOpaBeforeSilhouette((void))
 0002:80343F50       SceneFunction::executeDrawBufferListNormalOpa((void))
 0002:80343FE8       SceneFunction::executeDrawBufferListNormalXlu((void))
 0002:80344094       SceneFunction::executeDrawListOpa((void))
 0002:8034419C       SceneFunction::executeDrawListXlu((void))
 0002:80344224       SceneFunction::executeDrawAlphaShadow((void))
 0002:8034424C       SceneFunction::executeDrawAfterIndirect((void))
 0002:80344350       SceneFunction::executeDrawImageEffect((void))
 0002:803443CC       SceneFunction::executeDrawList2DNormal((void))
 0002:80344458       SceneFunction::executeDrawList2DMovie((void))
 0002:80344488       @unnamed@SceneFactory_cpp@::createScene<9GameScene>(Scene *(void))
 0002:803444B8       @unnamed@SceneFactory_cpp@::createScene<17IntermissionScene>(Scene *(void))
 0002:80344518       MR::createScene((char const *))
 0002:803445A4       SceneFunction::startStageFileLoad((void))
 0002:803445D8       SceneFunction::startActorPlacement((void))
 0002:80344688       SceneFunction::initAfterScenarioSelected((void))
 0002:803446C4       SceneFunction::initForNameObj((void))
 0002:803446F8       SceneFunction::initForLiveActor((void))
 0002:80344794       SceneFunction::initEffectSystem((ulong,ulong))
 0002:803447EC       SceneFunction::allocateDrawBufferActorList((void))
 0002:8034481C       CategoryList::drawXlu((MR::DrawBufferType))
 0002:803448D0       CategoryList::entryDrawBufferMirror((void))
 0002:803449D4       nullsub_23
 0002:803449D8       SceneObjHolder::SceneObjHolder((void))
 0002:803449F8       SceneObjHolder::create((int))
 0002:80344A54       SceneObjHolder::getObj(const(int))
 0002:80344A60       SceneObjHolder::isExist(const(int))
 0002:80344A74       MR::createSceneObj((int))
 0002:80344AA8       MR::getSceneObjHolder((void))
 0002:80344AB4       MR::isExistSceneObj((int))
 0002:80344B14       SceneObjHolder::newEachObj((int))
 0002:80345780       def_80344B48
 0002:80345824       @unnamed@ScenePlayingResult_cpp@::requestOneUpIfNeed((int,int,int))
 0002:80345858       ScenePlayingResult::incCoin((int))
 0002:803458B0       ScenePlayingResult::getCoinNum(const(void))
 0002:803458C0       ScenePlayingResult::incPurpleCoin((void))
 0002:803458DC       ScenePlayingResult::incStarPiece((int))
 0002:80345968       GameSequenceFunction::resetStageResultSequenceParam((void))
 0002:80345A14       SceneNameObjListExecutor::initMovementList((void))
 0002:80345A88       SceneNameObjListExecutor::initCalcAnimList((void))
 0002:80345AFC       SceneNameObjListExecutor::initCalcViewAndEntryList((void))
 0002:80345B4C       SceneNameObjListExecutor::initDrawList((void))
 0002:80345C18       @unnamed@SceneNameObjMovementController_cpp@::executeStopCategoriesDemoCommon((void))
 0002:80345D18       StopSceneStateControl::StopSceneStateControl((void))
 0002:80345D74       StopSceneStateControl::requestStopSceneFor((MR::MovementControlType,NameObj const *))
 0002:80345E50       StopSceneStateControl::requestStopSceneOverwrite((NameObj const *))
 0002:80345F2C       StopSceneStateControl::requestPlaySceneFor((MR::MovementControlType,NameObj const *))
 0002:80345FE4       StopSceneStateControl::executeStopCategories((MR::MovementControlType))
 0002:803460B4       SceneNameObjMovementController::SceneNameObjMovementController((void))
 0002:80346134       SceneNameObjMovementController::movement((void))
 0002:8034617C       MR::getSceneNameObjMovementController((void))
 0002:803461A4       MR::notifyRequestNameObjMovementOnOff((void))
 0002:803462D8       JMapInfo::findElement<l>(JMapInfoIter const(char const *,long,int))
 0002:80346378       JMapInfo::end(const(void))
 0002:803463A4       JMapInfo::findElement<PCc>(JMapInfoIter const(char const *,char const *,int))
 0002:80346450       JMapInfoIter::__eq(const(JMapInfoIter const &))
 0002:8034649C       @unnamed@StageDataHolder_cpp@::isPrioPlacementObjInfo((char const *))
 0002:8034652C       @unnamed@StageDataHolder_cpp@::calcPlacementInfoNum((int *,int *,MR::AssignableArray<8JMapInfo> const &))
 0002:803465F4       @unnamed@StageDataHolder_cpp@::attachJmpInfoToPlacementInfoOrdered((PlacementInfoOrdered *,PlacementInfoOrdered *,PlacementInfoOrdered *,MR::AssignableArray<8JMapInfo> const &))
 0002:8034668C       StageDataHolder::StageDataHolder((char const *,int,bool))
 0002:80346778       StageDataHolder::init((JMapInfoIter const &))
 0002:80346808       StageDataHolder::initAfterScenarioSelected((void))
 0002:803469A0       StageDataHolder::requestFileLoadCommon((void))
 0002:803469E4       StageDataHolder::requestFileLoadScenario((void))
 0002:80346A30       StageDataHolder::initPlacement((void))
 0002:80346A94       StageDataHolder::getCommonPathPointInfo(const(JMapInfo const **,int))
 0002:80346B08       StageDataHolder::getCommonPathPointInfoFromRailDataIndex(const(JMapInfo const **,int))
 0002:80346B94       StageDataHolder::getCommonPathInfoElementNum(const(void))
 0002:80346BD8       StageDataHolder::getStartPosNum(const(void))
 0002:80346C7C       StageDataHolder::getCurrentStartZoneId(const(void))
 0002:80346CC0       StageDataHolder::getCurrentStartCameraId(const(void))
 0002:80346D0C       StageDataHolder::getStartCameraIdInfoFromStartDataIndex(const(JMapIdInfo *,int))
 0002:80346D6C       StageDataHolder::getGeneralPosNum(const(void))
 0002:80346E18       StageDataHolder::getGeneralPosInfoFromDataIndex(const(int))
 0002:80346F1C       StageDataHolder::getChildObjNum(const(JMapInfoIter const &))
 0002:80346FE8       StageDataHolder::getChildObjInfoFromDataIndex(const(JMapInfoIter const &,int))
 0002:803470DC       StageDataHolder::findPlacedStageDataHolder(const(JMapInfoIter const &))
 0002:8034718C       StageDataHolder::getStageDataHolderFromZoneId(const(int))
 0002:803471D4       StageDataHolder::getStageDataHolderFromZoneId(const(int))
 0002:803471D8       StageDataHolder::isPlacedZone(const(int))
 0002:80347228       StageDataHolder::getJapaneseObjectName(const(char const *))
 0002:803472C0       StageDataHolder::getStageArchiveResource((char const *))
 0002:803472E0       StageDataHolder::getStageArchiveResourceSize((void *))
 0002:803472F4       StageDataHolder::initPlacementMario((void))
 0002:80347378       StageDataHolder::makeMarioJMapInfoIter(const(JMapIdInfo const &))
 0002:80347450       StageDataHolder::makeCurrentMarioJMapInfoIter(const(void))
 0002:80347524       StageDataHolder::initJmpInfo((MR::AssignableArray<8JMapInfo> *,char const *))
 0002:803475CC       StageDataHolder::initAllLayerJmpInfo((MR::AssignableArray<8JMapInfo> *,char const *))
 0002:80347750       StageDataHolder::initAllLayerJmpInfo((MR::AssignableArray<8JMapInfo> *,char const *,char const *))
 0002:803477CC       StageDataHolder::initLayerJmpInfo((MR::AssignableArray<8JMapInfo> *,char const *,char const *,ulong))
 0002:803479AC       StageDataHolder::attachJmpInfoToArray((JMapInfo *,char const *))
 0002:80347AAC       StageDataHolder::initTableData((void))
 0002:80347B2C       StageDataHolder::initPlacementInfoOrderedCommon((void))
 0002:80347C78       StageDataHolder::initPlacementInfoOrderedScenario((void))
 0002:80347DB0       StageDataHolder::findJmpInfoFromArray(const(MR::AssignableArray<8JMapInfo> const *,char const *))
 0002:80347E2C       StageDataHolder::getStartJMapInfoIterFromStartDataIndex(const(int))
 0002:80347F30       StageDataHolder::calcDataAddress((void))
 0002:80347FA0       StageDataHolder::updateDataAddress((MR::AssignableArray<8JMapInfo> const *))
 0002:80348008       StageDataHolder::createLocalStageDataHolder((MR::AssignableArray<8JMapInfo> const &,bool))
 0002:80348148       StageDataHolder::calcPlacementMtx((JMapInfoIter const &))
 0002:803481F4       MR::getStageDataHolder((void))
 0002:80348284       StageDataHolder::~StageDataHolder((void))
 0002:80348340       StageFileLoader::StageFileLoader((char const *))
 0002:80348378       StageFileLoader::startLoadingStageFile((void))
 0002:803483DC       StageFileLoader::waitLoadedStageFile((void))
 0002:80348444       StageFileLoader::makeStageArchiveNameList((void))
 0002:803484F4       MR::makeCometMessageID((char *,ulong,char const *))
 0002:80348508       StageFileLoader::mountFilesInStageMapFile((char const *))
 0002:80348628       StopSceneDelayRequest::StopSceneDelayRequest((void))
 0002:80348690       StopSceneController::StopSceneController((void))
 0002:8034874C       StopSceneDelayRequest::movement((void))
 0002:80348770       StopSceneController::requestStopScene((long))
 0002:80348798       StopSceneController::requestStopSceneDelay((long,long))
 0002:803487DC       StopSceneController::movement((void))
 0002:803487F4       StopSceneController::isSceneStopped(const(void))
 0002:803488B8       THPGXRestore
 0002:803489D0       THPGXYuv2RgbSetup
 0002:80348EE4       IPCSetBufferLo
 0002:80348EEC       THPGXYuv2RgbDraw
 0002:803490C0       BackButton::BackButton((char const *,bool))
 0002:80349130       BackButton::appear((void))
 0002:8034918C       BackButton::isPointing(const(void))
 0002:803491F0       BackButton::init((JMapInfoIter const &))
 0002:80349270       BackButton::control((void))
 0002:80349308       BatteryInfo::BatteryInfo((LayoutActor *,char const *,int))
 0002:80349394       BatteryInfo::exeEnought((void))
 0002:8034943C       BatteryInfo::exeNoneAppear((void))
 0002:803494A4       BatteryInfo::exeLow((void))
 0002:80349518       BatteryInfo::exeLowHide((void))
 0002:80349668       BatteryInfo::exeCritical((void))
 0002:80349724       BatteryInfo::exeNone((void))
 0002:80349790       BatteryInfo::exeNoneHide((void))
 0002:803497F0       BatteryInfo::exeStartAnimAndSetNerveIfStopped((char const *,Nerve const *))
 0002:80349878       BatteryInfo::tryChangeNerveWithBatteryLeftAlreadyAppear((void))
 0002:80349934       ProloguePictureBook::ProloguePictureBook((void))
 0002:80349988       BatteryLayout::init((JMapInfoIter const &))
 0002:80349A28       BatteryLayout::appear((void))
 0002:80349A6C       PlayerMissLeft::control((void))
 0002:80349C9C       @unnamed@StageResultInformer_cpp@::StageResultInformerShowGalaxyComplete::execute(const(Spine *))
 0002:80349D18       BloomEffect::BloomEffect((char const *))
 0002:80349EFC       BloomEffect::preDraw(const(void))
 0002:80349FA8       BloomEffect::postDraw(const(void))
 0002:8034A364       BloomEffect::getIntensity1Default(const(void))
 0002:8034A36C       BloomEffect::getIntensity2Default(const(void))
 0002:8034A374       BloomEffect::isForEachModel(const(void))
 0002:8034A37C       BloomEffect::initDraw(const(void))
 0002:8034A5C8       BloomEffect::drawTexture(const(JUTTexture *,long,long,uchar,BloomEffect::BLOOM_TEX_DRAW_TYPE))
 0002:8034A85C       BloomEffect::blurTexture(const(JUTTexture *,float *[3][4],long,long,ulong,float,ulong,float const *))
 0002:8034A92C       BloomEffect::initBlurMtx(const(float *[3][4],ulong,float,float))
 0002:8034AB5C       BloomEffect::initBlur(const(JUTTexture *,ulong,float))
 0002:8034AD2C       BloomEffect::drawBlur(const(long,long,float *[3][4],ulong,ulong))
 0002:8034B030       BloomEffectSimple::BloomEffectSimple((void))
 0002:8034B110       BloomEffectSimple::draw(const(void))
 0002:8034B430       @unnamed@BloomEffectSimple_cpp@::TexSpec::set((JUTTexture *,long,long,_GXTexFmt))
 0002:8034B4A0       BombTimerLayout::BombTimerLayout((bool))
 0002:8034B518       BombTimerLayout::init((JMapInfoIter const &))
 0002:8034B570       BombTimerLayout::appear((void))
 0002:8034B5B0       BombTimerLayout::setTimeLimit((ulong))
 0002:8034B5B8       BombTimerLayout::suspend((void))
 0002:8034B5C4       BombTimerLayout::resume((void))
 0002:8034B5D0       BombTimerLayout::isReadyToTimeUp(const(void))
 0002:8034B5E8       BombTimerLayout::addFrame((void))
 0002:8034B60C       BombTimerLayout::update((void))
 0002:8034B674       BombTimerLayout::getRestTime(const(void))
 0002:8034B684       BombTimerLayout::updateTextBox((void))
 0002:8034B6A8       BombTimerLayout::exeAppear((void))
 0002:8034B718       BombTimerLayout::exeWait((void))
 0002:8034B78C       BombTimerLayout::exeDanger((void))
 0002:8034B7F0       ScenarioTitle::exeEnd((void))
 0002:8034B954       BrosButton::BrosButton((char const *))
 0002:8034B9A4       BrosButton::init((JMapInfoIter const &))
 0002:8034BA38       BrosButton::appear((bool))
 0002:8034BAAC       BrosButton::resume((void))
 0002:8034BAE8       BrosButton::exeSelect((void))
 0002:8034BB98       StarCounter::exeDisappear((void))
 0002:8034BBFC       GalaxyMapSelectButton::control((void))
 0002:8034BD3C       NrvStarCounter::StarCounterNrvAppear::execute(const(Spine *))
 0002:8034BD80       ButtonPaneController::ButtonPaneController((LayoutActor *,char const *,char const *,ulong,bool))
 0002:8034BE84       ButtonPaneController::update((void))
 0002:8034BEC4       ButtonPaneController::appear((void))
 0002:8034BF38       ButtonPaneController::disappear((void))
 0002:8034BF48       ButtonPaneController::trySelect((void))
 0002:8034C0A4       ButtonPaneController::invalidateDecide((void))
 0002:8034C0B0       ButtonPaneController::invalidateAppearance((void))
 0002:8034C0D4       ButtonPaneController::forceToWait((void))
 0002:8034C164       ButtonPaneController::onPointing((void))
 0002:8034C174       ButtonPaneController::decide((void))
 0002:8034C184       ButtonPaneController::isPointingPaneDirect(const(void))
 0002:8034C1A0       ButtonPaneController::startAnimAtFirstStep((char const *))
 0002:8034C200       ButtonPaneController::startPointingAnimAtFirstStep((char const *))
 0002:8034C254       ButtonPaneController::setNerveAtAnimStopped((Nerve const *))
 0002:8034C2AC       ButtonPaneController::isPointingPane(const(void))
 0002:8034C30C       ButtonPaneController::tryPointing((bool))
 0002:8034C3AC       ButtonPaneController::tryNotPointing((bool))
 0002:8034C438       ButtonPaneController::calcPointingAnimStartFrame(const(void))
 0002:8034C4FC       ButtonPaneController::exeHidden((void))
 0002:8034C53C       ButtonPaneController::exeAppear((void))
 0002:8034C58C       ButtonPaneController::exeWait((void))
 0002:8034C5E0       ButtonPaneController::exePointing((void))
 0002:8034C64C       ButtonPaneController::exeNotPointing((void))
 0002:8034C6B0       ButtonPaneController::exeDecided((void))
 0002:8034C724       ButtonPaneController::exeDecidedToDisappear((void))
 0002:8034C8E4       NrvButtonPaneController::ButtonPaneControllerNrvDisappear::execute(const(Spine *))
 0002:8034C960       CameraInfo::CameraInfo((char const *))
 0002:8034C9B0       CameraInfo::init((JMapInfoIter const &))
 0002:8034CA38       CameraInfo::control((void))
 0002:8034CA78       CameraInfo::draw(const(void))
 0002:8034CAC0       GalaxyNamePlate::control((void))
 0002:8034CACC       CameraInfo::exeAppear((void))
 0002:8034CB3C       CameraInfo::exeNormal((void))
 0002:8034CC34       CameraInfo::exeFirstPerson((void))
 0002:8034CCB4       CameraInfo::exeEnd((void))
 0002:8034CD18       CameraInfo::updateCameraNG((void))
 0002:8034CDB0       CameraInfo::hideCrossLineAll((void))
 0002:8034CE14       CameraInfo::tryAnimShortCut((void))
 0002:8034CE94       CameraInfo::tryShow((void))
 0002:8034CF7C       CameraInfo::tryHide((void))
 0002:8034D090       CameraInfo::tryChangeCameraStateNerve((void))
 0002:8034D270       CaptureScreenDirector::CaptureScreenDirector((void))
 0002:8034D318       CaptureScreenDirector::captureIfAllow((char const *))
 0002:8034D390       CaptureScreenDirector::capture((void))
 0002:8034D40C       CaptureScreenDirector::requestCaptureTiming((char const *))
 0002:8034D47C       CaptureScreenDirector::invalidateCaptureTiming((char const *))
 0002:8034D4D8       CaptureScreenDirector::getResTIMG(const(void))
 0002:8034D4E4       CaptureScreenDirector::getTexImage(const(void))
 0002:8034D4F0       CaptureScreenDirector::getUsingTiming(const(void))
 0002:8034D508       CaptureScreenDirector::getCurrentTiming(const(void))
 0002:8034D520       CaptureScreenDirector::findFromName(const(char const *))
 0002:8034D590       CaptureScreenActor::CaptureScreenActor((ulong,char const *))
 0002:8034D6B8       CenterScreenBlur::CenterScreenBlur((void))
 0002:8034D71C       CenterScreenBlur::init((JMapInfoIter const &))
 0002:8034D788       CenterScreenBlur::appear((void))
 0002:8034D7C8       CenterScreenBlur::draw(const(void))
 0002:8034D848       CenterScreenBlur::start((long,float,uchar,long,long))
 0002:8034D86C       CenterScreenBlur::exeFadeIn((void))
 0002:8034D8B0       CenterScreenBlur::exeKeep((void))
 0002:8034D91C       CenterScreenBlur::exeFadeOut((void))
 0002:8034DA58       CinemaFrame::CinemaFrame((bool))
 0002:8034DACC       GalaxyMapTitle::init((JMapInfoIter const &))
 0002:8034DB5C       CinemaFrame::tryBlankToFrame((void))
 0002:8034DC04       CinemaFrame::tryFrameToScreen((void))
 0002:8034DDD4       CinemaFrame::forceToBlank((void))
 0002:8034DED0       CinemaFrame::isStop(const(void))
 0002:8034DF44       CinemaFrame::exeScreen((void))
 0002:8034E100       NrvCinemaFrame::CinemaFrameNrvFrameToScreen::execute(const(Spine *))
 0002:8034E148       NrvCinemaFrame::CinemaFrameNrvScreenToFrame::execute(const(Spine *))
 0002:8034E22C       NrvCinemaFrame::CinemaFrameNrvBlank::execute(const(Spine *))
 0002:8034E2A4       CoinCounter::CoinCounter((char const *))
 0002:8034E30C       CoinCounter::init((JMapInfoIter const &))
 0002:8034E410       CoinCounter::appear((void))
 0002:8034E470       CoinCounter::forceAppear((void))
 0002:8034E4D0       CoinCounter::disappear((void))
 0002:8034E4E8       StarPieceCounter::control((void))
 0002:8034E524       CoinCounter::updateCounter((void))
 0002:8034E658       CoinCounter::exeHide((void))
 0002:8034E69C       CoinCounter::exeAppear((void))
 0002:8034E74C       CoinCounter::exeWait((void))
 0002:8034E7A8       CoinCounter::exeDisappear((void))
 0002:8034E8F8       CometRetryButton::CometRetryButton((char const *))
 0002:8034E948       CometRetryButton::init((JMapInfoIter const &))
 0002:8034EAEC       CometRetryButton::appear((void))
 0002:8034EB50       CometRetryButton::control((void))
 0002:8034EBEC       CometRetryButton::exeMissLeftWait((void))
 0002:8034EC60       CometRetryButton::exeWait((void))
 0002:8034ED04       CometRetryButton::exeDecided((void))
 0002:8034ED84       CometRetryButton::exeEnd((void))
 0002:8034EE24       CometRetryButton::draw(const(void))
 0002:8034EF84       CopyFilterNegater::CopyFilterNegater((void))
 0002:8034EFD0       CopyFilterNegater::~CopyFilterNegater((void))
 0002:8034F038       CounterLayoutAppearer::CounterLayoutAppearer((LayoutActor *,JGeometry::TVec2<f> const &))
 0002:8034F100       NerveExecutor::updateNerve((void))
 0002:8034F104       CounterLayoutAppearer::appear((JGeometry::TVec2<f> const &))
 0002:8034F180       CounterLayoutAppearer::reset((void))
 0002:8034F1CC       CounterLayoutAppearer::updateLayoutOffset((float))
 0002:8034F21C       CounterLayoutAppearer::exeAppear((void))
 0002:8034F284       CounterLayoutAppearer::exeDisappear((void))
 0002:8034F3EC       NrvCounterLayoutAppearer::CounterLayoutAppearerNrvShow::execute(const(Spine *))
 0002:8034F43C       CounterLayoutController::CounterLayoutController((void))
 0002:8034F4A4       CounterLayoutController::init((JMapInfoIter const &))
 0002:8034F57C       CounterLayoutController::appear((void))
 0002:8034F624       CounterLayoutController::requestedTicoEat((bool))
 0002:8034F6B0       CounterLayoutController::isInvalidSystemStateShowCounter((void))
 0002:8034F704       CounterLayoutController::isWaitToDisappearCounter((LayoutActor const *))
 0002:8034F75C       CounterLayoutController::showAllLayout((void))
 0002:8034F7C0       CounterLayoutController::hideAllLayout((void))
 0002:8034F818       CounterLayoutController::isHiddenOrWaitAllLayout(const(void))
 0002:8034F984       CounterLayoutController::isPlayerMoving(const(void))
 0002:8034FAB8       CounterLayoutController::appearAllCounterWithoutStar((void))
 0002:8034FB1C       CounterLayoutController::killAllCoounter((void))
 0002:8034FB94       CounterLayoutController::tryEndTicoEatStarPiece((void))
 0002:8034FC1C       CounterLayoutController::exePlayerMoving((void))
 0002:8034FCBC       CounterLayoutController::exePlayerNotMoving((void))
 0002:8034FE34       CountUpPaneRumbler::CountUpPaneRumbler((LayoutActor *,char const *))
 0002:8034FED8       CountUpPaneRumbler::update((void))
 0002:8034FF1C       CountUpPaneRumbler::start((void))
 0002:8034FF30       JointRumbler::isRumbling(const(void))
 0002:8034FF4C       CountUpPaneRumbler::connectPane((LayoutActor *,char const *))
 0002:8034FFB0       @unnamed@CustomTagProcessor_cpp@::setGXColor((_GXColorS10))
 0002:80350028       @unnamed@CustomTagProcessor_cpp@::clampU8((long))
 0002:803500D0       CustomTagAlphaCtrl::CustomTagAlphaCtrl((void))
 0002:80350100       CustomTagAlphaCtrl::init((ulong,float,float,long,long))
 0002:8035014C       CustomTagAlphaCtrl::alpha(const(void))
 0002:80350210       CustomTagAlphaCtrl::update((void))
 0002:80350298       CustomTagAlphaCtrl::isEnd(const(void))
 0002:80350320       CustomTagProcessor::Impl::findGroupFunctionInfo((int))
 0002:80351290       CustomTagProcessor::CalcRect((nw4r::ut::Rect *,ushort,nw4r::ut::PrintContext<w> *))
 0002:80351384       CustomTagProcessor::Process((ushort,nw4r::ut::PrintContext<w> *))
 0002:80351468       CustomTagProcessor::setArgNumber((long,long))
 0002:803514E8       CustomTagProcessor::setArgString((wchar_t const *,long))
 0002:80351568       CustomTagProcessor::initAlpha((float,float,long,long))
 0002:80351618       CustomTagProcessor::getReplaceTag(const(wchar_t const *,long,long,long))
 0002:803516DC       CustomTagProcessor::isIgnoreTag(const(ushort,nw4r::ut::PrintContext<w> *))
 0002:80351728       CustomTagProcessor::writeString((nw4r::ut::Rect *,wchar_t const *,nw4r::ut::PrintContext<w> *))
 0002:803518A0       CustomTagProcessor::exeDisplayGroup((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:8035194C       CustomTagProcessor::exeSoundGroup((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80351C30       CustomTagProcessor::exeSystemGroup((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80351CC4       CustomTagProcessor::exeLocalizeGroup((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80352690       CustomTagProcessor::exeDisplayGroupWait((nw4r::ut::Rect *,ushort,nw4r::ut::PrintContext<w> *))
 0002:803526AC       CustomTagProcessor::exeDisplayGroupOffset((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80352760       CustomTagProcessor::exeDisplayGroupCenter((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80352834       CustomTagProcessor::exeFontGroup((nw4r::ut::Rect *,MessageEditorMessageTag const &,nw4r::ut::PrintContext<w> *))
 0002:80352A18       nw4r::ut::CharWriter::GetTextColor(const(void))
 0002:80352B58       nw4r::ut::CharWriter::GetFont(const(void))
 0002:80352C70       nw4r::ut::CharWriter::GetCursorX(const(void))
 0002:80352D88       nw4r::ut::CharWriter::GetCursorY(const(void))
 0002:80352EA0       nw4r::ut::CharWriter::SetCursorX((float))
 0002:80352FC4       nw4r::ut::CharWriter::SetAlpha((uchar))
 0002:803530F0       nw4r::ut::CharWriter::MoveCursorX((float))
 0002:80353224       nw4r::ut::CharWriter::MoveCursorY((float))
 0002:80353358       nw4r::ut::CharWriter::SetCursorY((float))
 0002:8035347C       nw4r::ut::TextWriterBase<w>::TextWriterBase<w>((nw4r::ut::TextWriterBase<w> const &))
 0002:803536E0       nw4r::ut::CharWriter::SetFont((nw4r::ut::Font const &))
 0002:803538F0       nw4r::ut::CharWriter::ResetColorMapping((void))
 0002:80353A24       nw4r::ut::CharStrmReader::Set((wchar_t const *))
 0002:80353C90       nw4r::ut::CharStrmReader::Next((void))
 0002:80353DB4       nw4r::ut::CharStrmReader::GetCurrentPos(const(void))
 0002:80353ECC       nw4r::ut::Rect::Rect((void))
 0002:80353EE4       nw4r::ut::Rect::SetHeight((float))
 0002:80353EF4       nw4r::ut::TextWriterBase<w>::GetLineSpace(const(void))
 0002:8035400C       nw4r::ut::TextWriterBase<w>::SetCharSpace((float))
 0002:80354130       DepthOfFieldBlur::DepthOfFieldBlur((char const *))
 0002:80354240       DepthOfFieldBlur::draw(const(void))
 0002:80354338       DepthOfFieldBlur::drawZAlphaTex(const(void))
 0002:80354744       DepthOfFieldBlur::createBlurTexture(const(void))
 0002:803547E8       DepthOfFieldBlur::drawFinal(const(void))
 0002:80354B04       WipeGameOver::WipeGameOver((void))
 0002:80354B4C       EncouragePal60Window::init((JMapInfoIter const &))
 0002:80354BF8       PrologueLetter::exeAppear((void))
 0002:80354C60       EncouragePal60Window::exeDisplay((void))
 0002:80354E4C       ErrorMessageWindow::ErrorMessageWindow((void))
 0002:80354F8C       ErrorMessageWindow::appearWithMessage((char const *,ErrorMessageWindow::MessageType,nw4r::lyt::TexMap const *))
 0002:80355038       ErrorMessageWindow::exeAppear((void))
 0002:8035525C       @unnamed@ErrorMessageWindow_cpp@::ErrorMessageWindowDisappear::execute(const(Spine *))
 0002:80355360       @unnamed@GalaxyMapTitle_cpp@::GalaxyMapTitleDisappear::execute(const(Spine *))
 0002:803553AC       FileSelectButton::FileSelectButton((char const *))
 0002:80355410       FileSelectButton::init((JMapInfoIter const &))
 0002:80355474       FileSelectButton::appear((void))
 0002:803554D8       LayoutActor::kill((void))
 0002:803554DC       FileSelectButton::disappear((void))
 0002:8035553C       FileSelectButton::setCallbackFunctor((MR::FunctorBase const &,MR::FunctorBase const &,MR::FunctorBase const &,MR::FunctorBase const &,MR::FunctorBase const &))
 0002:80355610       FileSelectButton::exeSelect((void))
 0002:803556C0       FileSelectButton::exeDisappear((void))
 0002:80355730       FileSelectButton::control((void))
 0002:803557CC       FileSelectButton::createPaneControl((void))
 0002:80355850       FileSelectButton::createButtonController((void))
 0002:80355988       FileSelectButton::createOthers((void))
 0002:80355AAC       FileSelectInfo::FileSelectInfo((long,char const *))
 0002:80355B80       FileSelectInfo::init((JMapInfoIter const &))
 0002:80355BCC       FileSelectInfo::appear((void))
 0002:80355C7C       FileSelectInfo::disappear((void))
 0002:80355D88       FileSelectInfo::slideBack((void))
 0002:80355DA0       FileSelectInfo::setInfo((ushort *,long,long,long,bool,bool,bool,wchar_t const *,wchar_t const *,long))
 0002:80355E34       FileSelectInfo::change((void))
 0002:80355F0C       FileSelectInfo::forceChange((void))
 0002:80355F94       FileSelectInfo::exeAppear((void))
 0002:80355FF0       FileSelectInfo::exeDisappear((void))
 0002:8035606C       FileSelectInfo::control((void))
 0002:803560A4       FileSelectInfo::reflectInfo((void))
 0002:80356240       DemoStarter::DemoStarter((NPCActor *))
 0002:803562A0       FileSelectInfoSub::SlideState::exeSlidePos((void))
 0002:803562F4       FileSelectInfoSub::SlideState::exeSlidingBack((void))
 0002:80356478       FileSelectInfoSub::CharaState::exeToMario((void))
 0002:803567B8       FileSelectInfoSub::CharaStateNrvMario::execute(const(Spine *))
 0002:80356890       FileSelectNumber::FileSelectNumber((char const *))
 0002:803568E0       FileSelectNumber::init((JMapInfoIter const &))
 0002:80356948       FileSelectNumber::appear((void))
 0002:80356A44       FileSelectNumber::disappear((void))
 0002:80356B2C       FileSelectNumber::setNumber((long))
 0002:80356B40       MR::getTexture((ResourceHolder *,char const *))
 0002:80356BB8       FileSelectNumberSub::SelectAnimController::appear((void))
 0002:80356C40       FileSelectNumberSub::SelectAnimController::selectOut((void))
 0002:80356D18       FileSelectNumberSub::SelectAnimController::exeSelectOutStart((void))
 0002:80356FC8       @unnamed@FileSelectNumber_cpp@::FileSelectNumberNrvEnd::execute(const(Spine *))
 0002:80357024       @unnamed@FileSelectNumber_cpp@::FileSelectNumberNrvAppear::execute(const(Spine *))
 0002:80357074       FullnessMeter::FullnessMeter((LiveActor *,long,long))
 0002:80357150       FullnessMeter::init((JMapInfoIter const &))
 0002:803571AC       FullnessMeter::control((void))
 0002:803571F0       FullnessMeter::setNumber((long))
 0002:8035730C       FullnessMeter::requestAppear((void))
 0002:80357398       FullnessMeter::requestDisappear((void))
 0002:80357410       FullnessMeter::pauseOff((void))
 0002:80357444       FullnessMeter::exeAppear((void))
 0002:803574AC       FullnessMeter::exeEnd((void))
 0002:80357604       MR::drawFullScreenBlur((float))
 0002:80357658       MR::drawFullScreenBlur((float,float,uchar,uchar))
 0002:80357894       GalaxyCometScreenFilter::GalaxyCometScreenFilter((void))
 0002:80357924       GalaxyCometScreenFilter::setCometType((char const *))
 0002:80357A14       GalaxyConfirmLayout::init((JMapInfoIter const &))
 0002:80357ABC       GalaxyConfirmLayout::appear((void))
 0002:80357B74       GalaxyConfirmLayout::isSelectedYes(const(void))
 0002:80357B80       GalaxyMapSelectButton::appear((void))
 0002:80357BBC       GalaxyConfirmLayout::exeSelecting((void))
 0002:80357CC4       GalaxyConfirmLayout::exeSelectedBackButton((void))
 0002:80357D10       GalaxyConfirmLayout::exeSelected((void))
 0002:80357E44       @unnamed@GalaxyInfoLayoutSetter_cpp@::addPictureFontStar((wchar_t **,wchar_t **,char const *,long))
 0002:80357F1C       GalaxyInfoLayoutSetter::GalaxyInfoLayoutSetter((LayoutActor *))
 0002:80357F88       GalaxyInfoLayoutSetter::replaceTexture((char const *))
 0002:80358048       GalaxyInfoLayoutSetter::updateInfo((char const *,GalaxyInfoLayoutSetter::GalaxyState))
 0002:803580C8       GalaxyInfoLayoutSetter::updateInfo((char const *,GalaxyInfoLayoutSetter::GalaxyState,int))
 0002:80358140       GalaxyInfoLayoutSetter::updateCometPos((void))
 0002:803581A8       GalaxyInfoLayoutSetter::initReplaceTexture((void))
 0002:80358260       GalaxyInfoLayoutSetter::updateInfoWithoutComet((char const *,GalaxyInfoLayoutSetter::GalaxyState))
 0002:803583B4       GalaxyInfoLayoutSetter::setTextBoxStarNum((char const *))
 0002:80358694       GalaxyInfoLayoutSetter::showCometWindow((int))
 0002:8035873C       GalaxyInfoLayoutSetter::hideCometWindow((void))
 0002:803592D8       GalaxyMap::movementForCapture((void))
 0002:8035952C       GalaxyMap::drawForCapture((nw4r::lyt::DrawInfo const &))
 0002:80359C54       GalaxyMap::drawGalaxyInfo(const(void))
 0002:80359CB0       GalaxyMap::isTransition(const(void))
 0002:80359D10       GalaxyMap::isPointingAnything(const(void))
 0002:80359D20       TimeLimitLayout::isReadyToTimeUp(const(void))
 0002:80359D7C       GalaxyMap::changeToGalaxyMap((void))
 0002:80359DC0       GalaxyMap::changeToAstroMap((void))
 0002:80359E04       GalaxyMap::forceToGalaxyMap((void))
 0002:80359E70       GalaxyMap::forceToAstroMap((void))
 0002:80359EDC       GalaxyMap::exeFocusIn((void))
 0002:80359F1C       GalaxyMap::exeFocusOut((void))
 0002:80359F80       GalaxyMap::exeFadeinGalaxyMap((void))
 0002:8035A3DC       GalaxyMap::initDomeIcon((void))
 0002:8035A494       GalaxyMap::initMarioIcon((void))
 0002:8035A568       GalaxyMap::initTicoIcon((void))
 0002:8035A638       GalaxyMap::tryFocusIn((void))
 0002:8035A72C       GalaxyMap::updateGalaxyName((void))
 0002:8035A750       GalaxyMap::drawGalaxyIconWithOrder(const(int))
 0002:8035A800       GalaxyMap::getPointingGalaxyIcon(const(void))
 0002:8035AC7C       std::bind2nd<Q23std68pointer_to_binary_function<PC11LayoutActor,RCQ34nw4r3lyt8DrawInfo,v>,Q34nw4r3lyt8DrawInfo>(std::binder2nd<Q23std68pointer_to_binary_function<PC11LayoutActor,RCQ34nw4r3lyt8DrawInfo,v>,RCQ34nw4r3lyt8DrawInfo> (std::pointer_to_binary_function<PC11LayoutActor,RCQ34nw4r3lyt8DrawInfo,v> const &,nw4r::lyt::DrawInfo const &))
 0002:8035AE14       GalaxyMap::~GalaxyMap((void))
 0002:8035AEA8       GalaxyMapBackground::GalaxyMapBackground((void))
 0002:8035AF04       SaveIcon::appear((void))
 0002:8035AFA0       GalaxyMapCometIcon::GalaxyMapCometIcon((char const *,LayoutActor *,char const *))
 0002:8035B034       GalaxyMapCometIcon::calcAnim((void))
 0002:8035B070       GalaxyMapDomeIcon::calcAnimForCapture((nw4r::lyt::DrawInfo const &))
 0002:8035B11C       GalaxyMapCometIcon::init((JMapInfoIter const &))
 0002:8035B168       GalaxyMapCometIcon::syncStatus((void))
 0002:8035B1F8       GalaxyMapController::GalaxyMapController((void))
 0002:8035B488       LayoutActor::appear((void))
 0002:8035B48C       GalaxyMapController::kill((void))
 0002:8035B4D4       GalaxyMapController::movement((void))
 0002:8035B5BC       GalaxyMapController::calcAnim((void))
 0002:8035B660       GalaxyMapController::draw(const(void))
 0002:8035B740       GalaxyMapController::drawForCapture((void))
 0002:8035B80C       GalaxyMapController::startGalaxyMap((void))
 0002:8035B894       GalaxyMapController::startAstroMap((void))
 0002:8035B91C       GalaxyMapController::startNewGalaxyDiscover((void))
 0002:8035B9A4       GalaxyMapController::startNewTicoGalaxyDiscover((void))
 0002:8035BA2C       GalaxyMapController::startNewDomeDiscover((void))
 0002:8035BAC8       GalaxyMapController::startTicoCometPray((void))
 0002:8035BB64       GalaxyMapController::startChallengeGalaxyDiscover((void))
 0002:8035BBEC       GalaxyMapController::exeReadyModeMap((void))
 0002:8035BC74       GalaxyMapController::exeFadeinModeMap((void))
 0002:8035BE08       def_8035BD98
 0002:8035BEA4       GalaxyMapController::exeAppearAstroMap((void))
 0002:8035C020       GalaxyMapController::exeAppearPowerStarList((void))
 0002:8035C0E0       GalaxyMapController::exeDisplayPowerStarList((void))
 0002:8035C15C       GalaxyMapController::exeDisappearPowerStarList((void))
 0002:8035C230       GalaxyMapController::exeNewGalaxyDiscoverPhaseAstroMap((void))
 0002:8035C27C       GalaxyMapController::exeTicoCometFadeoutWhite((void))
 0002:8035C318       GalaxyMapController::exeFadeout((void))
 0002:8035C3CC       GalaxyMapController::exeReadyGame((void))
 0002:8035C46C       GalaxyMapController::killAllLayout((void))
 0002:8035C4F8       GalaxyMapController::tryPushBackButton((void))
 0002:8035C564       GalaxyMapController::tryChangeMode((void))
 0002:8035C6A0       GalaxyMapController::tryAppearGalaxyMap((void))
 0002:8035C774       GalaxyMapController::setNerveAccordingToNextModeFromMap((void))
 0002:8035C7B4       GalaxyMapController::capture((void))
 0002:8035C854       MR::startAstroMapLayoutForChallengeGalaxyDiscover((void))
 0002:8035C9A4       MR::isActiveGalaxyMapLayout((void))
 0002:8035C9D8       MR::getGalaxyMapResTIMG((void))
 0002:8035CC2C       @unnamed@GalaxyMapController_cpp@::GalaxyMapControllerNewGalaxyDiscoverPhaseDisplayGalaxyMap::execute(const(Spine *))
 0002:8035CC6C       @unnamed@GalaxyMapController_cpp@::GalaxyMapControllerTicoCometWaitWhite::execute(const(Spine *))
 0002:8035CE04       WipeFade::setColor((_GXColor))
 0002:8035CF34       JMapInfoIter::__ne(const(JMapInfoIter const &))
 0002:8035CF80       GalaxyMapDomeIcon::GalaxyMapDomeIcon((int,LayoutActor *,char const *,char const *))
 0002:8035CFF8       GalaxyMapDomeIcon::appear((void))
 0002:8035D040       GalaxyMapDomeIcon::kill((void))
 0002:8035D080       GalaxyMapDomeIcon::movement((void))
 0002:8035D0C0       GalaxyMapDomeIcon::calcAnim((void))
 0002:8035D16C       GalaxyMapDomeIcon::setModeNormal((void))
 0002:8035D178       GalaxyMapDomeIcon::setModeNewDomeDiscover((void))
 0002:8035D184       GalaxyMapDomeIcon::draw(const(void))
 0002:8035D1C4       GalaxyMapDomeIcon::calcDomeStatus(const(void))
 0002:8035D230       GalaxyMapDomeIcon::isComplete(const(void))
 0002:8035D320       @unnamed@GalaxyMapDomeIcon_cpp@::CheckerIsComplete::execute((char const *))
 0002:8035D390       @unnamed@GalaxyMapDomeIcon_cpp@::CheckerIsExistNewGalaxy::execute((char const *))
 0002:8035D448       GalaxyMapDomeIcon::init((JMapInfoIter const &))
 0002:8035D500       GalaxyMapDomeIcon::control((void))
 0002:8035D570       GalaxyMapDomeIcon::syncStatus((void))
 0002:8035D688       GalaxyMapDomeIcon::hasNewGalaxy(const(void))
 0002:8035D774       @unnamed@GalaxyMapDomeIcon_cpp@::AstroDomeCheckerBase::__cl((JMapInfoIter const &))
 0002:8035D81C       GalaxyMapTitle::GalaxyMapTitle((void))
 0002:8035D86C       GalaxyMapGalaxyDetail::init((JMapInfoIter const &))
 0002:8035D8FC       GalaxyMapGalaxyDetail::appear((void))
 0002:8035D93C       GalaxyMapGalaxyDetail::kill((void))
 0002:8035D994       GalaxyMapGalaxyDetail::movement((void))
 0002:8035D9EC       GalaxyMapGalaxyDetail::calcAnim((void))
 0002:8035DA4C       GalaxyMapGalaxyDetail::draw(const(void))
 0002:8035DAA4       GalaxyMapGalaxyDetail::startDisplay((char const *,bool))
 0002:8035DB20       GalaxyMapGalaxyDetail::exeAppear((void))
 0002:8035DB8C       GalaxyMapGalaxyDetail::exeDisplay((void))
 0002:8035DBF8       GalaxyMapGalaxyDetail::exeDisappear((void))
 0002:8035DD5C       GalaxyMapGalaxyPlain::GalaxyMapGalaxyPlain((LayoutActor const *))
 0002:8035DDC8       GalaxyMapGalaxyPlain::show((char const *,char const *))
 0002:8035DEC0       GalaxyMapGalaxyPlain::adjustTransInScreen((void))
 0002:8035DFE8       GalaxyMapGalaxyPlain::init((JMapInfoIter const &))
 0002:8035E05C       GalaxyMapGalaxyPlain::kill((void))
 0002:8035E09C       GalaxyMapGalaxyPlain::movement((void))
 0002:8035E0DC       GalaxyMapGalaxyPlain::calcAnim((void))
 0002:8035E148       GalaxyMapGalaxyPlain::draw(const(void))
 0002:8035E190       GalaxyMapGalaxyPlain::show((wchar_t const *,char const *))
 0002:8035E1F4       GalaxyMapGalaxyPlain::control((void))
 0002:8035E2B4       GalaxyMapIcon::GalaxyMapIcon((char const *,LayoutActor *,char const *))
 0002:8035E320       GalaxyMapIcon::appear((void))
 0002:8035E35C       GalaxyMapIcon::calcAnim((void))
 0002:8035E398       GalaxyMapIcon::calcAnimForCapture((nw4r::lyt::DrawInfo const &))
 0002:8035E3E4       GalaxyMapTicoIcon::setModeNormal((void))
 0002:8035E3F0       GalaxyMapTicoIcon::setModeDiscover((void))
 0002:8035E3FC       GalaxyMapIcon::isStatusNew(const(void))
 0002:8035E438       GalaxyMapIcon::onPointing((void))
 0002:8035E440       GalaxyMapIcon::activatePointing((void))
 0002:8035E450       GalaxyMapIcon::deactivatePointing((void))
 0002:8035E460       GalaxyMapIcon::control((void))
 0002:8035E4A8       GalaxyMapIcon::examineIconStatus(const(void))
 0002:8035E52C       GalaxyMapIcon::isBlink(const(int))
 0002:8035E560       GalaxyMapTicoIcon::isModeDiscoverAndIsAppear(const(void))
 0002:8035E5DC       GalaxyMapIcon::init((JMapInfoIter const &))
 0002:8035E674       GalaxyMapIcon::isPointing(const(void))
 0002:8035E710       GalaxyMapIcon::syncStatus((void))
 0002:8035E818       GalaxyMapMarioIcon::GalaxyMapMarioIcon((LayoutActor *,char const *))
 0002:8035E878       GalaxyMapMarioIcon::init((JMapInfoIter const &))
 0002:8035E8F0       GalaxyMapMarioIcon::showBlink((void))
 0002:8035E93C       GalaxyMapMarioIcon::control((void))
 0002:8035EA3C       GalaxyMapSelectButton::init((JMapInfoIter const &))
 0002:8035EB20       GalaxyMapSelectButton::startAstroMap((void))
 0002:8035EB6C       GalaxyMapSelectButton::isPointingAnything(const(void))
 0002:8035EB74       GalaxyMapSelectButton::isDecidedList(const(void))
 0002:8035EBCC       GalaxyMapSelectButton::exeAstroMapWait((void))
 0002:8035EC30       GalaxyMapSelectButton::exeStarListWait((void))
 0002:8035EC54       GalaxyMapSelectButton::exeBetweenListToMapFadein((void))
 0002:8035ED14       GalaxyMapSelectButton::exeBetweenMapToListFadeout((void))
 0002:8035EF00       @unnamed@GalaxyMapSelectButton_cpp@::GalaxyMapSelectButtonBetweenMapToListFadein::execute(const(Spine *))
 0002:8035EF74       GalaxyMapTicoIcon::GalaxyMapTicoIcon((int,char const *,LayoutActor *,char const *))
 0002:8035F014       GalaxyMapTicoIcon::init((JMapInfoIter const &))
 0002:8035F060       GalaxyMapTicoIcon::appear((void))
 0002:8035F0A8       GalaxyMapTicoIcon::syncStatus((void))
 0002:8035F238       GalaxyMapTicoIcon::control((void))
 0002:8035F3FC       GalaxyMapTitle::startGalaxyMap((void))
 0002:8035F44C       GalaxyMapTitle::startAstroMap((void))
 0002:8035F49C       GalaxyMapTitle::changeToAstroMap((void))
 0002:8035F4B0       GalaxyMapTitle::changeToGalaxyMap((void))
 0002:8035F4C4       GalaxyMapTitle::exeAppearToAnother((void))
 0002:8035F530       GalaxyMapTitle::exeDisappearToAnother((void))
 0002:8035F570       GalaxyMapTitle::tryDisappear((void))
 0002:8035F5D8       GalaxyMapTitle::~GalaxyMapTitle((void))
 0002:8035F738       NrvScenarioSelectLayout::ScenarioSelectLayoutNrvCancelFadeOut::execute(const(Spine *))
 0002:8035F74C       GalaxyNamePlate::GalaxyNamePlate((char const *,bool))
 0002:8035F858       GalaxyNamePlate::showUnknown((bool))
 0002:8035F8B0       GalaxyNamePlate::showNew((bool))
 0002:8035F908       GalaxyNamePlate::showOpen((bool))
 0002:8035F95C       GalaxyNamePlate::show((wchar_t const *,bool))
 0002:8035F96C       GalaxyNamePlate::setPos3D((JGeometry::TVec3<f> const &))
 0002:8035F9C4       GalaxyNamePlate::setShowBalloonNozzle((bool))
 0002:8035FBC8       GalaxyNamePlate::exeAppearReady((void))
 0002:8035FC38       GalaxyNamePlate::exeAppear((void))
 0002:8035FE44       GalaxyNamePlateDrawer::GalaxyNamePlateDrawer((void))
 0002:8035FE9C       GalaxyNamePlateDrawer::init((JMapInfoIter const &))
 0002:8035FEB0       GalaxyNamePlateDrawer::draw(const(void))
 0002:803601BC       GalaxyNamePlateDrawer::registerPlate((LayoutActor const *))
 0002:80360228       MR::registerToGalaxyNamePlateDrawer((LayoutActor const *))
 0002:8036026C       std::sort<PPC25GalaxyNamePlatePrioritied,RQ235@unnamed@GalaxyNamePlateDrawer_cpp@15PlatePriorityLt>(void (GalaxyNamePlatePrioritied const **,GalaxyNamePlatePrioritied const **,@unnamed@GalaxyNamePlateDrawer_cpp@::PlatePriorityLt &))
 0002:80360528       std::__sort132<RQ235@unnamed@GalaxyNamePlateDrawer_cpp@15PlatePriorityLt,PPC25GalaxyNamePlatePrioritied>(void (GalaxyNamePlatePrioritied const **,GalaxyNamePlatePrioritied const **,GalaxyNamePlatePrioritied const **,@unnamed@GalaxyNamePlateDrawer_cpp@::PlatePriorityLt &))
 0002:803605F0       std::__selection_sort<RQ235@unnamed@GalaxyNamePlateDrawer_cpp@15PlatePriorityLt,PPC25GalaxyNamePlatePrioritied>(void (GalaxyNamePlatePrioritied const **,GalaxyNamePlatePrioritied const **,@unnamed@GalaxyNamePlateDrawer_cpp@::PlatePriorityLt &))
 0002:8036072C       GalaxySelectBackButton::init((JMapInfoIter const &))
 0002:80360830       PlayerMissLeft::exeEnd((void))
 0002:80360A00       GalaxySelectInfo::GalaxySelectInfo((bool))
 0002:80360A8C       GalaxySelectInfo::init((JMapInfoIter const &))
 0002:80360B34       GalaxySelectInfo::draw(const(void))
 0002:80360B78       GalaxySelectInfo::appear((void))
 0002:80360BC0       GalaxySelectInfo::kill((void))
 0002:80360C04       MR::calcMovingDirectionAlongRailH((LiveActor *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,bool *))
 0002:80360C10       GalaxySelectInfo::makeArchiveList((NameObjArchiveListCollector *,JMapInfoIter const &))
 0002:80360C68       GalaxySelectInfo::control((void))
 0002:80360CFC       GalaxySelectInfo::show((char const *,ulong,bool,int))
 0002:80360DCC       GalaxySelectInfo::exeWait((void))
 0002:80360E14       GalaxySelectInfo::exeDisappear((void))
 0002:80360EF0       StarCounter::StarCounter((void))
 0002:80360F48       GamePauseSequence::init((JMapInfoIter const &))
 0002:80360FA4       GamePauseSequence::initWindowMenu((MR::FunctorBase const &))
 0002:80360FE8       GamePauseSequence::startPause((GamePauseSequence::MenuType))
 0002:803610BC       GamePauseSequence::deactivate((void))
 0002:8036110C       GamePauseSequence::exeActivePauseMenu((void))
 0002:80361158       GamePauseSequence::exeActivePowerStarList((void))
 0002:80361294       GameSceneLayoutHolder::GameSceneLayoutHolder((void))
 0002:80361450       GameSceneLayoutHolder::createPurpleCoinCounter((void))
 0002:8036149C       GameSceneLayoutHolder::movement((void))
 0002:8036151C       GameSceneLayoutHolder::requestPowerUpHPMeter((void))
 0002:8036152C       GameSceneLayoutHolder::startMiss((void))
 0002:8036156C       GameSceneLayoutHolder::isMissAnimEnd(const(void))
 0002:80361598       GameSceneLayoutHolder::activateDefaultGameLayout((void))
 0002:80361614       GameSceneLayoutHolder::deactivateDefaultGameLayout((void))
 0002:803616B8       GameSceneLayoutHolder::invalidateStatusLayout((void))
 0002:80361738       MR::getGameSceneLayoutHolder((void))
 0002:803617B8       GameStageClearSequence::GameStageClearSequence((void))
 0002:80361814       GameStageClearSequence::init((JMapInfoIter const &))
 0002:803618C0       GameStageClearSequence::startGrandStarGetDemo((void))
 0002:80361998       GameStageClearSequence::appearGetStarLayout((void))
 0002:803619FC       GameStageClearSequence::exePowerStarGetDemo((void))
 0002:80361AF8       GameStageClearSequence::exeGrandStarGetDemo((void))
 0002:80361DB4       HeatHazeEffect::control((void))
 0002:80361FB4       HeatHazeEffect::init((JMapInfoIter const &))
 0002:80362014       HeatHazeDirector::init((JMapInfoIter const &))
 0002:80362068       HeatHazeDirector::movement((void))
 0002:803621C4       @unnamed@HomeButtonLayout_cpp@::SoundCallback((int,int))
 0002:80362210       HomeButtonMenuContext::HomeButtonMenuContext((void))
 0002:8036229C       HomeButtonMenuContext::initControllerData((void))
 0002:803622EC       HomeButtonMenuContext::initHomeButtonInfo((void))
 0002:803623C8       HomeButtonLayout::HomeButtonLayout((void))
 0002:80362420       HomeButtonLayout::init((JMapInfoIter const &))
 0002:803624A4       HomeButtonLayout::movement((void))
 0002:803624E0       HomeButtonLayout::exeDeactive((void))
 0002:8036255C       HomeButtonLayout::exeActive((void))
 0002:803626CC       HomeButtonLayout::draw(const(void))
 0002:8036284C       HomeButtonLayout::forceToDeactive((void))
 0002:8036288C       HomeButtonLayout::isActive(const(void))
 0002:80362900       HomeButtonLayout::updateController((void))
 0002:8036295C       HomeButtonLayout::tryCorePadTriggerHome((void))
 0002:80362A6C       IconAButton::IconAButton((bool,bool))
 0002:80362B04       IconAButton::init((JMapInfoIter const &))
 0002:80362B80       IconAButton::setFollowActorPane((LayoutActor *,char const *))
 0002:80362C04       IconAButton::openWithTalk((void))
 0002:80362C7C       IconAButton::openWithRead((void))
 0002:80362CF4       IconAButton::openWithTurn((void))
 0002:80362D6C       IconAButton::openWithoutMessage((void))
 0002:80362DEC       IconAButton::term((void))
 0002:80362F30       IconAButton::updateFollowPos((void))
 0002:803630B0       MiiConfirmIcon::init((JMapInfoIter const &))
 0002:803630F4       IconComet::appearIfLanding((char const *))
 0002:80363164       IconComet::appearByCometNameId((int))
 0002:80363214       ImageEffectBase::ImageEffectBase((char const *))
 0002:80363264       ImageEffectBase::calcAnim((void))
 0002:803632FC       ImageEffectDirector::ImageEffectDirector((char const *))
 0002:80363420       ImageEffectDirector::movement((void))
 0002:80363514       ImageEffectDirector::setCurrentEffect((ImageEffectBase *))
 0002:80363528       ImageEffectDirector::turnOnNormal((void))
 0002:80363538       ImageEffectDirector::turnOnDepthOfField((bool))
 0002:803635A8       ImageEffectDirector::turnOff((void))
 0002:803635B8       ImageEffectDirector::forceOff((void))
 0002:80363614       ImageEffectDirector::turnOnDOFInSubjective((void))
 0002:80363620       ImageEffectDirector::setNormalBloomIntensity((uchar))
 0002:80363628       ImageEffectDirector::setNormalBloomThreshold((uchar))
 0002:80363630       ImageEffectDirector::setNormalBloomBlurIntensity1((uchar))
 0002:80363638       ImageEffectDirector::setNormalBloomBlurIntensity2((uchar))
 0002:80363648       ImageEffectDirector::updateManual((void))
 0002:803636E4       ImageEffectDirector::setState((ImageEffectState *))
 0002:8036370C       ImageEffectDirector::setBloomNormalParams((ImageEffectArea *))
 0002:803637A0       ImageEffectDirector::setBloomSimpleParams((ImageEffectArea *))
 0002:80363868       ImageEffectDirector::setScreenBlurParams((ImageEffectArea *))
 0002:803638CC       ImageEffectDirector::setDepthOfFieldParams((ImageEffectArea *))
 0002:80363980       ImageEffectDirector::initPlayerSyncIntensity((ImageEffectArea *,ImageEffectState *))
 0002:803639E4       ImageEffectDirector::updatePlayerSyncIntensity((ImageEffectArea *,ImageEffectState *))
 0002:80363A4C       ImageEffectDirector::updateSyncCounter((void))
 0002:80363A98       ImageEffectDirector::incPlayerSyncIntensity((void))
 0002:80363AB8       ImageEffectDirector::decPlayerSyncIntensity((void))
 0002:80363AD4       ImageEffectDirector::setPlayerSync((bool))
 0002:80363BA4       ImageEffectDirector::updateAuto((void))
 0002:80363C94       @unnamed@ImageEffectLocalUtil_cpp@::setTextureTrans((float,float))
 0002:80363CF8       MR::connectToSceneImageEffect((NameObj *))
 0002:80363D0C       MR::connectToSceneImageEffectMovement((NameObj *))
 0002:80363D20       ImageEffectLocalUtil::capture((JUTTexture *,long,long,_GXTexFmt,bool,uchar))
 0002:80363DA4       ImageEffectLocalUtil::setupDrawTexture((void))
 0002:8036403C       ImageEffectLocalUtil::drawTexture((JUTTexture *,long,long,uchar,ImageEffectLocalUtil::ETexDrawType))
 0002:8036422C       ImageEffectLocalUtil::sendTextureVertex((long,long))
 0002:803643FC       ImageEffectLocalUtil::blurTexture((JUTTexture *,long,long,ulong,float,float))
 0002:80364618       MR::connectToSceneNormalBloom((BloomEffect *))
 0002:8036481C       ImageEffectResource::ImageEffectResource((void))
 0002:80364848       ImageEffectResource::createBloomTexture((void))
 0002:8036496C       ImageEffectResource::createBlurTexture((void))
 0002:803649D0       ImageEffectResource::createDOFTexture((void))
 0002:80364A94       ImageEffectResource::createTexture((float,_GXTexFmt))
 0002:80364B94       ImageEffectState::update((void))
 0002:80364D24       ImageEffectState::forceOff((void))
 0002:80364D9C       ImageEffectStateImpl::StateBloomNormal::StateBloomNormal((ImageEffectDirector *))
 0002:80364DE4       ImageEffectStateImpl::StateBloomNormal::update((void))
 0002:80365078       ImageEffectStateImpl::StateBloomNormal::getEffect(const(void))
 0002:803650B4       ImageEffectStateImpl::StateBloomNormal::setThreshold((uchar))
 0002:803650C4       ImageEffectStateImpl::StateBloomNormal::setIntensity1Default((void))
 0002:80365104       VFiPFFAT_SetHint
 0002:8036510C       ImageEffectStateImpl::StateBloomNormal::setIntensity2Default((void))
 0002:80365154       ImageEffectStateImpl::StateBloomSimple::getEffect(const(void))
 0002:8036517C       ImageEffectStateImpl::StateBloomSimple::setMaskFilterAll((void))
 0002:803651AC       ImageEffectStateImpl::StateBloomSimple::setMaskFilterRed((void))
 0002:803651DC       ImageEffectStateImpl::StateBloomSimple::setMaskFilterGreen((void))
 0002:8036520C       ImageEffectStateImpl::StateBloomSimple::setMaskFilterBlue((void))
 0002:8036523C       ImageEffectStateImpl::StateBloomSimple::setThreshold((uchar))
 0002:80365274       ImageEffectStateImpl::StateBloomSimple::setIntensity((float))
 0002:803652B4       ImageEffectStateImpl::StateScreenBlur::getEffect(const(void))
 0002:803652DC       ImageEffectStateImpl::StateScreenBlur::setIntensity((float))
 0002:8036531C       ImageEffectStateImpl::StateDepthOfField::getEffect(const(void))
 0002:80365344       ImageEffectStateImpl::StateDepthOfField::setIntensity((float))
 0002:8036537C       ImageEffectStateImpl::StateDepthOfField::setBlurMaxDist((long))
 0002:803653B4       ImageEffectStateImpl::StateDepthOfField::setBlurMinDist((long))
 0002:803654EC       ImageEffectSystemHolder::ImageEffectSystemHolder((void))
 0002:80365570       LayoutActor::updateSpine((void))
 0002:80365584       MR::createImageEffectSystemHolder((void))
 0002:8036558C       MR::getImageEffectSystemHolder((void))
 0002:803655B4       MR::isExistImageEffectDirector((void))
 0002:80365600       MR::getImageEffectDirector((void))
 0002:8036562C       MR::getImageEffectResource((void))
 0002:803656B0       InformationMessage::InformationMessage((void))
 0002:80365704       InformationMessage::init((JMapInfoIter const &))
 0002:803657C0       InformationMessage::appear((void))
 0002:80365884       InformationMessage::appearWithButtonLayout((void))
 0002:803658FC       MR::getNextRailPointArg0NoInit((LiveActor const *,float *))
 0002:80365914       MR::getRailPointArg0NoInit((LiveActor const *,long,float *))
 0002:80365924       InformationMessage::exeDisappear((void))
 0002:80365A68       NrvInformationMessage::InformationMessageNrvAppear::execute(const(Spine *))
 0002:80365A78       InformationObserver::InformationObserver((void))
 0002:80365AD0       InformationObserver::init((JMapInfoIter const &))
 0002:80365B30       InformationObserver::entry((InformationObserver::TYPE,LiveActor *))
 0002:80365BB4       InformationObserver::exeDisp((void))
 0002:80365D98       def_80365D48
 0002:80365DC4       InformationObserverFunction::explainBee((void))
 0002:80365DF8       InformationObserverFunction::explainTeresa((void))
 0002:80365E2C       InformationObserverFunction::explainHopper((void))
 0002:80365E60       InformationObserverFunction::explainFire((void))
 0002:80365E94       InformationObserverFunction::explainIce((void))
 0002:80365EC8       InformationObserverFunction::explainFlying((void))
 0002:80365EFC       InformationObserverFunction::explainInvincible((void))
 0002:80365F30       InformationObserverFunction::explainLifeUp((void))
 0002:80365F64       InformationObserverFunction::explainOneUp((void))
 0002:80365F98       InformationObserverFunction::explainSpin((LiveActor *))
 0002:8036608C       LayoutActor::LayoutActor((char const *,bool))
 0002:803660E4       LayoutActor::movement((void))
 0002:80366168       LayoutActor::draw(const(void))
 0002:803661E0       LayoutActor::appear((void))
 0002:803661F8       LayoutActor::kill((void))
 0002:8036623C       LayoutActor::setNerve(const(Nerve const *))
 0002:80366244       LayoutActor::isNerve(const(Nerve const *))
 0002:80366280       LayoutActor::getNerveStep(const(void))
 0002:8036628C       LayoutActor::getTrans(const(void))
 0002:803662CC       LayoutActor::setTrans((JGeometry::TVec2<f> const &))
 0002:80366350       LayoutActor::initLayoutManager((char const *,ulong))
 0002:803663B0       LayoutActor::initLayoutManagerNoConvertFilename((char const *,ulong))
 0002:80366410       LayoutActor::initLayoutManagerWithTextBoxBufferLength((char const *,ulong,ulong))
 0002:80366474       LayoutActor::initNerve((Nerve const *))
 0002:803664C8       LayoutActor::initEffectKeeper((int,char const *,EffectSystem const *))
 0002:80366538       LayoutActor::initPointingTarget((int))
 0002:8036659C       LayoutActorFlag::LayoutActorFlag((void))
 0002:803665B8       LayoutCoreUtil::getPaneUserData((nw4r::lyt::Pane const *,char *))
 0002:80366600       LayoutCoreUtil::setTextBoxMessage((nw4r::lyt::TextBox *,wchar_t const *))
 0002:80366658       MR::convertScreenPosToLayoutPos((JGeometry::TVec2<f> *,JGeometry::TVec2<f> const &))
 0002:80366758       MR::convertLayoutPosToScreenPos((JGeometry::TVec2<f> *,JGeometry::TVec2<f> const &))
 0002:80366864       MR::convertPaneLocalPosToScreenPos((JGeometry::TVec2<f> *,nw4r::lyt::Pane const *,JGeometry::TVec2<f> const &))
 0002:80366A70       LayoutGroupCtrl::LayoutGroupCtrl((LayoutManager *,char const *,ulong))
 0002:80366B20       LayoutGroupCtrl::movement((void))
 0002:80366B88       LayoutGroupCtrl::calcAnim((void))
 0002:80366BFC       LayoutGroupCtrl::getPane(const(ulong))
 0002:80366CA4       nw4r::ut::LinkList<Q44nw4r3lyt6detail8PaneLink,0>::Iterator::__rf(const(void))
 0002:80366CF4       nw4r::ut::LinkList<Q34nw4r3lyt5Group,4>::Iterator::__pp((int))
 0002:80366D28       LayoutAnmPlayer::isStop(const(void))
 0002:80366D74       nw4r::ut::LinkList<Q34nw4r3lyt4Pane,4>::Iterator::__ml(const(void))
 0002:80366E88       LayoutManager::LayoutManager((char const *,bool,ulong,ulong))
 0002:80367060       LayoutManager::movement((void))
 0002:803670FC       LayoutManager::calcAnim((void))
 0002:80367174       LayoutManager::draw(const(void))
 0002:803671CC       LayoutManager::addPaneCtrl((LayoutPaneCtrl *))
 0002:80367234       LayoutManager::createAndAddRootPaneCtrl((ulong))
 0002:803672D4       LayoutManager::createAndAddPaneCtrl((char const *,ulong))
 0002:80367364       LayoutManager::getPaneCtrl(const(char const *))
 0002:803673B4       LayoutManager::getIndexOfPane(const(char const *))
 0002:8036742C       LayoutManager::isExistPaneCtrl(const(char const *))
 0002:8036748C       LayoutManager::addGroupCtrl((LayoutGroupCtrl *))
 0002:8036753C       LayoutManager::isPointing(const(nw4r::lyt::Pane const *,JGeometry::TVec2<f> const &))
 0002:8036770C       LayoutManager::createAndAddGroupCtrl((char const *,ulong))
 0002:8036777C       LayoutManager::getIndexOfGroupCtrl(const(char const *))
 0002:80367828       LayoutManager::createPaneMtxRef((char const *))
 0002:80367884       LayoutManager::getPaneMtxRef(const(char const *))
 0002:803678D0       LayoutManager::isExistPaneMtxRef(const(char const *))
 0002:80367924       LayoutManager::isPointing(const(char const *,JGeometry::TVec2<f> const &))
 0002:8036796C       LayoutManager::getAnimTransform(const(char const *))
 0002:80367A08       LayoutManager::bindPaneCtrlAnim((LayoutPaneCtrl *,nw4r::lyt::AnimTransform *))
 0002:80367ADC       LayoutManager::bindPaneCtrlAnimSub((ulong &,nw4r::lyt::AnimTransform *))
 0002:80367BC4       LayoutManager::unbindPaneCtrlAnim((LayoutPaneCtrl *,nw4r::lyt::AnimTransform *))
 0002:80367C6C       LayoutManager::unbindPaneCtrlAnimSub((ulong &,nw4r::lyt::AnimTransform *))
 0002:80367D28       LayoutManager::calcAnimWithoutLocationAdjust((nw4r::lyt::DrawInfo const &))
 0002:80367E84       LayoutManager::getGroup(const(char const *))
 0002:80367F58       LayoutManager::initArc((char const *,char const *))
 0002:8036808C       LayoutManager::initDrawInfo((void))
 0002:80368124       LayoutManager::initPaneInfo((void))
 0002:80368184       LayoutManager::initPaneInfoRecursive((ulong &,nw4r::lyt::Pane *))
 0002:803682A4       LayoutManager::countPanes((nw4r::lyt::Pane *))
 0002:8036833C       LayoutManager::initGroupCtrlList((void))
 0002:803683AC       LayoutManager::initTextBoxRecursive((nw4r::lyt::Pane *,nw4r::lyt::Pane *,char const *,ulong))
 0002:80368504       LayoutManager::animateRecursive((ulong &,nw4r::lyt::Pane *))
 0002:80368608       LayoutManager::findPaneByName(const(char const *))
 0002:80368688       LayoutManager::replaceIndDummyTexture((void))
 0002:80368968       LayoutManager::removeUnnecessaryPanes((nw4r::lyt::Pane *))
 0002:80368C84       @unnamed@LayoutManager_cpp@::Local::BitFlag<128>::BitFlag<128>((void))
 0002:80368D08       @unnamed@LayoutManager_cpp@::Local::BitFlag<128>::isAnythingTrue(const(void))
 0002:80368D3C       @unnamed@LayoutManager_cpp@::Local::BitFlag<128>::onBit((int))
 0002:80368D6C       @unnamed@LayoutManager_cpp@::Local::BitFlag<128>::offBit((int))
 0002:80368D9C       @unnamed@LayoutManager_cpp@::Local::BitFlag<128>::isTrue(const(int))
 0002:80368DD0       nw4r::lyt::DrawInfo::SetLocationAdjustScale((nw4r::math::VEC2 const &))
 0002:80368E04       LayoutPaneCtrl::LayoutPaneCtrl((LayoutManager *,char const *,ulong))
 0002:80368EEC       LayoutPaneCtrl::movement((void))
 0002:80368F54       LayoutPaneCtrl::calcAnim((void))
 0002:80368FBC       LayoutPaneCtrl::start((char const *,ulong))
 0002:803690B4       LayoutPaneCtrl::stop((ulong))
 0002:803690D0       LayoutPaneCtrl::isAnimStopped(const(ulong))
 0002:803690E0       LayoutPaneCtrl::reflectFollowPos((void))
 0002:803692FC       LayoutPaneCtrl::getFrameCtrl(const(ulong))
 0002:80369310       LayoutPaneCtrl::recalcChildGlobalMtx((nw4r::lyt::Pane *))
 0002:803693E4       LensFlareModel::LensFlareModel((char const *,char const *))
 0002:803694B0       LensFlareModel::update((bool,bool))
 0002:803695C0       LensFlareModel::exeShow((void))
 0002:80369648       LensFlareModel::exeFadeIn((void))
 0002:803696B4       LensFlareModel::exeFadeOut((void))
 0002:803696E4       LensFlareModel::appear((void))
 0002:80369734       LensFlareModel::notifyInArea((void))
 0002:803697C8       LensFlareRing::LensFlareRing((void))
 0002:803698A0       LensFlareRing::controlAnim((void))
 0002:80369990       LensFlareLine::LensFlareLine((void))
 0002:803699F0       LensFlareLine::controlAnim((void))
 0002:80369B60       LensFlareDirector::LensFlareDirector((void))
 0002:80369C68       LensFlareDirector::init((JMapInfoIter const &))
 0002:80369CF8       LensFlareDirector::movement((void))
 0002:80369D88       LensFlareDirector::drawSyncCallback((ushort))
 0002:80369E00       LensFlareDirector::pauseOff((void))
 0002:80369E44       LensFlareDirector::setDrawSyncToken((void))
 0002:80369E94       LensFlareDirector::checkArea((void))
 0002:80369EF8       LensFlareDirector::checkBrightObj((bool))
 0002:8036A068       LensFlareDirector::controlFlare((long,bool))
 0002:8036A2E8       MR::addBrightObj((BrightObjBase *))
 0002:8036A34C       MR::pauseOffLensFlare((void))
 0002:8036A388       MR::getLensFlareDrawSyncTokenIndex((void))
 0002:8036A570       @unnamed@LensFlare_cpp@::LensFlareModelNrvKill::execute(const(Spine *))
 0002:8036A5D4       LogoFader::LogoFader((char const *))
 0002:8036A64C       LogoFader::draw(const(void))
 0002:8036A6D4       LogoFader::exeFadeIn((void))
 0002:8036A77C       LogoFader::exeFadeOut((void))
 0002:8036A97C       @unnamed@LogoFader_cpp@::LogoFaderNrvBlank::execute(const(Spine *))
 0002:8036A9FC       LuigiLetter::LuigiLetter((bool,char const *))
 0002:8036AA68       LuigiLetter::init((JMapInfoIter const &))
 0002:8036ABBC       LuigiLetter::movement((void))
 0002:8036ABFC       LuigiLetter::exeAppear((void))
 0002:8036AC90       LuigiLetter::exeWait((void))
 0002:8036AD20       LuigiLetter::exeEnd((void))
 0002:8036AE04       LuigiLetter::makeArchiveListCommon((NameObjArchiveListCollector *,char const *))
 0002:8036AE6C       MR::createLuigiLetterForTalk((void))
 0002:8036AEC0       MR::createLuigiLetterForMenu((void))
 0002:8036AFEC       Manual2P::Manual2P((char const *))
 0002:8036B050       Manual2P::init((JMapInfoIter const &))
 0002:8036B1A8       Manual2P::appear((void))
 0002:8036B230       Manual2P::exeAppear((void))
 0002:8036B2E4       Manual2P::exeWait((void))
 0002:8036B4E0       Manual2P::exeScrollRightAfter((void))
 0002:8036B570       Manual2P::exeScrollLeft((void))
 0002:8036B660       Manual2P::exeScrollLeftAfter((void))
 0002:8036B778       Manual2P::exeDisappear((void))
 0002:8036B7FC       Manual2P::control((void))
 0002:8036B87C       Manual2P::reflectPageIndex((void))
 0002:8036BAAC       Manual2P::checkSelectedBackButton((void))
 0002:8036BC78       MarioMeter::MarioMeter((char const *))
 0002:8036BCC4       MarioMeter::initLifeCount((long))
 0002:8036BD40       MarioMeter::deactivate((void))
 0002:8036BD5C       MarioMeter::powerUp((void))
 0002:8036BE98       MarioMeter::init((JMapInfoIter const &))
 0002:8036BF18       MarioSubMeter::MarioSubMeter((char const *))
 0002:8036BF74       MarioSubMeter::activeSubMeterBee((void))
 0002:8036BFD4       MarioSubMeter::activeSubMeterWater((void))
 0002:8036C034       MarioSubMeter::frameOutSubMeter((void))
 0002:8036C08C       MarioSubMeter::deactivate((void))
 0002:8036C11C       MarioSubMeter::init((JMapInfoIter const &))
 0002:8036C19C       MessageEditorMessageTag::MessageEditorMessageTag((nw4r::ut::PrintContext<w> const *))
 0002:8036C1B0       MessageEditorMessageTag::getTagLength(const(void))
 0002:8036C1C0       MessageEditorMessageTag::getSkipLength(const(void))
 0002:8036C1D4       MessageEditorMessageTag::getParamLength(const(void))
 0002:8036C1E4       MessageEditorMessageTag::getParam8(const(int))
 0002:8036C1F4       MessageEditorMessageTag::getParam16(const(int))
 0002:8036C208       MessageEditorMessageTag::getParam32(const(int))
 0002:8036C21C       MessageEditorMessageTag::getParamPtr(const(int))
 0002:8036C268       MessageTagSkipTagProcessor::CalcRect((nw4r::ut::Rect *,ushort,nw4r::ut::PrintContext<w> *))
 0002:8036C280       MessageTagSkipTagProcessor::Process((ushort,nw4r::ut::PrintContext<w> *))
 0002:8036C298       MessageTagSkipTagProcessor::skipTag((nw4r::ut::Rect *,nw4r::ut::PrintContext<w> *,bool))
 0002:8036C2BC       MeterLayout::MeterLayout((char const *,char const *))
 0002:8036C358       MeterLayout::init((JMapInfoIter const &))
 0002:8036C4B0       MeterLayout::control((void))
 0002:8036C59C       MeterLayout::requestActive((void))
 0002:8036C674       MeterLayout::requestPowerUp((void))
 0002:8036C6E8       MeterLayout::requestForceAppear((void))
 0002:8036C72C       MeterLayout::requestPlayerMoving((void))
 0002:8036C79C       MeterLayout::requestPlayerStopped((void))
 0002:8036C814       MeterLayout::setCount((long))
 0002:8036C868       MeterLayout::exeAppear((void))
 0002:8036C8E4       MeterLayout::exeWaitStart((void))
 0002:8036C95C       MeterLayout::exeWait((void))
 0002:8036C9D0       MeterLayout::exePowerUp((void))
 0002:8036CB34       MeterLayout::exeMeterMove((void))
 0002:8036CBE4       MeterLayout::exeCounterMove((void))
 0002:8036CCCC       MeterLayout::exeRecover((void))
 0002:8036CD70       MeterLayout::exeDamage((void))
 0002:8036CE20       MeterLayout::exeBreakMeter((void))
 0002:8036CF08       MeterLayout::exeZeroMeter((void))
 0002:8036CF94       MeterLayout::exeZeroMeterBreak((void))
 0002:8036D008       SuddenDeathMeter::calcMarioHeadPosition(const(JGeometry::TVec2<f> *))
 0002:8036D07C       SuddenDeathMeter::calcPowerUpMeterBasePosition(const(JGeometry::TVec2<f> *))
 0002:8036D0D0       MeterLayout::setAnimBase((void))
 0002:8036D180       MeterLayout::setCountAnimFrame((void))
 0002:8036D20C       MeterLayout::setRecoveryCountAnimFrame((void))
 0002:8036D510       MiiConfirmIcon::appear((nw4r::lyt::TexMap *,wchar_t const *))
 0002:8036D614       MiiConfirmIcon::exeDisappear((void))
 0002:8036D7AC       MiiSelect::MiiSelect((char const *))
 0002:8036D870       MiiSelect::init((JMapInfoIter const &))
 0002:8036D8E8       MiiSelect::appear((void))
 0002:8036D96C       MiiSelect::onSelectDummy((void))
 0002:8036D9B8       MiiSelect::calcAnim((void))
 0002:8036DA0C       MiiSelect::getSelectedID((FileSelectIconID *))
 0002:8036DA14       MiiSelect::getSelectedMiiTexMap((void))
 0002:8036DA1C       MiiSelect::admitIcon((void))
 0002:8036DA28       MiiSelect::prohibitIcon((FileSelectIconID const &))
 0002:8036DA38       MiiSelect::invalidateSpecialMii((FileSelectIconID::EFellowID))
 0002:8036DA98       MiiSelect::validateAllSpecialMii((void))
 0002:8036DAF4       MiiSelect::exeAppear((void))
 0002:8036DB78       MiiSelect::exeWait((void))
 0002:8036DCE0       MiiSelect::exeScrollLeft((void))
 0002:8036DDA4       MiiSelect::exeScrollRight((void))
 0002:8036DED0       MiiSelect::control((void))
 0002:8036DFEC       MiiSelect::createButtons((void))
 0002:8036E08C       MiiSelect::callbackLeft((void))
 0002:8036E0E0       MiiSelect::callbackRight((void))
 0002:8036E134       MiiSelect::disappearButtons((void))
 0002:8036E1DC       MiiSelect::updateButtons((void))
 0002:8036E2D0       MiiSelect::collectValidMiiIndex((void))
 0002:8036E390       MiiSelect::createPage((void))
 0002:8036E3F0       MiiSelect::flipPage((void))
 0002:8036E404       MiiSelect::setCurrentPageGroupA((void))
 0002:8036E420       MiiSelect::setCurrentPageGroupB((void))
 0002:8036E43C       MiiSelect::setCurrentPageNum((void))
 0002:8036E4A4       MiiSelect::validateAllIcon((void))
 0002:8036E500       MiiSelect::refresh((void))
 0002:8036E558       MiiSelect::getIconID(const(FileSelectIconID *,long))
 0002:8036E63C       MiiSelect::onSelect((long,nw4r::lyt::TexMap *))
 0002:8036E6DC       MiiSelectSub::Page::Page((MiiSelect *))
 0002:8036E760       MiiSelectSub::Page::refresh((long))
 0002:8036E868       MiiSelectSub::Page::movement((void))
 0002:8036E9B8       MiiSelectSub::Page::calcAnim((void))
 0002:8036EA54       MiiSelectSub::Page::validateAllIcon((void))
 0002:8036EAF4       MiiSelectSub::Page::prohibitIcon((FileSelectIconID const &))
 0002:8036ECFC       MiiSelect::getIconNum((void))
 0002:8036ED14       MiiSelectIcon::MiiSelectIcon((int,int,int,char const *))
 0002:8036EE48       MiiSelectIcon::appear((FileSelectIconID const &))
 0002:8036F054       MiiSelectIcon::appearMiiDummy((void))
 0002:8036F180       MiiSelectIcon::validate((void))
 0002:8036F1F0       MiiSelectIcon::invalidate((void))
 0002:8036F23C       MiiSelectIcon::prohibit((void))
 0002:8036F2D0       MiiSelectIcon::isMiiDummy(const(void))
 0002:8036F2D8       MiiSelectIcon::copyIconID((FileSelectIconID *))
 0002:8036F2E8       MiiSelectIcon::getTexMap((void))
 0002:8036F35C       MiiSelectIcon::exeCreate((void))
 0002:8036F3B4       MiiSelectIcon::exeWait((void))
 0002:8036F44C       MiiSelectIcon::exeDisappear((void))
 0002:8036F4BC       StarCounter::control((void))
 0002:8036F4F4       MiiSelectIcon::createButton((void))
 0002:8036F59C       MiiSelectIcon::createFaceImageObj((void))
 0002:8036F820       MissLayout::init((JMapInfoIter const &))
 0002:8036F8D4       MissLayout::start((void))
 0002:8036F928       MissLayout::exeActive((void))
 0002:8036FA8C       MoviePlayerSimple::MoviePlayerSimple((void))
 0002:8036FB54       MoviePlayerSimple::~MoviePlayerSimple((void))
 0002:8036FD0C       MoviePlayerSimple::draw(const(void))
 0002:8036FDF8       MoviePlayerSimple::startMovie((char const *,bool))
 0002:8036FEB4       MoviePlayerSimple::stopMovie((void))
 0002:8036FF00       PowerStarList::isExecCapture(const(void))
 0002:8036FFA0       MoviePlayerSimple::isMoviePlaying(const(void))
 0002:8036FFE8       MoviePlayerSimple::getCurrentFrame(const(void))
 0002:80370034       MoviePlayerSimple::setFrameRateDefault((void))
 0002:803700C4       MoviePlayerSimple::setVolume((float,long))
 0002:80370108       MoviePlayerSimple::exeOpen((void))
 0002:803701D0       MoviePlayerSimple::exePreload((void))
 0002:80370228       MoviePlayerSimple::exePlaying((void))
 0002:80370350       MoviePlayerSimple::play((bool))
 0002:80370398       MoviePlayerSimple::stop((void))
 0002:80370494       MoviePlayerSimple::drawCinemaFrame(const(void))
 0002:803705C8       str_80371B14
 0002:803705D0       JGeometry::TBox2<s>::TBox2<s>((short,short,short,short))
 0002:803705E4       @unnamed@MoviePlayingSequence_cpp@::openWipe((@unnamed@MoviePlayingSequence_cpp@::WipeType,long))
 0002:80370634       @unnamed@MoviePlayingSequence_cpp@::closeWipe((@unnamed@MoviePlayingSequence_cpp@::WipeType,long))
 0002:80370680       @unnamed@MoviePlayingSequence_cpp@::getMovieName((MoviePlayingInfo const *))
 0002:803706C8       MoviePlayingSequence::getMovieName((MoviePlayingSequence::MovieType))
 0002:80370734       MoviePlayingSequence::MoviePlayingSequence((char const *,long))
 0002:80370948       LayoutActor::kill((void))
 0002:8037094C       MoviePlayingSequence::exePlayWait((void))
 0002:80370A30       MoviePlayingSequence::exePlayStart((void))
 0002:80370A9C       MoviePlayingSequence::exePlay((void))
 0002:80370B38       MoviePlayingSequence::tryStartSubtitles((void))
 0002:80370BDC       MoviePlayingSequence::tryEnd((void))
 0002:80370C88       MoviePlayingSequence::trySkip((void))
 0002:80370D34       MoviePlayingSequence::exeCloseWipeOnPlaying((void))
 0002:80370D90       MoviePlayingSequence::exeEndWait((void))
 0002:80370EAC       @unnamed@MoviePlayingSequence_cpp@::getMoviePlayingSequence((int))
 0002:80370EEC       MoviePlayingSequenceHolder::MoviePlayingSequenceHolder((char const *))
 0002:80370FBC       MR::createMoviePlayingSequence((void))
 0002:80371018       MR::startMovieEpilogueA((void))
 0002:80371058       MR::startMovieEndingA((void))
 0002:80371098       MR::startMovieEndingB((void))
 0002:803710D8       MR::isEndMovieEpilogueA((void))
 0002:8037110C       MR::isEndMovieEndingA((void))
 0002:80371140       MR::isEndMovieEndingB((void))
 0002:80371174       MR::isMoviePlayingOnSequence((void))
 0002:80371394       MoviePlayingSequence::~MoviePlayingSequence((void))
 0002:8037146C       MovieSubtitles::MovieSubtitles((char const *,long))
 0002:8037158C       MovieSubtitles::exeTalk((void))
 0002:803715D8       MovieSubtitles::exeTalkWait((void))
 0002:8037172C       MovieSubtitlesUtil::getSubtitlesMessageInfo((char const *,long))
 0002:803717AC       MovieSubtitlesUtil::isExistSubtitles((char const *,long))
 0002:8037180C       MovieSubtitlesUtil::getSubtitlesStartStep((char const *,long))
 0002:80371840       MovieSubtitlesUtil::getSubtitlesAppearTime((char const *,long))
 0002:80371874       MovieSubtitlesUtil::getSubtitlesMessageNum((char const *))
 0002:80371920       MovieStarter::init((JMapInfoIter const &))
 0002:803719DC       MovieStarter::appear((void))
 0002:80371A98       MovieStarter::control((void))
 0002:80371BD8       NoteCounter::NoteCounter((char const *))
 0002:80371C3C       NoteCounter::init((JMapInfoIter const &))
 0002:80371C80       NoteCounter::declareNoteNumMaxAndMelody((LiveActor *,long,long,float))
 0002:80371D18       NoteCounter::add((void))
 0002:80371E44       NoteCounter::exeShowToHide((void))
 0002:80371F04       NoteCounter::exeHideToShow((void))
 0002:80371FDC       NoteCounter::tryEndDisp((void))
 0002:80372000       MR::declareNoteNumMaxAndMelodyToCounter((LiveActor *,long,long,float))
 0002:80372060       MR::addNoteToCounter((void))
 0002:80372088       MR::failureNoteCollection((void))
 0002:80372248       ODHEncodeRGB565
 0002:803722AC       CArGBAOdh::compressGbaOdh((uchar *,uchar *,int,int,int,ulong,uchar *,int))
 0002:803723CC       CArGBAOdh::cdj_c_initializeCompressOdh((SArCDJ_OdhMaster *,ushort *,uchar,uchar *,uchar *,ulong))
 0002:80372568       CArGBAOdh::cdj_c_compressLoop((SArCDJ_OdhMaster *))
 0002:803727EC       CArGBAOdh::cdj_c_flashBuffer((SArCDJ_OdhMaster *))
 0002:803728A8       CArGBAOdh::cdj_c_setQuantizationTable((SArCDJ_OdhMaster *,ulong))
 0002:803729C0       CArGBAOdh::cdj_c_makeHeader((SArCDJ_OdhMaster *,ulong))
 0002:80372A2C       CArGBAOdh::cdj_c_colorConv((SArCDJ_OdhMaster *,uchar *,int))
 0002:80372B60       CArGBAOdh::LineConv11((uchar *,uchar *,uchar *,uchar *,ushort,ushort,long const *,int))
 0002:80372DB0       CArGBAOdh::fdct_fast((ulong *,uchar *,ulong,ulong *))
 0002:80373054       CArGBAOdh::huffmanCoder((ushort *,SArCDJ_HuffmanRequest *))
 0002:803732E0       CArGBAOdh::EmitBit((long,long,SArCDJ_HuffmanRequest *))
 0002:80373398       OdhConverter::OdhConverter((void))
 0002:8037340C       OdhConverter::init((JMapInfoIter const &))
 0002:80373494       OdhConverter::convert((void))
 0002:80373580       MR::createOdhConverter((void))
 0002:80373588       MR::requestCaptureOdhImage((void))
 0002:803735B8       MR::isRequestedCaptureOdhImage((void))
 0002:803735FC       MR::captureOdhImage((void))
 0002:8037363C       MR::setPortCaptureOdhImage((void))
 0002:80373754       MR::getOdhImage((void))
 0002:80373798       MR::getOdhImageSize((void))
 0002:803737DC       MR::createAdaptorAndConnectToWiiMessageBoard((char const *,MR::FunctorBase const &))
 0002:803738C4       OneUpBoard::init((JMapInfoIter const &))
 0002:80373948       OneUpBoard::popup((long))
 0002:803739D0       OneUpBoard::calcPos((void))
 0002:80373A44       OneUpBoard::exeAppear((void))
 0002:80373B80       PaneEffectKeeper::PaneEffectKeeper((LayoutActor *,LayoutManager const *,int,char const *))
 0002:80373C2C       PaneEffectKeeper::init((LayoutActor const *,EffectSystem const *))
 0002:80373C5C       PaneEffectKeeper::add((char const *,char const *,char const *))
 0002:80373D90       SpinDriverPathStorage::initializeData((void))
 0002:80373E48       PaneEffectKeeper::clear((void))
 0002:80373ECC       PaneEffectKeeper::find(const(char const *))
 0002:80373ED0       nullsub_24
 0002:80373ED4       PaneEffectKeeper::registerEffect((MultiEmitter *,char const *))
 0002:80373F34       PaneEffectKeeper::find(const(char const *))
 0002:80373FB4       @unnamed@PauseMenu_cpp@::isInvalidBackAstroDome((void))
 0002:80374010       PauseMenu::PauseMenu((void))
 0002:803740A4       PauseMenu::init((JMapInfoIter const &))
 0002:80374384       PauseMenu::appear((void))
 0002:80374528       PauseMenu::draw(const(void))
 0002:80374570       PauseMenu::kill((void))
 0002:803745AC       PauseMenu::control((void))
 0002:80374618       PauseMenu::updateStarPane((void))
 0002:8037483C       PauseMenu::startPaneAnimWithoutButton((char const *))
 0002:803748D8       PauseMenu::isPaneAnimStoppedWithoutButton(const(void))
 0002:80374990       PauseMenu::forceToWaitAllButton((void))
 0002:80374A08       PauseMenu::exeSelecting((void))
 0002:80374C6C       PauseMenu::exeDecided((void))
 0002:80374E08       PauseMenu::exeDisappear((void))
 0002:80374F0C       PauseMenu::exeConfirm((void))
 0002:80374FC8       PauseMenu::exeGameDataSave((void))
 0002:80375044       PauseMenu::exeLuigiLetter((void))
 0002:803751E8       StaffRollPicture::StaffRollPicture((char const *))
 0002:80375230       PeachLetter::init((JMapInfoIter const &))
 0002:803752E8       PeachLetter::movement((void))
 0002:80375360       PeachLetter::exeAppear((void))
 0002:803753F4       PeachLetter::exeWait((void))
 0002:80375484       PrologueLetter::exeDisappear((void))
 0002:803755DC       PictureBookCloseButton::PictureBookCloseButton((bool))
 0002:8037563C       PictureBookCloseButton::init((JMapInfoIter const &))
 0002:803756C0       PictureBookCloseButton::appear((void))
 0002:80375708       PictureBookCloseButton::disappear((void))
 0002:80375744       PictureBookCloseButton::trySelect((void))
 0002:80375834       PictureBookCloseButton::control((void))
 0002:80375948       NrvPictureBookCloseButton::PictureBookCloseButtonNrvSelected::execute(const(Spine *))
 0002:803759E4       @unnamed@PictureBookLayout_cpp@::getTextureNum((long))
 0002:80375A74       @unnamed@PictureBookLayout_cpp@::getPageNum((long))
 0002:80375AF4       PictureBookLayout::PictureBookLayout((long,long,bool))
 0002:80375BBC       PictureBookLayout::init((JMapInfoIter const &))
 0002:80375C88       PictureBookLayout::appear((void))
 0002:80375D58       PictureBookLayout::kill((void))
 0002:80375DC4       PictureBookLayout::makeArchiveList((NameObjArchiveListCollector *,long,long,bool))
 0002:80375E64       J3DAnmTransformFull::getKind(const(void))
 0002:80375E6C       PictureBookLayout::control((void))
 0002:80375ECC       PictureBookLayout::initTexture((void))
 0002:80375FF4       PictureBookLayout::initContentsButton((void))
 0002:803760B4       PictureBookLayout::updateText((void))
 0002:80376178       PictureBookLayout::updateTexture((void))
 0002:80376304       PictureBookLayout::textNext((void))
 0002:8037633C       PictureBookLayout::pageNext((void))
 0002:803763AC       PictureBookLayout::chapterNext((void))
 0002:80376430       PictureBookLayout::updateTexMapChapterBase((void))
 0002:803764A4       PictureBookLayout::isReadedCurrentText(const(void))
 0002:80376544       PictureBookLayout::getReadSpeed(const(void))
 0002:80376578       PictureBookLayout::isBookEndCurrentText(const(void))
 0002:803765F8       PictureBookLayout::setTextAlpha((float))
 0002:80376664       PictureBookLayout::getChapterNumberMax(const(void))
 0002:80376680       PictureBookLayout::isValidCloseButton(const(void))
 0002:80376714       PictureBookLayout::getCurrentMaxTextIndex(const(void))
 0002:80376798       PictureBookLayout::exeOpen((void))
 0002:803769A4       PictureBookLayout::exeContentsSelect((void))
 0002:80376A98       PictureBookLayout::exeContentsFadeOut((void))
 0002:80376C0C       PictureBookLayout::exeFadeIn((void))
 0002:80376D60       PictureBookLayout::exeWaitNoText((void))
 0002:80376D98       PictureBookLayout::exeFadeInText((void))
 0002:80377054       PictureBookLayout::exeWaitWithText((void))
 0002:80377238       PictureBookLayout::exeFadeOutText((void))
 0002:80377430       PictureBookLayout::exePageNext((void))
 0002:803775A4       PictureBookLayout::exeFadeOut((void))
 0002:80377650       PictureBookLayout::exeClose((void))
 0002:8037781C       PictureBookLayout::hideContents((void))
 0002:80377870       PictureBookLayout::getFadeInAlphaTextBG(const(float))
 0002:80377938       PictureBookLayout::getFadeOutAlphaTextBG(const(float))
 0002:80377BE4       MR::getPlayerActionGuidance((void))
 0002:80377C0C       PlayerActionGuidance::PlayerActionGuidance((void))
 0002:80377C80       PlayerActionGuidance::control((void))
 0002:80377DA4       PlayerActionGuidance::init((JMapInfoIter const &))
 0002:80377E18       PlayerActionGuidance::createSpinLayout((void))
 0002:80377E8C       PlayerActionGuidance::createTamakoroLayout((void))
 0002:80377F00       PlayerActionGuidance::exeWaitFocusIn((void))
 0002:80377F54       PlayerActionGuidance::exeFadein((void))
 0002:80377FF0       PlayerActionGuidance::startWaitAnimTamakoro((void))
 0002:803780E4       PlayerActionGuidance::exeDisplay((void))
 0002:80378224       PlayerActionGuidance::exeSuspend((void))
 0002:8037828C       PlayerActionGuidance::exeFadeout((void))
 0002:80378310       PlayerActionGuidance::startAnimAllLayout((char const *))
 0002:80378374       PlayerActionGuidance::startWaitAnimAllLayout((void))
 0002:803783DC       PlayerActionGuidance::setAnimFrameAndStopAllLayout((float))
 0002:80378440       PlayerActionGuidance::hideAllLayout((void))
 0002:8037848C       PlayerActionGuidance::isInVolumePlayer(const(char const *,bool))
 0002:8037867C       PlayerLeft::PlayerLeft((char const *))
 0002:803786D0       PlayerLeft::init((JMapInfoIter const &))
 0002:803787CC       PlayerLeft::appear((void))
 0002:80378828       PlayerLeft::forceAppear((void))
 0002:80378888       PlayerLeft::disappear((void))
 0002:803788A0       PlayerLeft::control((void))
 0002:803788E8       PlayerLeft::exeHide((void))
 0002:80378950       PlayerLeft::exeAppear((void))
 0002:803789D4       PlayerLeft::exeWait((void))
 0002:80378AB8       PlayerLeft::exeDisappear((void))
 0002:80378C08       PlayerMissLeft::PlayerMissLeft((char const *))
 0002:80378C54       PlayerMissLeft::init((JMapInfoIter const &))
 0002:80378D14       PlayerMissLeft::appear((void))
 0002:80378DAC       PlayerMissLeft::exeAppear((void))
 0002:80378EA4       PlayerMissLeft::exeWait((void))
 0002:803790C8       @unnamed@PowerStarList_cpp@::getSortPriority((GalaxyStatusAccessor const *))
 0002:80379164       @unnamed@PowerStarList_cpp@::getDisplayRaceBestTimeNum((void))
 0002:803791BC       @unnamed@PowerStarList_cpp@::getSortedList((@unnamed@PowerStarList_cpp@::ListItem *))
 0002:803793D8       PowerStarList::PowerStarList((void))
 0002:80379464       nullsub_125
 0002:80379468       PowerStarList::init((JMapInfoIter const &))
 0002:803796D0       PowerStarList::appear((void))
 0002:803798B8       PowerStarList::control((void))
 0002:8037993C       PowerStarList::createButtonController((char const *,char const *))
 0002:803799BC       PowerStarList::resetButtonAll((void))
 0002:803799FC       PowerStarList::updateButtonAppearance((void))
 0002:80379B60       PowerStarList::updateList((long,bool))
 0002:8037A150       @unnamed@PowerStarList_cpp@::TextBuffer::TextBuffer((LayoutActor *,char const *const *,long))
 0002:8037A1A4       @unnamed@PowerStarList_cpp@::TextBuffer::addNewLine((long))
 0002:8037A1EC       @unnamed@PowerStarList_cpp@::TextBuffer::update((long))
 0002:8037A25C       @unnamed@PowerStarList_cpp@::TextBuffer::finish((long))
 0002:8037A290       PowerStarList::makeGalaxyNameText(const(wchar_t *,GalaxyStatusAccessor const *,bool))
 0002:8037A31C       PowerStarList::makeStarNumText(const(wchar_t *,GalaxyStatusAccessor const *,bool))
 0002:8037A44C       PowerStarList::makeCoinText(const(wchar_t *,GalaxyStatusAccessor const *,bool))
 0002:8037A4EC       PowerStarList::makeCrownText(const(wchar_t *,GalaxyStatusAccessor const *,bool))
 0002:8037A554       PowerStarList::makeRaceNameText(const(wchar_t *,int,bool))
 0002:8037A5D8       PowerStarList::makeRaceTimeText(const(wchar_t *,int,bool))
 0002:8037A664       PowerStarList::startScrollAnimNext((bool))
 0002:8037A768       PowerStarList::startScrollAnimPrev((void))
 0002:8037A810       PowerStarList::tryShowSeparator((long,float))
 0002:8037A894       PowerStarList::setSeparatorPaneSize((void))
 0002:8037A934       PowerStarList::exeAppear((void))
 0002:8037A9FC       PowerStarList::exeWait((void))
 0002:8037AB10       PowerStarList::exeDisappear((void))
 0002:8037AD10       PowerStarList::exeCaptureStart((void))
 0002:8037AD74       PowerStarList::exeCaptureConfirm((void))
 0002:8037B18C       PrologueLetter::init((JMapInfoIter const &))
 0002:8037B23C       PrologueLetter::kill((void))
 0002:8037B28C       PrologueLetter::pauseOff((void))
 0002:8037B328       PrologueLetter::exeWait((void))
 0002:8037B544       ProloguePictureBook::init((JMapInfoIter const &))
 0002:8037B5B8       ProloguePictureBook::appear((void))
 0002:8037B60C       ProloguePictureBook::kill((void))
 0002:8037B64C       ProloguePictureBook::exePlaying((void))
 0002:8037B724       ProloguePictureBook::exeKeyWait((void))
 0002:8037B7D4       ProloguePictureBook::control((void))
 0002:8037B8D4       NrvProloguePictureBook::ProloguePictureBookActive::execute(const(Spine *))
 0002:8037B928       PurpleCoinCounter::PurpleCoinCounter((char const *))
 0002:8037B984       PurpleCoinCounter::init((JMapInfoIter const &))
 0002:8037BA4C       PurpleCoinCounter::appear((void))
 0002:8037BAE0       PurpleCoinCounter::validate((void))
 0002:8037BB34       PurpleCoinCounter::updateCounter((void))
 0002:8037BC40       PurpleCoinCounter::exeAppear((void))
 0002:8037BD78       ReplaceTagProcessor::ImplArgs::findGroupFunctionInfo((int))
 0002:8037BDE8       ReplaceTagProcessor::Replace((wchar_t *,wchar_t const *))
 0002:8037BF08       ReplaceTagProcessor::ReplaceArgs((wchar_t *,wchar_t const *,__va_list_struct *))
 0002:8037C030       ReplaceTagProcessor::exePictureGroup((wchar_t *,MessageEditorMessageTag const &))
 0002:8037C0F0       ReplaceTagProcessor::exeStringGroup((wchar_t *,MessageEditorMessageTag const &,__va_list_struct *))
 0002:8037C180       __va_list_struct::__as((__va_list_struct const &))
 0002:8037C1B4       ReplaceTagProcessor::exeNumberGroup((wchar_t *,MessageEditorMessageTag const &,__va_list_struct *))
 0002:8037C308       ReplaceTagProcessor::exeLocalizeGroup((wchar_t *,MessageEditorMessageTag const &))
 0002:8037C368       ReplaceTagProcessor::exeLocalizeGroupPlayerName((wchar_t *,uchar))
 0002:8037C40C       ReplaceTagProcessor::exeRaceTimeGroup((wchar_t *,MessageEditorMessageTag const &))
 0002:8037C448       ReplaceTagFunction::ReplaceArgs((wchar_t *,long,wchar_t const *,...))
 0002:8037C51C       SaveIcon::SaveIcon((LayoutActor const *))
 0002:8037C5C8       SaveIcon::calcAnim((void))
 0002:8037C664       ScenarioSelectLayout::ScenarioSelectLayout((EffectSystem *,CameraContext const *))
 0002:8037CDD8       ScenarioSelectLayout::kill((void))
 0002:8037CE74       ScenarioSelectLayout::movement((void))
 0002:8037CF00       ScenarioSelectLayout::calcAnim((void))
 0002:8037CF8C       ScenarioSelectLayout::draw(const(void))
 0002:8037CFCC       ScenarioSelectLayout::calcViewAndEntryStarModel((void))
 0002:8037D048       ScenarioSelectLayout::isReadyToDisappear(const(void))
 0002:8037D09C       ScenarioSelectLayout::isAppearStarEnd(const(void))
 0002:8037D134       ScenarioSelectLayout::isEndAnimStartStep(const(void))
 0002:8037D1F4       ScenarioSelectLayout::control((void))
 0002:8037D24C       ScenarioSelectLayout::updateSelectedScenario((void))
 0002:8037D31C       ScenarioSelectLayout::updateScenarioText((void))
 0002:8037D434       ScenarioSelectLayout::fadeInText((void))
 0002:8037D5C0       ScenarioSelectLayout::fadeOutText((void))
 0002:8037D694       ScenarioSelectLayout::trySelect((void))
 0002:8037D734       ScenarioSelectLayout::getSelectedStar(const(void))
 0002:8037D77C       ScenarioSelectLayout::calcWorldPositionFromScreenPos(const(JGeometry::TVec3<f> *,JGeometry::TVec2<f> const &,float))
 0002:8037D990       ScenarioSelectLayout::calcDisplayScenarioNum(const(long *,long *))
 0002:8037DA94       ScenarioSelectLayout::appearAllStar((long,long,bool))
 0002:8037DBB4       ScenarioSelectLayout::appearStar((long,long,int))
 0002:8037DC54       ScenarioSelectLayout::isAppearStarEndAll(const(void))
 0002:8037DCC8       ScenarioSelectLayout::tryCancel((void))
 0002:8037DD54       ScenarioSelectLayout::setPlayerLeft((void))
 0002:8037DDCC       ScenarioSelectLayout::startAnimAllNewPane((char const *))
 0002:8037DE5C       ScenarioSelectLayout::setAnimRateAllNewPane((float))
 0002:8037DEF0       ScenarioSelectLayout::exeAppearStar((void))
 0002:8037E01C       ScenarioSelectLayout::exeAppear((void))
 0002:8037E0A0       ScenarioSelectLayout::exeWaitScenarioSelect((void))
 0002:8037E180       ScenarioSelectLayout::exeDecide((void))
 0002:8037E244       ScenarioSelectLayout::exeAfterScenarioSelected((void))
 0002:8037E344       ScenarioSelectLayout::exeDisappear((void))
 0002:8037E418       ScenarioSelectLayout::exeCancel((void))
 0002:8037E488       ScenarioSelectLayout::exeAppearCometWarning((void))
 0002:8037E580       ScenarioSelectLayout::exeWaitCometWarning((void))
 0002:8037E788       NrvScenarioSelectLayout::ScenarioSelectLayoutNrvDisappearCometWarning::execute(const(Spine *))
 0002:8037E88C       ScenarioTitle::init((JMapInfoIter const &))
 0002:8037E938       ScenarioTitle::exeAppear((void))
 0002:8037EB04       SceneWipeHolder::SceneWipeHolder((void))
 0002:8037ED70       SceneWipeHolderFunction::getSceneWipeHolder((void))
 0002:8037ED98       SceneWipeHolderFunction::openWipe((char const *,long))
 0002:8037EE10       SceneWipeHolderFunction::closeWipe((char const *,long))
 0002:8037EE88       SceneWipeHolderFunction::forceOpenWipe((char const *))
 0002:8037EED0       SceneWipeHolderFunction::forceCloseWipe((char const *))
 0002:8037EF74       ScreenAlphaCapture::ScreenAlphaCapture((char const *))
 0002:8037EFD4       ScreenAlphaCapture::createScreenAlpha((long,float))
 0002:8037F0EC       ScreenAlphaCapture::captureScreenAlpha((long))
 0002:8037F174       MR::createScreenAlphaSceneObj((long,float))
 0002:8037F1C8       MR::captureScreenAlpha((long))
 0002:8037F204       MR::loadScreenAlphaTexture((long,_GXTexMapID))
 0002:8037F25C       MR::getScreenAlphaTexture((long))
 0002:8037F2F4       ScreenBlurEffect::ScreenBlurEffect((char const *))
 0002:8037F398       ScreenBlurEffect::draw(const(void))
 0002:8037F3F8       ScreenBlurEffect::drawBlur(const(void))
 0002:8037F9EC       ScreenBlurEffect::captureBlur(const(void))
 0002:8037FABC       ScreenPreserver::ScreenPreserver((void))
 0002:8037FB2C       ScreenPreserver::draw(const(void))
 0002:8037FC1C       ScreenPreserver::activate((void))
 0002:8037FC40       ScreenPreserver::deactivate((void))
 0002:8037FCBC       SimpleLayout::SimpleLayout((char const *,char const *,ulong,int))
 0002:8037FD44       SimpleEffectLayout::SimpleEffectLayout((char const *,char const *,ulong,int))
 0002:8037FEC8       StaffRollLine::init((JMapInfoIter const &))
 0002:8037FFA8       StaffRollLine::exeScroll((void))
 0002:8038008C       StaffRollPicture::init((JMapInfoIter const &))
 0002:80380140       StaffRollPicture::exeWork((void))
 0002:803801DC       StaffRollPicture::initReplaceTexture((void))
 0002:8038027C       StaffRollPicture::startPictureAction((long,char const *,char const *))
 0002:80380360       StaffRollPicture::disappearAllPane((void))
 0002:80380434       StaffRoll::StaffRoll((char const *))
 0002:803804B0       StaffRoll::init((JMapInfoIter const &))
 0002:80380634       StaffRoll::appear((void))
 0002:8038067C       StaffRoll::kill((void))
 0002:80380784       StaffRoll::isNextLineEmpty(const(void))
 0002:803807D4       StaffRoll::exePrepareBgm((void))
 0002:80380850       StaffRoll::exeTitleLogoAppear((void))
 0002:803808C8       StaffRoll::exeTitleLogoScroll((void))
 0002:80380968       StaffRoll::exeLineScroll((void))
 0002:80380A54       StaffRoll::exeEndLogoScroll((void))
 0002:80380BF8       StaffRoll::exeInfoAppear((void))
 0002:80380D7C       StaffRoll::exeInfoDisappear((void))
 0002:80380DD0       StaffRoll::exePause((void))
 0002:80380E18       StaffRoll::exePrepareSave((void))
 0002:80380E7C       StaffRoll::exeSave((void))
 0002:80380FA4       StaffRoll::calcAnim((void))
 0002:80381034       StaffRoll::draw(const(void))
 0002:803810E8       StaffRoll::setNrvNextInfo((void))
 0002:803811C0       StaffRoll::tryGenerateLine((void))
 0002:803812C4       StaffRoll::makeLine((void))
 0002:8038155C       StaffRoll::getDeadLineLayout(const(void))
 0002:803815C8       MR::getStaffRoll((void))
 0002:80381818       NrvStaffRoll::StaffRollNrvRestart::execute(const(Spine *))
 0002:80381894       NrvStaffRoll::StaffRollNrvPrepareInfo::execute(const(Spine *))
 0002:80381908       NrvStaffRoll::StaffRollNrvPrepareDemo::execute(const(Spine *))
 0002:80381AD4       DisplayInformationForResult::exeAppear((void))
 0002:80381B60       DisplayInformationForResult::exeDisplay((void))
 0002:80381BC8       DisplayInformationForResult::exeDisappear((void))
 0002:80381C18       StageResultInformer::StageResultInformer((void))
 0002:80381CAC       StageResultInformer::init((JMapInfoIter const &))
 0002:80381D20       StageResultInformer::appear((void))
 0002:80381D84       StageResultInformer::kill((void))
 0002:80381DCC       StageResultInformer::exeAppearGetPowerStar((void))
 0002:80381F2C       StageResultInformer::exeWaitBeforeCountUpPowerStar((void))
 0002:80381F98       StageResultInformer::exeCountUpPowerStar((void))
 0002:80382048       StageResultInformer::exeDisplayUpdateBestScore((void))
 0002:80382090       StageResultInformer::exeDisappearUpdateBestScore((void))
 0002:803820F8       StageResultInformer::exeAppearUpdateBestScore((void))
 0002:80382264       StageResultInformer::exeAppearGetStarPiece((void))
 0002:80382340       StageResultInformer::exeDisplayGetStarPiece((void))
 0002:803824B0       StageResultInformer::exeWaitBeforeDisappearGetStarPiece((void))
 0002:8038255C       StageResultInformer::exeDisappearGetStarPiece((void))
 0002:803825D8       StageResultInformer::exeShowGetPictureBook((void))
 0002:8038266C       StageResultInformer::initBestScoreWindow((void))
 0002:80382724       StageResultInformer::decideNextNerve((void))
 0002:80382910       StageResultInformer::tryWaitSystemPadTriggerDecide((Nerve const *))
 0002:80382990       StageResultInformer::tryWaitIntervalBeforeKeyWait((Nerve const *,int))
 0002:80382A08       StageResultInformer::tryShowAndKeyWaitInformationWindow((char const *,Nerve const *))
 0002:80382AA8       StageResultInformer::setCounterPaneShowHide((bool,bool,bool))
 0002:80382E3C       @unnamed@StageResultInformer_cpp@::StageResultInformerShowGalaxyMap::execute(const(Spine *))
 0002:80382FC8       StarCounter::init((JMapInfoIter const &))
 0002:8038307C       StarCounter::appear((void))
 0002:80383188       StarCounter::exeCountUp((void))
 0002:8038336C       NrvStarCounter::StarCounterNrvWait::execute(const(Spine *))
 0002:803833F4       StarPieceCounter::StarPieceCounter((char const *))
 0002:80383460       StarPieceCounter::init((JMapInfoIter const &))
 0002:80383598       StarPieceCounter::appear((void))
 0002:80383608       StarPieceCounter::forceAppear((bool))
 0002:803836A8       StarPieceCounter::disappear((bool))
 0002:80383768       StarPieceCounter::forceSync((void))
 0002:803837A4       StarPieceCounter::tryOnModeTicoEat((bool))
 0002:803837FC       StarPieceCounter::updateCounter((void))
 0002:803838D8       StarPieceCounter::updateCounterValue((void))
 0002:80383A2C       StarPieceCounter::isValidAppearSituation(const(void))
 0002:80383A94       StarPieceCounter::isDispCenter(const(void))
 0002:80383AF4       StarPieceCounter::tryChangeModeTicoEat((int))
 0002:80383BAC       StarPieceCounter::exeHide((void))
 0002:80383C30       StarPieceCounter::exeAppear((void))
 0002:80383DA4       StarPieceCounter::exeWait((void))
 0002:80383E1C       StarPieceCounter::exeDisappear((void))
 0002:80383F80       CounterLayoutAppearer::setAppearOffset((JGeometry::TVec2<f> const &))
 0002:80383FEC       StarPointerBlur::StarPointerBlur((JUTTexture *))
 0002:80384118       StarPointerBlur::BlurPoint::BlurPoint((void))
 0002:8038413C       StarPointerBlur::show((void))
 0002:80384188       StarPointerBlur::hide((void))
 0002:803841A8       StarPointerBlur::hideAll((void))
 0002:803841E4       StarPointerBlur::movement((void))
 0002:80384284       StarPointerBlur::updatePoint((JGeometry::TVec2<f> const &,bool,JGeometry::TVec2<f> *))
 0002:803843B4       StarPointerBlur::findDrawPointRange(const(ushort *,ushort *))
 0002:80384468       StarPointerBlur::draw(const(void))
 0002:803844A8       StarPointerBlur::draw2(const(void))
 0002:80384718       StarPointerBlur::initDraw(const(void))
 0002:80384938       StarPointerCommandStream::StarPointerCommandStream((JGeometry::TVec2<f> const *))
 0002:803849B4       StarPointerCommandStream::start((JGeometry::TVec3<f> const *,bool))
 0002:80384A2C       MR::showLayout((LayoutActor *))
 0002:80384A30       StarPointerCommandStream::hide((void))
 0002:80384A74       StarPointerCommandStream::clear((void))
 0002:80384A84       StarPointerCommandStream::init((JMapInfoIter const &))
 0002:80384B54       StarPointerCommandStream::control((void))
 0002:80384C10       StarPointerCommandStream::calcPose((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:80384D0C       StarPointerCommandStream::exeWait((void))
 0002:80384D70       StarPointerCommandStream::exeSignal((void))
 0002:80384DB8       StarPointerCommandStream::calcLineWidth(const(float))
 0002:80384E58       __sinit__StarPointerCommandStream_cpp
 0002:80384EE0       DpdInfo::DpdInfo((void))
 0002:80384F04       StarPointerController::StarPointerController((void))
 0002:80385034       StarPointerController::storeDataFromCallback((float const *,float const *))
 0002:8038513C       StarPointerController::storePastPointingData((void))
 0002:80385200       StarPointerController::calcPastPointingPosOnScreen(const(JGeometry::TVec2<f> *,long))
 0002:80385490       StarPointerController::calcViewDistanceZ((JGeometry::TVec3<f> const &,float *[4]))
 0002:803854F0       StarPointerDirector::StarPointerDirector((void))
 0002:803855F4       StarPointerDirector::update((void))
 0002:80385758       StarPointerDirector::draw((void))
 0002:803857E4       StarPointerDirector::startHandPointer((void))
 0002:803857FC       StarPointerDirector::startHandPointerReactionWithCrossCursor((void))
 0002:80385814       StarPointerDirector::startFingerPointer((void))
 0002:8038582C       StarPointerDirector::startStarPointer((void))
 0002:80385844       StarPointerDirector::startStarPointerNozzle((void))
 0002:8038585C       StarPointerDirector::setGameSceneCameraMtx((void))
 0002:803858C0       StarPointerDirector::getStarPointerController(const(long))
 0002:803858D0       StarPointerDirector::getStarPointerLayout(const(long))
 0002:803858E0       StarPointerTransformHolder::StarPointerTransformHolder((void))
 0002:8038592C       StarPointerTransformHolder::movement((void))
 0002:80385A4C       StarPointerPeekZ::StarPointerPeekZ((void))
 0002:80385AA8       StarPointerPeekZ::setDrawSyncToken((void))
 0002:80385AF0       StarPointerPeekZ::drawSyncCallback((ushort))
 0002:80385F0C       StarPointerFunction::forceInsideScreenEdge((JGeometry::TVec2<f> *))
 0002:80386000       StarPointerFunction::getStarPointerDirector((void))
 0002:80386018       StarPointerFunction::getPastPointNum((long))
 0002:80386054       StarPointerFunction::getPastPosition((long,long))
 0002:803860A4       StarPointerFunction::getNextPastPointNum((long))
 0002:803860E0       StarPointerFunction::canShoot((long))
 0002:8038623C       JMath::gekko_ps_copy16((void *,void const *))
 0002:80386280       StarPointerGuidance::StarPointerGuidance((char const *))
 0002:80386304       StarPointerGuidance::init((JMapInfoIter const &))
 0002:80386430       StarPointerGuidance::control((void))
 0002:80386498       StarPointerGuidance::checkRequest2P((void))
 0002:803865B8       StarPointerGuidance::checkRequest1P((void))
 0002:80386880       StarPointerGuidance::exeAppearCore((Spine *,char const *,ulong,Nerve const *))
 0002:80386944       StarPointerGuidance::exeWaitCore((Spine *,char const *,ulong))
 0002:803869F0       StarPointerGuidance::exeEndCore((Spine *,char const *,ulong))
 0002:80386AD0       StarPointerGuidance::request1PGuidance((char const *,bool))
 0002:80386B68       StarPointerGuidance::tryResetTimeout((void))
 0002:80386BF8       StarPointerGuidance::isExistGuidance((void))
 0002:80386C50       StarPointerGuidance::isExistFrame1P((void))
 0002:80386C8C       StarPointerGuidance::isExistFrame2P((void))
 0002:80386CC8       StarPointerGuidance::deactive((void))
 0002:80386EC8       NrvStarPointerGuidance::HostTypeNrvWait2P::execute(const(Spine *))
 0002:80386EF8       NrvStarPointerGuidance::HostTypeNrvAppear2P::execute(const(Spine *))
 0002:80386F14       NrvStarPointerGuidance::HostTypeNrvWaitBlueStarGuide::execute(const(Spine *))
 0002:80386F44       NrvStarPointerGuidance::HostTypeNrvAppearBlueStarGuide::execute(const(Spine *))
 0002:80386F60       NrvStarPointerGuidance::HostTypeNrvWait1P::execute(const(Spine *))
 0002:80386F90       NrvStarPointerGuidance::HostTypeNrvAppear1P::execute(const(Spine *))
 0002:803872A0       LayoutActor::kill((void))
 0002:803873C0       StarPointerLayout::exeWait((void))
 0002:80387A0C       StarPointerLayout::tearDownHold((void))
 0002:80387A9C       StarPointerLayout::exeRelease((void))
 0002:80387C94       StarPointerLayout::exeOnReaction((void))
 0002:80387E48       StarPointerLayout::updateTouch((void))
 0002:80387ED8       StarPointerLayout::isTouch((void))
 0002:803881FC       StarPointerLayout::tearDownHide((void))
 0002:80388978       StarPointerLayout::calcPoseNozzle((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:80388B34       def_80388A8C
 0002:80388B94       StarPointerLayout::isChanceToRumble(const(void))
 0002:80388C38       StarPointerLayout::resetSameNerve((void))
 0002:80388EBC       StarPointerLayout::startAnimHandPaa((void))
 0002:80388F28       StarPointerLayout::startAnimHandGuu((void))
 0002:80388F94       StarPointerLayout::startAnimHandFinger((void))
 0002:8038904C       StarPointerNumber::StarPointerNumber((StarPointerLayout *,long,char const *))
 0002:803890DC       StarPointerNumber::control((void))
 0002:80389230       StarPointerNumber::isOffState(const(void))
 0002:803892E4       StarPointerNumber::startAnimPosition((ulong))
 0002:8038956C       StarPointerBlur::setPortAndColor((long,_GXColor const *,_GXColor const *))
 0002:8038957C       StarPointerTarget::StarPointerTarget((float,JGeometry::TVec3<f> const *,float *[4],JGeometry::TVec3<f>))
 0002:803895A4       StarPointerTarget::calcScreenPosition(const(JGeometry::TVec2<f> *))
 0002:80389600       StarPointerTarget::isPointing(const(JGeometry::TVec2<f> const &,float,float))
 0002:80389700       StarPointerTarget::calcPosition(const(JGeometry::TVec3<f> *))
 0002:8038984C       StarPointerTarget::calcRadius2d(const(float,float,float))
 0002:803899A4       StarPointerTarget::calcScreenPositionFromView(const(JGeometry::TVec2<f> *,JGeometry::TVec3<f> const &))
 0002:80389B64       StarPointerLayoutTarget::StarPointerLayoutTarget((LayoutActor *,char const *,char const *))
 0002:80389B94       StarPointerLayoutTarget::isPointing(const(JGeometry::TVec2<f> const &))
 0002:80389BC0       StarPointerLayoutTarget::isPointingCircle(const(JGeometry::TVec2<f> const &))
 0002:80389C2C       StarPointerLayoutTarget::isPointingRectangle(const(JGeometry::TVec2<f> const &))
 0002:80389CC8       StarPointerLayoutTarget::calcBasePos(const(JGeometry::TVec2<f> *))
 0002:80389D60       StarPointerLayoutTargetKeeper::StarPointerLayoutTargetKeeper((int))
 0002:80389DB8       StarPointerLayoutTargetKeeper::addTargetCircle((LayoutActor *,char const *,float,JGeometry::TVec2<f> const &,char const *))
 0002:80389E60       StarPointerLayoutTargetKeeper::getTarget(const(char const *))
 0002:80389EDC       StarPointerLayoutTargetKeeper::registerTarget((StarPointerLayoutTarget *))
 0002:80389EFC       SubMeterLayout::SubMeterLayout((char const *,char const *))
 0002:80389F74       SubMeterLayout::init((JMapInfoIter const &))
 0002:80389FF4       SubMeterLayout::setLifeRatio((float))
 0002:8038A060       SubMeterLayout::requestDeactivate((void))
 0002:8038A094       SubMeterLayout::requestFrameIn((void))
 0002:8038A14C       SubMeterLayout::requestFrameOut((void))
 0002:8038A188       SubMeterLayout::control((void))
 0002:8038A444       SuddenDeathMeter::SuddenDeathMeter((char const *,char const *))
 0002:8038A4D8       SuddenDeathMeter::init((JMapInfoIter const &))
 0002:8038A5F4       SuddenDeathMeter::control((void))
 0002:8038A694       SuddenDeathMeter::requestActive((void))
 0002:8038A6F8       SuddenDeathMeter::requestDeactivate((void))
 0002:8038A784       SuddenDeathMeter::exeAppear((void))
 0002:8038A7EC       SuddenDeathMeter::exeWait((void))
 0002:8038A834       SuddenDeathMeter::exePowerUp((void))
 0002:8038A8C0       SuddenDeathMeter::exeMeterMove((void))
 0002:8038A968       SuddenDeathMeter::exeCounterMove((void))
 0002:8038A9E4       SuddenDeathMeter::exeBreakMeter((void))
 0002:8038AAB0       SuddenDeathMeter::exeZeroMeter((void))
 0002:8038AB18       SuddenDeathMeter::exeZeroMeterBreak((void))
 0002:8038AB7C       SuddenDeathMeter::setCount((long))
 0002:8038AC70       SuddenDeathMeter::setPowerUpMeterPosition((JGeometry::TVec2<f> const &))
 0002:8038ACE8       SuddenDeathMeter::setCountAnimFrame((void))
 0002:8038AD74       SuddenDeathMeter::setRecoveryCountAnimFrame((void))
 0002:8038AF78       SurfingGuidance::SurfingGuidance((void))
 0002:8038AFD4       SurfingGuidance::init((JMapInfoIter const &))
 0002:8038B2F4       SurfingGuidance::exeFadeIn((void))
 0002:8038B368       SurfingGuidance::exeLevelOffReady((void))
 0002:8038B41C       SurfingGuidance::exeTurnLeftReady((void))
 0002:8038B4D0       SurfingGuidance::exeTurnRightReady((void))
 0002:8038B584       SurfingGuidance::exeFadeOut((void))
 0002:8038B784       @unnamed@SurfingGuidance_cpp@::SurfingGuidanceLevelOffHold::execute(const(Spine *))
 0002:8038B96C       SysInfoWindow::SysInfoWindow((SysInfoWindow::SysInfoWindowType,SysInfoWindow::SysInfoExecuteType))
 0002:8038BA30       SysInfoWindow::init((JMapInfoIter const &))
 0002:8038BB2C       SysInfoWindow::movement((void))
 0002:8038BB78       SysInfoWindow::calcAnim((void))
 0002:8038BBC4       SysInfoWindow::draw(const(void))
 0002:8038BC10       SysInfoWindow::appear((void))
 0002:8038BC80       SysInfoWindow::appear((char const *,SysInfoWindow::SysInfoType,SysInfoWindow::SysInfoTextPos,SysInfoWindow::SysInfoMessageType))
 0002:8038BE34       SysInfoWindow::kill((void))
 0002:8038BE74       SysInfoWindow::forceKill((void))
 0002:8038BED4       SysInfoWindow::setYesNoSelectorSE((char const *,char const *,char const *))
 0002:8038BEE8       SysInfoWindow::getLayoutName(const(void))
 0002:8038BF24       SysInfoWindow::exeWait((void))
 0002:8038C000       SysInfoWindow::exeDisappear((void))
 0002:8038C0EC       SysInfoWindow::resetYesNoSelectorSE((void))
 0002:8038C10C       SysInfoWindow::setTextBoxArgString((wchar_t const *,long))
 0002:8038C134       MR::createSysInfoWindow((void))
 0002:8038C188       MR::createSysInfoWindowExecuteWithChildren((void))
 0002:8038C1DC       MR::createSysInfoWindowMiniExecuteWithChildren((void))
 0002:8038C300       NrvSysInfoWindow::SysInfoWindowNrvAppear::execute(const(Spine *))
 0002:8038C314       SystemWipeHolder::SystemWipeHolder((void))
 0002:8038C364       SystemWipeHolder::init((JMapInfoIter const &))
 0002:8038C484       SystemWipeHolder::movement((void))
 0002:8038C5B8       SystemWipeHolder::calcAnim((void))
 0002:8038C654       SystemWipeHolder::draw(const(void))
 0002:8038C744       SystemWipeHolder::startGameScreenCapture((void))
 0002:8038C758       SystemWipeHolder::drawGameScreenCapture(const(void))
 0002:8038C848       SystemWipeHolder::updateWipe((char const *))
 0002:8038C89C       MR::createSystemWipeHolder((void))
 0002:8038C944       @unnamed@THPSimplePlayerWrapper_cpp@::readAsyncCallBackFunc((long,DVDFileInfo *))
 0002:8038CB88       THPSimplePlayerWrapper::quit((void))
 0002:8038CC18       THPSimplePlayerWrapper::close((void))
 0002:8038CEC4       THPSimplePlayerWrapper::loadStop((void))
 0002:8038D1CC       THPSimplePlayerWrapper::drawCurrentFrame((_GXRenderModeObj *,ulong,ulong,ulong,ulong))
 0002:8038D264       THPSimplePlayerWrapper::getVideoInfo(const(THPVideoInfo *))
 0002:8038D2AC       THPSimplePlayerWrapper::getFrameRate(const(void))
 0002:8038D2C8       THPSimplePlayerWrapper::getTotalFrame(const(void))
 0002:8038D34C       THPSimplePlayerWrapper::readFrameAsync((void))
 0002:8038D420       THPSimplePlayerWrapper::checkPrefetch((void))
 0002:8038D494       THPSimplePlayerWrapper::dvdCallBack((long))
 0002:8038D56C       THPSimplePlayerWrapper::readAsyncCallBack((long))
 0002:8038D6FC       THPSimplePlayerWrapper::getNextBuffer(const(ulong))
 0002:8038D718       THPSimplePlayerWrapper::tryDvdOpen((char const *))
 0002:8038D80C       THPSimplePlayerWrapper::exeReadHeader((void))
 0002:8038D868       THPSimplePlayerWrapper::exeReadFrameComp((void))
 0002:8038D8C8       THPSimplePlayerWrapper::exeReadAudioComp((void))
 0002:8038D980       THPSimplePlayerWrapper::endReadHeader((void))
 0002:8038D9F4       THPSimplePlayerWrapper::endReadFrameComp((void))
 0002:8038DA44       THPSimplePlayerWrapper::endReadVideoComp((void))
 0002:8038DA98       THPSimplePlayerWrapper::endReadAudioComp((void))
 0002:8038DC44       THPSimplePlayerWrapper::checkComponentsInFrame((long))
 0002:8038DCC0       THPSimplePlayerWrapper::tryFinishDvdOpen((void))
 0002:8038DD78       THPSimplePlayerWrapper::isAudioProcessValid((void))
 0002:8038E1D4       THPSimplePlayerWrapper::setVolume((long,long))
 0002:8038E30C       THPSimplePlayerStaticAudio::audioCallback((long))
 0002:8038E410       nullsub_61
 0002:8038E414       TimeUpLayout::init((JMapInfoIter const &))
 0002:8038E424       TimeLimitLayout::TimeLimitLayout((ulong))
 0002:8038E498       TimeLimitLayout::init((JMapInfoIter const &))
 0002:8038E578       LayoutActor::kill((void))
 0002:8038E584       TimeLimitLayout::setDisplayModeOnNormal((bool))
 0002:8038E5E8       TimeLimitLayout::resetFrame((void))
 0002:8038E644       TimeLimitLayout::addFrame((void))
 0002:8038E668       TimeLimitLayout::updateTextBox((void))
 0002:8038E684       TimeLimitLayout::exeAppear((void))
 0002:8038E6F0       TimeLimitLayout::exeCountDown((void))
 0002:8038E758       TimeLimitLayout::exeScaleUp((void))
 0002:8038E7CC       TimeLimitLayout::exeScaleKeep((void))
 0002:8038E878       TimeLimitLayout::exeScaleDown((void))
 0002:8038E910       TimeLimitLayout::exeFadeout((void))
 0002:8038E97C       TimeLimitLayout::control((void))
 0002:8038EA10       TimeLimitLayout::getCurrentTiming(const(void))
 0002:8038EA80       TimeLimitLayout::updateNormal((void))
 0002:8038ED6C       TitleSequenceProductSub::LogoLayout::LogoLayout((void))
 0002:8038EDF0       TitleSequenceProduct::TitleSequenceProduct((void))
 0002:8038F028       TitleSequenceProduct::exeBgmPrepare((void))
 0002:8038F084       TitleSequenceProduct::exeLogoFadein((void))
 0002:8038F104       TitleSequenceProduct::exeLogoWait((void))
 0002:8038F1CC       TitleSequenceProduct::exeLogoDisplay((void))
 0002:8038F30C       TitleSequenceProduct::exeDecide((void))
 0002:8038F3A0       TitleSequenceProduct::exeDead((void))
 0002:8038F41C       TitleSequenceProduct::appear((void))
 0002:8038F46C       TitleSequenceProduct::updateButtonReaction((TriggerChecker *,char const *))
 0002:8038F4F8       TitleSequenceProduct::updatePressStartReaction((void))
 0002:8038F718       WaterCameraFilter::WaterCameraFilter((void))
 0002:8038F7A0       WaterCameraFilter::init((JMapInfoIter const &))
 0002:8038F8B4       WaterCameraFilter::exeAirToWater((void))
 0002:8038F93C       WaterCameraFilter::exeWaterToAir((void))
 0002:8038F9C4       WaterCameraFilter::control((void))
 0002:8038FAE4       WaterCameraFilter::draw(const(void))
 0002:8038FD04       WaterCameraFilter::loadMaterial(const(void))
 0002:803902BC       WipeFade::WipeFade((char const *,Color8 const &))
 0002:803903A8       WipeFade::control((void))
 0002:80390408       WipeFade::draw(const(void))
 0002:80390518       WipeFade::wipe((long))
 0002:803905A4       WipeFade::forceClose((void))
 0002:803905FC       WipeFade::forceOpen((void))
 0002:8039061C       WipeFade::isOpen(const(void))
 0002:80390648       WipeFade::isClose(const(void))
 0002:80390674       WipeFade::isWipeIn(const(void))
 0002:803906A0       WipeFade::isWipeOut(const(void))
 0002:8039077C       WipeKoopa::init((JMapInfoIter const &))
 0002:803907F8       WipeGameOver::wipe((long))
 0002:80390858       WipeGameOver::forceClose((void))
 0002:803908AC       WipeGameOver::isOpen(const(void))
 0002:80390908       WipeGameOver::isClose(const(void))
 0002:80390970       WipeGameOver::isWipeOut(const(void))
 0002:80390AD4       WipeHolderBase::WipeHolderBase((ulong,char const *))
 0002:80390B3C       WipeHolderBase::setCurrent((char const *))
 0002:80390BD8       WipeHolderBase::wipe((char const *,long))
 0002:80390C34       WipeHolderBase::forceClose((char const *))
 0002:80390C80       WipeHolderBase::forceOpen((char const *))
 0002:80390CCC       WipeHolderBase::isOpen(const(void))
 0002:80390CE0       WipeHolderBase::isClose(const(void))
 0002:80390CE4       JKRHeap::getFreeSize((void))
 0002:80390CF4       WipeHolderBase::isWipeIn(const(void))
 0002:80390CF8       JKRHeap::getMaxFreeBlock((void))
 0002:80390D08       WipeHolderBase::isWipeOut(const(void))
 0002:80390D1C       WipeHolderBase::isCurrent(const(char const *))
 0002:80390D68       WipeHolderBase::addWipeLayout((WipeLayoutBase *))
 0002:80390DD0       WipeHolderBase::updateWipe((char const *))
 0002:80390E3C       WipeHolderBase::findWipe(const(char const *))
 0002:80390EEC       WipeKoopa::WipeKoopa((void))
 0002:80390F80       WipeKoopa::exeWipeOut((void))
 0002:80391050       WipeKoopa::wipe((long))
 0002:803910AC       WipeKoopa::forceClose((void))
 0002:8039125C       WipeRing::WipeRing((bool,char const *))
 0002:803912CC       WipeRing::init((JMapInfoIter const &))
 0002:80391350       WipeRing::exeWipeIn((void))
 0002:803914A0       WipeRing::exeWipeOut((void))
 0002:80391620       WipeRing::wipe((long))
 0002:80391740       WipeRing::forceClose((void))
 0002:803917B4       WipeRing::forceOpen((void))
 0002:80391818       WipeRing::setCenterPos((JGeometry::TVec3<f> const &))
 0002:803918C4       WipeRing::startAnim((char const *))
 0002:80391960       WipeRing::getMarioCenterPos((JGeometry::TVec3<f> *))
 0002:80391A38       WipeRing::calcRadius(const(void))
 0002:80391B88       WipeRing::calcMaxRadius(const(void))
 0002:80391BC8       WipeRing::updatePlayerPos((void))
 0002:80391D80       @unnamed@WipeRing_cpp@::WipeRingNrvOpen::execute(const(Spine *))
 0002:80391DE4       MR::calcDistanceXY((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80391E0C       YesNoController::YesNoController((LayoutActor *))
 0002:80391F04       YesNoController::appear((void))
 0002:80391F14       YesNoController::kill((void))
 0002:80391F24       YesNoController::update((void))
 0002:80391F74       YesNoController::isSelectedYes(const(void))
 0002:80391FDC       YesNoController::setSE((char const *,char const *,char const *))
 0002:80391FEC       YesNoController::trySelect((void))
 0002:80392034       YesNoController::deleteEffectIfExist((char const *))
 0002:803920D4       YesNoController::forceDeleteEffectAllIfExist((void))
 0002:8039212C       YesNoController::exeSelecting((void))
 0002:80392274       YesNoController::exeDecided((void))
 0002:80392388       YesNoController::exeDisappear((void))
 0002:80392514       NrvYesNoController::YesNoControllerNrvSelected::execute(const(Spine *))
 0002:8039254C       YesNoLayout::YesNoLayout((void))
 0002:803925AC       YesNoLayout::init((JMapInfoIter const &))
 0002:8039263C       YesNoLayout::appear((void))
 0002:803926C0       YesNoLayout::setInformationMessage((char const *))
 0002:803926D4       YesNoLayout::setSelectMessage((char const *,char const *))
 0002:80392738       YesNoLayout::exeSelecting((void))
 0002:8039281C       SpkSpeakerCtrl::setMixingBuffer((SpkMixingBuffer *))
 0002:80392850       SpkSpeakerCtrl::setup((void))
 0002:80392944       SpkSpeakerCtrl::connect((long))
 0002:803929C4       SpkSpeakerCtrl::disconnect((long))
 0002:80392A40       SpkSpeakerCtrl::setSpeakerOn((long))
 0002:80392AD0       SpkSpeakerCtrl::setSpeakerOnCallback((long,long))
 0002:80392B60       SpkSpeakerCtrl::setSpeakerPlay((long))
 0002:80392BF0       SpkSpeakerCtrl::startPlayCallback((long,long))
 0002:80392C9C       SpkSpeakerCtrl::setSpeakerOff((long))
 0002:80392CCC       SpkSpeakerCtrl::retryConnection((long))
 0002:80392D0C       SpkSpeakerCtrl::reconnect((long))
 0002:80392D34       SpkSpeakerCtrl::framework((void))
 0002:80392D80       SpkSpeakerCtrl::reconnectProcess((long))
 0002:80392E3C       SpkSpeakerCtrl::initReconnect((long))
 0002:80392E60       SpkSpeakerCtrl::continuousUsingProcess((long))
 0002:80392E98       SpkSpeakerCtrl::updateSpeaker((OSAlarm *,OSContext *))
 0002:80392FB8       SpkSpeakerCtrl::isEnable((long))
 0002:80393038       SpkSpeakerCtrl::getDeviceVolume((long))
 0002:8039309C       __sinit__SpkSpeakerCtrl_cpp
 0002:80393110       SpkSystem::SpkSystem((JKRHeap *))
 0002:8039320C       SpkSystem::setResource((JKRArchive *,ushort,ushort))
 0002:80393280       SpkSystem::framework((void))
 0002:803932BC       SpkSystem::newSoundMemPool((long))
 0002:803932D0       SpkSpeakerCtrl::connect((long))
 0002:803932D4       SpkSpeakerCtrl::disconnect((long))
 0002:803932D8       SpkSystem::reconnect((long))
 0002:80393328       SpkSpeakerCtrl::getDeviceVolume((long))
 0002:80393410       SpkMixingBuffer::SpkMixingBuffer((JKRHeap *))
 0002:8039347C       SpkMixingBuffer::mix((long,short *,long,float,long))
 0002:8039351C       SpkMixingBuffer::update((long))
 0002:8039356C       SpkWave::setResource((void *))
 0002:803935AC       SpkWave::getWaveSize(const(long))
 0002:803935E4       SpkWave::getLoopStartPos(const(long))
 0002:8039361C       SpkWave::getLoopEndPos(const(long))
 0002:80393654       SpkWave::getWave(const(long))
 0002:8039368C       SpkWave::getWaveData(const(long))
 0002:803936A4       SpkTable::SpkTable((void))
 0002:803936BC       SpkTable::setResource((void *))
 0002:80393728       SpkData::SpkData((JKRArchive *))
 0002:80393770       SpkData::loadTable((ushort))
 0002:803937AC       SpkData::loadWave((ushort))
 0002:803937E8       SpkData::isValid(const(void))
 0002:8039382C       SpkSoundVolume::SpkSoundVolume((void))
 0002:80393858       SpkSoundVolume::setRelease((long))
 0002:803938AC       SpkSoundVolume::setFadeOut((long))
 0002:80393930       SpkSoundVolume::calc((bool &))
 0002:80393A28       SpkSound::SpkSound((void))
 0002:80393AA0       SpkSound::~SpkSound((void))
 0002:80393B14       SpkSound::update((float))
 0002:80393CFC       SpkSound::stop((long))
 0002:80393D90       SpkSound::start((long,long))
 0002:80393DE0       SpkSound::unlock((void))
 0002:80393DF8       SpkSound::setWaveData((long))
 0002:80393F0C       SpkSoundHolder::SpkSoundHolder((void))
 0002:80393F84       SpkSoundHolder::startSound((long,long,SpkSoundHandle *))
 0002:803940B4       SpkSoundHolder::update((long))
 0002:8039410C       SpkSoundHolder::updateEachSound((long))
 0002:803941C0       SpkSoundHolder::freeDeadSound((long))
 0002:80394234       SpkSoundHolder::framework((void))
 0002:80394390       AlreadyDoneInfo::AlreadyDoneInfo((void))
 0002:803943D8       AlreadyDoneInfo::clear((void))
 0002:803943F4       AlreadyDoneInfo::init((char const *,long,long))
 0002:80394444       AlreadyDoneInfo::isEqual(const(AlreadyDoneInfo const &))
 0002:8039448C       AlreadyDoneInfo::set((bool))
 0002:803944B4       AlreadyDoneFlagInGalaxy::AlreadyDoneFlagInGalaxy((int))
 0002:80394528       JAUSoundAnimator::removeAnimation((void))
 0002:80394534       AlreadyDoneFlagInGalaxy::setupFlag((char const *,JMapInfoIter const &,ulong *))
 0002:80394640       AlreadyDoneFlagInGalaxy::updateValue((int,ulong))
 0002:80394658       ArchiveHolderArchiveEntry::ArchiveHolderArchiveEntry((void *,JKRHeap *,char const *))
 0002:8039470C       ArchiveHolderArchiveEntry::~ArchiveHolderArchiveEntry((void))
 0002:80394778       ArchiveHolder::ArchiveHolder((void))
 0002:803947D0       ArchiveHolder::createAndAdd((void *,JKRHeap *,char const *))
 0002:8039486C       ArchiveHolder::getArchive(const(char const *))
 0002:803948A0       ArchiveHolder::getArchiveAndHeap(const(char const *,JKRArchive **,JKRHeap **))
 0002:803948F0       ArchiveHolder::removeIfIsEqualHeap((JKRHeap *))
 0002:803949F0       ArchiveHolder::findEntry(const(char const *))
 0002:80394A6C       AudSystemWrapper::AudSystemWrapper((JKRSolidHeap *,JKRHeap *))
 0002:80394AEC       AudSystemWrapper::requestResourceForInitialize((void))
 0002:80394B78       AudSystemWrapper::createAudioSystem((void))
 0002:80394C18       AudSystemWrapper::createSoundNameConverter((void))
 0002:80394CB4       AudSystemWrapper::movement((void))
 0002:80394CDC       AudSystemWrapper::isLoadDoneScenarioWaveData(const(void))
 0002:80394D0C       AudSystemWrapper::loadScenarioWaveData((char const *,char const *,long))
 0002:80394D5C       AudSystemWrapper::loadStageWaveData((char const *,char const *,bool))
 0002:80394E54       AudSystemWrapper::isPermitToReset(const(void))
 0002:80394E64       AudSystemWrapper::prepareReset((void))
 0002:80394E88       AudSystemWrapper::requestReset((bool))
 0002:80394EE4       AudSystemWrapper::isResetDone((void))
 0002:80394EFC       VFipdm_close_disk
 0002:80394F14       AudSystemWrapper::resumeReset((void))
 0002:80394F3C       AudSystemWrapper::receiveResourceForInitialize((void))
 0002:80394FC0       BinaryDataChunkHolder::BinaryDataChunkHolder((ulong,int))
 0002:80395050       BinaryDataChunkHolder::makeFileBinary((uchar *,ulong))
 0002:80395104       BinaryDataChunkHolder::loadFromFileBinary((uchar const *,ulong))
 0002:80395238       BinaryDataChunkHolder::makeChunkData((BinaryDataChunkHolderChunkData *,ulong,BinaryDataChunkBase const *))
 0002:803952C4       BinaryDataChunkHolder::findFromSignature(const(ulong))
 0002:80395348       BinaryDataChunkHolder::calcBinarySize((uchar const *))
 0002:80395374       BinaryDataContentHeaderSerializer::BinaryDataContentHeaderSerializer((uchar *,ulong))
 0002:803953F0       BinaryDataContentHeaderSerializer::addAttribute((char const *,ulong))
 0002:80395470       BinaryDataContentHeaderSerializer::flush((void))
 0002:8039553C       BinaryDataContentAccessor::getHeaderSize(const(void))
 0002:80395550       BinaryDataContentAccessor::getDataSize(const(void))
 0002:8039555C       BinaryDataContentAccessor::getPointer(const(char const *,uchar *))
 0002:80395718       DrawBufferShapeDrawer::DrawBufferShapeDrawer((J3DMaterial *,J3DMatPacket *))
 0002:8039573C       DrawBufferShapeDrawer::init((long))
 0002:803957DC       DrawBufferShapeDrawer::swap((DrawBufferShapeDrawer *))
 0002:80395810       DrawBufferShapeDrawer::draw(const(void))
 0002:803958E0       DrawBufferShapeDrawer::add((J3DShapePacket const *,ActorLightCtrl const *))
 0002:803959AC       DrawBufferShapeDrawer::remove((J3DShapePacket const *))
 0002:80395A5C       DrawBufferShapeDrawer::resetLightSort((ActorLightCtrl const *))
 0002:80395AE4       DrawBufferShapeDrawer::findLightSortIndex(const(ActorLightCtrl const *,bool *))
 0002:80395BBC       DrawBuffer::DrawBuffer((J3DModel *))
 0002:80395BF4       DrawBuffer::add((LiveActor const *))
 0002:80395C9C       DrawBuffer::remove((LiveActor const *))
 0002:80395D30       DrawBuffer::resetLightSort((ActorLightCtrl const *))
 0002:80395D98       DrawBuffer::drawOpa(const(void))
 0002:80395E04       DrawBuffer::drawXlu(const(void))
 0002:80395E74       @unnamed@DrawBuffer_cpp@::getSortedMaterialIndex((int,J3DModel *))
 0002:80395EF4       DrawBuffer::initTable((void))
 0002:803961DC       DrawBuffer::sortShapeDrawer((long,long))
 0002:803962B0       DrawBuffer::getShapeDrawerByMatNo(const(int))
 0002:803962CC       DrawBufferExecuter::DrawBufferExecuter((char const *,J3DModel *,long))
 0002:80396344       DrawBufferExecuter::allocateActorListBuffer((void))
 0002:8039639C       DrawBufferExecuter::add((LiveActor *))
 0002:803963BC       DrawBufferExecuter::remove((LiveActor *))
 0002:80396420       DrawBufferExecuter::findLightInfo((LiveActor *))
 0002:80396438       DrawBufferExecuter::offExecuteLight((void))
 0002:803964C8       DrawBufferExecuter::drawXlu(const(void))
 0002:80396550       DrawBufferGroup::DrawBufferGroup((void))
 0002:8039659C       DrawBufferGroup::init((long))
 0002:803965F4       DrawBufferGroup::registerDrawBuffer((LiveActor *))
 0002:8039672C       DrawBufferGroup::active((LiveActor *,long))
 0002:80396790       DrawBufferGroup::deactive((LiveActor *,long))
 0002:80396844       DrawBufferGroup::findLightInfo((LiveActor *,long))
 0002:803968EC       DrawBufferGroup::entry((void))
 0002:8039695C       DrawBufferGroup::drawOpa(const(void))
 0002:803969F4       DrawBufferGroup::drawXlu(const(void))
 0002:80396AA0       DrawBufferGroup::findExecuterIndex(const(char const *))
 0002:80396CF0       DrawBufferHolder::DrawBufferHolder((void))
 0002:80396D54       DrawBufferHolder::initTable((DrawBufferInitialTable const *,long))
 0002:80396E80       DrawBufferGroup::~DrawBufferGroup((void))
 0002:80396EE8       DrawBufferHolder::allocateActorListBuffer((void))
 0002:80396F74       DrawBufferHolder::registerDrawBuffer((LiveActor *,long))
 0002:80396F84       DrawBufferHolder::active((LiveActor *,long,long))
 0002:8039700C       DrawBufferHolder::deactive((LiveActor *,long,long))
 0002:803970D8       DrawBufferHolder::findLightInfo((LiveActor *,long,long))
 0002:803970EC       DrawBufferHolder::entry((long))
 0002:8039715C       DrawBufferHolder::drawXlu(const(long))
 0002:8039719C       DrawBufferHolder::getExecuteList((long))
 0002:803971D0       MR::Vector<Q22MR35AssignableArray<P15DrawBufferGroup>>::end((void))
 0002:80397258       DrawSyncManager::start((ulong,long))
 0002:803972BC       DrawSyncManager::prepareReset((void))
 0002:803972D4       DrawSyncManager::resetIfAborted((void))
 0002:803972EC       DrawSyncManager::clearFifo((void))
 0002:80397330       Fifo::pop((void))
 0002:80397380       Fifo::getLoopIdx((ulong))
 0002:8039739C       Fifo::getCount((void))
 0002:803973C8       DrawSyncManager::end((void))
 0002:80397400       DrawSyncManager::drawSyncCallback((ushort))
 0002:8039741C       DrawSyncManager::threadFunc((void *))
 0002:80397520       DrawSyncManager::DrawSyncManager((ulong,long))
 0002:8039763C       DrawSyncManager::~DrawSyncManager((void))
 0002:803976B4       DrawSyncManager::setCallback((ulong,ushort,DrawSyncCallback *))
 0002:80397778       DrawSyncManager::TDrawSyncTokenRange::__as((DrawSyncManager::TDrawSyncTokenRange const &))
 0002:80397794       DrawSyncManager::reset((bool))
 0002:803977F4       DrawSyncManager::drawSyncCallbackSub((ushort))
 0002:803978C4       DrawSyncManager::pushBreakPoint((void))
 0002:8039794C       FileHolderFileEntry::FileHolderFileEntry((char const *,JKRHeap *,void *))
 0002:803979CC       FileHolderFileEntry::~FileHolderFileEntry((void))
 0002:80397A38       FileHolderFileEntry::waitReadDone((void))
 0002:80397A84       FileHolderFileEntry::setContext((void *,JKRHeap *))
 0002:80397ACC       FileHolder::FileHolder((void))
 0002:80397B1C       FileHolder::add((char const *,JKRHeap *,void *))
 0002:80397B98       FileHolder::isExist(const(char const *))
 0002:80397BC0       FileHolder::getContext(const(char const *))
 0002:80397BE4       FileHolder::removeIfIsEqualHeap((JKRHeap *))
 0002:80397C90       FileHolder::removeFile((char const *))
 0002:80397D08       FileHolder::findEntry(const(char const *))
 0002:80397D74       MR::Vector<Q22MR39AssignableArray<P19FileHolderFileEntry>>::erase((FileHolderFileEntry **))
 0002:80397DDC       FileLoader::FileLoader((void))
 0002:80397EB4       FileLoader::requestLoadToMainRAM((char const *,uchar *,JKRHeap *,JKRDvdRipper::EAllocDirection,bool))
 0002:80397F7C       FileLoader::requestMountArchive((char const *,JKRHeap *,bool))
 0002:8039803C       FileLoader::isLoaded(const(char const *))
 0002:80398044       FileLoader::isMountedArchive(const(char const *))
 0002:80398070       FileLoader::receiveFile((char const *))
 0002:803980C4       FileLoader::receiveArchive((char const *))
 0002:80398118       FileLoader::receiveAllRequestedFile((void))
 0002:80398178       FileLoader::createAndAddArchive((void *,JKRHeap *,char const *))
 0002:803981A0       FileLoader::getMountedArchiveAndHeap(const(char const *,JKRArchive **,JKRHeap **))
 0002:803981A8       FileLoader::clearRequestFileInfo((bool))
 0002:803981B4       FileLoader::removeHolderIfIsEqualHeap((JKRHeap *))
 0002:803981FC       FileLoader::removeFile((char const *))
 0002:80398204       FileLoader::isNeedToLoad(const(char const *))
 0002:80398260       FileLoader::getRequestFileInfoConst(const(char const *))
 0002:803982DC       FileLoader::addRequest((char const *))
 0002:80398364       @unnamed@FileLoaderThread_cpp@::loadFileUsingRipper((RequestFileInfo *))
 0002:80398390       NANDManagerThread::NANDManagerThread((int,int,JKRHeap *))
 0002:803983DC       FileLoaderThread::run((void))
 0002:80398468       FileLoaderThread::loadToMainRAM((RequestFileInfo *))
 0002:803984BC       FileLoaderThread::mountArchiveAndStartCreateResource((RequestFileInfo *))
 0002:80398580       FileRipper::setup((ulong,JKRHeap *))
 0002:803985C8       FileRipper::checkCompressed((uchar const *))
 0002:80398618       FileRipper::loadToMainRAM((char const *,uchar *,bool,JKRHeap *,FileRipper::AllocDirection))
 0002:803988D4       FileRipper::decompressFromDVD((DVDFileInfo *,void *,ulong,ulong,uchar const *,ulong))
 0002:803989BC       FileRipper::decompressSzsSub((uchar *,uchar *))
 0002:80398B04       FileRipper::readSrcDataFirst((void))
 0002:80398BAC       FileRipper::readSrcDataNext((uchar *))
 0002:80398C94       FunctionAsyncExecInfo::FunctionAsyncExecInfo((MR::FunctorBase *,int,char const *))
 0002:80398D3C       FunctionAsyncExecInfo::execute((void))
 0002:80398DA8       FunctionAsyncExecutorThread::FunctionAsyncExecutorThread((JKRHeap *))
 0002:80398E00       FunctionAsyncExecutorThread::run((void))
 0002:80398E98       FunctionAsyncExecutorOnMainThread::FunctionAsyncExecutorOnMainThread((OSThread *))
 0002:80398EE0       FunctionAsyncExecutorOnMainThread::update((void))
 0002:80398F5C       FunctionAsyncExecutor::FunctionAsyncExecutor((void))
 0002:80399058       FunctionAsyncExecutor::start((MR::FunctorBase const &,int,char const *))
 0002:803990A8       FunctionAsyncExecutor::startOnMainThread((MR::FunctorBase const &,char const *))
 0002:80399144       FunctionAsyncExecutor::waitForEnd((char const *))
 0002:80399280       FunctionAsyncExecutor::isEnd(const(char const *))
 0002:80399314       FunctionAsyncExecutor::getOSThread((char const *))
 0002:80399390       FunctionAsyncExecutor::createAndAddExecInfo((MR::FunctorBase const &,int,char const *))
 0002:80399444       FunctionAsyncExecutor::getSuspendThread((void))
 0002:803994D0       main
 0002:803995C8       GameSystem::GameSystem((void))
 0002:80399640       GameSystem::init((void))
 0002:803997D4       GameSystem::isExecuteLoadSystemArchive(const(void))
 0002:803997E4       GameSystem::startToLoadSystemArchive((void))
 0002:80399838       GameSystem::exeInitializeAudio((void))
 0002:803998FC       GameSystem::exeInitializeLogoScene((void))
 0002:80399964       GameSystem::exeLoadStationedArchive((void))
 0002:803999B8       GameSystem::initGX((void))
 0002:80399A08       GameSystem::initAfterStationedResourceLoaded((void))
 0002:80399A70       GameSystem::isPreparedReset(const(void))
 0002:80399AF0       GameSystem::frameLoop((void))
 0002:80399B58       GameSystem::draw((void))
 0002:80399BEC       GameSystem::update((void))
 0002:80399CB8       GameSystem::updateSceneController((void))
 0002:80399DC4       GameSystem::calcAnim((void))
 0002:80399EA4       NrvGameSystem::GameSystemNormal::execute(const(Spine *))
 0002:80399FE8       GameSystemDimmingWatcher::GameSystemDimmingWatcher((void))
 0002:8039A040       GameSystemDimmingWatcher::update((void))
 0002:8039A0C4       GameSystemErrorWatcher::GameSystemErrorWatcher((void))
 0002:8039A188       GameSystemErrorWatcher::initAfterResourceLoaded((void))
 0002:8039A1E4       GameSystemErrorWatcher::movement((void))
 0002:8039A288       GameSystemErrorWatcher::draw(const(void))
 0002:8039A318       GameSystemErrorWatcher::setPermissionUpdateWiiRemoteStatus((bool))
 0002:8039A3D0       GameSystemErrorWatcher::exeNoError((void))
 0002:8039A428       GameSystemErrorWatcher::exeErrorWindowIn((void))
 0002:8039A4A8       GameSystemErrorWatcher::exeErrorWindowDisplay((void))
 0002:8039A530       GameSystemErrorWatcher::exeErrorWindowOut((void))
 0002:8039A5B8       GameSystemErrorWatcher::updateWiiRemoteStatus((void))
 0002:8039A720       GameSystemErrorWatcher::getProperMessageId(const(void))
 0002:8039A770       def_8039A74C
 0002:8039A7B4       GameSystemErrorWatcher::getProperErrorTexMap(const(void))
 0002:8039A7FC       def_8039A7D8
 0002:8039A910       @unnamed@GameSystemException_cpp@::isBootWPAD((void))
 0002:8039A938       GameSystemException::init((void))
 0002:8039A9F4       GameSystemException::handleException((ushort,OSContext *,ulong,ulong))
 0002:8039AB14       GameSystemFontHolder::GameSystemFontHolder((void))
 0002:8039AEB8       GameSystemFrameControl::GameSystemFrameControl((void))
 0002:8039AEF0       GameSystemFrameControl::setMovement60fps((void))
 0002:8039AF48       @unnamed@GameSystemFunction_cpp@::getLogoScene((void))
 0002:8039AF64       @unnamed@GameSystemSceneController_cpp@::getAudioSystemWrapper((void))
 0002:8039AF74       @unnamed@GameSequenceFunction_cpp@::getSaveDataHandleSequence((void))
 0002:8039AFD4       GameSystemFunction::setSceneNameObjHolderToNameObjRegister((void))
 0002:8039AFE8       GameSystemFunction::isCreatedGameDataHolder((void))
 0002:8039AFF4       GameSystemFunction::isCreatedSystemWipe((void))
 0002:8039B010       GameSystemFunction::tryToLoadSystemArchive((void))
 0002:8039B058       GameSystemFunction::requestChangeArchivePlayer((bool))
 0002:8039B068       GameSystemFunction::isEndChangeArchivePlayer((void))
 0002:8039B074       GameSystemFunction::deactivateScreenPreserver((void))
 0002:8039B094       GameSystemFunction::isOccurredSystemWarning((void))
 0002:8039B0B8       __AXFXFreeFunction
 0002:8039B0D0       GameSystemFunction::forceToDeactivateHomeButtonLayout((void))
 0002:8039B0F4       GameSystemFunction::isPrepareResetSaveDataHandleSequence((void))
 0002:8039B12C       MR::turnOnDOFInSubjective((void))
 0002:8039B288       GameSystemFunction::restartControllerLeaveWatcher((void))
 0002:8039B360       WPadHolder::setConnectCallback((void))
 0002:8039B364       GameSystemFunction::resetAllControllerRumble((void))
 0002:8039B3C0       MR::setAutoSleepTimeWiiRemote((bool))
 0002:8039B3C4       GameSystemFunction::setPermissionToCheckWiiRemoteConnectAndScreenDimming((bool))
 0002:8039B408       GameSystemFunction::onHomeButtonMenuBeginAllRumble((void))
 0002:8039B474       GameSystemFunction::onHomeButtonMenuCloseAllRumble((void))
 0002:8039B598       GameSystemFunction::onHomeButtonMenuEndAllRumble((void))
 0002:8039B608       GameSystemFunction::prepareResetSystem((void))
 0002:8039B638       GameSystemFunction::isPreparedFadeinSystem((void))
 0002:8039B698       GameSystemFunction::isDisplayStrapRemineder((void))
 0002:8039B6F8       GameSystemObjHolder::GameSystemObjHolder((void))
 0002:8039B798       GameSystemObjHolder::initAfterStationedResourceLoaded((void))
 0002:8039B7F8       GameSystemObjHolder::initMessageResource((void))
 0002:8039B8CC       GameSystemObjHolder::init((void))
 0002:8039B94C       GameSystemObjHolder::update((void))
 0002:8039B9D4       MR::getStationedHeapGDDR3((void))
 0002:8039B9E0       GameSystemObjHolder::initDvd((void))
 0002:8039BA38       GameSystemObjHolder::initNAND((void))
 0002:8039BA78       GameSystemObjHolder::initAudio((void))
 0002:8039BAE8       GameSystemObjHolder::initRenderMode((void))
 0002:8039BBE0       GameSystemObjHolder::initNameObj((void))
 0002:8039BC54       GameSystemObjHolder::initResourceHolderManager((void))
 0002:8039BC94       GameSystemObjHolder::initGameController((void))
 0002:8039BCEC       GameSystemObjHolder::initDisplay((void))
 0002:8039BE04       ConditionIfIsNotPlayer::isExecute(const(MR::StationedFileInfo const *))
 0002:8039BE24       ConditionUsePlayerHeap::ConditionUsePlayerHeap((void))
 0002:8039BE48       ConditionUsePlayerHeap::isExecute(const(MR::StationedFileInfo const *))
 0002:8039BE70       ConditionUsePlayerHeap::getProperHeap(const(MR::StationedFileInfo const *))
 0002:8039BEB8       PlayerHeapHolder::PlayerHeapHolder((void))
 0002:8039BF60       PlayerHeapHolder::adjust((void))
 0002:8039BFF0       PlayerHeapHolder::dispose((void))
 0002:8039C050       PlayerHeapHolder::setIsDataMario((bool))
 0002:8039C060       PlayerHeapHolder::createHeap((ulong,JKRHeap *))
 0002:8039C0BC       GameSystemStationedArchiveLoader::GameSystemStationedArchiveLoader((void))
 0002:8039C118       NerveExecutor::updateNerve((void))
 0002:8039C184       GameSystemStationedArchiveLoader::prepareReset((void))
 0002:8039C210       GameSystemStationedArchiveLoader::requestChangeArchivePlayer((bool))
 0002:8039C284       GameSystemStationedArchiveLoader::exeLoadAudio1stWaveData((void))
 0002:8039C2F4       GameSystemStationedArchiveLoader::exeLoadStationedArchivePlayer((void))
 0002:8039C414       GameSystemStationedArchiveLoader::exeLoadStationedArchiveOthers((void))
 0002:8039C4F4       GameSystemStationedArchiveLoader::exeInitializeGameData((void))
 0002:8039C548       GameSystemStationedArchiveLoader::exeChangeArchivePlayer((void))
 0002:8039C5FC       GameSystemStationedArchiveLoader::trySuspend((void))
 0002:8039C620       GameSystemStationedArchiveLoader::tryAsyncExecuteIfNotSuspend((MR::FunctorBase const &,char const *))
 0002:8039C688       GameSystemStationedArchiveLoader::startToLoadStationedArchiveOthers((void))
 0002:8039C730       GameSystemStationedArchiveLoader::createAndAddPlayerArchives((bool))
 0002:8039C84C       GameSystemStationedArchiveLoader::createAndAddOtherArchives((void))
 0002:8039C884       ConditionIsEqualType::isExecute(const(MR::StationedFileInfo const *))
 0002:8039C990       MR::Functor<32GameSystemStationedArchiveLoader,b>(MR::FunctorV1M<P32GameSystemStationedArchiveLoader,M32GameSystemStationedArchiveLoaderFPCvPvb_v,b> (GameSystemStationedArchiveLoader *,void (GameSystemStationedArchiveLoader::)(void const *,void *,bool),bool))
 0002:8039C9D4       MR::FunctorV1M<P32GameSystemStationedArchiveLoader,M32GameSystemStationedArchiveLoaderFPCvPvb_v,b>::__cl(const(void))
 0002:8039CA08       MR::FunctorV1M<P32GameSystemStationedArchiveLoader,M32GameSystemStationedArchiveLoaderFPCvPvb_v,b>::clone(const(JKRHeap *))
 0002:8039CBD0       SceneControlInfo::SceneControlInfo((void))
 0002:8039CC4C       SceneControlInfo::setScene((char const *))
 0002:8039CC60       SceneControlInfo::setStage((char const *))
 0002:8039CC94       GameSystemSceneController::GameSystemSceneController((void))
 0002:8039CD7C       GameSystemSceneController::initAfterStationedResourceLoaded((void))
 0002:8039CDF0       GameSystemSceneController::requestChangeScene((void))
 0002:8039CE44       GameSystemSceneController::checkRequestAndChangeScene((void))
 0002:8039CE90       GameSystemSceneController::initializeScene((void))
 0002:8039D018       GameSystemSceneController::isStopSound(const(void))
 0002:8039D1B0       GameSystemSceneController::isReadyToStartScene(const(void))
 0002:8039D218       GameSystemSceneController::isFirstUpdateSceneNerveNormal(const(void))
 0002:8039D280       GameSystemSceneController::startScene((void))
 0002:8039D2CC       GameSystemSceneController::updateScene((void))
 0002:8039D344       GameSystemSceneController::updateSceneDuringResetProcessing((void))
 0002:8039D368       GameSystemSceneController::calcAnimScene((void))
 0002:8039D3D4       GameSystemSceneController::drawScene((void))
 0002:8039D440       GameSystemSceneController::getNameObjListExecutor(const(void))
 0002:8039D44C       GameSystemSceneController::getSceneObjHolder(const(void))
 0002:8039D458       GameSystemSceneController::isExistSceneObjHolder(const(void))
 0002:8039D494       GameSystemSceneController::isSceneInitializeState(const(SceneInitializeState))
 0002:8039D4A8       GameSystemSceneController::startScenarioSelectScene((void))
 0002:8039D4C4       GameSystemSceneController::setCurrentScenarioNo((long,long))
 0002:8039D4D0       GameSystemSceneController::resetCurrentScenarioNo((void))
 0002:8039D4DC       GameSystemSceneController::isScenarioDecided(const(void))
 0002:8039D4F0       GameSystemSceneController::loadScenarioWaveData((void))
 0002:8039D550       GameSystemSceneController::exeDestroyed((void))
 0002:8039D578       GameSystemSceneController::exeWaitDrawDoneScene((void))
 0002:8039D5F4       GameSystemSceneController::exeDestroyScene((void))
 0002:8039D6CC       GameSystemSceneController::exeChangeWaveBank((void))
 0002:8039D76C       GameSystemSceneController::exeInitializeScene((void))
 0002:8039D828       GameSystemSceneController::exeInvalidateSystemWipe((void))
 0002:8039D8E4       GameSystemSceneController::exeReadyToStartScene((void))
 0002:8039D930       GameSystemSceneController::prepareReset((void))
 0002:8039D9E4       GameSystemSceneController::isPreparedReset((void))
 0002:8039DA4C       GameSystemSceneController::restartGameAfterResetting((void))
 0002:8039DA8C       GameSystemSceneController::isExistRequest(const(void))
 0002:8039DAEC       GameSystemSceneController::isSameAtNextSceneAndStage(const(void))
 0002:8039DB5C       GameSystemSceneController::updateSceneControlInfo((void))
 0002:8039DBE4       GameSystemSceneController::getCurrentSceneForExecute(const(void))
 0002:8039DC40       GameSystemSceneController::getNextNerveOnResetProcessing(const(void))
 0002:8039DDB8       GameSystemSceneController::tryDestroyFileCacheHeap((bool))
 0002:8039DE10       GameSystemSceneController::requestChangeNerve((Nerve const *))
 0002:8039E0BC       GameSystemResetAndPowerProcess::init((JMapInfoIter const &))
 0002:8039E10C       GameSystemResetAndPowerProcess::draw(const(void))
 0002:8039E28C       GameSystemResetAndPowerProcess::setResetOperationApplicationReset((void))
 0002:8039E298       GameSystemResetAndPowerProcess::setResetOperationReturnToMenu((void))
 0002:8039E2A4       GameSystemResetAndPowerProcess::requestReset((bool))
 0002:8039E2F4       GameSystemResetAndPowerProcess::requestGoWiiMenu((bool))
 0002:8039E34C       GameSystemResetAndPowerProcess::notifyCheckDiskResult((bool))
 0002:8039E374       GameSystemResetAndPowerProcess::exePolling((void))
 0002:8039E3D4       GameSystemResetAndPowerProcess::exeWaitResetPermitted((void))
 0002:8039E44C       GameSystemResetAndPowerProcess::exePrepareReset((void))
 0002:8039E508       GameSystemResetAndPowerProcess::exeReset((void))
 0002:8039E58C       GameSystemResetAndPowerProcess::exeWaitPrepareFadein((void))
 0002:8039E5E4       GameSystemResetAndPowerProcess::exeFadein((void))
 0002:8039E684       GameSystemResetAndPowerProcess::exitApplication((void))
 0002:8039E738       GameSystemResetAndPowerProcess::tryAcceptPowerOff((void))
 0002:8039E764       GameSystemResetAndPowerProcess::isResetAcceptAudio(const(void))
 0002:8039E7C8       GameSystemResetAndPowerProcess::control((void))
 0002:8039E80C       GameSystemResetAndPowerProcess::handleOSPowerCallback((void))
 0002:8039E81C       GameSystemResetAndPowerProcess::handleCheckDiskAsync((long,DVDCommandBlock *))
 0002:8039E830       GameSystemResetAndPowerProcess::GameSystemResetAndPowerProcess((void))
 0002:8039EA08       @unnamed@HeapMemoryWatcher_cpp@::createExpHeap((ulong,JKRHeap *,bool))
 0002:8039EA8C       @unnamed@HeapMemoryWatcher_cpp@::createSolidHeap((ulong,JKRHeap *))
 0002:8039EAD4       utl_freebuf
 0002:8039EB18       HeapMemoryWatcher::getHeapNapa((JKRHeap const *))
 0002:8039EB60       HeapMemoryWatcher::getHeapGDDR3((JKRHeap const *))
 0002:8039EBA8       HeapMemoryWatcher::createFileCacheHeapOnGameHeap((ulong))
 0002:8039EBE0       HeapMemoryWatcher::createSceneHeapOnGameHeap((void))
 0002:8039EC28       HeapMemoryWatcher::adjustStationedHeaps((void))
 0002:8039EC80       HeapMemoryWatcher::destroySceneHeap((void))
 0002:8039ECB8       HeapMemoryWatcher::destroyGameHeap((void))
 0002:8039ED34       HeapMemoryWatcher::createRootHeap((void))
 0002:8039EDC0       HeapMemoryWatcher::createHeaps((void))
 0002:8039EE94       HeapMemoryWatcher::createGameHeap((void))
 0002:8039EEE4       HeapMemoryWatcher::HeapMemoryWatcher((void))
 0002:8039EF50       HeapMemoryWatcher::memoryErrorCallback((void *,ulong,int))
 0002:8039EF68       nullsub_25
 0002:8039EFBC       MR::getLanguage((void))
 0002:8039EFCC       MR::getLanguageFromIPL((void))
 0002:8039F0D4       J3DAnmColorFull::getKind(const(void))
 0002:8039F0DC       MR::getLanguagePrefixByIndex((ulong))
 0002:8039F0F4       LayoutHolder::LayoutHolder((JKRArchive &))
 0002:8039F1B8       LayoutHolder::GetResource((ulong,char const *,ulong *))
 0002:8039F35C       LayoutHolder::isAnimationHashEqual(const(ulong,ulong))
 0002:8039F3A0       LayoutHolder::initializeArc((void))
 0002:8039F428       LayoutHolder::getFileFinder((char const *))
 0002:8039F45C       LayoutHolder::initEachResTable((ResTable *,char const *const *))
 0002:8039F4D8       ResourceHolder::count((JKRArchive *,char const *,char const *))
 0002:8039F5D8       LayoutHolder::mount((char *))
 0002:8039F700       LayoutHolder::createAndRegisterObject((char const *,void *))
 0002:8039F7B4       MainLoopFramework::ctor_subroutine((bool))
 0002:8039F8BC       MainLoopFramework::~MainLoopFramework((void))
 0002:8039F924       MainLoopFramework::createManager((_GXRenderModeObj const *,void *,void *,void *,bool))
 0002:8039F9C0       callDirectDraw(void)
 0002:8039FA1C       MainLoopFramework::prepareCopyDisp((void))
 0002:8039FB2C       MainLoopFramework::drawendXfb_single((void))
 0002:8039FB74       MainLoopFramework::exchangeXfb_double((void))
 0002:8039FC80       @unnamed@MainLoopFramework_cpp@::getDisplayingXfbIndex((void))
 0002:8039FCA8       MainLoopFramework::exchangeXfb_triple((void))
 0002:8039FD20       MainLoopFramework::copyXfb_triple((void))
 0002:8039FD90       MainLoopFramework::preGX((void))
 0002:8039FE24       MainLoopFramework::endGX((void))
 0002:8039FEE0       MainLoopFramework::waitForRetrace((void))
 0002:8039FF14       MainLoopFramework::beginRender((void))
 0002:803A007C       MainLoopFramework::endRender((void))
 0002:803A00FC       MainLoopFramework::endFrame((void))
 0002:803A0190       MainLoopFramework::waitBlanking((int))
 0002:803A01E0       MainLoopFramework::setTickRateFromFrame((ushort))
 0002:803A0234       MainLoopFramework::clearEfb((_GXColor))
 0002:803A0290       MainLoopFramework::clearEfb((int,int,int,int,_GXColor))
 0002:803A0618       MainLoopFramework::calcCombinationRatio((void))
 0002:803A06A8       MainLoopFramework::frameToTick((float))
 0002:803A0704       MainLoopFramework::setForOSResetSystem((void))
 0002:803A0778       @unnamed@MainLoopFramework_cpp@::waitForTick((ulong,ushort))
 0002:803A08A0       @unnamed@MainLoopFramework_cpp@::waitDrawDoneAndSetAlarm((void))
 0002:803A09E8       @unnamed@MainLoopFramework_cpp@::handleGXAbortAlarm((OSAlarm *,OSContext *))
 0002:803A0A74       __sinit__JASHeapCtrl_cpp
 0002:803A0AC0       JUTXfb::getDrawingXfb(const(void))
 0002:803A0AE8       JUTXfb::getDisplayingXfbIndex(const(void))
 0002:803A0BB8       @unnamed@MessageHolder_cpp@::getBlock((ulong,uchar *))
 0002:803A0BF4       MessageData::getMessageDirect(const(TalkMessageInfo *,char const *))
 0002:803A0C6C       MessageData::getMessage(const(TalkMessageInfo *,ushort,ushort))
 0002:803A0CF8       MessageData::findNode(const(char const *))
 0002:803A0D6C       MessageData::getNode(const(ulong))
 0002:803A0D80       MessageData::getBranchNode(const(ulong))
 0002:803A0DA0       MessageData::isValidBranchNode(const(ulong))
 0002:803A0DC8       MessageData::getMessageInfoTool(const(int))
 0002:803A0DF4       MessageHolder::initSceneData((void))
 0002:803A0E0C       MessageSystem::getSystemMessageDirect((TalkMessageInfo *,char const *))
 0002:803A0E58       MessageSystem::getGameMessageDirect((TalkMessageInfo *,char const *))
 0002:803A0EA4       MessageSystem::getLayoutMessageDirect((TalkMessageInfo *,char const *))
 0002:803A0EF0       MessageSystem::getSceneMessageData((void))
 0002:803A0F18       MessageData::MessageData((char const *))
 0002:803A106C       MessageData::findMessageIndex(const(char const *))
 0002:803A1160       MessageHolder::initSystemData((void))
 0002:803A11A8       MessageHolder::initGameData((void))
 0002:803A1204       NANDErrorSequence::NANDErrorSequence((SaveDataHandleSequence *,SysInfoWindow *,SysInfoWindow *))
 0002:803A129C       NANDErrorSequence::startErrorToWiiMenu((char const *))
 0002:803A12F8       NANDErrorSequence::startRemoveFile((void))
 0002:803A134C       NANDErrorSequence::startCheckEnableToCreate((void))
 0002:803A1398       NANDErrorSequence::tryLessBlockOrInode((ulong))
 0002:803A1430       NANDErrorSequence::tryNoRecoverErroSequence((long))
 0002:803A1604       NANDErrorSequence::prepareReset((void))
 0002:803A1654       NANDErrorSequence::isPreparedReset(const(void))
 0002:803A1738       NANDErrorSequence::restoreFromReset((void))
 0002:803A1784       NANDErrorSequence::exeError((void))
 0002:803A17EC       NANDErrorSequence::exeErrorToFreeze((void))
 0002:803A184C       SaveDataHandler::exeRemoveProcessingBanner((void))
 0002:803A18BC       NANDErrorSequence::exeRemove((void))
 0002:803A1968       NANDErrorSequence::exeNoSaveConfirmBeforeRemove((void))
 0002:803A19E8       NANDErrorSequence::exeNoSaveConfirmLessBlockOrInode((void))
 0002:803A1A68       NANDErrorSequence::exeLessBlockOrInodeConfirm((void))
 0002:803A1AD4       NANDErrorSequence::exeGoWiiMenu((void))
 0002:803A1B30       NANDErrorSequence::exeCheckEnableToCreateAfterRemove((void))
 0002:803A1CCC       NANDErrorSequence::resetParam((void))
 0002:803A1CE8       NANDErrorSequence::tryConfirm((char const *,bool *))
 0002:803A1D80       SaveDataHandleSequence::tryProcessDoneKeyWait((char const *))
 0002:803A1DF4       NANDErrorSequence::tryCheckEnableToCreate((void))
 0002:803A1E9C       NANDErrorSequence::tryVerifyNANDCheckResult((void))
 0002:803A2070       @unnamed@NANDErrorSequence_cpp@::NANDErrorSequenceRemoveDoneKeyWait::execute(const(Spine *))
 0002:803A216C       NANDRequestInfo::init((void))
 0002:803A2198       NANDRequestInfo::isDone(const(void))
 0002:803A21A8       NANDRequestInfo::setMove((char const *,char const *))
 0002:803A220C       NANDRequestInfo::setWriteSeq((char const *,void const *,ulong,uchar,uchar))
 0002:803A2288       NANDRequestInfo::setReadSeq((char const *,void *,ulong,ulong *))
 0002:803A22FC       NANDRequestInfo::setCheck((ulong,ulong,ulong *))
 0002:803A2354       NANDManager::NANDManager((void))
 0002:803A23D4       NANDManager::addRequest((NANDRequestInfo *))
 0002:803A2444       NANDResultCode::isSuccess(const(void))
 0002:803A2454       NANDResultCode::isSaveDataCorrupted(const(void))
 0002:803A2474       NANDResultCode::isNANDCorrupted(const(void))
 0002:803A2488       NANDResultCode::isMaxBlocks(const(void))
 0002:803A249C       NANDResultCode::isMaxFiles(const(void))
 0002:803A24B0       NANDResultCode::isNoExistFile(const(void))
 0002:803A24C4       NANDResultCode::isBusyOrAllocFailed(const(void))
 0002:803A24E4       NANDResultCode::isUnknown(const(void))
 0002:803A2504       NANDRequestInfo::setDelete((char const *))
 0002:803A25AC       NANDManagerThread::run((void))
 0002:803A26BC       NANDManagerThread::executeWriteSequence((NANDRequestInfo *))
 0002:803A2770       NANDManagerThread::executeReadSequence((NANDRequestInfo *))
 0002:803A28CC       NerveExecutor::NerveExecutor((char const *))
 0002:803A28E4       NerveExecutor::~NerveExecutor((void))
 0002:803A2948       NerveExecutor::initNerve((Nerve const *))
 0002:803A299C       NerveExecutor::updateNerve((void))
 0002:803A29B0       NerveExecutor::setNerve((Nerve const *))
 0002:803A29B8       NerveExecutor::isNerve(const(Nerve const *))
 0002:803A29F4       NerveExecutor::getNerveStep(const(void))
 0002:803A2A00       OSThreadWrapper::OSThreadWrapper((ulong,int,int,JKRHeap *))
 0002:803A2A74       OSThreadWrapper::~OSThreadWrapper((void))
 0002:803A2B14       OSThreadWrapper::initMessageQueue((JKRHeap *,int))
 0002:803A2B60       OSThreadWrapper::initHeapSpecified((JKRHeap *,ulong,int))
 0002:803A2BF8       OSThreadWrapper::run((void))
 0002:803A2C00       JKRUnitHeap::do_alloc((ulong,int))
 0002:803A2D4C       JKRUnitHeap::do_free((void *))
 0002:803A2DEC       JKRExpHeap::adjustSize((void))
 0002:803A2F50       JKRHeap::getMaxAllocatableSize((int))
 0002:803A304C       JUTTexture::captureDolTexture((void *,int,int,int,int,bool,_GXTexFmt))
 0002:803A3164       PSMTXRotRad
 0002:803A3224       JUTException::readPad((ulong *,ulong *))
 0002:803A3308       J3DShapeMtx::loadMtxIndx_PNGP(const(int,ushort))
 0002:803A33AC       nullsub_59
 0002:803A33B0       loadPrj(JPAEmitterWorkData const *,float const *[4])
 0002:803A33E8       loadPrjAnm(JPAEmitterWorkData const *,float const *[4])
 0002:803A35DC       dirTypeVel(JPAEmitterWorkData const *,JPABaseParticle const *,JGeometry::TVec3<f> *)
 0002:803A35E8       dirTypePos(JPAEmitterWorkData const *,JPABaseParticle const *,JGeometry::TVec3<f> *)
 0002:803A35F4       dirTypePosInv(JPAEmitterWorkData const *,JPABaseParticle const *,JGeometry::TVec3<f> *)
 0002:803A3640       dirTypeEmtrDir(JPAEmitterWorkData const *,JPABaseParticle const *,JGeometry::TVec3<f> *)
 0002:803A3650       dirTypePrevPtcl(JPAEmitterWorkData const *,JPABaseParticle const *,JGeometry::TVec3<f> *)
 0002:803A36C8       rotTypeY(float,float,float (&)[3][4])
 0002:803A3708       rotTypeX(float,float,float (&)[3][4])
 0002:803A3748       rotTypeZ(float,float,float (&)[3][4])
 0002:803A3788       rotTypeXYZ(float,float,float (&)[3][4])
 0002:803A37E4       basePlaneTypeXY(float *[4],float,float)
 0002:803A3830       basePlaneTypeXZ(float *[4],float,float)
 0002:803A387C       basePlaneTypeX(float *[4],float,float)
 0002:803A38EC       JPABaseEmitter::init((JPAEmitterManager *,JPAResource *))
 0002:803A3B6C       JPADrawDirection(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A3D18       JPADrawRotDirection(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A3F3C       JPADrawDBillboard(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A40B0       JPADrawLine(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A41FC       JPADrawStripe(JPAEmitterWorkData *)
 0002:803A45E8       JPADrawStripeX(JPAEmitterWorkData *)
 0002:803A4CE0       JPAFieldAir::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:803A4D6C       JPAFieldVortex::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:803A4DD0       JPAFieldVortex::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:803A4EBC       JPAFieldConvection::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:803A4F5C       JPAFieldSpin::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:803A4FF4       JPAEmitterManager::calcYBBCam((void))
 0002:803A50D8       JPADrawYBillboard(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A5200       JPADrawRotYBillboard(JPAEmitterWorkData *,JPABaseParticle *)
 0002:803A535C       JKRAramPiece::startDMA((JKRAMCommand *))
 0002:803A53DC       JAU_JASInitializer::initJASystem((JKRSolidHeap *))
 0002:803A5598       JASAudioThread::JASAudioThread((int,int,ulong))
 0002:803A5604       JKRAram::JKRAram((ulong,ulong,long))
 0002:803A57D4       JASGlobalInstance<14JASAudioThread>::~JASGlobalInstance<14JASAudioThread>((void))
 0002:803A5AEC       PauseButtonCheckerInGame::update((void))
 0002:803A5B64       PauseButtonCheckerInGame::isPermitToPlusPause(const(void))
 0002:803A5BB8       PauseButtonCheckerInGame::isPermitToMinusPause(const(void))
 0002:803A5C38       MR::getPlacedHiddenStarScenarioNoFromTable((char const *,long))
 0002:803A5C94       MR::getSuitableRenderMode((void))
 0002:803A5DC8       MR::isAspectRatioFlag16Per9((void))
 0002:803A5E04       RenderModeObj::getViWidthMax((void))
 0002:803A5E68       ResourceHolder::ResourceHolder((JKRArchive &))
 0002:803A5F94       ResourceHolder::getMotionName(const(ulong))
 0002:803A5FB0       ResourceHolder::isExistMaterialAnm(const(void))
 0002:803A6000       ResourceHolder::newMaterialAnmBuffer((J3DModelData *))
 0002:803A6070       ResourceHolder::newBckCtrl((void))
 0002:803A60D4       ResourceHolder::getInitEffectMtx(const(int,int))
 0002:803A60EC       ResourceHolder::initializeArc((JKRArchive &))
 0002:803A6278       ResourceHolder::getFileFinder((JKRArchive *,char const *))
 0002:803A62A4       ResourceHolder::initEachResTable((ResTable **,JKRArchive *,char const *const *))
 0002:803A6440       ResourceHolder::mount((JKRArchive *,char *))
 0002:803A6584       ResourceHolder::createAndRegisterObject((char const *,void *))
 0002:803A6918       ResourceHolder::backupInitMaterialData((J3DModelData const *))
 0002:803A69E4       ResourceHolderManager::ResourceHolderManager((void))
 0002:803A6A3C       ResourceHolderManager::createAndAdd((char const *,JKRHeap *))
 0002:803A6A70       ResourceHolderManager::createAndAddStationed((char const *))
 0002:803A6AB4       ResourceHolderManager::createAndAddLayoutHolder((char const *,JKRHeap *))
 0002:803A6AE8       ResourceHolderManager::createAndAddLayoutHolderStationed((char const *))
 0002:803A6B2C       ResourceHolderManager::createAndAddLayoutHolderRawData((char const *))
 0002:803A6BB0       ResourceHolderManager::removeIfIsEqualHeap((JKRHeap *))
 0002:803A6CF8       ResourceHolderManager::startCreateLayoutHolderOnMainThread((char const *,CreateResourceHolderArgs *))
 0002:803A6DC8       ResourceHolderManager::createAndAddInner((char const *,bool (*)(char *,ulong,char const *),void (*)(char const *,CreateResourceHolderArgs *)))
 0002:803A6E80       ResourceHolderManager::createAndAddInnerStationed((char const *,void (ResourceHolderManager::)(void const *,void *,char const *,CreateResourceHolderArgs *)))
 0002:803A6F0C       ResourceHolderManager::createResourceHolder((char const *,CreateResourceHolderArgs *))
 0002:803A6F8C       @unnamed@ResourceHolderManager_cpp@::GDCurrentRestorer::~GDCurrentRestorer((void))
 0002:803A6FD4       ResourceHolderManager::createLayoutHolder((char const *,CreateResourceHolderArgs *))
 0002:803A7054       ResourceHolderManager::add((char const *,CreateResourceHolderArgs const &))
 0002:803A70E8       ResourceHolderManager::find((char const *))
 0002:803A716C       ResourceHolderManagerName2Resource::ResourceHolderManagerName2Resource((void))
 0002:803A7194       MR::Functor<21ResourceHolderManager,PCc,P24CreateResourceHolderArgs>(MR::FunctorV2M<P21ResourceHolderManager,M21ResourceHolderManagerFPCvPvPCcP24CreateResourceHolderArgs_v,PCc,P24CreateResourceHolderArgs> (ResourceHolderManager *,void (ResourceHolderManager::)(void const *,void *,char const *,CreateResourceHolderArgs *),char const *,CreateResourceHolderArgs *))
 0002:803A71DC       MR::FunctorV2M<P21ResourceHolderManager,M21ResourceHolderManagerFPCvPvPCcP24CreateResourceHolderArgs_v,PCc,P24CreateResourceHolderArgs>::__cl(const(void))
 0002:803A7214       MR::FunctorV2M<P21ResourceHolderManager,M21ResourceHolderManagerFPCvPvPCcP24CreateResourceHolderArgs_v,PCc,P24CreateResourceHolderArgs>::clone(const(JKRHeap *))
 0002:803A728C       JGeometry::TBox2<f>::__as((JGeometry::TBox2<f> const &))
 0002:803A72B0       ResFileInfo::ResFileInfo((void))
 0002:803A72E0       ResTable::newFileInfoTable((ulong))
 0002:803A733C       ResTable::add((char const *,void *,bool))
 0002:803A73A0       ResTable::getResName(const(ulong))
 0002:803A73B4       ResTable::getRes(const(ulong))
 0002:803A73C4       ResTable::getRes(const(char const *))
 0002:803A73C8       ResTable::findFileInfo(const(char const *))
 0002:803A7410       ResTable::getFileInfo(const(ulong))
 0002:803A7420       ResTable::isExistRes(const(char const *))
 0002:803A744C       ResTable::findRes(const(char const *))
 0002:803A7494       ResTable::getResIndex(const(char const *))
 0002:803A7508       ResTable::findResName(const(void const *))
 0002:803A7548       ResTable::getResName(const(void const *))
 0002:803A754C       ResFileInfo::setName((char const *,bool))
 0002:803A75E0       ScenarioData::ScenarioData((char const *))
 0002:803A7708       ScenarioData::getScenarioNum(const(void))
 0002:803A77A0       ScenarioData::getPowerStarNum(const(void))
 0002:803A7838       ScenarioData::getValueString(const(char const *,long,char const **))
 0002:803A78B4       ScenarioData::getZoneName(const(long))
 0002:803A78F0       ScenarioData::getScenarioDataIter(const(long))
 0002:803A79CC       ScenarioDataParser::ScenarioDataParser((char const *))
 0002:803A7E14       ScenarioData::getValueU32(const(char const *,long,ulong *))
 0002:803A7E88       ScenarioData::getValueBool(const(char const *,long,bool *))
 0002:803A7F2C       ScenarioData::getZoneNum(const(void))
 0002:803A7F4C       ScenarioData::getZoneId(const(char const *))
 0002:803A7FDC       ScenarioDataIter::isEnd(const(void))
 0002:803A7FFC       ScenarioDataIter::goNext((void))
 0002:803A803C       ScenarioDataIter::makeAccessor(const(void))
 0002:803A807C       ScenarioDataParser::getScenarioData(const(char const *))
 0002:803A80F8       ScenarioDataParser::makeAccessor(const(char const *))
 0002:803A8128       ScenarioDataFunction::getScenarioDataParser((void))
 0002:803A8138       ScenarioDataFunction::getCurrentCommonLayers((char const *))
 0002:803A8174       ScenarioDataFunction::getCurrentScenarioLayers((char const *,long))
 0002:803A81E4       MR::makeBeginScenarioDataIter((void))
 0002:803A8214       std::sort<PP12ScenarioData,RQ232@unnamed@ScenarioDataParser_cpp@16GalaxyNameSortLt>(void (ScenarioData **,ScenarioData **,@unnamed@ScenarioDataParser_cpp@::GalaxyNameSortLt &))
 0002:803A85B0       std::__sort132<RQ232@unnamed@ScenarioDataParser_cpp@16GalaxyNameSortLt,PP12ScenarioData>(void (ScenarioData **,ScenarioData **,ScenarioData **,@unnamed@ScenarioDataParser_cpp@::GalaxyNameSortLt &))
 0002:803A86E0       std::__selection_sort<RQ232@unnamed@ScenarioDataParser_cpp@16GalaxyNameSortLt,PP12ScenarioData>(void (ScenarioData **,ScenarioData **,@unnamed@ScenarioDataParser_cpp@::GalaxyNameSortLt &))
 0002:803A87F0       ShapePacketUserData::ShapePacketUserData((void))
 0002:803A8828       ShapePacketUserData::init((J3DMaterial *))
 0002:803A8A5C       ShapePacketUserData::callDL(const(void))
 0002:803A8A6C       ShapePacketUserData::loadTexMtx(const(J3DMaterial *,int,ushort))
 0002:803A8BB0       MR::getJ3DShapePacketUserData((J3DShapePacket const *))
 0002:803A8BC4       MR::initJ3DShapePacketUserData((J3DModel *))
 0002:803A8CA8       StarPointerOnOffController::StarPointerOnOffController((void))
 0002:803A8D98       StarPointerOnOffController::update((void))
 0002:803A8DE4       StarPointerOnOffController::setStateToTitle((void *))
 0002:803A8E2C       StarPointerOnOffController::setStateToFileSelect((void *))
 0002:803A8E78       StarPointerOnOffController::decModeCounter((void *))
 0002:803A8E7C       StarPointerOnOffController::requestMode((void *,StarPointerModeEnum))
 0002:803A8E8C       StarPointerOnOffController::setupErrorWindow((void))
 0002:803A8F74       StarPointerOnOffController::setupBase((void))
 0002:803A9064       StarPointerOnOffController::setupGame((void))
 0002:803A90DC       StarPointerOnOffController::setupPictureBook((void))
 0002:803A92B8       StarPointerOnOffController::setupDemoMarioDeath((void))
 0002:803A93A8       StarPointerOnOffController::setupMarioLauncher((void))
 0002:803A96F0       StarPointerOnOffController::setupStarPieceTarget((void))
 0002:803A985C       StarPointerOnOffController::setupCommandStream((void))
 0002:803A9A4C       StarPointerOnOffController::updateMode((void))
 0002:803A9C30       def_803A9AD8
 0002:803A9CA8       StarPointerOnOffController::incModeCounter((void *,long))
 0002:803A9D2C       StarPointerOnOffController::decModeCounter((void *))
 0002:803A9E2C       StarPointerLayout::show((void))
 0002:803A9E94       StationedArchiveLoader::getProperHeap((MR::StationedFileInfo const *))
 0002:803A9EC0       StationedArchiveLoader::loadResourcesFromTable((StationedArchiveLoader::Condition const &))
 0002:803A9F98       StationedArchiveLoader::createAndAddResourcesFromTable((StationedArchiveLoader::Condition const &))
 0002:803AA03C       StationedArchiveLoader::loadScenarioData((JKRHeap *))
 0002:803AA0DC       WPad::WPad((long))
 0002:803AA2B0       WPad::update((void))
 0002:803AA374       nullsub_26
 0002:803AA378       WPad::connected((void))
 0002:803AA3C8       WPad::disconnected((void))
 0002:803AA40C       WPad::connectCallback((long,long))
 0002:803AA464       WPad::extensionCallback((long,long))
 0002:803AA4EC       WPad::getInfoCallback((long,long))
 0002:803AA51C       MR::isDeviceFreeStyle((KPADStatus const *))
 0002:803AA54C       MR::getPadDataForExceptionNoInit((ulong,ulong *,ulong *))
 0002:803AA704       WPad::getEnableAccelPastCount(const(ulong))
 0002:803AA720       WPad::getAcceleration(const(JGeometry::TVec3<f> *,ulong))
 0002:803AA738       WPad::getPastAcceleration(const(JGeometry::TVec3<f> *,long,ulong))
 0002:803AA750       WPadAcceleration::WPadAcceleration((WPad const *,ulong))
 0002:803AA818       WPadAcceleration::getAcceleration(const(JGeometry::TVec3<f> *))
 0002:803AA870       WPadAcceleration::getPastAcceleration(const(JGeometry::TVec3<f> *,long))
 0002:803AA8DC       WPadAcceleration::isBalanced(const(void))
 0002:803AA8F4       WPadAcceleration::update((void))
 0002:803AAB30       WPadAcceleration::updateRotate((void))
 0002:803AAD28       WPadAcceleration::updateAccAverage((void))
 0002:803AAE38       WPadAcceleration::updateIsStable((void))
 0002:803AAECC       WPadButton::WPadButton((WPad const *))
 0002:803AAF28       WPadButton::update((void))
 0002:803AAFD4       WPadButton::testButtonUp(const(void))
 0002:803AAFE0       WPadButton::testButtonDown(const(void))
 0002:803AAFEC       WPadButton::testButtonLeft(const(void))
 0002:803AAFF8       WPadButton::testButtonRight(const(void))
 0002:803AB004       WPadButton::testButtonA(const(void))
 0002:803AB010       WPadButton::testButtonB(const(void))
 0002:803AB01C       WPadButton::testButtonMinus(const(void))
 0002:803AB028       WPadButton::testButtonPlus(const(void))
 0002:803AB034       WPadButton::testButton1(const(void))
 0002:803AB040       WPadButton::testButton2(const(void))
 0002:803AB04C       WPadButton::testButtonC(const(void))
 0002:803AB058       WPadButton::testButtonZ(const(void))
 0002:803AB064       WPadButton::testTriggerUp(const(void))
 0002:803AB070       WPadButton::testTriggerDown(const(void))
 0002:803AB07C       WPadButton::testTriggerLeft(const(void))
 0002:803AB088       WPadButton::testTriggerRight(const(void))
 0002:803AB094       WPadButton::testTriggerA(const(void))
 0002:803AB0A0       WPadButton::testTriggerB(const(void))
 0002:803AB0AC       WPadButton::testTriggerMinus(const(void))
 0002:803AB0B8       WPadButton::testTriggerHome(const(void))
 0002:803AB0C4       WPadButton::testTriggerPlus(const(void))
 0002:803AB0DC       WPadButton::testTrigger2(const(void))
 0002:803AB0E8       WPadButton::testTriggerC(const(void))
 0002:803AB0F4       WPadButton::testTriggerZ(const(void))
 0002:803AB100       WPadButton::testReleaseZ(const(void))
 0002:803AB10C       WPadButton::isChangeAnyState(const(void))
 0002:803AB134       WPadReadDataInfo::WPadReadDataInfo((void))
 0002:803AB180       WPadReadDataInfo::getKPadStatus(const(ulong))
 0002:803AB1AC       WPadHolder::WPadHolder((void))
 0002:803AB27C       WPadHolder::updateReadDataOnly((void))
 0002:803AB2E0       WPadHolder::updateProjectPadData((void))
 0002:803AB330       WPadHolder::updateInGame((void))
 0002:803AB3A4       WPadHolder::update((void))
 0002:803AB3F4       WPadHolder::initSensorBarPosition((void))
 0002:803AB48C       WPadHolder::resetPad((void))
 0002:803AB4E0       WPadHolder::getWPad((long))
 0002:803AB4FC       WPadHolder::setConnectCallback((void))
 0002:803AB558       @unnamed@WPadHolder_cpp@::getWPadHolder((void))
 0002:803AB568       MR::getWPad((long))
 0002:803AB5E8       MR::setWPadHolderModeGame((void))
 0002:803AB610       MR::getHBMKPadData((HBMKPadData *,long))
 0002:803AB6AC       MR::setAutoSleepTimeWiiRemote((bool))
 0002:803AB6C0       WPadHVSwing::WPadHVSwing((WPad const *,ulong))
 0002:803AB704       WPadHVSwing::updateSwing((void))
 0002:803AB80C       WPadHVSwing::updateCentrifugal((void))
 0002:803AB9A4       WPadHVSwing::update((void))
 0002:803ABA30       WPadInfoChecker::WPadInfoChecker((WPad *))
 0002:803ABA50       WPadInfoChecker::successGetInfo((void))
 0002:803ABA5C       WPadInfoChecker::startCheck((void))
 0002:803ABAA4       WPadInfoChecker::reset((void))
 0002:803ABAB8       WPadInfoChecker::update((void))
 0002:803ABAF8       WPadLeaveWatcher::WPadLeaveWatcher((WPad *))
 0002:803ABB0C       WPadLeaveWatcher::update((void))
 0002:803ABC14       WPadLeaveWatcher::restart((void))
 0002:803ABC24       WPadPointer::WPadPointer((WPad const *))
 0002:803ABCF0       WPadPointer::reset((void))
 0002:803ABDC8       WPadPointer::update((void))
 0002:803ABFA8       WPadPointer::getPointingPos(const(JGeometry::TVec2<f> *))
 0002:803ABFE4       WPadPointer::getHorizonVec(const(JGeometry::TVec2<f> *))
 0002:803AC020       WPadPointer::getPastPointingPos(const(JGeometry::TVec2<f> *,long))
 0002:803AC04C       WPadPointer::getPointingPosBasedOnScreen(const(JGeometry::TVec2<f> *))
 0002:803AC0F4       RumbleChannel::clear((void))
 0002:803AC114       RumbleChannel::update((void))
 0002:803AC17C       RumbleChannel::setPattern((void const *,RumblePattern const &,ulong,bool))
 0002:803AC198       WPadRumble::WPadRumble((WPad *))
 0002:803AC26C       WPadRumble::~WPadRumble((void))
 0002:803AC300       WPadRumble::registInstance((void))
 0002:803AC330       WPadRumble::pause((void))
 0002:803AC340       WPadRumble::stop((void))
 0002:803AC3AC       WPadRumble::update((void))
 0002:803AC3E8       WPadRumble::updateRumble((void))
 0002:803AC55C       WPadRumble::getRumbleInstance(const(void))
 0002:803AC574       WPadRumble::vibratePatternIfNotExist((void const *,char const *))
 0002:803AC5C4       WPadRumble::setRumblePatternIfNotExist((void const *,RumblePattern const &,bool))
 0002:803AC6B0       WPadRumble::findRubmlePattern((void const *,long *,long *,long *,RumblePattern const &))
 0002:803AC76C       RumbleData::getPattern((char const *))
 0002:803AC7CC       RumbleData::initHashValue((void))
 0002:803AC828       nullsub_27
 0002:803AC82C       WPadStick::WPadStick((WPad const *))
 0002:803AC864       WPadStick::update((void))
 0002:803ACA3C       WPadStick::isChanged(const(void))
 0002:803ACA54       RSO::setupRsoHomeButtonMenu((void))
 0002:803ACB88       RSO::HBMStartBlackOut((void))
 0002:803ACBE0       HomeButtonStateNotifier::HomeButtonStateNotifier((void))
 0002:803ACBF0       HomeButtonStateNotifier::update((bool))
 0002:803ACC54       HomeButtonStateNotifier::registerMoviePlayerSimple((MoviePlayerSimple *))
 0002:803ACC68       HomeButtonStateNotifier::notifyHomeButtonDeactive((void))
 0002:803ACCB4       ConfigDataCreateChunk::ConfigDataCreateChunk((void))
 0002:803ACD18       ConfigDataCreateChunk::serialize(const(uchar *,ulong))
 0002:803ACD90       ConfigDataCreateChunk::deserialize((uchar const *,ulong))
 0002:803ACE2C       J3DIndBlockFull::initialize((void))
 0002:803ACE38       ConfigDataHolder::setIsCreated((bool))
 0002:803ACE3C       JASChannel::setPauseFlag((bool))
 0002:803ACE44       ConfigDataHolder::isCreated(const(void))
 0002:803ACEA8       ConfigDataHolder::resetAllData((void))
 0002:803ACF14       ConfigDataHolder::ConfigDataHolder((void))
 0002:803AD000       ConfigDataHolder::loadFromFileBinary((char const *,uchar const *,ulong))
 0002:803AD060       ConfigDataMii::ConfigDataMii((void))
 0002:803AD0CC       ConfigDataMii::setMiiOrIconId((void const *,ulong const *))
 0002:803AD144       ConfigDataMii::getIconId(const(ulong *))
 0002:803AD158       ConfigDataMii::getMiiId(const(void *))
 0002:803AD1B4       ConfigDataMii::serialize(const(uchar *,ulong))
 0002:803AD24C       ConfigDataMii::deserialize((uchar const *,ulong))
 0002:803AD330       ConfigDataMii::initializeData((void))
 0002:803AD34C       JSURandomInputStream::getAvailable(const(void))
 0002:803AD3A8       ConfigDataMisc::ConfigDataMisc((void))
 0002:803AD400       ConfigDataMisc::isLastLoadedMario(const(void))
 0002:803AD418       ConfigDataMisc::setLastLoadedMario((bool))
 0002:803AD440       ConfigDataMisc::onCompleteEndingMario((void))
 0002:803AD450       ConfigDataMisc::onCompleteEndingLuigi((void))
 0002:803AD460       ConfigDataMisc::isOnCompleteEndingMario((void))
 0002:803AD46C       ConfigDataMisc::isOnCompleteEndingLuigi((void))
 0002:803AD478       ConfigDataMisc::getLastModified(const(void))
 0002:803AD488       ConfigDataMisc::updateLastModified((void))
 0002:803AD4D0       ConfigDataMisc::serialize(const(uchar *,ulong))
 0002:803AD560       ConfigDataMisc::deserialize((uchar const *,ulong))
 0002:803AD63C       ConfigDataMisc::initializeData((void))
 0002:803AD654       FindingLuigiEventScheduler::FindingLuigiEventScheduler((void))
 0002:803AD66C       FindingLuigiEventScheduler::initAfterResourceLoaded((void))
 0002:803AD6B0       FindingLuigiEventScheduler::setStateHiding((void))
 0002:803AD700       FindingLuigiEventScheduler::getHidingGalaxyNameAndStarId(const(char const **,long *))
 0002:803AD7DC       FindingLuigiEventScheduler::isActive(const(void))
 0002:803AD84C       FindingLuigiEventScheduler::isEnd(const(void))
 0002:803AD91C       FindingLuigiEventScheduler::clearLostAndFoundCount((void))
 0002:803AD930       FindingLuigiEventScheduler::syncWithGameEventFlag((void))
 0002:803AD99C       FindingLuigiEventScheduler::calcPowerStarIndexLuigiHas(const(void))
 0002:803ADA60       FindingLuigiEventScheduler::isState(const(ulong))
 0002:803ADAD0       FindingLuigiEventScheduler::setStateReturnAstroGalaxy((int))
 0002:803ADB44       FindingLuigiEventScheduler::update((GalaxyMoveArgument const &))
 0002:803ADBB4       FindingLuigiEventScheduler::updateOnStageResult((char const *,long))
 0002:803ADD54       GalaxyCometTimeTable::GalaxyCometTimeTable((GalaxyCometTimePaper const *))
 0002:803ADDC8       GalaxyCometTimeTable::update((void))
 0002:803ADE0C       GalaxyCometTimeTable::checkIsReady((void))
 0002:803ADE60       GalaxyCometTimeTable::serializeStateToGameData((GalaxyCometSerializeInfo *))
 0002:803ADEB8       GalaxyCometTimeTable::deserializeStateFromGameData((GalaxyCometSerializeInfo const *))
 0002:803ADEE0       GalaxyCometTimeTable::isLand(const(void))
 0002:803ADF00       GalaxyCometTimeTable::isIncluded(const(char const *))
 0002:803ADF6C       GalaxyCometTimeTable::getCometCategory(const(void))
 0002:803ADF84       GalaxyCometTimeTable::updateTimePaperPos((void))
 0002:803ADFE8       GalaxyCometTimeTable::findSuitableTimePaperPos(const(long *,long))
 0002:803AE0B0       GalaxyCometTimeTable::calcTimePaperLength(const(void))
 0002:803AE0D8       GalaxyCometScheduler::GalaxyCometScheduler((void))
 0002:803AE178       GalaxyCometScheduler::update((void))
 0002:803AE1F8       GalaxyCometScheduler::forceToNextState((void))
 0002:803AE274       GalaxyCometScheduler::syncWithFlags((void))
 0002:803AE2EC       GalaxyCometScheduler::updateStateToGameData((void))
 0002:803AE35C       GalaxyCometScheduler::restoreStateFromGameData((void))
 0002:803AE404       GalaxyCometScheduler::setScheduleFirstContact((void))
 0002:803AE46C       GalaxyCometScheduler::setScheduleMostForwardCometAppear((void))
 0002:803AE4FC       GalaxyCometScheduler::isCometLand(const(char const *))
 0002:803AE594       GalaxyCometScheduler::getEncounterCometPowerStarId(const(char const *))
 0002:803AE60C       GalaxyCometScheduler::getEncounterCometName(const(char const *))
 0002:803AE664       GalaxyCometScheduler::findFromGalaxy(const(char const *))
 0002:803AE6EC       GalaxyCometScheduler::isHideAll(const(void))
 0002:803AE75C       GalaxyCometScheduler::getStateValueIncluded((char const *))
 0002:803AE7E8       GalaxyCometState::GalaxyCometState((void))
 0002:803AE840       GalaxyCometState::update((void))
 0002:803AE864       GalaxyCometState::forceToNext((void))
 0002:803AE8AC       GalaxyCometState::getStateIndex(const(void))
 0002:803AE900       GalaxyCometState::setStateAndPastSecond((int,ushort))
 0002:803AE9D4       GalaxyMoveArgument::GalaxyMoveArgument((ulong,char const *,long,JMapIdInfo const *))
 0002:803AEA44       GalaxyMoveArgument::isEqualStage(const(char const *))
 0002:803AEA68       GalaxyMoveArgument::isEqualStageScenario(const(char const *,int))
 0002:803AEAC0       GalaxyNameSortTable::getGalaxySortIndex((char const *))
 0002:803AEC64       GalaxyStatusAccessor::getCometName(const(long))
 0002:803AECB4       GalaxyStatusAccessor::isValidNormalComet(const(long))
 0002:803AED10       GalaxyStatusAccessor::isCometStar(const(long))
 0002:803AED80       GalaxyStatusAccessor::isExistGrandStar(const(void))
 0002:803AEDF0       GalaxyStatusAccessor::isExistAnyComet(const(void))
 0002:803AEE84       GalaxyStatusAccessor::getNormalCometScenarioNo(const(void))
 0002:803AEF2C       GalaxyStatusAccessor::getCoin100CometScenarioNo(const(void))
 0002:803AEFD4       GalaxyStatusAccessor::isOpened(const(void))
 0002:803AF06C       GalaxyStatusAccessor::hasPowerStar(const(long))
 0002:803AF0C8       GalaxyStatusAccessor::isCompleted(const(void))
 0002:803AF130       GalaxyStatusAccessor::getPowerStarNumOwned(const(void))
 0002:803AF1B0       MR::setMirrorReflectionInfoFromModel((LiveActor *))
 0002:803AF1E8       GalaxyStatusAccessor::getNormalScenarioNum(const(void))
 0002:803AF27C       GalaxyStatusAccessor::getAppearPowerStarObjName(const(long))
 0002:803AF300       GalaxyStatusAccessor::getActivePowerStarId(const(long))
 0002:803AF348       GalaxyStatusAccessor::isValidCoin100(const(long))
 0002:803AF3E8       GalaxyStatusAccessor::isHiddenStar(const(long))
 0002:803AF428       GameDataConst::getIncludedGrandGalaxyId((char const *))
 0002:803AF4F0       GameDataConst::isGalaxyLuigiArrested((char const *,long))
 0002:803AF570       GameDataConst::isQuestionGalaxy((char const *))
 0002:803AF628       GameDataConst::isGalaxyAppearGreenDriver((char const *))
 0002:803AF720       GameDataConst::isPowerStarSpecial((char const *,long,char const *))
 0002:803AF7FC       @unnamed@GameSequenceFunction_cpp@::getGameSequenceProgress((void))
 0002:803AF80C       GameDataFunction::resetAllGameData((void))
 0002:803AF838       GameDataFunction::addStarPieceGivingToTicoSeed((int,int))
 0002:803AF8C0       GameDataFunction::setGameEventValueForBit((char const *,int,bool))
 0002:803AFA9C       GameDataFunction::getPowerStarNumMax((void))
 0002:803AFC1C       GameDataFunction::isOnJustAppearGalaxy((char const *))
 0002:803AFCCC       GameDataFunction::getGameEventValue((char const *))
 0002:803AFDF4       GameDataFunction::setupAlreadyDoneFlag((char const *,JMapInfoIter const &,ulong *))
 0002:803AFE14       GameDataFunction::updateAlreadyDoneFlag((int,ulong))
 0002:803AFE2C       GameDataFunction::restoreGalaxyCometStatus((int,ushort *,ushort *))
 0002:803AFF10       GameDataFunction::addMissPoint((int))
 0002:803AFFA4       GameDataFunction::incPlayerMissNum((void))
 0002:803AFFD0       GameDataFunction::registerStorageSpinDriverPathDrawRange((char const *,int,int,int,float *))
 0002:803B0034       GameDataFunction::updateStorageSpinDriverPathDrawRange((char const *,int,int,float))
 0002:803B0198       GameDataFunction::followStoryEventByName((char const *))
 0002:803B01F0       GameDataFunction::getPlayerLeft((void))
 0002:803B021C       GameDataFunction::addPlayerLeft((int))
 0002:803B02DC       GameSequenceFunction::resetStageResultSequenceParam((void))
 0002:803B0314       GameDataFunction::getLast1upStarPieceNum((void))
 0002:803B0328       GameDataFunction::getUserName((void))
 0002:803B04D8       GameDataFunction::isEqualJustPowerStarNum((int))
 0002:803B0544       GameDataFunction::getSceneStartGameDataHolder((void))
 0002:803B0594       GameDataFunction::calcTicoGalaxyNum((GameDataHolder const *))
 0002:803B0608       GameDataFunction::calcGrandStarNum((GameDataHolder const *))
 0002:803B0668       GameDataFunction::resetGameDataGoToGalaxyFirst((void))
 0002:803B06E8       GameDataFunction::resetGameDataGoToGalaxyRetry((void))
 0002:803B07F0       GameDataFunction::setSysConfigFileTimeSent((long long))
 0002:803B08E0       GameDataFunction::isOnGameEventFlagCoin100Comet((char const *))
 0002:803B0978       GameDataFunction::updateGalaxyCometStatus((int,ushort,ushort))
 0002:803B09D4       GameDataFunction::addStockedStarPiece((int))
 0002:803B0A60       GameDataFunction::isPowerStarLeftInCometOnly((void))
 0002:803B0B60       GameDataFunction::calcGreenStarNum((GameDataHolder const *))
 0002:803B0BDC       GameDataSomeScenarioAccessor::hasPowerStar(const(void))
 0002:803B0C04       GameDataSomeScenarioAccessor::isAlreadyVisited(const(void))
 0002:803B0C2C       GameDataSomeScenarioAccessor::getMaxCoinNum(const(void))
 0002:803B0C50       GameDataSomeScenarioAccessor::setPowerStarFlag((bool))
 0002:803B0C60       GameDataSomeScenarioAccessor::setFlagAlreadyVisited((bool))
 0002:803B0C70       GameDataSomeScenarioAccessor::updateMaxCoinNum((int))
 0002:803B0CD8       GameDataSomeScenarioAccessor::setBitFlagAccordingToBool((uchar *,bool))
 0002:803B0D20       GameDataSomeGalaxyStorage::GameDataSomeGalaxyStorage((GalaxyStatusAccessor const &))
 0002:803B0D78       GameDataSomeGalaxyStorage::resetAllData((void))
 0002:803B0DAC       GameDataSomeGalaxyStorage::getPowerStarNumOwned(const(void))
 0002:803B0DF0       GameDataSomeGalaxyStorage::deserialize((BinaryDataContentAccessor const &,uchar const *))
 0002:803B0EF8       GameDataAllGalaxyStorage::GameDataAllGalaxyStorage((void))
 0002:803B1020       GameDataAllGalaxyStorage::isExistAccessor(const(char const *,int))
 0002:803B1098       GameDataAllGalaxyStorage::makeAccessor(const(char const *,int))
 0002:803B10E8       GameDataAllGalaxyStorage::calcCurrentPowerStarNum(const(void))
 0002:803B1150       GameDataAllGalaxyStorage::getPowerStarNumOwned(const(char const *))
 0002:803B11BC       GameDataAllGalaxyStorage::deserialize((uchar const *,ulong))
 0002:803B1310       GameDataAllGalaxyStorage::initHeaderSerializer((void))
 0002:803B1390       GameDataAllGalaxyStorage::findIndex(const(char const *))
 0002:803B140C       GameDataAllGalaxyStorage::findIndex(const(ushort))
 0002:803B1488       GameDataSomeGalaxyStorage::serialize(const(BinaryDataContentAccessor const &,uchar *))
 0002:803B1524       GameDataAllGalaxyStorage::serialize(const(uchar *,ulong))
 0002:803B161C       GameDataHolder::GameDataHolder((UserFile const *))
 0002:803B17D4       GameDataHolder::isDataMario(const(void))
 0002:803B1808       GameDataHolder::getGalaxyNumCanOpen(const(void))
 0002:803B18B0       GameDataHolder::getGameEventValue(const(char const *))
 0002:803B18E0       GameDataHolder::isOnGameEventValueForBit(const(char const *,int))
 0002:803B1928       GameDataHolder::setGameEventValueForBit((char const *,int,bool))
 0002:803B199C       GameDataHolder::getPictureBookChapterCanRead(const(void))
 0002:803B1A38       GameDataHolder::setPictureBookChapterAlreadyRead((int))
 0002:803B1A50       GameDataHolder::setRaceBestTime((char const *,ulong))
 0002:803B1AE0       GameDataHolder::getRaceBestTime(const(char const *))
 0002:803B1B70       GameDataHolder::addMissPoint((int))
 0002:803B1BD8       GameDataHolder::resetMissPoint((void))
 0002:803B1BEC       GameDataHolder::isPointCollectForLetter(const(void))
 0002:803B1C28       GameDataHolder::incPlayerMissNum((void))
 0002:803B1C90       GameDataHolder::getPlayerMissNum(const(void))
 0002:803B1CCC       GameDataHolder::hasPowerStar(const(char const *,long))
 0002:803B1D08       GameDataHolder::hasGrandStar(const(int))
 0002:803B1D58       GameDataHolder::setPowerStar((char const *,long,bool))
 0002:803B1DBC       GameDataHolder::isOnGalaxyScenarioFlagAlreadyVisited(const(char const *,long))
 0002:803B1E3C       GameDataHolder::onGalaxyScenarioFlagAlreadyVisited((char const *,long))
 0002:803B1EB8       GameDataHolder::isAppearGalaxy(const(char const *))
 0002:803B1F40       GameDataHolder::getStockedStarPieceNum(const(void))
 0002:803B1F84       GameDataHolder::isPassedStoryEvent(const(char const *))
 0002:803B2008       GameDataHolder::followStoryEventByName((char const *))
 0002:803B2080       GameDataHolder::resetAllData((void))
 0002:803B211C       GameDataHolder::loadFromFileBinary((char const *,uchar const *,ulong))
 0002:803B217C       GameDataPlayerStatus::GameDataPlayerStatus((void))
 0002:803B21D8       GameDataPlayerStatus::serialize(const(uchar *,ulong))
 0002:803B2278       GameDataPlayerStatus::deserialize((uchar const *,ulong))
 0002:803B2348       GameDataPlayerStatus::initializeData((void))
 0002:803B2364       GameDataPlayerStatus::getPlayerLeft(const(void))
 0002:803B2374       GameDataPlayerStatus::addPlayerLeft((int))
 0002:803B23B4       GameDataPlayerStatus::isPlayerLeftSupply(const(void))
 0002:803B23CC       GameDataPlayerStatus::offPlayerLeftSupply((void))
 0002:803B23D8       GameDataPlayerStatus::addStockedStarPiece((int))
 0002:803B2418       GameDataTemporaryInGalaxy::GameDataTemporaryInGalaxy((void))
 0002:803B24E8       GameDataTemporaryInGalaxy::setPlayerRestartIdInfo((JMapIdInfo const &))
 0002:803B24F0       GameDataTemporaryInGalaxy::resetRaceBestTime((void))
 0002:803B2500       GameDataTemporaryInGalaxy::isStageCleared(const(void))
 0002:803B2514       GameDataTemporaryInGalaxy::resetStageResultPowerStarParam((void))
 0002:803B2524       J3DPEBlockFogOff::setZCompLoc((uchar))
 0002:803B253C       GameDataTemporaryInGalaxy::resetStageResultCoinParam((void))
 0002:803B2548       GameDataTemporaryInGalaxy::addStarPiece((int))
 0002:803B2590       GameDataTemporaryInGalaxy::getStarPieceNum(const(void))
 0002:803B25A0       GameDataTemporaryInGalaxy::resetStageResultParam((void))
 0002:803B25DC       MR::updateHitSensorsAll((LiveActor *))
 0002:803B25F4       GameDataTemporaryInGalaxy::receiveStageResultParam((char const *,long,int,int))
 0002:803B2678       GameEventFlagAccessor::isTypeGalaxyOpenStar(const(void))
 0002:803B2690       GameEventFlagAccessor::isTypeSpecialStar(const(void))
 0002:803B26A8       GameEventFlagAccessor::isTypeStarPiece(const(void))
 0002:803B26B0       MR::isMsgFireBallAttack((ulong))
 0002:803B26C0       GameEventFlagAccessor::isTypeEventValueIsZero(const(void))
 0002:803B26D8       GameEventFlagAccessor::getEventValueName(const(void))
 0002:803B26E4       GameEventFlagAccessor::getStarPieceIndex(const(void))
 0002:803B2708       GameEventFlagAccessor::getNeedStarPieceNum(const(void))
 0002:803B2724       GameEventFlagAccessor::getRequirement(const(void))
 0002:803B2730       GameEventFlagIter::isEnd(const(void))
 0002:803B277C       GameEventFlagIter::goNext((void))
 0002:803B27C4       GameEventFlagIter::isValid(const(void))
 0002:803B2810       GameEventFlagTableInstance::findFlag((char const *))
 0002:803B28D0       GameEventFlagTableInstance::initSortTable((void))
 0002:803B2BC0       GameEventFlagTable::makeAccessor((char const *))
 0002:803B2BF8       GameEventFlagTable::getTableSize((void))
 0002:803B2C00       GameEventFlagTable::getFlag((int))
 0002:803B2C38       GameEventFlagTable::getEventFlagNameSpecialPowerStar((char const *,long))
 0002:803B2D04       GameEventFlagTable::isPowerStarType((char const *,long,char const *))
 0002:803B2D48       GameEventFlagTable::calcExclamationGalaxyNum((void))
 0002:803B2DEC       GameEventFlagTable::getExclamationGalaxyNameFromIndex((int))
 0002:803B2E90       GameEventFlagTable::isExist((char const *))
 0002:803B2EC0       GameEventFlagTable::getIndex((GameEventFlag const *))
 0002:803B2ED8       GameEventFlagTable::isDependedAnother((char const *,char const *))
 0002:803B2FCC       GameEventFlagTable::getIndexFromHashCode((ushort))
 0002:803B3090       GameEventFlagTable::calcSpecialPowerStarNum((char const *))
 0002:803B313C       std::sort<PQ226GameEventFlagTableInstance3Key,RQ232@unnamed@GameEventFlagTable_cpp@19GameEventFlagSortLt>(void (GameEventFlagTableInstance::Key *,GameEventFlagTableInstance::Key *,@unnamed@GameEventFlagTable_cpp@::GameEventFlagSortLt &))
 0002:803B33BC       std::swap<Q226GameEventFlagTableInstance3Key>(void (GameEventFlagTableInstance::Key &,GameEventFlagTableInstance::Key &))
 0002:803B33F4       std::__sort132<RQ232@unnamed@GameEventFlagTable_cpp@19GameEventFlagSortLt,PQ226GameEventFlagTableInstance3Key>(void (GameEventFlagTableInstance::Key *,GameEventFlagTableInstance::Key *,GameEventFlagTableInstance::Key *,@unnamed@GameEventFlagTable_cpp@::GameEventFlagSortLt &))
 0002:803B34B0       std::__selection_sort<RQ232@unnamed@GameEventFlagTable_cpp@19GameEventFlagSortLt,PQ226GameEventFlagTableInstance3Key>(void (GameEventFlagTableInstance::Key *,GameEventFlagTableInstance::Key *,@unnamed@GameEventFlagTable_cpp@::GameEventFlagSortLt &))
 0002:803B3544       GameEventFlagTable::getStarPieceNumToOpenExclamationGalaxy((char const *))
 0002:803B35B0       GameEventFlagTable::getGalaxyDependedFlags((char const **,int,char const *))
 0002:803B3748       GameEventFlagChecker::GameEventFlagChecker((GameDataHolder *))
 0002:803B37BC       GameEventFlagChecker::canOn(const(char const *))
 0002:803B39A8       def_803B3804
 0002:803B39C4       GameEventFlagChecker::isOn(const(char const *))
 0002:803B3A58       GameEventFlagChecker::tryOn((char const *))
 0002:803B3AD4       def_803B3AC8
 0002:803B3AFC       GameEventFlagChecker::reset((void))
 0002:803B3B18       GameEventFlagChecker::isOnGalaxy(const(char const *))
 0002:803B3B7C       GameEventFlagChecker::isOnGalaxyDepended(const(char const *))
 0002:803B3C04       GameEventFlagChecker::isOnComet(const(GameEventFlag const *))
 0002:803B3C6C       GameEventFlagStorage::GameEventFlagStorage((void))
 0002:803B3CE0       GameEventFlagStorage::set((GameEventFlag const *,bool))
 0002:803B3D2C       GameEventFlagStorage::isOn(const(GameEventFlag const *))
 0002:803B3D74       GameEventFlagStorage::serialize(const(uchar *,ulong))
 0002:803B3E74       GameEventFlagStorage::deserialize((uchar const *,ulong))
 0002:803B3F38       GameEventFlagStorage::initializeData((void))
 0002:803B4008       GameEventValueChecker::getValue(const(char const *))
 0002:803B4040       GameEventValueChecker::setValue((char const *,ushort))
 0002:803B40A0       GameEventValueChecker::serialize(const(uchar *,ulong))
 0002:803B4164       GameEventValueChecker::deserialize((uchar const *,ulong))
 0002:803B4254       GameEventValueChecker::initializeData((void))
 0002:803B4298       GameEventValueChecker::findIndex(const(char const *))
 0002:803B4314       GameEventValueChecker::findIndexFromHashCode(const(ushort))
 0002:803B4390       GameSequenceDirector::GameSequenceDirector((void))
 0002:803B458C       GameSequenceDirector::initAfterResourceLoaded((void))
 0002:803B45CC       GameSequenceDirector::update((void))
 0002:803B462C       GameSequenceDirector::draw(const(void))
 0002:803B46C0       @unnamed@NWC24Messenger_cpp@::getNWC24Messenger((void))
 0002:803B4940       MR::setInformationMessageReplaceString((wchar_t const *,long))
 0002:803B49EC       GameSequenceFunction::requestChangeScene((char const *))
 0002:803B4A78       GameSequenceFunction::sendStageResultSequenceParam((char const *,long,int,int))
 0002:803B4AB0       GameSequenceFunction::getClearedStageName((void))
 0002:803B4AC4       GameSequenceFunction::getClearedPowerStarId((void))
 0002:803B4AD8       GameSequenceFunction::getClearedStarPieceNum((void))
 0002:803B4AEC       GameSequenceFunction::getClearedCoinNum((void))
 0002:803B4B00       GameSequenceFunction::hasPowerStarYetAtResultSequence((void))
 0002:803B4B64       GameSequenceFunction::isPowerStarAtResultSequence((char const *,long))
 0002:803B4C80       GameSequenceFunction::hasRetryGalaxySequence((void))
 0002:803B4C94       GameSequenceFunction::isNeedToReflectStageResultSequenceStarPiece((void))
 0002:803B4CB0       GameSequenceFunction::reflectStageResultSequenceCoin((void))
 0002:803B4E30       GameSequenceFunction::startCopyUserFileSequence((int,int))
 0002:803B4E7C       GameSequenceFunction::startSetMiiOrIconIdUserFileSequence((int,void const *,ulong const *))
 0002:803B4FA8       GameSequenceFunction::isSuccessSaveDataHandleSequence((void))
 0002:803B5148       GameSequenceFunction::storeSceneStartGameDataHolder((void))
 0002:803B5190       GameSequenceFunction::updateGameDataAndSequenceAfterStageResultSequence((void))
 0002:803B51FC       GameSequenceFunction::startGameDataSaveSequence((bool,bool))
 0002:803B5284       GameSequenceProgress::GameSequenceProgress((void))
 0002:803B5364       GameSequenceProgress::initAfterResourceLoaded((void))
 0002:803B53D0       GameSequenceProgress::update((void))
 0002:803B5478       GameSequenceProgress::draw((void))
 0002:803B5498       GameSequenceProgress::startScene((void))
 0002:803B55EC       GameSequenceProgress::endScene((void))
 0002:803B5654       GameSequenceProgress::requestChangeScene((char const *))
 0002:803B56BC       GameSequenceProgress::requestGalaxyMove((GalaxyMoveArgument const &))
 0002:803B5958       GameSequenceProgress::requestCancelScenarioSelect((void))
 0002:803B596C       GameSequenceProgress::exeLogo((void))
 0002:803B59B0       GameSequenceProgress::exeNormal((void))
 0002:803B5A48       GameSequenceProgress::exeGalaxyMove((void))
 0002:803B5ADC       GameSequenceProgress::exeResetProcessing((void))
 0002:803B5B68       MR::isUFOKinokoUnderConstruction((void))
 0002:803B5B98       GameSequenceProgress::isSceneLongAutoSleepWiiRemote((void))
 0002:803B5BE8       GameSequenceProgress::updateGameDataBeforeChangeScene((void))
 0002:803B5C38       GameSequenceProgress::resetGameDataAfterChangeScene((GalaxyMoveArgument const &))
 0002:803B5D14       GameSequenceProgress::updateGameDataGalaxyVisitedFlag((void))
 0002:803B5D88       GameSequenceProgress::setMinFrameBeforeStartNextStage((GalaxyMoveArgument const &))
 0002:803B5E14       GameSequenceProgress::isLuigiLeftSupply((void))
 0002:803B5E20       GameSequenceProgress::offLuigiLeftSupply((void))
 0002:803B5E30       GameSequenceProgress::countDownGameEventValueFromNewPowerStar((void))
 0002:803B60CC       LuigiLeftSupplier::syncWithFlags((void))
 0002:803B6114       SaveDataBannerCreator::SaveDataBannerCreator((void))
 0002:803B61A0       SaveDataHandler::getLastResultCode(const(void))
 0002:803B61AC       SaveDataBannerCreator::exeCreateOnTemporary((void))
 0002:803B6250       SaveDataBannerCreator::exeMoveToHomeDir((void))
 0002:803B62E8       SaveDataBannerCreator::setupBannerInfo((void))
 0002:803B64E4       SaveDataFileAccessor::getFileInfo((int))
 0002:803B64F8       SaveDataFileAccessor::makeUserFileInfo((SaveDataUserFileInfo *,char const *))
 0002:803B6624       SaveDataHandler::SaveDataHandler((SysConfigFile const *,UserFile const *))
 0002:803B66F0       SaveDataHandler::update((void))
 0002:803B6724       SaveDataHandler::requestCheckEnableToCreate((void))
 0002:803B6770       SaveDataHandler::requestLoadSaveData((void))
 0002:803B67D4       SaveDataHandler::requestVerifyAfterLoadGameDataFile((void))
 0002:803B6870       SaveDataHandler::initializeUserFileMemory((int,UserFile const *))
 0002:803B6938       SaveDataHandler::copyUserFileMemory((int,int))
 0002:803B6A08       SaveDataHandler::restoreGameDataFile((char const *,void *,ulong))
 0002:803B6A68       SaveDataHandler::storeUserFile((UserFile const *))
 0002:803B6AEC       SaveDataHandler::storeSysConfigFile((SysConfigFile const *))
 0002:803B6B44       SaveDataHandler::requestSaveSaveData((void))
 0002:803B6C5C       SaveDataHandler::getEnoughtTempBufferSize((void))
 0002:803B6C64       SaveDataHandler::isDone(const(void))
 0002:803B6CBC       SaveDataHandler::exeSaveProcessingGameData((void))
 0002:803B6D34       SaveDataHandler::exeSaveProcessingBanner((void))
 0002:803B6E3C       SaveDataHandler::resetSaveData((uchar *))
 0002:803B6FA8       SaveDataHandler::initializeAllFileInSaveData((uchar *,SysConfigFile const *,UserFile const *))
 0002:803B7078       SaveDataHandler::isCorrectFileHeader((uchar const *))
 0002:803B70E4       SaveDataHandler::copySaveDataEachFile((uchar *,uchar const *))
 0002:803B71B8       SaveDataHandler::createCommunicationBuffer((void))
 0002:803B7210       SaveDataHandler::tryRemoveFile((char const *,bool *))
 0002:803B72C8       SaveDataHandler::trySave((bool *,bool))
 0002:803B743C       @unnamed@SaveDataHandler_cpp@::SaveDataHandlerRemoveProcessingGameData::execute(const(Spine *))
 0002:803B74AC       @unnamed@SaveDataHandler_cpp@::SaveDataHandlerProcessing::execute(const(Spine *))
 0002:803B74F4       SaveDataHandleSequence::SaveDataHandleSequence((void))
 0002:803B75A4       SaveDataHandleSequence::initAfterResourceLoaded((void))
 0002:803B76B4       SaveDataHandleSequence::registerFunctorOnSaveSuccess((MR::FunctorBase const &))
 0002:803B76F8       SaveDataHandleSequence::registerFunctorJustBeforeSave((MR::FunctorBase const &))
 0002:803B773C       SaveDataHandleSequence::update((void))
 0002:803B7818       SaveDataHandleSequence::draw(const(void))
 0002:803B7898       SaveDataHandleSequence::startCreateUserFile((int))
 0002:803B7930       SaveDataHandleSequence::startDeleteUserFile((int))
 0002:803B79B8       SaveDataHandleSequence::startSave((bool,bool))
 0002:803B79D0       SaveDataHandleSequence::startSaveBackup((bool,bool))
 0002:803B79F0       SaveDataHandleSequence::startSaveTotalMailSize((void))
 0002:803B7A30       SaveDataHandleSequence::startLoad((int,bool))
 0002:803B7AAC       SaveDataHandleSequence::storeMiiOrIconId((int,void const *,ulong const *))
 0002:803B7B40       SaveDataHandleSequence::tryNANDErrorSequence((long))
 0002:803B7BC4       SaveDataHandleSequence::isPermitToReset(const(void))
 0002:803B7BDC       SaveDataHandleSequence::prepareReset((void))
 0002:803B7BF0       SaveDataHandleSequence::isPreparedReset(const(void))
 0002:803B7D60       SaveDataHandleSequence::restoreFromReset((void))
 0002:803B7DF8       SaveDataHandleSequence::restoreUserFile((UserFile *,int))
 0002:803B7E50       SaveDataHandleSequence::restoreUserFile((UserFile *,int,bool))
 0002:803B7EB0       SaveDataHandleSequence::backupCurrentUserFile((void))
 0002:803B7F50       SaveDataHandleSequence::exeNoOperation((void))
 0002:803B7F64       SaveDataHandleSequence::exeCheckEnableToCreate((void))
 0002:803B7FE0       SaveDataHandleSequence::exeSaveConfirm((void))
 0002:803B80E4       SaveDataHandleSequence::exeSave((void))
 0002:803B81A0       SaveDataHandleSequence::exeSaveWindowDisappear((void))
 0002:803B8218       SaveDataHandleSequence::exeSaveDoneKeyWait((void))
 0002:803B8268       SaveDataHandleSequence::exeSaveAllWithoutKeyWait((void))
 0002:803B8318       SaveDataHandleSequence::exeSaveAllWithoutKeyWaitDisappear((void))
 0002:803B8398       SaveDataHandleSequence::exeSaveAllWithoutWindow((void))
 0002:803B8488       SaveDataHandleSequence::exePreLoad((void))
 0002:803B8568       SaveDataHandleSequence::exePreLoadDone((void))
 0002:803B85E0       SaveDataHandleSequence::exeNoSaveConfirmRemind((void))
 0002:803B8658       SaveDataHandleSequence::exeErrorHandling((void))
 0002:803B86C0       SaveDataHandleSequence::getHolder((void))
 0002:803B86E4       SaveDataHandleSequence::restoreUserFileConfigData((UserFile *,int))
 0002:803B8764       SaveDataHandleSequence::restoreUserFileGameData((UserFile *,int,bool))
 0002:803B8800       SaveDataHandleSequence::restoreSysConfigFile((SysConfigFile *))
 0002:803B8868       SaveDataHandleSequence::trySave((void))
 0002:803B894C       SaveDataHandleSequence::trySaveWindowDisappear((bool *,Nerve const *))
 0002:803B89D4       SaveDataHandleSequence::trySaveWithoutWindow((bool *,Nerve const *))
 0002:803B8A48       SaveDataHandleSequence::tryConfirm((char const *,bool *))
 0002:803B8B5C       SaveDataHandleSequence::tryNoSave((void))
 0002:803B8BCC       SaveDataHandleSequence::isEnablePointer(const(void))
 0002:803B8C64       SaveDataHandleSequence::executeSaveFinish((bool *,Nerve const *))
 0002:803B8D88       SaveDataHandleSequence::syncNoSaveFlagsFromErrorSequence((void))
 0002:803B8FE8       JSUMemoryInputStream::JSUMemoryInputStream((void const *,long))
 0002:803B9070       SpinDriverPathStorageOne::SpinDriverPathStorageOne((void))
 0002:803B90B4       SpinDriverPathStorageOne::reset((void))
 0002:803B90CC       SpinDriverPathStorageOne::registerToUse((int,int))
 0002:803B90E0       SpinDriverPathStorageOne::serialize(const(uchar *))
 0002:803B91BC       SpinDriverPathStorageOne::deserialize((uchar const *,int))
 0002:803B92B4       SpinDriverPathStorageScenario::SpinDriverPathStorageScenario((void))
 0002:803B9324       SpinDriverPathStorageScenario::resetAllData((void))
 0002:803B9388       SpinDriverPathStorageScenario::setup((int,int,float *))
 0002:803B9478       SpinDriverPathStorageScenario::serialize(const(uchar *,ulong))
 0002:803B9550       SpinDriverPathStorageScenario::deserialize((uchar const *,ulong))
 0002:803B9614       SpinDriverPathStorageScenario::calcMaxZoneId(const(void))
 0002:803B9650       SpinDriverPathStorageGalaxy::SpinDriverPathStorageGalaxy((GalaxyStatusAccessor const &))
 0002:803B9750       SpinDriverPathStorageGalaxy::resetAllData((void))
 0002:803B97AC       SpinDriverPathStorageGalaxy::updateValue((int,int,float))
 0002:803B97CC       SpinDriverPathStorageGalaxy::serialize(const(uchar *,ulong))
 0002:803B9870       SpinDriverPathStorageGalaxy::deserialize((uchar const *,ulong))
 0002:803B9930       SpinDriverPathStorage::SpinDriverPathStorage((void))
 0002:803B9A64       SpinDriverPathStorage::setup((char const *,int,int,int,float *))
 0002:803B9AC4       SpinDriverPathStorage::updateValue((char const *,int,int,float))
 0002:803B9B30       SpinDriverPathStorage::serialize(const(uchar *,ulong))
 0002:803B9BF0       SpinDriverPathStorage::deserialize((uchar const *,ulong))
 0002:803B9CBC       SpinDriverPathStorage::findFromGalaxy((char const *))
 0002:803B9D3C       SpinDriverPathStorage::findFromHashCode((ushort))
 0002:803B9DBC       MR::Vector<Q22MR43AssignableArray<24SpinDriverPathStorageOne>>::push_back((SpinDriverPathStorageOne const &))
 0002:803B9E58       StageResultSequenceCheckList::init((void))
 0002:803B9E74       StageResultSequenceChecker::StageResultSequenceChecker((void))
 0002:803B9EAC       StageResultSequenceChecker::check((void))
 0002:803B9EF4       StageResultSequenceChecker::checkIfComplete((char const *))
 0002:803B9F50       StageResultSequenceChecker::isJustAppearTicoGalaxy(const(void))
 0002:803B9F70       StageResultSequenceChecker::isAddPictureBook(const(void))
 0002:803B9F90       StageResultSequenceChecker::isJustOpenLibraryRoom(const(void))
 0002:803B9FB8       StageResultSequenceChecker::isJustGetGreenStarFirst(const(void))
 0002:803B9FE0       StageResultSequenceChecker::isJustCompleteGalaxy(const(void))
 0002:803BA018       StageResultSequenceChecker::fillCheckList((StageResultSequenceCheckList *,GameDataHolder const *))
 0002:803BA08C       StageResultSequenceChecker::fillCheckListIfComplete((StageResultSequenceCheckList *,GameDataHolder const *,char const *))
 0002:803BA0F8       StageResultSequenceChecker::isJustOpenGalaxyWithoutChallengeGalaxy(const(void))
 0002:803BA178       StarPieceAlmsStorage::StarPieceAlmsStorage((void))
 0002:803BA1F0       StarPieceAlmsStorage::getValue(const(int))
 0002:803BA200       StarPieceAlmsStorage::getMaxValue(const(int))
 0002:803BA214       StarPieceAlmsStorage::addValue((int,int))
 0002:803BA254       StarPieceAlmsStorage::makeHeaderHashCode(const(void))
 0002:803BA28C       StarPieceAlmsStorage::serialize(const(uchar *,ulong))
 0002:803BA2C0       StarPieceAlmsStorage::deserialize((uchar const *,ulong))
 0002:803BA2EC       StarPieceAlmsStorage::initializeData((void))
 0002:803BA310       StorySequenceExecutor::StorySequenceExecutor((void))
 0002:803BA3D0       NerveExecutor::updateNerve((void))
 0002:803BA3D4       StorySequenceExecutor::isNeedMoviePlayerExecutingEventEnum(const(void))
 0002:803BA43C       StorySequenceExecutor::hasNextDemo(const(void))
 0002:803BA4B8       StorySequenceExecutor::getExecutingEventEnum(const(void))
 0002:803BA500       StorySequenceExecutor::isEqualStageScenarioBefore(const(char const *,int))
 0002:803BA560       StorySequenceExecutor::moveGalaxy((GalaxyMoveArgument *,bool))
 0002:803BA6A0       def_803BA608
 0002:803BA6CC       StorySequenceExecutor::setNerveSceneStart((void))
 0002:803BA724       StorySequenceExecutor::forceStop((void))
 0002:803BA73C       StorySequenceExecutor::exePlayDemoSequence((void))
 0002:803BA994       def_803BA784
 0002:803BA9AC       StorySequenceExecutor::exeWaitTimeKeepDemoEnd((void))
 0002:803BAA1C       StorySequenceExecutor::exeWaitSaveEnd((void))
 0002:803BAA78       StorySequenceExecutor::exeFadeinAfterSequence((void))
 0002:803BAAE4       StorySequenceExecutor::exeStaffRollSequence((void))
 0002:803BABA8       StorySequenceExecutor::decideNextEventForClearGalaxy((GalaxyMoveArgument *))
 0002:803BB128       StorySequenceExecutor::decideNextEventForMoveGalaxy((GalaxyMoveArgument *))
 0002:803BB27C       StorySequenceExecutor::decideNextEventForAfterLoading((GalaxyMoveArgument *))
 0002:803BB2E0       StorySequenceExecutor::decideNextStageForGalaxyOut((GalaxyMoveArgument *))
 0002:803BB370       StorySequenceExecutor::overwriteGalaxyNameAfterLoading((GalaxyMoveArgument *))
 0002:803BB464       StorySequenceExecutor::setNextStageToAstroGalaxyOrDome((GalaxyMoveArgument *))
 0002:803BB4E0       StorySequenceExecutor::setNextStageToAstroDome((GalaxyMoveArgument *))
 0002:803BB520       StorySequenceExecutor::isExecuteDemoLuigiMissing(const(GalaxyMoveArgument const *))
 0002:803BB56C       StorySequenceExecutor::getOptionalDemoForClearGalaxy(const(MR::Vector<Q22MR63FixedArray<PCQ225StorySequenceExecutorType16DemoSequenceInfo,8>> *,GalaxyMoveArgument const *))
 0002:803BB5F4       StorySequenceExecutor::isEqualStageStopCometScheduler((char const *))
 0002:803BB66C       StorySequenceExecutor::prepareDemoSequence((StorySequenceExecutorType::DemoSequenceInfo const *))
 0002:803BB6B8       StorySequenceExecutor::prepareDemoSequence((MR::Vector<Q22MR63FixedArray<PCQ225StorySequenceExecutorType16DemoSequenceInfo,8>> const &))
 0002:803BB718       StorySequenceExecutor::prepareDemoSequenceButlerFortressDiscover((GalaxyMoveArgument const *,DemoFortressDiscoverCheckList const &))
 0002:803BB7E8       StorySequenceExecutor::tryStartDemo((char const *))
 0002:803BB7F4       StorySequenceExecutor::tryStartSave((void))
 0002:803BB854       StorySequenceExecutor::tryWaitSaveEnd((void))
 0002:803BB8A4       StorySequenceExecutor::tryStartFadein((void))
 0002:803BB8F0       StorySequenceExecutor::tryStartMovieAndWaitEnd((ulong))
 0002:803BB9A4       StorySequenceExecutor::getCurrentDemoInfo(const(void))
 0002:803BB9C0       StorySequenceExecutor::tryNextDemoInfo((void))
 0002:803BBA3C       StorySequenceExecutor::addDynamicDemoSequenceInfo((ushort,ushort,char const *))
 0002:803BBA74       StorySequenceExecutor::setBeforeStageScenario((GalaxyMoveArgument const &,bool))
 0002:803BBB1C       StorySequenceExecutor::calcAproposScenarioNoOnAstroGalaxy(const(void))
 0002:803BBDC0       SysConfigChunk::SysConfigChunk((void))
 0002:803BBE2C       SysConfigChunk::deserialize((uchar const *,ulong))
 0002:803BBEF8       SysConfigChunk::initializeData((void))
 0002:803BBF14       SysConfigChunk::initHeaderSerializer((void))
 0002:803BBFB8       SysConfigFile::SysConfigFile((void))
 0002:803BC034       SysConfigFile::getTimeAnnounced((void))
 0002:803BC044       SysConfigFile::updateTimeAnnounced((void))
 0002:803BC078       SysConfigFile::getTimeSent((void))
 0002:803BC088       SysConfigFile::setTimeSent((long long))
 0002:803BC098       SysConfigFile::getSentBytes((void))
 0002:803BC0A4       SysConfigFile::setSentBytes((ulong))
 0002:803BC0C0       SysConfigChunk::serialize(const(uchar *,ulong))
 0002:803BC1A8       UserFile::UserFile((void))
 0002:803BC274       UserFile::isOnCompleteEndingMarioAndLuigi(const(void))
 0002:803BC2F4       UserFile::onCompleteEndingCurrentPlayer((void))
 0002:803BC318       UserFile::setUserName((wchar_t const *))
 0002:803BC324       UserFile::getGameDataName(const(void))
 0002:803BC338       UserFile::loadFromGameDataBinary((char const *,uchar const *,ulong))
 0002:803BC374       UserFile::getConfigDataName(const(void))
 0002:803BC388       UserFile::loadFromConfigDataBinary((char const *,uchar const *,ulong))
 0002:803BC3C4       UserFile::resetAllData((void))
 0002:803BC408       UserFile::isPowerStarGetFinalChallengeGalaxy(const(void))
 0002:803BC438       @unnamed@ActorCameraUtil_cpp@::createActorCameraName((char *,ulong,LiveActor const *,ActorCameraInfo const *))
 0002:803BC474       @unnamed@ActorCameraUtil_cpp@::createMultiActorCameraName((char *,ulong,LiveActor const *,ActorCameraInfo const *,char const *))
 0002:803BC4B0       MR::initAnimCamera((LiveActor const *,ActorCameraInfo const *,char const *))
 0002:803BC548       MR::createActorCameraInfo((JMapInfoIter const &))
 0002:803BC588       MR::createActorCameraInfoIfExist((JMapInfoIter const &,ActorCameraInfo **))
 0002:803BC5FC       MR::initActorCamera((LiveActor const *,JMapInfoIter const &,ActorCameraInfo **))
 0002:803BC604       MR::initMultiActorCamera((LiveActor const *,JMapInfoIter const &,ActorCameraInfo **,char const *))
 0002:803BC678       MR::initMultiActorCameraNoInit((LiveActor const *,ActorCameraInfo *,char const *))
 0002:803BC704       MR::startActorCameraNoTarget((LiveActor const *,ActorCameraInfo const *,long))
 0002:803BC75C       MR::startActorCameraTargetPlayer((LiveActor const *,ActorCameraInfo const *,long))
 0002:803BC7BC       MR::startActorCameraTargetSelf((LiveActor const *,ActorCameraInfo const *,long))
 0002:803BC818       MR::endActorCamera((LiveActor const *,ActorCameraInfo const *,bool,long))
 0002:803BC828       MR::startMultiActorCameraNoTarget((LiveActor const *,ActorCameraInfo const *,char const *,long))
 0002:803BC884       MR::startMultiActorCameraTargetPlayer((LiveActor const *,ActorCameraInfo const *,char const *,long))
 0002:803BC8E8       MR::startMultiActorCameraTargetSelf((LiveActor const *,ActorCameraInfo const *,char const *,long))
 0002:803BC948       MR::endMultiActorCamera((LiveActor const *,ActorCameraInfo const *,char const *,bool,long))
 0002:803BC9E8       MR::startAnimCameraTargetPlayer((LiveActor const *,ActorCameraInfo const *,char const *,long,float))
 0002:803BCA78       MR::startAnimCameraTargetSelf((LiveActor const *,ActorCameraInfo const *,char const *,long,float))
 0002:803BCB04       MR::startAnimCameraTargetOther((LiveActor const *,ActorCameraInfo const *,char const *,CameraTargetArg const &,long,float))
 0002:803BCC48       MR::endMultiActorCameraAtLanding((LiveActor const *,ActorCameraInfo const *,char const *,long))
 0002:803BCCEC       MR::isActiveMultiActorCamera((LiveActor const *,ActorCameraInfo const *,char const *))
 0002:803BCD6C       MR::setProgrammableCameraParam((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803BCD80       MR::initAnimCamera((LiveActor const *,ActorCameraInfo const *,char const *,char const *))
 0002:803BCE10       MR::endAnimCamera((LiveActor const *,ActorCameraInfo const *,char const *,long,bool))
 0002:803BCE80       MR::isAnimCameraEnd((LiveActor const *,ActorCameraInfo const *,char const *))
 0002:803BCF30       MR::getMultiActorCameraFrames((LiveActor const *,ActorCameraInfo const *,char const *))
 0002:803BCFB0       MR::isExistActorCamera((ActorCameraInfo const *))
 0002:803BCFD4       MR::startRumbleWithShakeCameraStrong((LiveActor const *,char const *,char const *,float,float))
 0002:803BD1B4       MR::calcDistance((HitSensor const *,HitSensor const *,JGeometry::TVec3<f> *))
 0002:803BD260       MR::calcDistanceHorizontal((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803BD2C4       MR::calcDistanceVertical((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803BD330       MR::calcDistanceVertical((LiveActor const *,JGeometry::TVec3<f> const &))
 0002:803BD39C       MR::calcDistanceToPlayer((LiveActor const *))
 0002:803BD3EC       MR::calcDistanceToPlayerH((LiveActor const *))
 0002:803BD464       MR::isNear((HitSensor const *,HitSensor const *,float))
 0002:803BD4B0       MR::isNear((LiveActor const *,LiveActor const *,float))
 0002:803BD4FC       MR::isNear((LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BD544       MR::isNearPlayer((LiveActor const *,float))
 0002:803BD598       MR::isNearPlayerAnyTime((LiveActor const *,float))
 0002:803BD5F4       MR::isNearPlayer((JGeometry::TVec3<f> const &,float))
 0002:803BD660       MR::isNearPlayerPose((LiveActor const *,float,float))
 0002:803BD748       MR::isNearPlayerHorizontal((LiveActor const *,float))
 0002:803BD7EC       MR::calcFrontVec((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BD840       MR::calcUpVec((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BD894       MR::calcSideVec((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BD8E8       MR::calcPositionUpOffset((JGeometry::TVec3<f> *,LiveActor const *,float))
 0002:803BD944       MR::calcVecToPlayerH((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const *))
 0002:803BD994       MR::calcVecFromPlayerH((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BD9EC       MR::calcVecToTargetPosH((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const *))
 0002:803BDA70       MR::calcVecFromTargetPosH((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const *))
 0002:803BDAA8       MR::isFaceToTargetDegree((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803BDB10       MR::isFaceToPlayerDegree((LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BDB80       MR::isFaceToTargetDegree((LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BDBF8       MR::isFaceToPlayerDegree((LiveActor const *,float))
 0002:803BDC68       MR::isFaceToPlayerDegreeHV((LiveActor const *,JGeometry::TVec3<f> const &,float,float))
 0002:803BDCEC       MR::isFaceToTargetHorizontalDegree((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803BDD98       MR::isFaceToPlayerHorizontalDegree((LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BDDF0       MR::isClockwiseToDir((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803BDE54       MR::isClockwiseToPlayer((LiveActor const *,JGeometry::TVec3<f> const &))
 0002:803BDEE4       MR::isPlayerLeftSide((LiveActor const *))
 0002:803BDF74       MR::isLeftSideFromPlayer((LiveActor const *))
 0002:803BDFF0       MR::isInSightConePlayer((LiveActor const *,JGeometry::TVec3<f> const &,float,float))
 0002:803BE060       MR::isInSightFanPlayer((LiveActor const *,JGeometry::TVec3<f> const &,float,float,float))
 0002:803BE0E0       MR::isBindedWallFront((LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BE164       j_MarioAccess::isOnActor((LiveActor const *))
 0002:803BE168       MR::isPlayerExistSide((LiveActor const *,float,float))
 0002:803BE24C       MR::isPlayerExistUp((LiveActor const *,float,float))
 0002:803BE308       MR::isPlayerExistDown((LiveActor const *,float,float))
 0002:803BE3DC       MR::isInDeath((LiveActor const *,JGeometry::TVec3<f> const &))
 0002:803BE474       MR::makeMtxTR((float *[4],LiveActor const *))
 0002:803BE490       MR::makeMtxTRS((float *[4],LiveActor const *))
 0002:803BE4D8       MR::makeMtxTransRotateY((float *[4],LiveActor const *))
 0002:803BE4EC       MR::calcMtxFromGravityAndZAxis((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803BE630       MR::calcAndSetBaseMtxFromGravityAndZAxis((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803BE68C       MR::calcActorAxis((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BE700       MR::calcActorAxisZ((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BE7FC       MR::faceToVector((JGeometry::TQuat4<f> *,JGeometry::TVec3<f>,float))
 0002:803BE890       MR::faceToVector((float *[4],JGeometry::TVec3<f>,float))
 0002:803BEA28       MR::faceToPoint((float *[4],JGeometry::TVec3<f>,float))
 0002:803BEAB8       MR::makeQuatAndFrontFromRotate((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> *,LiveActor const *))
 0002:803BEB00       MR::turnQuatUpToGravity((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,LiveActor const *))
 0002:803BEC40       MR::blendQuatFromGroundAndFront((JGeometry::TQuat4<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float,float))
 0002:803BECD4       MR::resetPosition((LiveActor *))
 0002:803BED4C       MR::resetPosition((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803BED84       MR::resetPosition((LiveActor *,char const *))
 0002:803BEE10       MR::makeMtxOnMapCollision((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,LiveActor *,float))
 0002:803BEEFC       MR::calcVelocityMoveToDirectionHorizon((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BEF74       MR::calcVelocityMoveToDirectionHorizon((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803BF050       MR::calcVelocityMoveToDirection((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803BF130       MR::calcVelocityMoveToTarget((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float))
 0002:803BF1A0       MR::addVelocityMoveToDirection((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BF1E4       MR::addVelocityMoveToTarget((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BF250       MR::addVelocityMoveToTarget((LiveActor *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803BF2DC       MR::addVelocityAwayFromTarget((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BF358       MR::addVelocityAwayFromTarget((LiveActor *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803BF3F4       MR::addVelocityClockwiseToDirection((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BF46C       MR::addVelocityClockwiseToTarget((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BF4C8       MR::addVelocityClockwiseToPlayer((LiveActor *,float))
 0002:803BF52C       MR::setVelocityJump((LiveActor *,float))
 0002:803BF584       MR::addVelocityLimit((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803BF690       MR::addVelocityToGravity((LiveActor *,float))
 0002:803BF6E8       MR::addVelocityToGravityOrGround((LiveActor *,float))
 0002:803BF750       MR::addVelocityToCollisionNormal((LiveActor *,float))
 0002:803BF800       MR::addVelocityKeepHeight((LiveActor *,JGeometry::TVec3<f> const &,float,float))
 0002:803BF814       MR::addVelocityKeepHeight((LiveActor *,JGeometry::TVec3<f> const &,float,float,float))
 0002:803BF8B8       MR::addVelocityKeepHeightUseShadow((LiveActor *,float,float,float,char const *))
 0002:803BF998       MR::addVelocityKeepHeightUseShadow((LiveActor *,float,float,float,float,char const *))
 0002:803BFAAC       MR::setVelocitySeparateHV((LiveActor *,JGeometry::TVec3<f> const &,float,float))
 0002:803BFC4C       MR::attenuateVelocityExceptDirection((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803BFCDC       MR::restrictVelocity((LiveActor *,float))
 0002:803BFD38       MR::killVelocityOnGroundH((LiveActor *))
 0002:803BFD94       MR::killVelocityOnGroundCosH((LiveActor *,float))
 0002:803BFE18       MR::killVelocityToTarget((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803BFE9C       MR::forceBindOnGround((LiveActor *,float,float))
 0002:803BFF94       MR::reboundVelocityFromEachCollision((LiveActor *,float,float,float,float))
 0002:803C0174       MR::reboundVelocityFromCollision((LiveActor *,float,float,float))
 0002:803C0324       MR::calcGravitySpeed((LiveActor const *))
 0002:803C0334       MR::applyVelocityDampAndGravity((LiveActor *,float,float,float,float,float))
 0002:803C0520       MR::setVelocityJumpAwayFromPlayer((LiveActor *,float,float))
 0002:803C05B8       MR::sendMsgPushAndKillVelocityToTarget((LiveActor *,HitSensor *,HitSensor *))
 0002:803C0670       MR::addVelocityFromPush((LiveActor *,float,HitSensor *,HitSensor *))
 0002:803C0714       MR::addVelocityFromPushHorizon((LiveActor *,float,HitSensor *,HitSensor *))
 0002:803C0798       MR::setVelocitySeparateHV((LiveActor *,HitSensor *,HitSensor *,float,float))
 0002:803C0890       MR::setVelocityBlowAttack((LiveActor *,HitSensor *,HitSensor *,float,float,long))
 0002:803C08E4       MR::reflectVelocityH((LiveActor *,HitSensor *,HitSensor *,float))
 0002:803C0988       MR::calcVelocityAreaMoveOnGround((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803C09F8       MR::calcVelocityRailMoveOnGround((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803C0AD0       MR::calcVelocityAreaOrRailMoveOnGround((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803C0B30       MR::rotateDirectionGravityDegree((LiveActor const *,JGeometry::TVec3<f> *,float))
 0002:803C0B48       MR::turnDirection((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0B5C       MR::turnDirectionDegree((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0BA8       MR::turnDirectionToTarget((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0C18       MR::turnDirectionToTargetDegree((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0C8C       MR::turnDirectionToTargetDegreeHorizon((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0D10       MR::turnDirectionToTargetUseGroundNormalDegree((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0DAC       MR::turnDirectionFromPlayerDegreeHorizon((LiveActor const *,JGeometry::TVec3<f> *,float))
 0002:803C0E5C       MR::turnDirectionFromTargetDegree((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C0ED4       MR::turnDirectionFromTargetDegreeHorizon((LiveActor const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803C100C       MR::turnDirectionAndGravityH((JGeometry::TQuat4<f> *,LiveActor const *,JGeometry::TVec3<f> const &,float,float))
 0002:803C1128       MR::turnDirectionAndGravityH((LiveActor *,JGeometry::TVec3<f> const &,float,float))
 0002:803C11E0       MR::turnDirectionToGround((LiveActor const *,JGeometry::TVec3<f> *))
 0002:803C1270       MR::moveAndTurnToDirection((LiveActor *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803C1354       MR::moveAndTurnToTarget((LiveActor *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803C13E4       MR::moveAndTurnToPlayer((LiveActor *,JGeometry::TVec3<f> *,float,float,float,float))
 0002:803C1478       MR::flyAndTurnAlongRailSearchingPlayer((LiveActor *,JGeometry::TVec3<f> *,float,float,float,float,float,bool))
 0002:803C15BC       MR::escapeFromPlayer((LiveActor *,JGeometry::TVec3<f> *,float,float,float,float))
 0002:803C1654       @unnamed@ActorMovementUtil_cpp@::calcRotate((LiveActor *,JGeometry::TVec3<f> const &,float))
 0002:803C1864       MR::moveAndTurnToDirection((LiveActor *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803C18F4       MR::moveAndTurnToTarget((LiveActor *,JGeometry::TVec3<f> const &,float,float,float,float))
 0002:803C19A8       MR::moveAndTurnToPlayer((LiveActor *,float,float,float,float))
 0002:803C1A10       MR::moveAndTurnAlongRail((LiveActor *,float,float,float,float,float,bool *))
 0002:803C1ADC       MR::mod((float,float))
 0002:803C1B00       MR::addHitSensor((LiveActor *,char const *,ulong,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B14       MR::addHitSensorBinder((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B2C       MR::addHitSensorTransferableBinder((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B44       MR::addHitSensorPriorBinder((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B5C       MR::addHitSensorRide((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B74       MR::addHitSensorMapObj((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1B8C       MR::addHitSensorMapObjPress((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1BA4       MR::addHitSensorMapObjSimple((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1BBC       MR::addHitSensorMapObjMoveCollision((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1BD4       MR::addHitSensorEnemy((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1BEC       MR::addHitSensorEnemySimple((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1C04       MR::addHitSensorEnemyAttack((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1C1C       MR::addHitSensorNpc((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1C34       MR::addHitSensorEye((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1C4C       MR::addHitSensorPush((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1C64       MR::addHitSensorPosBinder((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:803C1C84       MR::addHitSensorMtxRide((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1CA4       MR::addHitSensorMtxMapObj((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1CC4       MR::addHitSensorPosEye((LiveActor *,char const *,ushort,float,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:803C1CE4       MR::addHitSensorMtx((LiveActor *,char const *,ulong,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1D40       MR::addHitSensorMtxEnemy((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1D60       MR::addHitSensorMtxEnemyAttack((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1D80       MR::addHitSensorMtxNpc((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1DA0       MR::addHitSensorMtxAnimal((LiveActor *,char const *,ushort,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803C1DC0       MR::addHitSensorAtJoint((LiveActor *,char const *,char const *,ulong,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1E38       MR::addHitSensorAtJointRide((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1EAC       MR::addHitSensorAtJointMapObj((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1F20       MR::addHitSensorAtJointMapObjSimple((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C1F94       MR::addHitSensorAtJointEnemy((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C2008       MR::addHitSensorAtJointEnemySimple((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C207C       MR::addHitSensorAtJointEnemyAttack((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C20F0       MR::addHitSensorAtJointNpc((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C2164       MR::addHitSensorAtJointEye((LiveActor *,char const *,char const *,ushort,float,JGeometry::TVec3<f> const &))
 0002:803C21D8       MR::addHitSensorCallback((LiveActor *,char const *,ulong,ushort,float))
 0002:803C21E4       MR::addHitSensorCallbackBinder((LiveActor *,char const *,ushort,float))
 0002:803C21F8       MR::addHitSensorCallbackPriorBinder((LiveActor *,char const *,ushort,float))
 0002:803C220C       MR::addHitSensorCallbackRide((LiveActor *,char const *,ushort,float))
 0002:803C2220       MR::addHitSensorCallbackMapObj((LiveActor *,char const *,ushort,float))
 0002:803C2234       MR::addHitSensorCallbackMapObjSimple((LiveActor *,char const *,ushort,float))
 0002:803C2248       MR::addHitSensorCallbackEnemy((LiveActor *,char const *,ushort,float))
 0002:803C225C       MR::addHitSensorCallbackEnemyAttack((LiveActor *,char const *,ushort,float))
 0002:803C2270       MR::addHitSensorCallbackEye((LiveActor *,char const *,ushort,float))
 0002:803C2284       MR::addBodyMessageSensorReceiver((LiveActor *))
 0002:803C22E4       MR::addBodyMessageSensorMapObj((LiveActor *))
 0002:803C2344       MR::addBodyMessageSensorMapObjPress((LiveActor *))
 0002:803C23A4       MR::addBodyMessageSensorMapObjMoveCollision((LiveActor *))
 0002:803C2404       MR::addBodyMessageSensorEnemy((LiveActor *))
 0002:803C2464       MR::addMessageSensorReceiver((LiveActor *,char const *))
 0002:803C24CC       MR::addMessageSensorMapObj((LiveActor *,char const *))
 0002:803C2534       MR::addMessageSensorMapObjMoveCollision((LiveActor *,char const *))
 0002:803C259C       MR::addMessageSensorEnemy((LiveActor *,char const *))
 0002:803C2604       MR::tryUpdateHitSensorsAll((LiveActor *))
 0002:803C2644       HitSensor::isType(const(ulong))
 0002:803C2648       MR::getSensor((LiveActor *,int))
 0002:803C2670       MR::getTaking((LiveActor const *))
 0002:803C268C       MR::getTaken((LiveActor const *))
 0002:803C26B0       MR::setSensorOffset((LiveActor *,char const *,JGeometry::TVec3<f> const &))
 0002:803C26F0       MR::setSensorRadius((LiveActor *,char const *,float))
 0002:803C2728       MR::setHitSensorApart((HitSensor *,HitSensor *))
 0002:803C27B8       MR::clearHitSensors((LiveActor *))
 0002:803C27E0       MR::invalidateHitSensor((LiveActor *,char const *))
 0002:803C2830       MR::isValidHitSensor((LiveActor *,char const *))
 0002:803C289C       MR::isSensor((HitSensor const *,char const *))
 0002:803C28D8       MR::isSensorPlayer((HitSensor const *))
 0002:803C28E0       MR::isSensorBinder((HitSensor const *))
 0002:803C28E8       MR::isSensorRide((HitSensor const *))
 0002:803C290C       MR::isSensorPlayerOrRide((HitSensor const *))
 0002:803C294C       MR::isSensorEnemy((HitSensor const *))
 0002:803C2978       MR::isSensorNpc((HitSensor const *))
 0002:803C299C       MR::isSensorMapObj((HitSensor const *))
 0002:803C29C0       MR::isSensorAutoRush((HitSensor const *))
 0002:803C29E4       MR::isSensorRush((HitSensor const *))
 0002:803C2A08       MR::isSensorPressObj((HitSensor const *))
 0002:803C2A2C       MR::isSensorEye((HitSensor const *))
 0002:803C2A34       MR::isSensorPush((HitSensor const *))
 0002:803C2A3C       MR::isSensorItem((HitSensor const *))
 0002:803C2AA8       MR::tryGetItem((HitSensor *,HitSensor *))
 0002:803C2AC0       MR::calcSensorDirection((JGeometry::TVec3<f> *,HitSensor const *,HitSensor const *))
 0002:803C2B1C       MR::calcSensorDirectionNormalize((JGeometry::TVec3<f> *,HitSensor const *,HitSensor const *))
 0002:803C2B80       MR::calcSensorHorizonNormalize((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,HitSensor const *,HitSensor const *))
 0002:803C2BFC       MR::getMessageSensor((void))
 0002:803C2C3C       MR::sendMsgPush((HitSensor *,HitSensor *))
 0002:803C2C48       MR::sendMsgPlayerTrample((HitSensor *,HitSensor *))
 0002:803C2C54       MR::getNextRailPointArg1NoInit((LiveActor const *,float *))
 0002:803C2C60       MR::sendMsgJump((HitSensor *,HitSensor *))
 0002:803C2C6C       MR::sendMsgTouchJump((HitSensor *,HitSensor *))
 0002:803C2C78       MR::sendMsgTaken((HitSensor *,HitSensor *))
 0002:803C2C7C       SCSetWpadSpeakerVolume
 0002:803C2C84       MR::sendMsgKick((HitSensor *,HitSensor *))
 0002:803C2C90       MR::sendMsgAwayJump((HitSensor *,HitSensor *))
 0002:803C2C9C       MR::sendMsgEnemyAttackMsgToDir((ulong,HitSensor *,HitSensor *,JGeometry::TVec3<f> const &))
 0002:803C2D18       MR::sendMsgEnemyAttackFlipWeak((HitSensor *,HitSensor *))
 0002:803C2D24       MR::sendMsgEnemyAttackFlipWeakJump((HitSensor *,HitSensor *))
 0002:803C2D30       MR::sendMsgEnemyAttackFlip((HitSensor *,HitSensor *))
 0002:803C2D3C       MR::sendMsgEnemyAttackFlipToDir((HitSensor *,HitSensor *,JGeometry::TVec3<f> const &))
 0002:803C2D58       MR::sendMsgEnemyAttackFlipJump((HitSensor *,HitSensor *))
 0002:803C2D64       MR::sendMsgEnemyAttackFlipRot((HitSensor *,HitSensor *))
 0002:803C2D70       MR::sendMsgEnemyAttackFlipMaximum((HitSensor *,HitSensor *))
 0002:803C2D7C       MR::sendMsgEnemyAttackFlipMaximumToDir((HitSensor *,HitSensor *,JGeometry::TVec3<f> const &))
 0002:803C2D98       MR::sendMsgEnemyAttack((HitSensor *,HitSensor *))
 0002:803C2DA4       MR::sendMsgEnemyAttackStrong((HitSensor *,HitSensor *))
 0002:803C2DB0       MR::sendMsgEnemyAttackStrongToDir((HitSensor *,HitSensor *,JGeometry::TVec3<f> const &))
 0002:803C2DCC       MR::sendMsgEnemyAttackFire((HitSensor *,HitSensor *))
 0002:803C2DD8       MR::sendMsgEnemyAttackFireStrong((HitSensor *,HitSensor *))
 0002:803C2DE4       MR::sendMsgEnemyAttackElectric((HitSensor *,HitSensor *))
 0002:803C2DF0       MR::sendMsgEnemyAttackFreeze((HitSensor *,HitSensor *))
 0002:803C2DFC       MR::sendMsgEnemyAttackHeatBeam((HitSensor *,HitSensor *))
 0002:803C2E08       MR::sendMsgEnemyAttackExplosion((HitSensor *,HitSensor *))
 0002:803C2E14       MR::sendMsgEnemyAttackCounterSpin((HitSensor *,HitSensor *))
 0002:803C2E20       MR::sendMsgEnemyAttackCounterHipDrop((HitSensor *,HitSensor *))
 0002:803C2E2C       MR::sendMsgLockOnStarPieceShoot((HitSensor *,HitSensor *))
 0002:803C2E38       MR::sendMsgStarPieceAttack((HitSensor *,HitSensor *))
 0002:803C2E44       MR::sendMsgStarPieceGift((HitSensor *,HitSensor *,ulong))
 0002:803C2E54       MR::sendMsgEnemyAttackMaximum((HitSensor *,HitSensor *))
 0002:803C2E60       MR::sendMsgEnemyAttackMaximumToDir((HitSensor *,HitSensor *,JGeometry::TVec3<f> const &))
 0002:803C2E7C       MR::sendMsgEnemyAttackToBindedSensor((LiveActor *,HitSensor *))
 0002:803C2E8C       MR::sendMsgEnemyAttackExplosionToBindedSensor((LiveActor *,HitSensor *))
 0002:803C2E9C       MR::sendSimpleMsgToActor((ulong,LiveActor *))
 0002:803C2F1C       MR::sendMsgToBindedSensor((ulong,LiveActor *,HitSensor *))
 0002:803C2FE8       MR::sendMsgToBindedSensor((ulong,HitSensor *))
 0002:803C2FF4       MR::sendMsgToWallSensor((ulong,HitSensor *))
 0002:803C30B4       MR::sendMsgStartDemo((LiveActor *))
 0002:803C30C0       MR::sendMsgToEnemyAttackBlow((HitSensor *,HitSensor *))
 0002:803C30CC       MR::sendMsgToEnemyAttackTrample((HitSensor *,HitSensor *))
 0002:803C30D8       MR::sendMsgToEnemyAttackBlowOrTrample((HitSensor *,HitSensor *,float))
 0002:803C3178       MR::sendMsgToEnemyAttackShockWave((HitSensor *,HitSensor *))
 0002:803C3184       MR::sendMsgToAllLiveActor((ulong,LiveActor *))
 0002:803C3248       MR::sendMsgToGroupMember((ulong,LiveActor *,HitSensor *,char const *))
 0002:803C32D4       MR::sendMsgExplosionToNearActor((HitSensor *,float))
 0002:803C3384       MR::isInSpinStormRange((ulong,HitSensor *,HitSensor *,float))
 0002:803C33CC       MR::receiveItemShowMsg((ulong,HitSensor *,HitSensor *))
 0002:803C342C       MR::receiveItemHideMsg((ulong,HitSensor *,HitSensor *))
 0002:803C348C       MR::getGroundSensor((LiveActor const *))
 0002:803C3498       MR::getRoofSensor((LiveActor const *))
 0002:803C34A4       MR::getWallSensor((LiveActor const *))
 0002:803C34B0       MR::isMsgPlayerHitAll((ulong))
 0002:803C34D8       MR::isMsgPlayerSpinAttack((ulong))
 0002:803C3528       MR::isMsgPlayerKick((ulong))
 0002:803C3568       MR::isMsgFreezeAttack((ulong))
 0002:803C3578       MR::isMsgInvincibleAttack((ulong))
 0002:803C3588       MR::isMsgInvalidHit((ulong))
 0002:803C3598       MR::isMsgAutoRushBegin((ulong))
 0002:803C35A8       MR::isMsgRushBegin((ulong))
 0002:803C35B8       MR::isMsgUpdateBaseMtx((ulong))
 0002:803C35C8       MR::isMsgRushCancel((ulong))
 0002:803C35D8       MR::isMsgIsRushTakeOver((ulong))
 0002:803C35F8       MR::isMsgWallTouch((ulong))
 0002:803C3608       MR::isMsgCeilTouch((ulong))
 0002:803C3618       MR::isMsgItemGet((ulong))
 0002:803C3628       MR::isMsgItemPull((ulong))
 0002:803C3638       MR::isMsgItemShow((ulong))
 0002:803C3648       MR::isMsgItemHide((ulong))
 0002:803C3658       MR::isMsgItemStartMove((ulong))
 0002:803C3668       MR::isMsgItemEndMove((ulong))
 0002:803C3678       MR::isMsgInhaleBlackHole((ulong))
 0002:803C3688       MR::isMsgEnemyAttack((ulong))
 0002:803C3698       MR::isMsgEnemyAttackFire((ulong))
 0002:803C36A8       MR::isMsgEnemyAttackFireStrong((ulong))
 0002:803C36B8       MR::isMsgEnemyAttackElectric((ulong))
 0002:803C36C8       MR::isMsgExplosionAttack((ulong))
 0002:803C36D8       MR::isMsgToEnemyAttackBlow((ulong))
 0002:803C36E8       MR::isMsgToEnemyAttackTrample((ulong))
 0002:803C36F8       MR::isMsgToEnemyAttackShockWave((ulong))
 0002:803C3708       MR::isMsgSpinStormRange((ulong))
 0002:803C3718       MR::isMsgTutorialStart((ulong))
 0002:803C3728       MR::isMsgTutorialNext((ulong))
 0002:803C3738       MR::isMsgTutorialPrev((ulong))
 0002:803C3748       MR::isMsgTutorialPass((ulong))
 0002:803C3758       MR::isMsgTutorialOmit((ulong))
 0002:803C3768       MR::isMsgRaceReady((ulong))
 0002:803C3778       MR::isMsgRaceStart((ulong))
 0002:803C3788       MR::isMsgRaceReset((ulong))
 0002:803C3798       MR::isMsgLockOnStarPieceShoot((ulong))
 0002:803C37A8       MR::isMsgBallDashWall((ulong))
 0002:803C37B8       MR::isMsgBallDashGround((ulong))
 0002:803C37C8       MR::isMsgStartPowerStarGet((ulong))
 0002:803C37D8       MR::isMsgTouchPlantItem((ulong))
 0002:803C37E8       MR::isMsgHitmarkEmit((ulong))
 0002:803C37F8       MR::isMsgStarPieceAttack((ulong))
 0002:803C3808       MR::isMsgStarPieceReflect((ulong))
 0002:803C3818       MR::isMsgStarPieceGift((ulong))
 0002:803C3838       MR::getNumStarPieceGift((ulong))
 0002:803C3840       MR::calcPosBetweenSensors((JGeometry::TVec3<f> *,HitSensor const *,HitSensor const *,float))
 0002:803C3940       MR::tryForceKillIfMsgStartPowerStarGet((LiveActor *,ulong))
 0002:803C39A4       MR::addBodyMessageSensor((LiveActor *,ulong))
 0002:803C3A10       JMapInfoIter::getValue<b>(bool const(char const *,bool *))
 0002:803C3AA0       ActorShadow::getShadowController((LiveActor const *,char const *))
 0002:803C3AB8       ActorShadow::isExistShadowController((LiveActor const *,char const *))
 0002:803C3AF4       ActorShadow::createShadowControllerSuefaceParam((LiveActor *,char const *))
 0002:803C3C1C       ActorShadow::getShadowVolumeDrawer((LiveActor const *,char const *))
 0002:803C3CE4       ActorShadow::getJointNameFromCSV((char const **,JMapInfoIter const &))
 0002:803C3D4C       ActorShadow::getShadowTypeFromCSV((JMapInfoIter const &))
 0002:803C3DDC       ActorShadow::setUpShadowControlBaseMtxFromCSV((ShadowController *,LiveActor *,JMapInfoIter const &))
 0002:803C3F68       ActorShadow::setUpShadowControlIsSyncShowFromCSV((ShadowController *,JMapInfoIter const &))
 0002:803C4030       ActorShadow::setUpShadowControlCalcCollisionFromCSV((ShadowController *,JMapInfoIter const &))
 0002:803C40BC       ActorShadow::setUpShadowControlCalcGravityFromCSV((ShadowController *,JMapInfoIter const &))
 0002:803C417C       ActorShadow::setUpShadowControlFromCSV((ShadowController *,LiveActor *,JMapInfoIter const &))
 0002:803C4244       ActorShadow::createShadowControlFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C430C       ActorShadow::setUpShadowVolumeFromCSV((ShadowVolumeDrawer *,JMapInfoIter const &))
 0002:803C43C4       ActorShadow::createShadowSurfaceCircleFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4454       ActorShadow::createShadowSurfaceOvalFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C44F0       ActorShadow::createShadowSurfaceBoxFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C458C       ActorShadow::createShadowVolumeCylinderFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4628       ActorShadow::createShadowVolumeOvalPoleFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4814       ActorShadow::createShadowVolumeBoxFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C48BC       ActorShadow::createShadowVolumeFlatModelFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4958       ActorShadow::createShadowVolumeLineFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4A7C       ActorShadow::addShadowFromCSV((LiveActor *,JMapInfoIter const &))
 0002:803C4B5C       def_803C4ABC
 0002:803C4B74       MR::initShadowFromCSV((LiveActor *,char const *))
 0002:803C4C98       MR::initShadowSurfaceCircle((LiveActor *,float))
 0002:803C4D24       MR::initShadowVolumeSphere((LiveActor *,float))
 0002:803C4DB0       MR::initShadowVolumeBox((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803C4E1C       MR::initShadowVolumeCylinder((LiveActor *,float))
 0002:803C4ED8       MR::initShadowVolumeFlatModel((LiveActor *,char const *))
 0002:803C4F28       LiveActor::initShadowControllerList((ulong))
 0002:803C4F2C       MR::addShadowSurfaceCircle((LiveActor *,char const *,float))
 0002:803C4FA0       MR::addShadowVolumeSphere((LiveActor *,char const *,float))
 0002:803C5014       MR::addShadowVolumeOval((LiveActor *,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:803C50A8       MR::addShadowVolumeCylinder((LiveActor *,char const *,float))
 0002:803C5124       MR::addShadowVolumeBox((LiveActor *,char const *,JGeometry::TVec3<f> const &))
 0002:803C5180       MR::addShadowVolumeBox((LiveActor *,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:803C5214       MR::addShadowVolumeLine((LiveActor *,char const *,LiveActor *,char const *,float,LiveActor *,char const *,float))
 0002:803C52E8       MR::addShadowVolumeFlatModel((LiveActor *,char const *,char const *))
 0002:803C5384       MR::addShadowVolumeFlatModel((LiveActor *,char const *,char const *,float *[4]))
 0002:803C5400       MR::initShadowVolumeBox((LiveActor *,JGeometry::TVec3<f> const &,float *[4]))
 0002:803C5458       MR::initShadowVolumeFlatModel((LiveActor *,char const *,float *[4]))
 0002:803C5520       MR::setShadowProjectionPtr((LiveActor *,char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *))
 0002:803C5564       MR::setShadowDropPositionAtJoint((LiveActor *,char const *,char const *,JGeometry::TVec3<f> const &))
 0002:803C56A0       MR::setDepthOfFieldBlurIntensity((float))
 0002:803C5708       MR::setShadowProjection((LiveActor *,char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:803C5754       MR::setShadowSurfaceOvalColor((LiveActor *,char const *,Color8))
 0002:803C58EC       MR::onShadowFollowHostScale((LiveActor *,char const *))
 0002:803C5988       MR::onShadowFollowHostScaleAll((LiveActor *))
 0002:803C5B50       MR::excludeCalcShadowToMyCollision((LiveActor *,char const *))
 0002:803C5B68       MR::excludeCalcShadowToCollision((LiveActor *,char const *,CollisionParts *))
 0002:803C5BF0       MR::excludeCalcShadowToActorAll((LiveActor *,LiveActor const *))
 0002:803C5D10       ActorShadow::isExistShadowController((LiveActor const *,char const *))
 0002:803C5D7C       MR::validateShadowGroup((LiveActor *,char const *))
 0002:803C60B0       MR::calcClippingRangeIncludeShadow((JGeometry::TVec3<f> *,float *,LiveActor const *,float))
 0002:803C61D0       MR::setClippingRangeIncludeShadow((LiveActor *,JGeometry::TVec3<f> *,float))
 0002:803C62E0       MR::getShadowProjectionLength((LiveActor const *,char const *))
 0002:803C6328       MR::getShadowProjectedSensor((LiveActor const *,char const *))
 0002:803C634C       MR::isShadowProjectedAny((LiveActor const *))
 0002:803C63BC       MR::getShadowNearProjectionLength((LiveActor const *))
 0002:803C6454       MR::initActorStateKeeper((NerveExecutor *,long))
 0002:803C645C       MR::initActorState((NerveExecutor *,ActorStateBaseInterface *,Nerve const *,char const *))
 0002:803C65AC       MR::updateActorState((NerveExecutor *))
 0002:803C65B8       MR::updateActorState((NerveExecutor *,ActorStateBaseInterface *))
 0002:803C6648       MR::updateActorStateAndNextNerve((NerveExecutor *,Nerve const *))
 0002:803C66A8       MR::updateActorStateAndNextNerve((NerveExecutor *,ActorStateBaseInterface *,Nerve const *))
 0002:803C6700       MR::useStageSwitchReadA((LiveActor *,JMapInfoIter const &))
 0002:803C6780       MR::useStageSwitchReadB((LiveActor *,JMapInfoIter const &))
 0002:803C6800       MR::useStageSwitchReadAppear((LiveActor *,JMapInfoIter const &))
 0002:803C6880       MR::useStageSwitchSleep((LiveActor *,JMapInfoIter const &))
 0002:803C6884       MR::useStageSwitchWriteA((LiveActor *,JMapInfoIter const &))
 0002:803C6904       MR::useStageSwitchWriteB((LiveActor *,JMapInfoIter const &))
 0002:803C6984       MR::useStageSwitchWriteDead((LiveActor *,JMapInfoIter const &))
 0002:803C6A04       MR::needStageSwitchReadA((LiveActor *,JMapInfoIter const &))
 0002:803C6A08       MR::useStageSwitchReadB((LiveActor *,JMapInfoIter const &))
 0002:803C6A0C       MR::useStageSwitchReadAppear((LiveActor *,JMapInfoIter const &))
 0002:803C6A10       MR::useStageSwitchWriteA((LiveActor *,JMapInfoIter const &))
 0002:803C6A14       MR::useStageSwitchWriteB((LiveActor *,JMapInfoIter const &))
 0002:803C6A18       MR::useStageSwitchWriteDead((LiveActor *,JMapInfoIter const &))
 0002:803C6A1C       MR::isValidSwitchA((LiveActor const *))
 0002:803C6A64       MR::isValidSwitchB((LiveActor const *))
 0002:803C6AAC       MR::isValidSwitchAppear((LiveActor const *))
 0002:803C6AF4       MR::isValidSwitchDead((LiveActor const *))
 0002:803C6B3C       MR::isOnSwitchA((LiveActor const *))
 0002:803C6B44       MR::isOnSwitchB((LiveActor const *))
 0002:803C6B4C       MR::isOnSwitchAppear((LiveActor const *))
 0002:803C6B54       MR::onSwitchA((LiveActor *))
 0002:803C6B84       MR::syncStageSwitchAppear((LiveActor *))
 0002:803C6BEC       MR::listenStageSwitchOnAppear((LiveActor *,MR::FunctorBase const &))
 0002:803C6BF8       MR::listenStageSwitchOnOffAppear((LiveActor *,MR::FunctorBase const &,MR::FunctorBase const &))
 0002:803C6C0C       MR::listenStageSwitchOnA((LiveActor *,MR::FunctorBase const &))
 0002:803C6C18       MR::listenStageSwitchOnOffA((LiveActor *,MR::FunctorBase const &,MR::FunctorBase const &))
 0002:803C6C2C       MR::listenStageSwitchOnB((LiveActor *,MR::FunctorBase const &))
 0002:803C6C38       MR::listenStageSwitchOffB((LiveActor *,MR::FunctorBase const &))
 0002:803C6C44       MR::listenStageSwitchOnOffB((LiveActor *,MR::FunctorBase const &,MR::FunctorBase const &))
 0002:803C6C58       MR::BitArray::BitArray((int))
 0002:803C6CBC       MR::BitArray::isOn(const(int))
 0002:803C6CE8       MR::BitArray::set((int,bool))
 0002:803C6D34       JGeometry::TVec4<f>::TVec4<f>(void *(float,float,float,float))
 0002:803C6D48       @unnamed@CameraUtil_cpp@::calcNormalizedScreenPosToScreenPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803C6E04       MR::calcScreenPosition((JGeometry::TVec2<f> *,JGeometry::TVec3<f> const &))
 0002:803C6E84       MR::calcScreenPosition((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803C6EF4       MR::calcNormalizedScreenPosition((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803C6F50       MR::calcNormalizedScreenPositionFromView((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803C708C       MR::calcWorldPositionFromScreen((JGeometry::TVec3<f> *,JGeometry::TVec2<f> const &,float))
 0002:803C7158       MR::calcWorldPositionFromCenterScreen((JGeometry::TVec3<f> *,JGeometry::TVec2<f> const &,float))
 0002:803C729C       MR::calcWorldRayDirectionFromScreen((JGeometry::TVec3<f> *,JGeometry::TVec2<f> const &))
 0002:803C72F0       MR::calcCameraDistanceZ((JGeometry::TVec3<f> const &))
 0002:803C7360       MR::loadProjectionMtx((void))
 0002:803C7394       MR::loadViewMtx((void))
 0002:803C73CC       MR::getAspect((void))
 0002:803C7424       MR::getCameraProjectionMtx((void))
 0002:803C747C       MR::getNearZ((void))
 0002:803C74A8       MR::getFarZ((void))
 0002:803C74D4       MR::getFovy((void))
 0002:803C7500       MR::setCameraViewMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,bool,bool,JGeometry::TVec3<f> const &))
 0002:803C755C       MR::setFovy((float))
 0002:803C75D4       MR::setShakeOffset((float,float))
 0002:803C7620       MR::getCamPos((void))
 0002:803C7688       MR::getCamYdir((void))
 0002:803C7768       MR::getCamZdir((void))
 0002:803C77E4       MR::isExistMirrorCamera((void))
 0002:803C77F4       MR::getMirrorCameraViewMtx((void))
 0002:803C7818       MR::getMirrorModelTexMtx((void))
 0002:803C78B8       MR::pauseOffAnimCamera((ActorCameraInfo const *,char const *))
 0002:803C78FC       MR::startEventCamera((ActorCameraInfo const *,char const *,CameraTargetArg const &,long))
 0002:803C7950       MR::endEventCameraAtLanding((ActorCameraInfo const *,char const *,long))
 0002:803C7A04       MR::declareGlobalEventCamera((char const *))
 0002:803C7A3C       MR::endGlobalEventCamera((char const *,long,bool))
 0002:803C7A8C       MR::declareGlobalEventCameraAbyss((char const *))
 0002:803C7B08       MR::declareGlobalEventCameraFixedThere((char const *,bool,float))
 0002:803C7BAC       MR::declareGlobalEventCameraDead((char const *,float,long,long))
 0002:803C7C90       MR::declareEventCameraAnim((ActorCameraInfo const *,char const *,void *))
 0002:803C7D7C       MR::getAnimCameraFrame((ActorCameraInfo const *,char const *))
 0002:803C7E90       MR::declareBlackHoleCamera((char const *))
 0002:803C7F1C       MR::startBlackHoleCamera((char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803C7FB0       MR::declareLauncherCamera((void))
 0002:803C80A8       MR::endLauncherFlightCamera((void))
 0002:803C80DC       MR::setLauncherCameraAngle((float,float,float,float))
 0002:803C81A8       MR::declareLauncherFlightCamera((void))
 0002:803C82BC       MR::isActiveLauncherFlightCamera((void))
 0002:803C837C       MR::declareEventCameraProgrammable((char const *))
 0002:803C83F0       MR::setProgrammableCameraParam((char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:803C84A0       MR::setProgrammableCameraParamFovy((char const *,float))
 0002:803C84F8       MR::getEventCameraFrames((ActorCameraInfo const *,char const *))
 0002:803C852C       GalaxyMap::dispIconAButton((void))
 0002:803C8550       @unnamed@CameraUtil_cpp@::createRegisterName((NameObj const *,ulong))
 0002:803C85B4       MR::declareCameraRegisterVec((NameObj const *,ulong,JGeometry::TVec3<f> *))
 0002:803C86A4       MR::isStartPosCameraEnd((void))
 0002:803C86D0       MR::hasStartAnimCamera((void))
 0002:803C87CC       MR::isPossibleToShiftToFirstPersonCamera((void))
 0002:803C8888       MR::isCameraControlNG((void))
 0002:803C88D4       MR::startTalkCamera((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,long))
 0002:803C89CC       MR::getCameraWatchPos((void))
 0002:803C8A3C       WaterAreaFunction::isCameraInWaterForCameraUtil((void))
 0002:803C8A40       MR::resetCameraLocalOffset((void))
 0002:803C8A68       MR::overlayWithPreviousScreen((ulong))
 0002:803C8A9C       MR::isSubjectiveCameraOnForObjClipping((void))
 0002:803C8ACC       MR::cleanEventCameraTarget_temporally((void))
 0002:803C8B00       CameraTargetArg::setTarget(const(void))
 0002:803C8B04       MR::changeEventCameraTarget((ActorCameraInfo const *,char const *,CameraTargetArg const &))
 0002:803C8B0C       MR::startEventCameraNoTarget((ActorCameraInfo const *,char const *,long))
 0002:803C8B64       MR::startEventCameraTargetPlayer((ActorCameraInfo const *,char const *,long))
 0002:803C8C18       MR::startGlobalEventCameraNoTarget((char const *,long))
 0002:803C8C6C       MR::startGlobalEventCameraTargetPlayer((char const *,long))
 0002:803C8D18       MR::startEventCameraAnim((ActorCameraInfo const *,char const *,CameraTargetArg const &,long,float))
 0002:803C8D98       MR::startLauncherCamera((CameraTargetArg const &))
 0002:803C8DD8       MR::startLauncherFlightCamera((long))
 0002:803C8ED4       MR::tryRegisterDemoCast((LiveActor *,JMapInfoIter const &))
 0002:803C8F18       MR::startFunctionAsyncExecute((MR::FunctorBase const &,int,char const *))
 0002:803C8F20       MR::tryRegisterDemoActionNerve((LiveActor const *,Nerve const *,char const *))
 0002:803C9078       MR::initTalkAnimDemoCast((LiveActor *,JMapInfoIter const &,char const *,char const *))
 0002:803C90DC       DemoFunction::registerDemoActionFunctorFunction((LiveActor const *,MR::FunctorBase const &,char const *,char const *))
 0002:803C90E0       MR::tryRegisterDemoActionFunctorDirect((LiveActor const *,MR::FunctorBase const &,char const *,char const *))
 0002:803C914C       DemoFunction::tryStartDemoRegistered((LiveActor *,char const *))
 0002:803C9150       DemoFunction::tryStartDemoRegisteredMarioPuppetable((LiveActor *,char const *))
 0002:803C9154       DemoFunction::registerDemoSimpleCastAllFunction((NameObj *))
 0002:803C915C       MR::registerDemoSimpleCastAll((NameObj *))
 0002:803C9160       MR::isDemoCast((LiveActor const *,char const *))
 0002:803C91D0       MR::tryStartDemo((LayoutActor *,char const *))
 0002:803C92B0       MR::tryStartDemoWithoutCinemaFrame((LiveActor *,char const *))
 0002:803C9320       MR::tryStartDemoWithoutCinemaFrameValidStarPointer((LiveActor *,char const *))
 0002:803C9390       MR::tryStartDemoWithoutCinemaFrameValidHandPointerFinger((LayoutActor *,char const *))
 0002:803C9470       MR::tryStartDemoMarioPuppetable((LiveActor *,char const *))
 0002:803C94E0       MR::tryStartDemoMarioPuppetableWithoutCinemaFrame((LiveActor *,char const *))
 0002:803C9550       MR::tryStartTimeKeepDemo((NameObj *,char const *,char const *))
 0002:803C95E4       MR::tryStartTimeKeepDemoMarioPuppetable((LiveActor *,char const *,char const *))
 0002:803C974C       MR::requestStartDemo((LiveActor *,char const *,Nerve const *,Nerve const *))
 0002:803C9784       MR::requestStartDemoWithoutCinemaFrame((LayoutActor *,char const *,Nerve const *,Nerve const *))
 0002:803C97F4       MR::requestStartDemoMarioPuppetable((LiveActor *,char const *,Nerve const *,Nerve const *))
 0002:803C982C       MR::requestStartDemoMarioPuppetable((NerveExecutor *,LiveActor *,char const *,Nerve const *,Nerve const *))
 0002:803C9864       MR::requestStartDemoMarioPuppetableWithoutCinemaFrame((LiveActor *,char const *,Nerve const *,Nerve const *))
 0002:803C989C       MR::requestStartTimeKeepDemo((LiveActor *,char const *,Nerve const *,Nerve const *,char const *))
 0002:803C98E8       MR::requestStartTimeKeepDemo((NameObj *,char const *,char const *))
 0002:803C9900       MR::requestStartTimeKeepDemoMarioPuppetable((LiveActor *,char const *,Nerve const *,Nerve const *,char const *))
 0002:803C994C       MR::requestStartTimeKeepDemoMarioPuppetable((NerveExecutor *,LiveActor *,char const *,Nerve const *,Nerve const *,char const *))
 0002:803C9998       MR::requestStartTimeKeepDemoMarioPuppetable((NameObj *,char const *,char const *))
 0002:803C99B0       MR::requestStartTimeKeepDemoWithoutCinemaFrame((LiveActor *,char const *,Nerve const *,Nerve const *,char const *))
 0002:803C99FC       MR::requestStartDemoRegistered((LiveActor *,Nerve const *,Nerve const *,char const *))
 0002:803C9A80       MR::requestStartDemoRegisteredMarioPuppetable((LiveActor *,Nerve const *,Nerve const *,char const *))
 0002:803C9B04       MR::endDemo((NameObj *,char const *))
 0002:803C9B4C       MR::endDemoWaitCameraInterpolating((NameObj *,char const *))
 0002:803C9B94       MR::tryInitDemoSheetTalkAnim((LiveActor *,JMapInfoIter const &,char const *,char const *,TalkMessageCtrl *))
 0002:803C9B98       MR::initDemoSheetTalkAnimWithMessageName((LiveActor *,JMapInfoIter const &,char const *,char const *,char const *))
 0002:803C9C24       MR::initDemoSheetTalkAnimFunctor((LiveActor *,JMapInfoIter const &,char const *,char const *,TalkMessageCtrl *,MR::FunctorBase const &))
 0002:803C9C7C       MR::tryInitDemoSheetTalkAnim((LiveActor *,JMapInfoIter const &,char const *,char const *,TalkMessageCtrl *))
 0002:803C9D50       MR::startTimeKeepDemo((NameObj *,char const *,char const *))
 0002:803C9DB4       MR::startTimeKeepDemoMarioPuppetable((NameObj *,char const *,char const *))
 0002:803C9E84       MR::isDemoActive((void))
 0002:803C9EA8       MR::isDemoActive((char const *))
 0002:803C9F18       MR::canStartDemo((void))
 0002:803C9F80       MR::isTimeKeepDemoActive((void))
 0002:803C9FC4       MR::isDemoActiveRegistered((LiveActor const *))
 0002:803CA014       MR::isDemoPartExist((LiveActor const *,char const *))
 0002:803CA058       DemoFunction::isDemoLastPartLastStep((void))
 0002:803CA05C       DemoFunction::isDemoPartActiveFunction((char const *))
 0002:803CA060       MR::isDemoPartStep((char const *,long))
 0002:803CA0BC       MR::isDemoPartFirstStep((char const *))
 0002:803CA108       MR::isDemoPartLastStep((char const *))
 0002:803CA170       MR::isDemoPartLessEqualStep((char const *,long))
 0002:803CA1D0       MR::isDemoPartGreaterStep((char const *,long))
 0002:803CA234       DemoFunction::getDemoPartTotalStepFunction((char const *))
 0002:803CA238       MR::calcDemoPartStepRate((char const *))
 0002:803CA2B0       DemoFunction::getDemoPartStepFunction((char const *))
 0002:803CA2BC       MR::isPowerStarGetDemoActive((void))
 0002:803CA2C0       DemoFunction::getCurrentDemoPartNameMain((char const *))
 0002:803CA2C4       MR::startTalkingSequenceWithoutCinemaFrame((NameObj *))
 0002:803CA2E8       MR::endTalkingSequence((NameObj *))
 0002:803CA334       MR::getTalkingActor((void))
 0002:803CA404       MR::startTalkingSequence((NameObj *))
 0002:803CA428       MR::drawInit((void))
 0002:803CA474       MR::reinitGX((void))
 0002:803CA4CC       MR::resetTextureCacheSize((void))
 0002:803CA4EC       MR::loadViewMtxFor2DModel((void))
 0002:803CA520       MR::drawInitFor2DModel((void))
 0002:803CA5F4       MR::setDefaultViewportAndScissor((void))
 0002:803CA68C       MR::loadProjectionMtxFor2D((void))
 0002:803CA6C4       MR::setupDrawForNW4RLayout((float,bool))
 0002:803CA76C       MR::clearZBuffer((void))
 0002:803CAAC8       MR::clearAlphaBuffer((uchar))
 0002:803CAB40       MR::clearAlphaBuffer((uchar,JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:803CAE28       MR::fillScreenSetup((_GXColor const &))
 0002:803CB040       MR::fillScreenArea((JGeometry::TVec2<s> const &,JGeometry::TVec2<s> const &))
 0002:803CB0B8       MR::fillScreen((_GXColor const &))
 0002:803CB10C       MR::setupShadowVolumeDraw((void))
 0002:803CB278       MR::drawSimpleModel((J3DModelData *))
 0002:803CB2EC       MR::fillSilhouetteColor((void))
 0002:803CB6A8       MR::setMarioShadowVec((JGeometry::TVec3<f> const &))
 0002:803CB6C4       MR::loadTexProjectionMtx((ulong))
 0002:803CB7BC       MR::nonFilteredCapture((JUTTexture *,short,short))
 0002:803CB844       MR::simpleDraw((J3DModel *,J3DMaterial *))
 0002:803CB8E8       GameSceneFunction::activateDraw3D((void))
 0002:803CB8EC       GameSceneFunction::deactivateDraw3D((void))
 0002:803CB8F0       J2DOrthoGraphSimple::J2DOrthoGraphSimple((void))
 0002:803CBA20       J2DOrthoGraph::setPort((void))
 0002:803CBA4C       J2DGrafContext::place((float,float,float,float))
 0002:803CBA9C       @unnamed@EffectUtil_cpp@::isExistEffect((LiveActor const *,char const *))
 0002:803CBAD4       MR::isDeadInformationMessage((void))
 0002:803CBAD8       MR::Effect::requestMovementOnAllEmitters((void))
 0002:803CBADC       MR::addEffect((LiveActor *,char const *))
 0002:803CBAE0       MR::updateEffectFloorCode((LiveActor *,Triangle const *))
 0002:803CBB18       MR::emitEffect((LiveActor *,char const *))
 0002:803CBB20       MR::emitEffectWithScale((LiveActor *,char const *,float,long))
 0002:803CBB84       MR::emitEffectWithEmitterCallBack((LiveActor *,char const *,MultiEmitterCallBackBase *))
 0002:803CBBCC       MR::emitEffectWithParticleCallBack((LiveActor *,char const *,MultiEmitterParticleCallBack *))
 0002:803CBC18       MR::tryEmitEffect((LiveActor *,char const *))
 0002:803CBC6C       MR::tryDeleteEffect((LiveActor *,char const *))
 0002:803CBCC4       MR::deleteEffect((LiveActor *,char const *))
 0002:803CBCDC       MR::forceDeleteEffectAll((LiveActor *))
 0002:803CBCE4       MR::isRegisteredEffect((LiveActor const *,char const *))
 0002:803CBD04       MR::isEffectValid((LiveActor const *,char const *))
 0002:803CBD54       MR::onForceDeleteEffectSyncClipping((LiveActor *,char const *))
 0002:803CBDAC       MR::setEffectHostSRT((LiveActor *,char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *))
 0002:803CBDFC       MR::setEffectHostMtx((LiveActor *,char const *,float *[4]))
 0002:803CBE34       MR::setEffectBaseScale((LiveActor *,char const *,float))
 0002:803CBE6C       MR::setEffectLocalScale((LiveActor *,char const *,JGeometry::TVec3<f> const &))
 0002:803CBEA8       MR::setEffectColor((LiveActor *,char const *,uchar,uchar,uchar,uchar,uchar,uchar))
 0002:803CBF30       MR::setEffectEnvColor((LiveActor *,char const *,uchar,uchar,uchar))
 0002:803CBFD8       MR::emitEffectHit((LiveActor *,float *[4],char const *))
 0002:803CC028       MR::emitEffectHit((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:803CC0E8       MR::emitEffectHitBetweenSensors((LiveActor *,HitSensor const *,HitSensor const *,float,char const *))
 0002:803CC134       MR::initEffectAfterPlacement((LiveActor *))
 0002:803CC180       MR::updateEffectFloorCodeLineToMap((LiveActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803CC1F8       MR::updateEffectFloorCodeLineToMap((LiveActor *,float,float))
 0002:803CC2BC       MR::initEffectSyncBck((LiveActor *,char const *,char const *const *))
 0002:803CC368       MR::addEffectHitNormal((LiveActor *,char const *))
 0002:803CC3CC       MR::getPlayerLeft((void))
 0002:803CC3D0       MR::incPlayerLeft((void))
 0002:803CC3D8       MR::decPlayerLeft((void))
 0002:803CC408       MR::isLuigiLeftSupply((void))
 0002:803CC40C       MR::incPlayerGameOverNum((void))
 0002:803CC434       MR::isAnyPlayerLeftSupply((void))
 0002:803CC4A0       MR::offAllPlayerLeftSupply((void))
 0002:803CC4EC       MR::getStarPieceNum((void))
 0002:803CC52C       MR::addStarPiece((int))
 0002:803CC584       GameDataFunction::addStockedStarPiece((int))
 0002:803CC588       MR::isPlayerLuigi((void))
 0002:803CC5B0       InformationObserverFunction::explainSpin((LiveActor *))
 0002:803CC6D4       MR::isOnGameEventFlagChildsRoom((void))
 0002:803CC708       MR::isOnGameEventFlagLibraryRoom((void))
 0002:803CC734       MR::isOnGameEventFlagRosettaTalkAboutTicoInTower((void))
 0002:803CC740       MR::isKinopioExplorerTalkGetGrandStar6((void))
 0002:803CC818       GameDataFunction::setupAlreadyDoneFlag((char const *,JMapInfoIter const &,ulong *))
 0002:803CC81C       GameDataFunction::updateAlreadyDoneFlag((int,ulong))
 0002:803CC85C       MR::isAlreadyVisitedStage((char const *))
 0002:803CC8D8       GameDataConst::isGalaxyAppearGreenDriver((char const *))
 0002:803CC8E0       MR::getZoneNameFromZoneId((long))
 0002:803CC9B8       MR::isGrandEventPowerStar((char const *,long))
 0002:803CC9C8       GameSequenceFunction::hasPowerStarYetAtResultSequence((void))
 0002:803CC9D4       MR::sendStageResultSequenceParam((long))
 0002:803CCA28       GameDataFunction::addStarPieceGivingToTicoSeed((int,int))
 0002:803CCA2C       GameDataFunction::addPlayerLeft((int))
 0002:803CCA30       MR::calcOpenedAstroDomeNum((void))
 0002:803CCAB8       GameDataConst::getIncludedGrandGalaxyId((char const *))
 0002:803CCABC       MR::getZoneNum((void))
 0002:803CCB2C       MR::getRaceBestTime((int))
 0002:803CCB50       RaceManagerFunction::getRaceTime((void))
 0002:803CCB6C       MR::registerStorageSpinDriverPathDrawRange((NameObj const *,JMapInfoIter const &,int,float *))
 0002:803CCBE4       MR::updateStorageSpinDriverPathDrawRange((int,float))
 0002:803CCC78       MR::isGalaxyAnyCometAppearInCurrentStage((void))
 0002:803CCD58       EventFunction::endCometEvent((void))
 0002:803CCD9C       MR::canAppearCoin100Comet((char const *))
 0002:803CCEA8       MR::getCometNameIdFromString((char const *))
 0002:803CCF80       MR::getCometNameFromId((int))
 0002:803CCFE4       MR::isStarComplete((char const *))
 0002:803CD040       MR::isStarCompleteNormalScenario((char const *))
 0002:803CD0B4       MR::getCoinBestScore((char const *,long))
 0002:803CD0EC       MR::getCoinBestScore((char const *))
 0002:803CD174       MR::isPlacedCoin((char const *,long))
 0002:803CD1FC       MR::onGameEventFlagGetLuigiLetter((void))
 0002:803CD200       MR::isOnLuigiHiding((void))
 0002:803CD26C       MR::isOnLuigiHidingCurrentStage((void))
 0002:803CD310       MR::isLuigiDisappearFromAstroGalaxyOrHiding((void))
 0002:803CD33C       MR::isLuigiLetterArrivalAtMessenger((void))
 0002:803CD370       MR::isLuigiHidingGalaxyAndScenario((char const *,long))
 0002:803CD41C       MR::isPowerStarGetDemoWithLuigiCurrentGalaxy((void))
 0002:803CD458       MR::isPowerStarGetDemoWithLuigiCurrentGalaxyAndScenario((long))
 0002:803CD53C       MR::getLuigiLetterGalaxyName((void))
 0002:803CD5DC       MR::getLuigiLetterGalaxyNameForNPC((void))
 0002:803CD630       MR::onMessageAlreadyRead((signed char))
 0002:803CD68C       MR::explainOneUpIfAtFirst((void))
 0002:803CD884       MR::onGameEventFlagEnableToSpinAndStarPointer((void))
 0002:803CD8FC       MR::onGameEventFlagViewNormalEnding((void))
 0002:803CD950       MR::onGameEventFlagViewCompleteEnding((void))
 0002:803CD9DC       MR::getPowerStarLeftToDisplayCountDownPlate((void))
 0002:803CDAA8       MR::isKoopaFortressAppearInGalaxy((void))
 0002:803CDBA8       MR::isOnGameEventFlagAstroGalaxyBgmBright((void))
 0002:803CDBB8       MR::isOnMessageAlreadyRead((signed char))
 0002:803CDC08       MR::isFileExist((char const *,bool))
 0002:803CDC40       MR::getFileSize((char const *,bool))
 0002:803CDC90       MR::convertPathToEntrynumConsideringLanguage((char const *))
 0002:803CDD38       MR::loadAsyncToMainRAM((char const *,uchar *,JKRHeap *,JKRDvdRipper::EAllocDirection))
 0002:803CDE08       MR::mountAsyncArchive((char const *,JKRHeap *))
 0002:803CDE94       MR::mountAsyncArchiveByObjectOrLayoutName((char const *,JKRHeap *))
 0002:803CDF38       MR::isMountedArchive((char const *))
 0002:803CE030       MR::createAndAddArchive((void *,JKRHeap *,char const *))
 0002:803CE04C       MR::getMountedArchiveAndHeap((char const *,JKRArchive **,JKRHeap **))
 0002:803CE0E8       MR::removeResourceAndFileHolderIfIsEqualHeap((JKRHeap *))
 0002:803CE128       MR::decompressFileFromArchive((JKRArchive *,char const *,JKRHeap *,int))
 0002:803CE1F4       MR::isLoadedFile((char const *))
 0002:803CE2E4       MR::isLoadedObjectOrLayoutArchive((char const *))
 0002:803CE35C       MR::makeObjectArchiveFileName((char *,ulong,char const *))
 0002:803CE420       MR::makeObjectArchiveFileNameFromPrefix((char *,ulong,char const *,bool))
 0002:803CE480       MR::makeLayoutArchiveFileName((char *,ulong,char const *))
 0002:803CE544       MR::makeLayoutArchiveFileNameFromPrefix((char *,ulong,char const *,bool))
 0002:803CE6DC       MR::makeScenarioArchiveFileName((char *,ulong,char const *))
 0002:803CE6F4       FootPrint::FootPrint((char const *,long,long))
 0002:803CE750       FootPrint::FootPrint((char const *,long))
 0002:803CE7A8       FootPrint::initMember((long,long))
 0002:803CE890       nullsub_126
 0002:803CE894       FootPrint::setTexture((ResTIMG *))
 0002:803CE91C       FootPrint::movement((void))
 0002:803CE9FC       FootPrint::addPrint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:803CEB54       FootPrint::draw(const(void))
 0002:803CEDA0       FootPrint::clear((void))
 0002:803CEDAC       FootPrint::clearForce((void))
 0002:803CEDBC       FootPrint::getPrintPos(const(ulong))
 0002:803CEDDC       FootPrint::invalidate((ulong))
 0002:803CEE04       FootPrint::isValid(const(ulong))
 0002:803CEE30       FootPrint::~FootPrint((void))
 0002:803CEE88       FurBank::check((J3DModelData *,ulong))
 0002:803CEEE0       FurDrawManager::add((FurCtrl *,uchar))
 0002:803CEF18       FurDrawManager::draw(const(void))
 0002:803CEFD0       FurCtrl::FurCtrl((LiveActor *,FurParam *,bool,uchar))
 0002:803CF080       FurCtrl::calcLayerForm((void))
 0002:803CF230       FurCtrl::drawFur((void))
 0002:803CF504       FurCtrl::createFurMap((void))
 0002:803CF580       MR::getFurDrawManager((void))
 0002:803CF5A8       FurDrawManager::FurDrawManager((uchar))
 0002:803CF674       FurCtrl::setupFur((J3DModel *,ResTIMG *,ResTIMG *,ResTIMG *,ushort,uchar))
 0002:803CF898       FurCtrl::setupFurClone((J3DModel *,FurCtrl *))
 0002:803CF9EC       MR::initFurParamFromDvd((FurParam *,DynamicFurParam *,char *,ulong))
 0002:803CFCB8       J3DModel2::J3DModel2((J3DModel *))
 0002:803CFE08       FurDrawer::FurDrawer((ulong,ResTIMG *,ResTIMG *))
 0002:803D0098       FurDrawer::update((void))
 0002:803D00AC       FurDrawer::CLayerParam::calcValue(const(long,long))
 0002:803D0130       FurDrawer::setupMaterial(const(DynamicFurParam *))
 0002:803D08AC       FurDrawer::setupLayerMaterial(const(long))
 0002:803D0A10       FurDrawer::createFurMap((void))
 0002:803D0BDC       FurMulti::FurMulti((LiveActor *,ulong))
 0002:803D0C80       FurMulti::setLayerDirect((ulong,ulong,ulong,ulong,FurParam *,ResTIMG *,ResTIMG *,ResTIMG *,ResTIMG *))
 0002:803D0E64       FurMulti::addToManager((void))
 0002:803D0ED0       FurMulti::offDraw((ulong))
 0002:803D0F14       FurMulti::onDraw((ulong))
 0002:803D0F54       MR::initMultiFur((LiveActor *,long))
 0002:803D1460       FurBank::regist((FurMulti *,ulong))
 0002:803D14A0       CShader::CShader((J3DModelData const *,ResTIMG const *))
 0002:803D15B8       CShader::~CShader((void))
 0002:803D161C       CShader::calc((J3DModel *))
 0002:803D1ABC       CShader::makeIndexData(const(J3DShape *))
 0002:803D1C44       CShader::checkBorderVtx((J3DModelData *,ulong))
 0002:803D1E04       CShader::CLengthMap::CLengthMap((ResTIMG const *))
 0002:803D1E40       CShader::CLengthMap::setLengthMap((ResTIMG const *))
 0002:803D1E84       CShader::CLengthMap::refer(const(float,float))
 0002:803D1F9C       CShader::CLengthMap::getTexelOrder(const(ushort,float,_GXTexWrapMode))
 0002:803D2068       CShader::CIndex::CIndex((void))
 0002:803D207C       MR::getCorePadPointingPosBasedOnScreen((JGeometry::TVec2<f> *,long))
 0002:803D20B8       MR::getCorePadPointingPos((JGeometry::TVec2<f> *,long))
 0002:803D20F4       MR::getCorePadPastPointingPos((JGeometry::TVec2<f> *,long,long))
 0002:803D2140       MR::getCorePadEnablePastCount((long))
 0002:803D2168       MR::isCorePadPointInScreen((long))
 0002:803D2190       MR::getCorePadDistanceToDisplay((long))
 0002:803D21B8       MR::getCorePadAcceleration((JGeometry::TVec3<f> *,long))
 0002:803D21F4       MR::testCorePadButtonUp((long))
 0002:803D221C       MR::testCorePadButtonDown((long))
 0002:803D2244       MR::testCorePadButtonA((long))
 0002:803D226C       MR::testCorePadButtonB((long))
 0002:803D2294       MR::testCorePadButtonPlus((long))
 0002:803D22BC       MR::testCorePadButtonMinus((long))
 0002:803D22E4       MR::testSubPadButtonC((long))
 0002:803D230C       MR::testSubPadButtonZ((long))
 0002:803D2334       MR::testPadButtonAnyWithoutHome((long))
 0002:803D252C       MR::testCorePadTriggerUp((long))
 0002:803D2554       MR::testCorePadTriggerDown((long))
 0002:803D257C       MR::testCorePadTriggerLeft((long))
 0002:803D25A4       MR::testCorePadTriggerRight((long))
 0002:803D25CC       MR::testCorePadTriggerA((long))
 0002:803D25F4       MR::testCorePadTriggerB((long))
 0002:803D261C       MR::testCorePadTriggerPlus((long))
 0002:803D2644       MR::testCorePadTriggerMinus((long))
 0002:803D266C       MR::testCorePadTriggerAnyWithoutHome((long))
 0002:803D2814       MR::testCorePadTriggerHome((long))
 0002:803D283C       MR::testSubPadTriggerC((long))
 0002:803D2864       MR::testSubPadTriggerZ((long))
 0002:803D288C       MR::testSubPadReleaseZ((long))
 0002:803D28B4       MR::isCorePadSwing((long))
 0002:803D28DC       MR::isCorePadSwingTrigger((long))
 0002:803D2904       MR::getSubPadStickX((long))
 0002:803D292C       MR::getSubPadStickY((long))
 0002:803D2954       MR::testSubPadStickTriggerUp((long))
 0002:803D2980       MR::testSubPadStickTriggerDown((long))
 0002:803D29AC       MR::testSubPadStickTriggerLeft((long))
 0002:803D29D8       MR::testSubPadStickTriggerRight((long))
 0002:803D2A04       MR::getSubPadAcceleration((JGeometry::TVec3<f> *,long))
 0002:803D2A40       MR::isSubPadSwing((long))
 0002:803D2A68       MR::isPadSwing((long))
 0002:803D2AD0       MR::testSystemTriggerB((void))
 0002:803D2B6C       MR::getPlayerLevelC((void))
 0002:803D2BC4       MR::testFpViewOutTrigger((void))
 0002:803D2C24       MR::getPlayerStickX((void))
 0002:803D2CFC       MR::getPlayerStickY((void))
 0002:803D2F10       MR::isGamePadStickOperated((long))
 0002:803D2F80       MR::calcWorldStickDirectionXZ((float *,float *,long))
 0002:803D30B8       MR::calcWorldStickDirectionXZ((JGeometry::TVec3<f> *,long))
 0002:803D30D4       MR::isConnectedWPad((long))
 0002:803D30F8       MR::isOperatingWPad((long))
 0002:803D3180       @unnamed@GravityUtil_cpp@::getJMapInfoArgPlus((JMapInfoIter const &,char const *,float *))
 0002:803D3218       @unnamed@GravityUtil_cpp@::getJMapInfoArgPlus((JMapInfoIter const &,char const *,long *))
 0002:803D32BC       @unnamed@GravityUtil_cpp@::calcGravityVectorOrZero((NameObj const *,JGeometry::TVec3<f> const &,ulong,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D332C       MR::registerGravity((PlanetGravity *))
 0002:803D3368       MR::calcGravityVectorOrZero((LiveActor const *,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D3384       MR::calcGravityVectorOrZero((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D33A0       MR::calcDropShadowVector((LiveActor const *,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D33BC       MR::calcDropShadowVectorOrZero((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D33D8       MR::calcGravityAndDropShadowVectorOrZero((LiveActor const *,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D33F4       MR::calcGravityAndMagnetVector((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D3480       MR::calcAttractMarioLauncherOrZero((LiveActor const *,JGeometry::TVec3<f> *,GravityInfo *,ulong))
 0002:803D349C       MR::isZeroGravity((LiveActor const *))
 0002:803D34D8       MR::isLightGravity((GravityInfo const &))
 0002:803D34FC       MR::settingGravityParamFromJMap((PlanetGravity *,JMapInfoIter const &))
 0002:803D3604       MR::getJMapInfoGravityType((JMapInfoIter const &,PlanetGravity *))
 0002:803D36B8       MR::getJMapInfoGravityPower((JMapInfoIter const &,PlanetGravity *))
 0002:803D3768       HashSortTable::HashSortTable((ulong))
 0002:803D37E4       HashSortTable::add((char const *,ulong,bool))
 0002:803D384C       HashSortTable::add((ulong,ulong))
 0002:803D3880       HashSortTable::addOrSkip((ulong,ulong))
 0002:803D38E4       HashSortTable::sort((void))
 0002:803D3A90       HashSortTable::search((ulong,ulong *))
 0002:803D3B34       HashSortTable::search((char const *,ulong *))
 0002:803D3B80       HashSortTable::search((char const *,char const *,ulong *))
 0002:803D3BDC       HashSortTable::swap((char const *,char const *))
 0002:803D3C64       MR::getHashCode((char const *))
 0002:803D3C90       MR::getHashCodeLower((char const *))
 0002:803D3CF0       MR::isValidInfo((JMapInfoIter const &))
 0002:803D3CF4       MR::isObjectName((JMapInfoIter const &,char const *))
 0002:803D3D54       @unnamed@JMapUtil_cpp@::getJMapInfoRailArg((JMapInfoIter const &,char const *,long *))
 0002:803D3DB0       @unnamed@MapPartsUtil_cpp@::getJMapInfoArgNoInit((JMapInfoIter const &,char const *,float *))
 0002:803D3E1C       @unnamed@JMapUtil_cpp@::getJMapInfoArgNoInit((JMapInfoIter const &,char const *,bool *))
 0002:803D3E80       MR::getJMapInfoTrans((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D3EEC       MR::getJMapInfoRotate((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4054       MR::getJMapInfoMatrixFromRT((JMapInfoIter const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:803D40D0       MR::getJMapInfoArg0WithInit((JMapInfoIter const &,long *))
 0002:803D40E8       MR::getJMapInfoArg3WithInit((JMapInfoIter const &,float *))
 0002:803D4100       MR::getJMapInfoArg7WithInit((JMapInfoIter const &,bool *))
 0002:803D41D8       MR::getJMapInfoArg0NoInit((JMapInfoIter const &,long *))
 0002:803D41E8       MR::getJMapInfoArg0NoInit((JMapInfoIter const &,float *))
 0002:803D4208       MR::getJMapInfoArg1NoInit((JMapInfoIter const &,long *))
 0002:803D4358       MR::isEqualObjectName((JMapInfoIter const &,char const *))
 0002:803D4398       MR::getDemoCastID((JMapInfoIter const &))
 0002:803D448C       MR::getObjectName((char const **,JMapInfoIter const &))
 0002:803D4510       MR::isExistJMapArg((JMapInfoIter const &))
 0002:803D4570       MR::getJMapInfoTransLocal((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D45F8       MR::getJMapInfoRotateLocal((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4680       MR::getJMapInfoScale((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4708       MR::getJMapInfoV3f((JMapInfoIter const &,char const *,JGeometry::TVec3<f> *))
 0002:803D47CC       MR::getJMapInfoArg1WithInit((JMapInfoIter const &,long *))
 0002:803D47E4       MR::getJMapInfoArg2WithInit((JMapInfoIter const &,long *))
 0002:803D47FC       MR::getJMapInfoArg3WithInit((JMapInfoIter const &,long *))
 0002:803D4814       MR::getJMapInfoArg4WithInit((JMapInfoIter const &,long *))
 0002:803D482C       MR::getJMapInfoArg5WithInit((JMapInfoIter const &,long *))
 0002:803D4844       MR::getJMapInfoArg6WithInit((JMapInfoIter const &,long *))
 0002:803D485C       MR::getJMapInfoArg7WithInit((JMapInfoIter const &,long *))
 0002:803D488C       MR::getJMapInfoGroupID((JMapInfoIter const &,long *))
 0002:803D4934       MR::isConnectedWithRail((JMapInfoIter const &))
 0002:803D49AC       MR::isExistStageSwitchA((JMapInfoIter const &))
 0002:803D4A14       MR::isExistStageSwitchB((JMapInfoIter const &))
 0002:803D4A7C       MR::isExistStageSwitchAppear((JMapInfoIter const &))
 0002:803D4AE4       MR::isExistStageSwitchDead((JMapInfoIter const &))
 0002:803D4BB4       MR::getJMapInfoCameraSetID((JMapInfoIter const &,long *))
 0002:803D4D18       MR::getDemoSheetName((JMapInfoIter const &))
 0002:803D4D98       MR::isEqualRailUsage((JMapInfoIter const &,char const *))
 0002:803D4DE4       MR::getRailPointPos0((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4E6C       MR::getRailPointPos1((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4EF4       MR::getRailPointPos2((JMapInfoIter const &,JGeometry::TVec3<f> *))
 0002:803D4F7C       MR::isLoopRailPathIter((JMapInfoIter const &))
 0002:803D4FC0       MR::getJoint((J3DModel *,char const *))
 0002:803D5038       MR::getJoint((LiveActor const *,ushort))
 0002:803D5070       MR::getJointMtx((J3DModel *,char const *))
 0002:803D50B4       MR::getJointMtx((LiveActor const *,char const *))
 0002:803D5104       MR::getJointMtx((LiveActor const *,int))
 0002:803D5140       MR::getJointIndex((LiveActor const *,char const *))
 0002:803D517C       MR::getJointName((LiveActor const *,int))
 0002:803D51B4       MR::getJointNum((LiveActor const *))
 0002:803D51D8       MR::isExistJoint((LiveActor const *,char const *))
 0002:803D521C       MR::copyJointPos((J3DModel *,char const *,JGeometry::TVec3<f> *))
 0002:803D5260       MR::createAndAddGroupCtrl((LayoutActor *,char const *,ulong))
 0002:803D52A4       MR::copyJointPos((J3DModel *,int,JGeometry::TVec3<f> *))
 0002:803D5310       MR::copyJointScale((LiveActor const *,char const *,JGeometry::TVec3<f> *))
 0002:803D53C0       MR::hideJoint((J3DJoint *))
 0002:803D5444       MR::showJointAndChildren((J3DJoint *))
 0002:803D5504       MR::showJoint((J3DJoint *))
 0002:803D5648       MR::getJointTransX((J3DJoint const *))
 0002:803D5658       MR::getJointTransZ((J3DJoint const *))
 0002:803D5660       MR::searchChildJoint((J3DJoint *,J3DJoint *))
 0002:803D5708       MR::getParentJoint((J3DModelData *,J3DJoint *))
 0002:803D5740       MR::getParentJoint((LiveActor const *,J3DJoint *))
 0002:803D58AC       nw4r::lyt::Pane::SetVisible((bool))
 0002:803D58C0       nw4r::lyt::Pane::SetInfluencedAlpha((bool))
 0002:803D58D8       @unnamed@LayoutUtil_cpp@::showPaneRecursive((nw4r::lyt::Pane *))
 0002:803D5994       @unnamed@LayoutUtil_cpp@::hidePaneRecursive((nw4r::lyt::Pane *))
 0002:803D5A48       @unnamed@LayoutUtil_cpp@::initFrameCtrlReverse((J3DFrameCtrl *))
 0002:803D5A90       @unnamed@LayoutUtil_cpp@::getTextDrawRectRecursive((nw4r::ut::Rect *,nw4r::lyt::Pane const *,bool))
 0002:803D5BFC       @unnamed@LayoutUtil_cpp@::getTextLineNumMaxRecursiveSub((nw4r::lyt::Pane const *))
 0002:803D5CE8       MR::JKRHeapAllocator<0>::alloc((MEMAllocator *,ulong))
 0002:803D5DBC       MR::getPaneAlpha((LayoutActor const *,char const *))
 0002:803D5DF4       MR::setInfluencedAlphaToChild((LayoutActor const *))
 0002:803D5E8C       MR::setLayoutAlpha((LayoutActor const *,uchar))
 0002:803D5EC4       MR::setLayoutAlphaFloat((LayoutActor const *,float))
 0002:803D5F34       MR::setPaneAlpha((LayoutActor const *,char const *,uchar))
 0002:803D5F78       MR::setPaneAlphaFloat((LayoutActor const *,char const *,float))
 0002:803D5FF4       MR::executeTextBoxRecursive((LayoutActor *,char const *,TextBoxRecursiveOperation const &))
 0002:803D60D0       MR::setTextBoxSystemMessageRecursive((LayoutActor *,char const *,char const *))
 0002:803D61B4       MR::setTextBoxFontRecursive((LayoutActor *,char const *,nw4r::ut::Font *))
 0002:803D6228       MR::setTextBoxFormatRecursive((LayoutActor *,char const *,wchar_t const *,...))
 0002:803D62DC       MR::setTextBoxArgStringRecursive((LayoutActor *,char const *,wchar_t const *,long))
 0002:803D63CC       MR::setTextBoxArgGameMessageRecursive((LayoutActor *,char const *,char const *,long))
 0002:803D6420       setTextBoxHorizontalPositionRecursive(LayoutActor *,char const *,uchar)
 0002:803D6530       MR::updateMinuteAndSecondTextBox((LayoutActor *,char const *,ulong))
 0002:803D6644       MR::showPane((LayoutActor *,char const *))
 0002:803D66B8       MR::hidePane((LayoutActor *,char const *))
 0002:803D672C       MR::isHiddenPane((LayoutActor const *,char const *))
 0002:803D6770       MR::showScreen((LayoutActor *))
 0002:803D6798       MR::hideScreen((LayoutActor *))
 0002:803D67C0       MR::setFollowPos((JGeometry::TVec2<f> const *,LayoutActor const *,char const *))
 0002:803D6808       MR::setFollowTypeReplace((LayoutActor const *,char const *))
 0002:803D6844       MR::setFollowTypeAdd((LayoutActor const *,char const *))
 0002:803D6880       MR::copyPaneTrans((JGeometry::TVec2<f> *,LayoutActor const *,char const *))
 0002:803D68E0       MR::getPaneTransX((LayoutActor const *,char const *))
 0002:803D6938       MR::getPaneTransY((LayoutActor const *,char const *))
 0002:803D6990       MR::setLayoutPosAtPaneTrans((LayoutActor *,LayoutActor const *,char const *))
 0002:803D69CC       MR::copyPaneScale((JGeometry::TVec2<f> *,LayoutActor const *,char const *))
 0002:803D6A24       MR::setPaneScale((LayoutActor const *,float,float,char const *))
 0002:803D6A6C       MR::setLayoutScaleAtPaneScale((LayoutActor *,LayoutActor const *,char const *))
 0002:803D6AD8       MR::copyPaneRotate((JGeometry::TVec3<f> *,LayoutActor const *,char const *))
 0002:803D6B34       MR::setPaneRotate((LayoutActor const *,float,float,float,char const *))
 0002:803D6B8C       MR::setLayoutScalePosAtPaneScaleTrans((LayoutActor *,LayoutActor const *,char const *))
 0002:803D6BE8       MR::setLayoutScalePosAtPaneScaleTransIfExecCalcAnim((LayoutActor *,LayoutActor const *,char const *))
 0002:803D6C58       MR::createLytTexMap((char const *,char const *))
 0002:803D6CE8       MR::createLytTexMap((ResTIMG *))
 0002:803D6D74       MR::getLytTexMap((LayoutActor *,char const *,uchar))
 0002:803D6E08       MR::replacePaneTexture((LayoutActor *,char const *,nw4r::lyt::TexMap const *,uchar))
 0002:803D6EE8       MR::startAnim((LayoutActor *,char const *,ulong))
 0002:803D6F48       MR::startAnimAtFirstStep((LayoutActor *,char const *,ulong))
 0002:803D6FA0       MR::startPaneAnim((LayoutActor *,char const *,char const *,ulong))
 0002:803D6FF0       MR::startPaneAnimAtStep((LayoutActor *,char const *,char const *,long,ulong))
 0002:803D7058       MR::startPaneAnimAtFirstStep((LayoutActor *,char const *,char const *,ulong))
 0002:803D70C0       MR::startAnimReverseOneTime((LayoutActor *,char const *,ulong))
 0002:803D7120       MR::startPaneAnimReverseOneTime((LayoutActor *,char const *,char const *,ulong))
 0002:803D7184       MR::startAnimAndSetFrameAndStop((LayoutActor *,char const *,float,ulong))
 0002:803D71D8       MR::setAnimFrameAndStop((LayoutActor *,float,ulong))
 0002:803D7234       MR::setAnimFrameAndStopAtEnd((LayoutActor *,ulong))
 0002:803D72AC       MR::setAnimFrameAndStopAdjustTextWidth((LayoutActor *,char const *,ulong))
 0002:803D7324       MR::setAnimFrameAndStopAdjustTextHeight((LayoutActor *,char const *,ulong))
 0002:803D739C       MR::setPaneAnimFrameAndStop((LayoutActor *,char const *,float,ulong))
 0002:803D7404       MR::setPaneAnimFrameAndStopAtEnd((LayoutActor *,char const *,ulong))
 0002:803D7484       MR::setAnimFrame((LayoutActor *,float,ulong))
 0002:803D74D0       MR::setPaneAnimFrame((LayoutActor *,char const *,float,ulong))
 0002:803D7528       MR::setAnimRate((LayoutActor *,float,ulong))
 0002:803D7574       MR::setPaneAnimRate((LayoutActor *,char const *,float,ulong))
 0002:803D75CC       MR::getAnimCtrl((LayoutActor const *,ulong))
 0002:803D7608       MR::getPaneAnimCtrl((LayoutActor const *,char const *,ulong))
 0002:803D7650       MR::isAnimStopped((LayoutActor const *,ulong))
 0002:803D76D4       MR::getAnimFrame((LayoutActor const *,ulong))
 0002:803D7714       MR::getPaneAnimFrame((LayoutActor const *,char const *,ulong))
 0002:803D7760       MR::getAnimFrameMax((LayoutActor const *,ulong))
 0002:803D77A0       MR::getPaneAnimFrameMax((LayoutActor const *,char const *,ulong))
 0002:803D77EC       MR::getAnimFrameMax((LayoutActor const *,char const *))
 0002:803D7908       MR::setEffectDirectionalSpeed((LayoutActor *,char const *,float))
 0002:803D7978       MR::pauseOffEffectAll((LayoutActor *))
 0002:803D79F4       MR::isRegisteredEffect((LayoutActor const *,char const *))
 0002:803D7A38       MR::copyLayoutDrawInfoWithAspect((nw4r::lyt::DrawInfo *,LayoutActor const *,bool))
 0002:803D7B18       MR::calcAnimLayoutWithDrawInfo((LayoutActor const *,nw4r::lyt::DrawInfo const &))
 0002:803D7B68       MR::drawLayoutWithDrawInfoWithoutProjectionSetup((LayoutActor const *,nw4r::lyt::DrawInfo const &))
 0002:803D7C18       MR::isFirstStep((LayoutActor const *))
 0002:803D7C20       MR::isLessStep((LayoutActor const *,long))
 0002:803D7D5C       MR::calcNerveRate((NerveExecutor const *,long))
 0002:803D7DDC       MR::calcNerveRate((LiveActor const *,long,long))
 0002:803D7E6C       MR::calcNerveEaseOutRate((NerveExecutor const *,long))
 0002:803D8014       MR::setNerveAtAnimStopped((LayoutActor *,Nerve const *,ulong))
 0002:803D8074       MR::setNerveAtPaneAnimStopped((LayoutActor *,char const *,Nerve const *,ulong))
 0002:803D80D8       MR::killAtAnimStopped((LayoutActor *,ulong))
 0002:803D8144       MR::isHiddenLayout((LayoutActor const *))
 0002:803D814C       MR::showLayout((LayoutActor *))
 0002:803D815C       MR::hideLayout((LayoutActor *))
 0002:803D816C       MR::isStopAnimFrame((LayoutActor const *))
 0002:803D8174       MR::stopAnimFrame((LayoutActor *))
 0002:803D8180       MR::releaseAnimFrame((LayoutActor *))
 0002:803D818C       MR::onCalcAnim((LayoutActor *))
 0002:803D8198       MR::offCalcAnim((LayoutActor *))
 0002:803D81A4       MR::isExecuteCalcAnimLayout((LayoutActor const *))
 0002:803D81DC       MR::isExecuteDrawLayout((LayoutActor const *))
 0002:803D8214       MR::createSimpleLayout((char const *,char const *,ulong))
 0002:803D8284       MR::createSimpleLayoutTalkParts((char const *,char const *,ulong))
 0002:803D8350       MR::calcTextBoxRectRecursive((JGeometry::TBox2<f> *,LayoutActor const *,char const *))
 0002:803D8420       MR::getTextLineNumMaxRecursive((LayoutActor const *,char const *))
 0002:803D8468       MR::invalidateParentAnim((LayoutActor *))
 0002:803D8490       @unnamed@LayoutUtil_cpp@::getCometColorAnimFrameFromId((long))
 0002:803D84E4       MR::setCometPaneAnimFromId((LayoutActor *,char const *,int,ulong))
 0002:803D8558       TextBoxRecursiveSetFont::execute(const(nw4r::lyt::TextBox *))
 0002:803D86A0       TextBoxRecursiveSetArgNumber::execute(const(nw4r::lyt::TextBox *))
 0002:803D86C8       TextBoxRecursiveSetMessage::execute(const(nw4r::lyt::TextBox *))
 0002:803D86DC       nw4r::ut::LinkList<Q34nw4r3lyt4Pane,4>::ConstIterator::__rf(const(void))
 0002:803D872C       JASSimpleWaveBank::TWaveHandle::getWaveInfo(const(void))
 0002:803D8788       MR::createAndSetupIconAButton((LayoutActor *,bool,bool))
 0002:803D8804       MR::setCometAnimFromId((LayoutActor *,int,ulong))
 0002:803D885C       nw4r::lyt::TexMap::TexMap((_GXTexObj const &))
 0002:803D88A4       J2DPicture::draw((float,float,uchar,bool,bool,bool))
 0002:803D893C       LayoutManager::getPane(const(char const *))
 0002:803D8970       JGeometry::TBox2<f>::set((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:803D8994       MR::loadLight((long))
 0002:803D8A70       MR::initActorLightInfoLightType((LiveActor *,long))
 0002:803D8A7C       MR::initActorLightInfoDrawBuffer((LiveActor *,DrawBuffer *))
 0002:803D8A88       MR::requestPointLight((LiveActor const *,JGeometry::TVec3<f>,Color8,float,long))
 0002:803D8B14       @unnamed@LiveActorUtil_cpp@::createCollisionParts((ResourceHolder *,char const *,HitSensor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,MR::CollisionScaleType,long))
 0002:803D8C74       MR::isExistIndirectTexture((LiveActor const *))
 0002:803D8CBC       MR::initMirrorReflection((LiveActor *))
 0002:803D8D20       MR::tryCreateCollisionMoveLimit((LiveActor *,HitSensor *))
 0002:803D8DDC       MR::tryCreateCollisionWaterSurface((LiveActor *,HitSensor *))
 0002:803D8E98       MR::tryCreateCollisionSunshade((LiveActor *,HitSensor *))
 0002:803D8F54       @unnamed@LiveActorUtil_cpp@::createSubModelObjName((LiveActor const *,char const *))
 0002:803D8FF8       @unnamed@LiveActorUtil_cpp@::createSubModel((LiveActor *,char const *,float *[4],int))
 0002:803D90DC       MR::createBloomModel((LiveActor *,float *[4]))
 0002:803D9128       MR::createWaterModel((LiveActor *,float *[4]))
 0002:803D913C       MR::createIndirectPlanetModel((LiveActor *,float *[4]))
 0002:803D9150       MR::tryCreateMirrorActor((LiveActor *,char const *))
 0002:803D91EC       @unnamed@LiveActorUtil_cpp@::changeBckForEffectKeeper((LiveActor const *))
 0002:803D9200       @unnamed@LiveActorUtil_cpp@::calcCollisionMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,LiveActor const *))
 0002:803D92C4       MR::copyTransRotateScale((LiveActor const *,LiveActor *))
 0002:803D931C       MR::isOnGround((LiveActor const *))
 0002:803D93AC       MR::isOnGroundCos((LiveActor const *,float))
 0002:803D9424       MR::isBindedGround((LiveActor const *))
 0002:803D9454       MR::isBindedRoof((LiveActor const *,HitSensor *))
 0002:803D94B0       MR::isBindedWall((LiveActor const *))
 0002:803D953C       MR::isBindedWallOfMap((LiveActor const *))
 0002:803D9598       MR::isBindedWallOfMoveLimit((LiveActor const *))
 0002:803D95F4       MR::isBindedWallOrSlopeGround((LiveActor const *,float,JGeometry::TVec3<f> *))
 0002:803D96D0       MR::isBindedRoof((LiveActor const *))
 0002:803D97BC       MR::isBinded((LiveActor const *,HitSensor *))
 0002:803D9830       MR::isPressedRoofAndGround((LiveActor const *))
 0002:803D9910       MR::isPressedMovingWall((LiveActor const *))
 0002:803D9A7C       MR::initDefaultPos((LiveActor *,JMapInfoIter const &))
 0002:803D9B64       MR::initDefaultPosNoRepeat((LiveActor *,JMapInfoIter const &))
 0002:803D9BBC       MR::isValidCalcViewAndEntry((LiveActor const *))
 0002:803D9BE4       MR::isValidCalcAnim((LiveActor const *))
 0002:803D9C40       MR::isValidDraw((LiveActor const *))
 0002:803D9C74       MR::calcAnimDirect((LiveActor *))
 0002:803D9CD0       MR::setClippingTypeSphere((LiveActor *,float))
 0002:803D9D1C       MR::setClippingTypeSphere((LiveActor *,float,JGeometry::TVec3<f> const *))
 0002:803D9D74       MR::setClippingTypeSphereContainsModelBoundingBox((LiveActor *,float))
 0002:803D9DE4       MR::setClippingFar50m((LiveActor *))
 0002:803D9E20       MR::setClippingFar100m((LiveActor *))
 0002:803D9E5C       MR::setClippingFar200m((LiveActor *))
 0002:803D9E98       MR::setClippingFar300m((LiveActor *))
 0002:803D9ED4       MR::setClippingFarMax((LiveActor *))
 0002:803D9F10       MR::setClippingFar((LiveActor *,float))
 0002:803DA060       MR::setGroupClipping((LiveActor *,JMapInfoIter const &,int))
 0002:803DA0AC       MR::validateClipping((LiveActor *))
 0002:803DA0F0       MR::invalidateClipping((LiveActor *))
 0002:803DA154       MR::changeShowModelFlagSyncNearClipping((LiveActor *,float))
 0002:803DA1A8       MR::isClipped((LiveActor const *))
 0002:803DA1B8       MR::setBaseTRMtx((LiveActor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:803DA230       MR::setBaseTRMtx((LiveActor *,JGeometry::TQuat4<f> const &))
 0002:803DA314       MR::setBaseScale((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803DA358       MR::getModelResourceHolder((LiveActor const *))
 0002:803DA388       MR::getTexFromModel((char const *,LiveActor const *))
 0002:803DA3EC       MR::getTexFromArc((char const *,LiveActor const *))
 0002:803DA428       MR::getModelResName((LiveActor const *))
 0002:803DA454       MR::isExistAnim((LiveActor const *,char const *))
 0002:803DA518       MR::isExistBck((LiveActor const *,char const *))
 0002:803DA570       MR::isExistBtk((LiveActor const *,char const *))
 0002:803DA5C8       MR::isExistBrk((LiveActor const *,char const *))
 0002:803DA620       MR::isExistBtp((LiveActor const *,char const *))
 0002:803DA678       MR::isExistBpk((LiveActor const *,char const *))
 0002:803DA6D0       MR::isExistBva((LiveActor const *,char const *))
 0002:803DA728       MR::isExistTexture((LiveActor const *,char const *))
 0002:803DA774       MR::initDLMakerProjmapEffectMtxSetter((LiveActor *))
 0002:803DA780       MR::initDLMakerMatColor0((LiveActor *,char const *,J3DGXColor const *))
 0002:803DA794       MR::initDLMakerChangeTex((LiveActor *,char const *))
 0002:803DA868       MR::startAction((LiveActor const *,char const *))
 0002:803DA8C4       MR::isActionEnd((LiveActor const *))
 0002:803DA8CC       MR::isActionStart((LiveActor const *,char const *))
 0002:803DA8E0       MR::isBckPlaying((LiveActor const *,char const *))
 0002:803DA8EC       MR::tryStartAction((LiveActor const *,char const *))
 0002:803DA948       MR::tryStartAllAnim((LiveActor const *,char const *))
 0002:803DAA18       MR::startBck((LiveActor const *,char const *,char const *))
 0002:803DAA74       MR::startBckWithInterpole((LiveActor const *,char const *,long))
 0002:803DAAD0       MR::startBckNoInterpole((LiveActor const *,char const *))
 0002:803DAB30       MR::startBckAtFirstStep((LiveActor const *,char const *))
 0002:803DABA4       MR::tryStartBck((LiveActor const *,char const *,char const *))
 0002:803DAC2C       MR::tryStartBckAndBtp((LiveActor const *,char const *,char const *))
 0002:803DAC98       MR::setAllAnimFrame((LiveActor const *,char const *,float))
 0002:803DAD90       MR::setAllAnimFrameAndStop((LiveActor const *,char const *,float))
 0002:803DAE88       MR::setAllAnimFrameAtEnd((LiveActor const *,char const *))
 0002:803DB040       MR::isAnyAnimOneTimeAndStopped((LiveActor const *,char const *))
 0002:803DB2B0       MR::isBckStopped((LiveActor const *))
 0002:803DB2F0       MR::isBckLooped((LiveActor const *))
 0002:803DB31C       MR::checkPassBckFrame((LiveActor const *,float))
 0002:803DB360       MR::setBckFrameAtRandom((LiveActor const *))
 0002:803DB3EC       MR::setBtkFrameAtRandom((LiveActor const *))
 0002:803DB644       MR::setBvaFrameAndStop((LiveActor const *,float))
 0002:803DB69C       MR::setBrkFrameEndAndStop((LiveActor const *))
 0002:803DB71C       MR::startBtpAndSetFrameAndStop((LiveActor const *,char const *,float))
 0002:803DB814       MR::startBva((LiveActor const *,char const *))
 0002:803DB81C       MR::startBckIfExist((LiveActor const *,char const *))
 0002:803DB8A4       MR::startBtkIfExist((LiveActor const *,char const *))
 0002:803DB908       MR::startBrkIfExist((LiveActor const *,char const *))
 0002:803DB96C       MR::startBtpIfExist((LiveActor const *,char const *))
 0002:803DB9D0       MR::startBpkIfExist((LiveActor const *,char const *))
 0002:803DBA34       MR::startBvaIfExist((LiveActor const *,char const *))
 0002:803DBAC0       MR::isBckExist((LiveActor const *,char const *))
 0002:803DBB18       MR::isBtkExist((LiveActor const *,char const *))
 0002:803DBB70       MR::isBrkExist((LiveActor const *,char const *))
 0002:803DBBC8       MR::isBpkExist((LiveActor const *,char const *))
 0002:803DBC20       MR::isBtpExist((LiveActor const *,char const *))
 0002:803DBC78       MR::isBvaExist((LiveActor const *,char const *))
 0002:803DBCD0       MR::stopBck((LiveActor const *))
 0002:803DBD1C       MR::setBvaRate((LiveActor const *,float))
 0002:803DBE2C       MR::setBvaFrame((LiveActor const *,float))
 0002:803DBFA0       MR::updateModelDiffDL((LiveActor *))
 0002:803DBFAC       MR::setMirrorReflectionInfoFromMtxYUp((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:803DC044       MR::changeModelDataTexAll((LiveActor *,char const *,ResTIMG const &))
 0002:803DC20C       MR::setJointTransformLocalMtx((LiveActor const *,char const *,float *[4]))
 0002:803DC240       MR::getBvaFrame((LiveActor const *))
 0002:803DC2E0       MR::getBckRate((LiveActor const *))
 0002:803DC308       MR::getBrkFrameMax((LiveActor const *))
 0002:803DC3E8       MR::reflectBckCtrlData((LiveActor *,BckCtrlData const &))
 0002:803DC4F0       MR::initLightCtrl((LiveActor *))
 0002:803DC52C       MR::initLightCtrlForPlayer((LiveActor *))
 0002:803DC570       MR::initLightCtrlNoDrawEnemy((LiveActor *))
 0002:803DC5AC       MR::initLightCtrlNoDrawMapObj((LiveActor *))
 0002:803DC5E8       MR::updateLightCtrl((LiveActor *))
 0002:803DC5F4       MR::updateLightCtrlDirect((LiveActor *))
 0002:803DC600       MR::loadActorLight((LiveActor const *))
 0002:803DC608       MR::calcLightPos0((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803DC644       MR::calcLightPos1((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803DC684       MR::getLightAmbientColor((LiveActor const *))
 0002:803DC6AC       MR::getLightCtrl((LiveActor const *))
 0002:803DC6EC       MR::isFirstStep((LiveActor const *))
 0002:803DCA80       MR::calcNerveEaseInOutRate((LiveActor const *,long,long))
 0002:803DD1D8       MR::setNerveAtBckStopped((LiveActor *,Nerve const *))
 0002:803DD228       MR::trySetNerve((LiveActor *,Nerve const *))
 0002:803DD280       MR::getGroundNormal((LiveActor const *))
 0002:803DD290       MR::getWallNormal((LiveActor const *))
 0002:803DD2A0       MR::getRoofNormal((LiveActor const *))
 0002:803DD2B0       MR::getBindedNormal((LiveActor const *))
 0002:803DD350       MR::getBindedHitPos((LiveActor const *))
 0002:803DD3D0       MR::getGroundHitPos((LiveActor const *))
 0002:803DD3DC       MR::getWallHitPos((LiveActor const *))
 0002:803DD3E8       MR::getRoofHitPos((LiveActor const *))
 0002:803DD3F4       MR::calcWallNormalHorizontal((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803DD460       MR::calcHitPowerToGround((LiveActor const *))
 0002:803DD4D0       MR::calcHitPowerToWall((LiveActor const *))
 0002:803DD540       MR::getBindedPlaneNum((LiveActor const *))
 0002:803DD54C       MR::getBindedPlaneNormal((LiveActor const *,int))
 0002:803DD578       MR::getBindedPlaneSensor((LiveActor const *,int))
 0002:803DD5A0       MR::getBindedFixReactionVector((LiveActor const *))
 0002:803DD5AC       MR::setBinderOffsetVec((LiveActor *,JGeometry::TVec3<f> const *,bool))
 0002:803DD5C4       MR::setBinderRadius((LiveActor *,float))
 0002:803DD5D0       MR::getBinderRadius((LiveActor const *))
 0002:803DD5DC       MR::setBinderIgnoreMovingCollision((LiveActor *))
 0002:803DD5F0       MR::validateExCollisionParts((LiveActor *))
 0002:803DD604       MR::invalidateExCollisionParts((LiveActor *))
 0002:803DD618       MR::setBindTriangleFilter((LiveActor *,TriangleFilterBase *))
 0002:803DD620       MR::setBinderExceptActor((LiveActor *,LiveActor const *))
 0002:803DD688       MR::isExistBinder((LiveActor const *))
 0002:803DD698       MR::onEntryDrawBuffer((LiveActor *))
 0002:803DD6F0       MR::offEntryDrawBuffer((LiveActor *))
 0002:803DD748       MR::isDead((LiveActor const *))
 0002:803DD750       MR::isNoEntryDrawBuffer((LiveActor const *))
 0002:803DD758       MR::showModel((LiveActor *))
 0002:803DD780       MR::showModelIfHidden((LiveActor *))
 0002:803DD794       MR::hideModel((LiveActor *))
 0002:803DD7BC       MR::hideModelIfShown((LiveActor *))
 0002:803DD7D0       MR::hideModelAndOnCalcAnim((LiveActor *))
 0002:803DD82C       MR::hideModelAndOnCalcAnimIfShown((LiveActor *))
 0002:803DD86C       MR::stopAnimFrame((LiveActor *))
 0002:803DD878       MR::releaseAnimFrame((LiveActor *))
 0002:803DD884       MR::isNoCalcAnim((LiveActor const *))
 0002:803DD88C       MR::onCalcAnim((LiveActor *))
 0002:803DD898       MR::offCalcAnim((LiveActor *))
 0002:803DD8A4       JKRExpHeap::do_getCurrentGroupId((void))
 0002:803DD8B4       MR::isNoBind((LiveActor const *))
 0002:803DD8BC       MR::onBind((LiveActor *))
 0002:803DD8C8       MR::offBind((LiveActor *))
 0002:803DD8D4       MR::isCalcGravity((LiveActor const *))
 0002:803DD8DC       MR::onCalcGravity((LiveActor *))
 0002:803DD91C       MR::offCalcGravity((LiveActor *))
 0002:803DD928       MR::joinToNameObjGroup((NameObj *,char const *))
 0002:803DD970       MR::joinToGroupArray((LiveActor *,JMapInfoIter const &,char const *,long))
 0002:803DDA00       MR::getGroupFromArray((LiveActor const *))
 0002:803DDA3C       @unnamed@LiveActorUtil_cpp@::isShowModel((LiveActor *))
 0002:803DDA4C       @unnamed@LiveActorUtil_cpp@::callMethodAllGroupMember((LiveActor const *,void (LiveActor::)(void const *,void *)))
 0002:803DDAD8       MR::getPairedGroupMember((LiveActor const *))
 0002:803DDC6C       @unnamed@LiveActorUtil_cpp@::callFuncAllGroupMember((LiveActor const *,void (*)(LiveActor *)))
 0002:803DDD9C       @unnamed@LiveActorUtil_cpp@::countGroupMember<PFPC9LiveActor_b>(long (LiveActor const *,bool (*)(LiveActor const *)))
 0002:803DDF04       MR::isExistInAttributeGroupSearchTurtle((LiveActor const *))
 0002:803DDF44       MR::isExistInAttributeGroupReflectSpinningBox((LiveActor const *))
 0002:803DE004       MR::calcGravity((LiveActor *))
 0002:803DE060       MR::calcGravity((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803DE0C0       MR::calcGravityOrZero((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803DE178       MR::initCollisionParts((LiveActor *,char const *,HitSensor *,float *[4]))
 0002:803DE180       MR::initCollisionPartsFromResourceHolder((LiveActor *,char const *,HitSensor *,ResourceHolder *,float *[4]))
 0002:803DE18C       MR::initCollisionPartsAutoEqualScale((LiveActor *,char const *,HitSensor *,float *[4]))
 0002:803DE1A0       MR::initCollisionPartsAutoEqualScaleOne((LiveActor *,char const *,HitSensor *,float *[4]))
 0002:803DE1C0       MR::createCollisionPartsFromLiveActor((LiveActor *,char const *,HitSensor *,MR::CollisionScaleType))
 0002:803DE228       MR::createCollisionPartsFromLiveActor((LiveActor *,char const *,HitSensor *,float *[4],MR::CollisionScaleType))
 0002:803DE2A0       MR::tryCreateCollisionMoveLimit((LiveActor *,float *[4],HitSensor *))
 0002:803DE364       MR::tryCreateCollisionWaterSurface((LiveActor *,float *[4],HitSensor *))
 0002:803DE428       MR::tryCreateCollisionSunshade((LiveActor *,float *[4],HitSensor *))
 0002:803DE4EC       MR::tryCreateCollisionAllOtherCategory((LiveActor *,HitSensor *,CollisionParts **,CollisionParts **,CollisionParts **))
 0002:803DE574       MR::tryCreateCollisionAllOtherCategory((LiveActor *,float *[4],HitSensor *,CollisionParts **,CollisionParts **,CollisionParts **))
 0002:803DE608       MR::isExistKcl((LiveActor *,char const *))
 0002:803DE660       MR::getCollisionBoundingSphereRange((LiveActor const *))
 0002:803DE66C       MR::isValidCollisionParts((LiveActor *))
 0002:803DE678       MR::validateCollisionParts((LiveActor *))
 0002:803DE6EC       MR::validateCollisionParts((CollisionParts *))
 0002:803DE72C       MR::invalidateCollisionParts((LiveActor *))
 0002:803DE734       MR::invalidateCollisionParts((CollisionParts *))
 0002:803DE774       MR::onUpdateCollisionParts((LiveActor *))
 0002:803DE7BC       MR::onUpdateCollisionPartsOnetimeImmediately((LiveActor *))
 0002:803DE83C       MR::offUpdateCollisionParts((LiveActor *))
 0002:803DE884       MR::resetAllCollisionMtx((LiveActor *))
 0002:803DE8DC       MR::setCollisionMtx((LiveActor *))
 0002:803DE8E4       MR::setCollisionMtx((LiveActor *,CollisionParts *))
 0002:803DE948       MR::getCollisionParts((LiveActor const *))
 0002:803DE950       MR::isExistCollisionParts((LiveActor const *))
 0002:803DE960       MR::getCollisionSensorType((CollisionParts const *))
 0002:803DE96C       MR::createModelObjMapObj((char const *,char const *,float *[4]))
 0002:803DE9E8       MR::createModelObjMapObjStrongLight((char const *,char const *,float *[4]))
 0002:803DEA64       MR::createModelObjNoSilhouettedMapObj((char const *,char const *,float *[4]))
 0002:803DEAE0       MR::createModelObjNoSilhouettedMapObjStrongLight((char const *,char const *,float *[4]))
 0002:803DEB5C       MR::createModelObjIndirectMapObj((char const *,char const *,float *[4]))
 0002:803DEBD8       MR::createModelObjPlayerDecoration((char const *,char const *,float *[4]))
 0002:803DEC54       MR::createModelObjEnemy((char const *,char const *,float *[4]))
 0002:803DECD0       MR::createModelObjNpc((char const *,char const *,float *[4]))
 0002:803DED4C       MR::createModelObjPlanetLow((char const *,char const *,float *[4]))
 0002:803DEDC8       MR::createModelObjBloomModel((char const *,char const *,float *[4]))
 0002:803DEE4C       MR::createPartsModelMapObj((LiveActor *,char const *,char const *,float *[4]))
 0002:803DEEC8       MR::createPartsModelMapObjStrongLight((LiveActor *,char const *,char const *,float *[4]))
 0002:803DEF44       MR::createPartsModelNoSilhouettedMapObj((LiveActor *,char const *,char const *,float *[4]))
 0002:803DEFC0       MR::createPartsModelEnemy((LiveActor *,char const *,char const *,float *[4]))
 0002:803DF03C       MR::createPartsModelNpc((LiveActor *,char const *,char const *,float *[4]))
 0002:803DF0C0       MR::createPartsModelIndirectNpc((LiveActor *,char const *,char const *,float *[4]))
 0002:803DF144       MR::createPartsModelEnemyAndFix((LiveActor *,char const *,char const *,float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,char const *))
 0002:803DF1E0       MR::createPartsModelNpcAndFix((LiveActor *,char const *,char const *,char const *))
 0002:803DF270       MR::createLodCtrlNPC((LiveActor *,JMapInfoIter const &))
 0002:803DF308       MR::createLodCtrlPlanet((LiveActor *,JMapInfoIter const &,float,long))
 0002:803DF3FC       MR::createLodCtrlMapObj((LiveActor *,JMapInfoIter const &,float))
 0002:803DF4EC       MR::createMapFlag((char const *,char const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &,float,float,float,long,long,float))
 0002:803DF5A8       MR::stopSceneAtStep((LiveActor const *,long,long))
 0002:803DF5E4       MR::tryRumblePadAndCameraDistanceMiddle((LiveActor const *,float,float,float))
 0002:803DF7E8       JAUSoundAnimator::setLoopFrame((float,float))
 0002:803DF840       MR::getBodySensor((LiveActor *))
 0002:803DF84C       MR::setBodySensorType((LiveActor *,ulong))
 0002:803DF888       MR::setBodySensorTypeMapObj((LiveActor *))
 0002:803DF8B8       MR::setBodySensorTypePress((LiveActor *))
 0002:803DF8E8       MR::setBodySensorTypeMoveCollision((LiveActor *))
 0002:803DF918       MR::isBodySensorTypeMapObj((LiveActor const *))
 0002:803DF948       MR::receiveMapPartsRotateMsg((LiveActor *,ulong,MapPartsRailMover *,MapPartsRailRotator *))
 0002:803DF98C       MR::tryStartMapPartsRotateAtPoint((LiveActor *,MapPartsRailMover *,MapPartsRailRotator *))
 0002:803DFA1C       MR::tryEndMapPartsRotateAtPoint((LiveActor *,MapPartsRailMover *,MapPartsRailRotator *))
 0002:803DFA64       MR::tryStartMapPartsRotateBetweenPoints((LiveActor *,MapPartsRailMover *,MapPartsRailRotator *))
 0002:803DFB0C       MR::isMapPartsRailMovePassedEndPointRepeat((MapPartsRailMover const *))
 0002:803DFB44       MR::getMapPartsObjectName((char *,ulong,JMapInfoIter const &))
 0002:803DFBC4       MR::getMapPartsObjectNameIfExistShapeID((char *,ulong,JMapInfoIter const &))
 0002:803DFC68       MR::getMapPartsObjectName((char *,ulong,char const *,long))
 0002:803DFC84       MR::initMapPartsClipping((LiveActor *,JMapInfoIter const &,JGeometry::TVec3<f> *,bool))
 0002:803DFDC4       MR::isMapPartsPressOn((JMapInfoIter const &))
 0002:803DFE08       MR::createMapPartsRailGuideDrawer((LiveActor *,char const *,JMapInfoIter const &))
 0002:803DFE58       MR::initMapPartsShadow((LiveActor *,JMapInfoIter const &))
 0002:803DFF54       @unnamed@MapPartsUtil_cpp@::getJMapInfoArgNoInit((JMapInfoIter const &,char const *,long *))
 0002:803E0050       MR::getMapPartsArgSignMotionType((long *,JMapInfoIter const &))
 0002:803E0198       MR::getMapPartsArgSpeedCalcType((long *,LiveActor const *,long))
 0002:803E0220       MR::isMapPartsSignMotionTypeMoveStart((long))
 0002:803E0240       MR::isMapPartsSignMotionTypeMoveWait((long))
 0002:803E0260       MR::hasMapPartsMoveStartSignMotion((long))
 0002:803E02A4       MR::hasMapPartsVanishSignMotion((long))
 0002:803E02D4       MR::isMapPartsShadowTypeNone((long))
 0002:803E02E0       MR::hasMapPartsShadow((long))
 0002:803E02EC       MR::isMoveStartTypeUnconditional((long))
 0002:803E02F8       MR::isMoveStartTypePlayerOnStopEnd((long))
 0002:803E0308       MR::isMapPartsRailInitPosTypeRailPos((long))
 0002:803E0314       MR::isMapPartsRailInitPosTypeRailPoint((long))
 0002:803E0324       MR::isMapPartsRailInitPosTypePoint0((long))
 0002:803E0334       MR::isMapPartsRailSpeedCalcTypeTime((long))
 0002:803E0344       @unnamed@MapUtil_cpp@::getStrikeInfoNumCategory((long))
 0002:803E0380       @unnamed@MapUtil_cpp@::getFirstPolyOnLineCategory((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,TriangleFilterBase const *,CollisionPartsFilterBase const *,long))
 0002:803E04D8       @unnamed@MapUtil_cpp@::getFirstPolyOnLineCategoryExceptActor((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,LiveActor const *,long))
 0002:803E0558       MR::isWallPolygon((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E05C4       MR::isFloorPolygon((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E0620       MR::isFloorPolygonCos((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E06B0       MR::isWallPolygon((float))
 0002:803E06C8       MR::isFloorPolygon((float))
 0002:803E06FC       MR::isCeilingPolygon((float))
 0002:803E0748       MR::isWaterPolygon((Triangle const *))
 0002:803E07CC       MR::isThroughPolygon((Triangle const *))
 0002:803E0874       MR::getFirstPolyOnLineToMap((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E0884       MR::getFirstPolyOnLineToMapAndMoveLimit((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E09D0       MR::getFirstPolyOnLineToWaterSurface((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E09F0       MR::getFirstPolyOnLineToMap((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E0A04       MR::getFirstPolyOnLineToWaterSurface((JGeometry::TVec3<f> *,Triangle *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E0A18       MR::getFirstPolyNormalOnLineToMap((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,HitSensor const *))
 0002:803E0AA4       MR::getNearPolyOnLineSort((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,HitSensor const *))
 0002:803E0CAC       MR::getSortedPoly((JGeometry::TVec3<f> *,Triangle *,ulong))
 0002:803E0D2C       MR::getSortedPoly((ulong))
 0002:803E0D54       MR::isExistMapCollision((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E0DB4       MR::isExistMoveLimitCollision((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E0E14       MR::isExistMapCollisionExceptActor((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,LiveActor const *))
 0002:803E0E84       MR::checkStrikePointToMap((JGeometry::TVec3<f> const &,HitInfo *))
 0002:803E0ED8       MR::checkStrikeBallToMap((JGeometry::TVec3<f> const &,float))
 0002:803E0F38       MR::calcMapGround((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803E0F88       MR::calcMapGroundUpper((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803E10C8       MR::isFallNextMove((LiveActor const *,float,float,float,TriangleFilterBase const *))
 0002:803E10E0       MR::isFallNextMove((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float,TriangleFilterBase const *))
 0002:803E1264       MR::isFallOrDangerNextMove((LiveActor const *,float,float,float))
 0002:803E12A4       MR::isFallOrDangerNextMove((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float))
 0002:803E12D4       MR::calcVelocityMovingPoint((Triangle const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803E138C       MR::createAreaPolygonListArray((Triangle *,ulong,JGeometry::TVec3<f> *,ulong))
 0002:803E1444       MR::trySetMoveLimitCollision((LiveActor *))
 0002:803E1590       MR::isBindedGroundBrake((LiveActor const *))
 0002:803E16D0       MR::isBindedGroundWater((LiveActor const *))
 0002:803E183C       MR::isBindedDamageElectric((LiveActor const *))
 0002:803E1A04       MR::getSoundCodeIndex((JMapInfoIter const &))
 0002:803E1B54       MR::getWallCodeIndex((Triangle const *))
 0002:803E1BC4       MR::isGroundCodeWaterIter((JMapInfoIter const &))
 0002:803E1C10       MR::isCameraCodeThrough((Triangle const *))
 0002:803E1C54       MR::isWallCodeGhostThrough((Triangle const *))
 0002:803E1C98       MR::isGroundCodeIce((Triangle const *))
 0002:803E1CDC       MR::isGroundCodeDamageFire((Triangle const *))
 0002:803E1D20       MR::isGroundCodeFireDance((Triangle const *))
 0002:803E1D64       MR::isGroundCodeSand((Triangle const *))
 0002:803E1DA8       MR::isGroundCodeDamageElectric((Triangle const *))
 0002:803E1DEC       MR::isGroundCodeWaterBottomH((Triangle const *))
 0002:803E1E30       MR::isGroundCodeWaterBottomM((Triangle const *))
 0002:803E1E74       MR::isGroundCodeSinkDeath((Triangle const *))
 0002:803E1EB8       MR::isGroundCodeRailMove((Triangle const *))
 0002:803E1EFC       MR::isGroundCodeAreaMove((Triangle const *))
 0002:803E1F40       MR::isGroundCodeNoStampSand((Triangle const *))
 0002:803E1F84       MR::isGroundCodeSinkDeathMud((Triangle const *))
 0002:803E1FC8       MR::isGroundCodeBrake((Triangle const *))
 0002:803E2050       MR::isWallCodeRebound((Triangle const *))
 0002:803E2094       MR::isWallCodeNoAction((Triangle const *))
 0002:803E211C       MR::isCodeSand((Triangle const *))
 0002:803E21E4       MR::getCameraPolyFast((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,HitSensor const *))
 0002:803E231C       MR::getFirstPolyOnLineBFast((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,Triangle *))
 0002:803E2548       Collision::checkStrikePointToMap((JGeometry::TVec3<f> const &,HitInfo *))
 0002:803E2594       Collision::checkStrikeBallToMap((JGeometry::TVec3<f> const &,float,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E25FC       Collision::checkStrikeBallToMapWithMovingReaction((JGeometry::TVec3<f> const &,float,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E2664       Collision::checkStrikeBallToMapWithThickness((JGeometry::TVec3<f> const &,float,float,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E26D8       Collision::checkStrikeLineToMap((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E273C       Collision::checkStrikeLineToSunshade((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,CollisionPartsFilterBase const *,TriangleFilterBase const *))
 0002:803E27A0       Collision::getStrikeInfoMap((ulong))
 0002:803E27E4       __sinit__MapUtil_cpp
 0002:803E2804       Binder::setExCollisionParts((CollisionParts *))
 0002:803E2830       MR::initAcosTable((void))
 0002:803E2928       MR::acosEx((float))
 0002:803E29C0       MR::getRandom((void))
 0002:803E2A08       MR::getRandom((float,float))
 0002:803E2A5C       MR::getRandom((long,long))
 0002:803E2AF0       MR::getRandomDegree((void))
 0002:803E2B20       MR::calcRandomVec((JGeometry::TVec3<f> *,float,float))
 0002:803E2BD0       MR::isHalfProbability((void))
 0002:803E2C34       MR::getRandomVector((JGeometry::TVec3<f> *,float))
 0002:803E2CDC       MR::addRandomVector((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E2DB0       MR::turnRandomVector((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E2E54       MR::getInterpolateValue((float,float,float))
 0002:803E2E64       MR::getLinerValue((float,float,float,float))
 0002:803E2E78       MR::getLinerValueFromMinMax((float,float,float,float,float))
 0002:803E2F00       MR::getEaseInValue((float,float,float,float))
 0002:803E2F70       MR::getEaseOutValue((float,float,float,float))
 0002:803E2FD8       MR::getEaseInOutValue((float,float,float,float))
 0002:803E3048       MR::getScaleWithReactionValueZeroToOne((float,float,float))
 0002:803E30E4       MR::getConvergeVibrationValue((float,float,float,float,float))
 0002:803E3194       MR::getReduceVibrationValue((float,float,float,float,float))
 0002:803E3264       MR::makeAxisUpSide((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E32C8       MR::makeAxisUpFront((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E33F4       MR::makeAxisVerticalZX((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803E34B0       MR::makeAxisCrossPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803E3508       MR::makeAxisAndCosignVecToVec((JGeometry::TVec3<f> *,float *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E3620       MR::calcPerpendicFootToLine((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E36D8       MR::calcPerpendicFootToLineInside((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E37A0       MR::checkHitSegmentSphere((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> *))
 0002:803E3994       MR::checkHitSemilinePlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E3A68       MR::calcReboundVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E3B1C       MR::calcReboundVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,float))
 0002:803E3C1C       MR::calcParabolicFunctionParam((float *,float *,float,float))
 0002:803E3D68       MR::makeQuatRotateDegree((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &))
 0002:803E3D88       MR::makeQuatUpNoSupport((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &))
 0002:803E3E78       MR::scaleMtxToLocalMtx((float *[4],float *[4],JGeometry::TVec3<f> const &))
 0002:803E3E8C       MR::blendQuatUpFront((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:803E4048       MR::blendQuatFrontUp((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:803E41F0       MR::rotateQuatMoment((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &))
 0002:803E4250       MR::rotateQuatRollBall((JGeometry::TQuat4<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E42B8       MR::turnQuat((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E440C       MR::turnQuatZDirRad((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E4474       MR::turnQuatYDirRate((JGeometry::TQuat4<f> *,JGeometry::TQuat4<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E462C       MR::sign((float))
 0002:803E4658       MR::clampVecAngleDeg((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E4750       MR::clampLength((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E47F4       MR::convergeRadian((float,float,float))
 0002:803E4898       MR::isInRange((float,float,float))
 0002:803E48F0       MR::calcRotateY((float,float))
 0002:803E495C       MR::calcRotateZ((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E49D4       MR::rotateVecDegree((float *,float *,float))
 0002:803E4A84       MR::rotateVecDegree((JGeometry::TVec2<f> *,float))
 0002:803E4A8C       MR::rotateVecDegree((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E4B00       MR::rotateVecDegree((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E4B78       MR::rotateVecRadian((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float))
 0002:803E4BE0       MR::rotateVecRadian((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E4C4C       MR::calcLocalVec((JGeometry::TVec3<f> *,float *[4]))
 0002:803E4CCC       MR::normalize((JGeometry::TVec2<f> *))
 0002:803E4D2C       MR::normalize((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:803E4DFC       MR::normalize((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> *))
 0002:803E4E14       MR::normalize((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803E4E58       MR::normalizeOrZero((JGeometry::TVec2<f> *))
 0002:803E4EB0       MR::normalizeOrZero((JGeometry::TVec3<f> *))
 0002:803E4F08       MR::normalizeOrZero((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803E4F48       MR::separateScalarAndDirection((float *,JGeometry::TVec2<f> *,JGeometry::TVec2<f> const &))
 0002:803E4FC4       MR::separateScalarAndDirection((float *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803E5040       MR::normalize((float,float,float))
 0002:803E50F0       MR::normalizeAbs((float,float,float))
 0002:803E5130       MR::turnVecToVecCos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const &,float))
 0002:803E5334       MR::turnVecToVecCosOnPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E5418       MR::turnVecToVecRadian((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const &))
 0002:803E5670       MR::turnVecToVecDegree((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,JGeometry::TVec3<f> const &))
 0002:803E56A0       MR::calcMomentRollBall((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E573C       MR::calcReflectionVector((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,float))
 0002:803E5840       MR::isSameDirection((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E58C0       MR::isOppositeDirection((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E5934       MR::isNearZero((float,float))
 0002:803E595C       MR::isNearZero((JGeometry::TVec3<f> const &,float))
 0002:803E59D4       MR::isNearZero((JGeometry::TVec2<f> const &,float))
 0002:803E5A28       MR::diffAngleAbs((float,float))
 0002:803E5A60       MR::normalizeAngleAbs((float))
 0002:803E5A94       MR::isAngleBetween((float,float,float))
 0002:803E5B50       MR::blendAngle((float,float,float))
 0002:803E5C0C       MR::lerp((uchar,uchar,float))
 0002:803E5C84       MR::lerp((_GXColor,_GXColor,float))
 0002:803E5D2C       MR::sortSmall((long,float *,long *))
 0002:803E5DD0       MR::sortSmall((long,ulong *,long *))
 0002:803E5E74       PSVECKillElement(Vec const *,Vec const *,Vec const *)
 0002:803E5EA8       MR::vecKillElement((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803E5F18       MR::vecScaleAdd((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,float))
 0002:803E5F3C       MR::PSvecBlend((JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> *,float,float))
 0002:803E5F68       MR::vecBlend((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803E5F78       MR::vecBlendNormal((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803E6064       MR::vecBlendSphere((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803E6290       MR::vecRotAxis((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803E63B4       MR::blendColor((_GXColor *,_GXColor const &,_GXColor const &,float))
 0002:803E64FC       MR::blendVec((Vec *,Vec const &,Vec const &,float))
 0002:803E6580       MR::turnVecToPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E6630       MR::getMinAbsElementIndex((JGeometry::TVec3<f> const &))
 0002:803E6678       MR::getMaxAbsElement((JGeometry::TVec3<f> const &))
 0002:803E66E0       MR::getMaxElementIndex((JGeometry::TVec3<f> const &))
 0002:803E6724       MR::getMaxAbsElementIndex((JGeometry::TVec3<f> const &))
 0002:803E6790       MR::diffAngleAbs((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E6840       MR::diffAngleAbs((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:803E6900       MR::diffAngleSigned((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E6988       MR::diffAngleAbsHorizontal((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E69E4       MR::diffAngleSignedHorizontal((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E6AB4       MR::isNearAngleRadian((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803E6B80       MR::rotateMtxLocalZDegree((float *[4],float))
 0002:803E6B8C       MR::isNearAngleRadianHV((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:803E6CEC       MR::isNearAngleDegreeHV((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:803E6CFC       MR::createBoundingBox((JGeometry::TVec3<f> const *,ulong,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:803E6DE8       MR::isNormalize((JGeometry::TVec3<f> const &,float))
 0002:803E6E38       JMapLinkInfo::invalidate((void))
 0002:803E6E4C       MR::isNan((JGeometry::TVec3<f> const &))
 0002:803E6EB0       MR::getFootPoint((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803E6FCC       MR::floatToFixed16((JGeometry::TVec3<s> *,JGeometry::TVec3<f> const &,uchar))
 0002:803E7048       MR::fixed16ToFloat((JGeometry::TVec3<f> *,JGeometry::TVec3<s> const &,uchar))
 0002:803E70DC       MR::getRotatedAxisY((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803E71E8       MR::getRotatedAxisZ((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803E7260       JMASqrt(float)
 0002:803E7298       MR::CurrentHeapRestorer::CurrentHeapRestorer((JKRHeap *))
 0002:803E72EC       MR::CurrentHeapRestorer::~CurrentHeapRestorer((void))
 0002:803E7360       MR::getHomeButtonLayoutAllocator((void))
 0002:803E7378       MR::getCurrentHeap((void))
 0002:803E7380       MR::getAproposHeapForSceneArchive((float))
 0002:803E742C       MR::getStationedHeapNapa((void))
 0002:803E7444       MR::getSceneHeapNapa((void))
 0002:803E7450       MR::getSceneHeapGDDR3((void))
 0002:803E745C       MR::getHeapNapa((JKRHeap const *))
 0002:803E7468       MR::getHeapGDDR3((JKRHeap const *))
 0002:803E7474       MR::becomeCurrentHeap((JKRHeap *))
 0002:803E74C4       MR::isEqualCurrentHeap((JKRHeap *))
 0002:803E74D8       JKRExpHeap::adjustSize((void))
 0002:803E74DC       MR::copyMemory((void *,void const *,ulong))
 0002:803E75E8       MR::fillMemory((void *,uchar,ulong))
 0002:803E75FC       MR::zeroMemory((void *,ulong))
 0002:803E7624       JASCalc::bzerofast((void *,ulong))
 0002:803E76F0       MR::calcCheckSum((void const *,ulong))
 0002:803E7730       MR::allocFromWPadHeap((ulong))
 0002:803E7744       MR::freeFromWPadHeap((void *))
 0002:803E7788       MR::getSystemMessageDirect((char const *))
 0002:803E77C8       MR::getGameMessageDirect((char const *))
 0002:803E7808       MR::getLayoutMessageDirect((char const *))
 0002:803E7848       MR::getCurrentGalaxyNameOnCurrentLanguage((void))
 0002:803E789C       MR::getCurrentScenarioNameOnCurrentLanguage((void))
 0002:803E7918       MR::getRaceNameOnCurrentLanguage((int))
 0002:803E795C       MR::isExistGameMessage((char const *))
 0002:803E79BC       MR::getMessageLine((wchar_t *,ulong,wchar_t const *,ulong))
 0002:803E7B04       MR::countMessageLine((wchar_t const *))
 0002:803E7CB4       MR::countMessageFigure((long))
 0002:803E7CE0       MR::getNextMessagePage((wchar_t const *))
 0002:803E7D78       MR::getGalaxyNameShortOnCurrentLanguage((char const *))
 0002:803E7E18       MR::getScenarioNameOnCurrentLanguage((char const *,long))
 0002:803E7E6C       MR::getLayoutMessageID((char *,char const *,char const *))
 0002:803E7E9C       MessageEditorMessageTag::isGroupTagId(const(int,int))
 0002:803E7EC4       MR::newXanimePlayer((ResourceHolder const *,char const *,ResourceHolder const *,J3DMdlFlag,XanimeResourceTable *))
 0002:803E7F1C       MR::newXanimeResourceTable((ResourceHolder *))
 0002:803E7F6C       MR::updateModelAnimPlayer((LiveActor *))
 0002:803E7FA8       MR::invalidateMtxCalc((J3DModelData *))
 0002:803E7FDC       MR::invalidateJointCallback((J3DModelData *))
 0002:803E802C       MR::calcJ3DModel((LiveActor *))
 0002:803E8088       MR::getJ3DModelData((LiveActor const *))
 0002:803E80A4       MR::getBckFrameMax((LiveActor const *,char const *))
 0002:803E80E0       MR::getBrkFrameMax((LiveActor const *,char const *))
 0002:803E811C       MR::getBvaFrameMax((LiveActor const *,char const *))
 0002:803E8158       MR::isBckPlaying((XanimePlayer *,char const *))
 0002:803E81E4       MR::findBckNameStringInResource((char const **,ResourceHolder const *,char const *))
 0002:803E8274       MR::getMaterialNo((J3DModelData *,char const *))
 0002:803E829C       MR::getMaterialNo((J3DModel *,char const *))
 0002:803E82C8       MR::getMaterial((J3DModelData *,char const *))
 0002:803E8304       MR::getMaterial((J3DModelData *,int))
 0002:803E8314       MR::getMaterial((J3DModel *,int))
 0002:803E8328       MR::getMaterial((LiveActor const *,int))
 0002:803E8360       MR::getMaterialNum((J3DModel *))
 0002:803E836C       MR::getMaterialName((J3DModelData const *,int))
 0002:803E8370       MR::setPlayerFrontVec((JGeometry::TVec3<f> const &,long))
 0002:803E8384       MR::isEnvelope((J3DMaterial *))
 0002:803E8390       MR::hideMaterial((J3DModel *,char const *))
 0002:803E840C       MR::showMaterial((J3DModel *,char const *))
 0002:803E8488       MR::calcFogStartEnd((JGeometry::TVec3<f>,float,float *,float *))
 0002:803E854C       MR::isUseTex((J3DMaterial *,ushort))
 0002:803E8610       MR::isNormalTexMtx((J3DMaterial *))
 0002:803E869C       MR::isUseTexMtx((J3DMaterial *,ulong))
 0002:803E87A0       MR::isExistEffectTexMtx((J3DModelData *))
 0002:803E8834       MR::isUseTexMtxEnvMap((J3DMaterial *))
 0002:803E88D8       MR::isUseTexMtxProjMap((J3DMaterial *))
 0002:803E8968       MR::initEnvelopeAndEnvMapOrProjMapModelData((J3DModelData *))
 0002:803E8AF8       MR::getResTIMG((J3DModelData const *,int))
 0002:803E8B14       MR::getTextureName((LiveActor const *,int))
 0002:803E8B4C       MR::findPosNrmMtxIndexFromModel((J3DModelData *,ushort))
 0002:803E8BD8       MR::findPosNrmMtxIndexFromShape((J3DShape *,ushort))
 0002:803E8C98       MR::copyJointAnimation((J3DModel *,J3DModel *))
 0002:803E8D54       MR::syncMaterialAnimation((LiveActor *,LiveActor const *))
 0002:803E8DA0       MR::syncJointAnimation((LiveActor *,LiveActor const *))
 0002:803E8DE8       MR::syncMaterialAnimation((J3DModel *,J3DModel *))
 0002:803E8EBC       @unnamed@ModelUtil_cpp@::isUseLightChanNo((J3DMaterial *,int,int))
 0002:803E8F28       MR::getLightNum((J3DMaterial *,long *,long *,long *,long *))
 0002:803E9018       MR::getLightNum((J3DMaterial *))
 0002:803E909C       MR::getLightNumMax((J3DModelData *))
 0002:803E9108       MR::downFracVtx((J3DModelData *))
 0002:803E91D0       MR::calcModelBoundingBox((JGeometry::TBox3<f> *,LiveActor const *))
 0002:803E9468       MR::calcModelBoundingRadius((float *,LiveActor const *))
 0002:803E9544       MR::isExistCollisionResource((LiveActor const *,char const *))
 0002:803E95E8       MR::isExistSubModel((char const *,char const *))
 0002:803E964C       MR::newJ3DModel((ResourceHolder const *,char const *,J3DMdlFlag))
 0002:803E9A8C       MR::getJ3DModelData((char const *))
 0002:803E9AE4       MR::isUseFur((J3DModelData const *))
 0002:803E9B88       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::setScale((float,float,float))
 0002:803E9BB4       JGeometry::TRotation3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>>::getXYZDir(const(JGeometry::TVec3<f> &,JGeometry::TVec3<f> &,JGeometry::TVec3<f> &))
 0002:803E9C28       MR::makeMtxRotate((float *[4],short,short,short))
 0002:803E9CE4       MR::makeMtxRotate((float *[4],float,float,float))
 0002:803E9D54       MR::makeMtxRotateY((float *[4],float))
 0002:803E9DC8       MR::makeMtxTR((float *[4],float,float,float,float,float,float))
 0002:803E9F58       MR::makeMtxTR((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803E9F74       MR::makeMtxTransRotateY((float *[4],float,float,float,float))
 0002:803E9FCC       MR::rotateMtxLocalX((float *[4],float))
 0002:803EA0A0       MR::rotateMtxLocalY((float *[4],float))
 0002:803EA174       MR::rotateMtxLocalZ((float *[4],float))
 0002:803EA26C       MR::preScaleMtx((float *[4],float))
 0002:803EA288       MR::preScaleMtx((float *[4],float,float,float))
 0002:803EA2F8       MR::scaleMtxToLocalMtx((float *[4],float *[4],float *[4],JGeometry::TVec3<f> const &))
 0002:803EA3F8       MR::scaleMtxToDir((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EA4E8       MR::makeMtxTRS((float *[4],float,float,float,float,float,float,float,float,float))
 0002:803EA6D8       MR::makeMtxTRS((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EA76C       MR::flattenMtx((float *[4],float *[4],JGeometry::TVec3<f> const &))
 0002:803EA83C       MR::rotateMtxMoment((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:803EA848       MR::blendMtxRotateSlerp((float *[4],float *[4],float,float *[4]))
 0002:803EA938       MR::blendMtx((float *[4],float *[4],float,float *[4]))
 0002:803EAA24       MR::makeMtxWithoutScale((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &))
 0002:803EAAB0       MR::makeRTFromMtxPtr((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,float *[4],bool))
 0002:803EAB38       MR::makeMtxSideUp((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EABB4       MR::makeMtxSideUpPos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAC40       MR::makeMtxSideFront((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EACBC       MR::makeMtxUpSide((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAD38       MR::makeMtxUpSidePos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EADC4       MR::makeMtxUpFront((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAE40       MR::makeMtxUpFrontPos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAECC       MR::makeMtxFrontSidePos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAF58       MR::makeMtxFrontUp((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EAFD4       MR::makeMtxFrontUpPos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EB060       MR::makeMtxUpNoSupport((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:803EB118       MR::makeMtxUpNoSupportPos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EB1A0       MR::makeMtxFrontNoSupport((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:803EB258       MR::makeMtxFrontNoSupportPos((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803EB2E0       MR::orthogonalize((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:803EB4FC       MR::turnMtxToYDirRate((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,float))
 0002:803EB564       MR::turnMtxToYDirDegree((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,float))
 0002:803EB6B4       MR::turnMtxToLocalDirDegree((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803EB7A4       MR::makeMtxMoment((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &))
 0002:803EB818       MR::rotateMtxMoment((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &))
 0002:803EB924       MR::addTransMtx((float *[4],JGeometry::TVec3<f> const &))
 0002:803EB958       MR::addTransMtxLocal((float *[4],JGeometry::TVec3<f> const &))
 0002:803EB9AC       MR::addTransMtxLocalX((float *[4],float))
 0002:803EB9EC       MR::addTransMtxLocalY((float *[4],float))
 0002:803EBA2C       MR::addTransMtxLocalZ((float *[4],float))
 0002:803EBA6C       MR::extractMtxXDir((float *[4],JGeometry::TVec3<f> *))
 0002:803EBA88       MR::extractMtxYDir((float *[4],JGeometry::TVec3<f> *))
 0002:803EBAA4       MR::extractMtxZDir((float *[4],JGeometry::TVec3<f> *))
 0002:803EBAC0       MR::extractMtxXYZDir((float *[4],JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:803EBB14       MR::extractMtxTrans((float *[4],JGeometry::TVec3<f> *))
 0002:803EBB30       MR::isSameMtx((float *[4],float *[4]))
 0002:803EBB64       MR::isSameMtxRot((float *[4],float *[4]))
 0002:803EBBAC       MR::isRotAxisY((float *[4],float *[4]))
 0002:803EBC3C       MR::calcMtxRotAxis((JGeometry::TVec3<f> *,float *[4],float *[4]))
 0002:803EBCF0       MR::tmpMtxTrans((JGeometry::TVec3<f> const &))
 0002:803EBD34       MR::tmpMtxScale((float,float,float))
 0002:803EBD4C       MR::tmpMtxRotXDeg((float))
 0002:803EBDA8       MR::tmpMtxRotYDeg((float))
 0002:803EBE04       MR::tmpMtxRotZDeg((float))
 0002:803EBF74       MR::orderRotateMtx((short,JGeometry::TVec3<f> const &,float *[4]))
 0002:803EC074       MR::rotAxisVecRad((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *,float))
 0002:803EC0C0       MultiEventCamera::MultiEventCamera((void))
 0002:803EC118       MultiEventCamera::isEnd(const(void))
 0002:803EC124       MultiEventCamera::setUp((char const *,ActorCameraInfo const *,long))
 0002:803EC19C       MultiEventCamera::start((long))
 0002:803EC1E8       MultiEventCamera::start((CameraTargetArg const &,long))
 0002:803EC228       MultiEventCamera::update((void))
 0002:803EC2A0       MultiEventCamera::nextForce((void))
 0002:803EC2E0       MultiEventCamera::endForce((void))
 0002:803EC2F8       MultiEventCamera::endForceSoon((void))
 0002:803EC310       MultiEventCamera::endForceAtLanding((void))
 0002:803EC328       MultiEventCamera::changeTargetPlayer((void))
 0002:803EC36C       MultiEventCamera::isActive(const(long))
 0002:803EC3C8       MultiEventCamera::declareEventCamera((long))
 0002:803EC424       MultiEventCamera::startCamera((void))
 0002:803EC498       MultiEventCamera::endCamera((long))
 0002:803EC53C       MultiEventCamera::changeTarget((CameraTargetArg const &))
 0002:803EC5A8       MR::isStep((NerveExecutor const *,long))
 0002:803EC5E0       MR::isFirstStep((NerveExecutor const *))
 0002:803EC5E8       MR::isLessStep((NerveExecutor const *,long))
 0002:803EC628       MR::isLessEqualStep((NerveExecutor const *,long))
 0002:803EC664       MR::isGreaterStep((NerveExecutor const *,long))
 0002:803EC6A4       MR::isGreaterEqualStep((NerveExecutor const *,long))
 0002:803EC99C       MR::calcNerveEaseInOutValue((NerveExecutor const *,long,float,float))
 0002:803ECA54       MR::calcNerveEaseInOutValue((NerveExecutor const *,long,long,float,float))
 0002:803ECB1C       MR::setNerveAtStep((NerveExecutor *,Nerve const *,long))
 0002:803ECB6C       MR::getNPCItemData((NPCActorItem *,long))
 0002:803ECB70       MR::isNPCItemFileExist((char const *))
 0002:803ECBB4       MR::initDefaultPose((NPCActor *,JMapInfoIter const &))
 0002:803ECBFC       MR::turnPlayerToActor((LiveActor const *,float))
 0002:803ECE44       MR::decidePose((NPCActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,float))
 0002:803ECEF8       MR::setNPCActorPos((NPCActor *,char const *))
 0002:803ECF68       MR::setNPCActorPos((NPCActor *,JGeometry::TVec3<f> const &))
 0002:803ECFA8       MR::setNPCActorPose((NPCActor *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803ED018       MR::followRailPose((NPCActor *,float,float))
 0002:803ED0B8       MR::followRailPoseOnGround((NPCActor *,LiveActor const *,float))
 0002:803ED1B4       NPCActor::setToDefault((void))
 0002:803ED1B8       MR::convertPosOnGround((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803ED238       MR::startNPCTalkCamera((TalkMessageCtrl const *,float *[4],float,long))
 0002:803ED298       MR::startNPCTalkCamera((TalkMessageCtrl const *,float *[4],float *[4],float,long))
 0002:803ED490       MR::initDefaultPosAndQuat((NPCActor *,JMapInfoIter const &))
 0002:803ED4D0       MR::createNPCGoods((LiveActor *,char const *,char const *))
 0002:803ED5A8       MR::createIndirectNPCGoods((LiveActor *,char const *,char const *))
 0002:803ED68C       MR::calcPlayerFaceStareVector((JGeometry::TVec3<f> *,float *[4],float *[4]))
 0002:803ED7FC       MR::calcPlayerFaceStarePos((JGeometry::TVec3<f> *,float *[4],float *[4]))
 0002:803ED864       MR::isActionContinuous((LiveActor const *))
 0002:803ED8C0       MR::isActionLoopedOrStopped((LiveActor const *))
 0002:803ED914       MR::startMoveAction((NPCActor *))
 0002:803ED9A8       MR::tryStartTalkAction((NPCActor *))
 0002:803EDA50       MR::tryStartMoveTalkAction((NPCActor *))
 0002:803EDBA8       MR::tryStartTurnAction((NPCActor *))
 0002:803EDC8C       MR::tryStartMoveTurnAction((NPCActor *))
 0002:803EDCF8       MR::tryStartReaction((NPCActor *))
 0002:803EE158       MR::tryStartReactionAndPushNerve((NPCActor *,Nerve const *))
 0002:803EE1B0       MR::tryStartReactionAndPopNerve((NPCActor *))
 0002:803EE23C       MR::tryChangeTalkActionRandom((NPCActor *,char const *,char const *,char const *))
 0002:803EE300       MR::calcFloatOffset((NPCActor const *,float,float))
 0002:803EE430       MR::calcAndSetFloatBaseMtx((NPCActor *,float))
 0002:803EE504       TakeOutStar::TakeOutStar((NPCActor *,char const *,char const *,Nerve const *))
 0002:803EE5B8       FadeStarter::update((void))
 0002:803EE668       TakeOutStar::exeAnim((void))
 0002:803EE808       TakeOutStar::exeDemo((void))
 0002:803EE8A0       FadeStarter::FadeStarter((NPCActor *,long))
 0002:803EE95C       FadeStarter::exeFade((void))
 0002:803EEADC       DemoStarter::exeFade((void))
 0002:803EEC8C       NrvDemoStarter::DemoStarterNrvWait::execute(const(Spine *))
 0002:803EED04       NrvTakeOutStar::TakeOutStarNrvAnim::execute(const(Spine *))
 0002:803EED0C       MR::isJudgedToClipFrustum((JGeometry::TVec3<f> const &,float))
 0002:803EED50       MR::isJudgedToClipFrustum100m((JGeometry::TVec3<f> const &,float))
 0002:803EED98       MR::isJudgedToClipFrustum300m((JGeometry::TVec3<f> const &,float))
 0002:803EEDE0       MR::isJudgedToNearClip((JGeometry::TVec3<f> const &,float))
 0002:803EEE34       MR::isInWater((JGeometry::TVec3<f> const &))
 0002:803EEE80       MR::isInDarkMatter((JGeometry::TVec3<f> const &))
 0002:803EEEEC       MR::registerNameObjToExecuteHolder((NameObj *,int,int,int,int))
 0002:803EEEF0       MR::connectToScene((NameObj *,int,int,int,int))
 0002:803EEF2C       MR::connectToSceneCollisionMapObj((LiveActor *))
 0002:803EEF40       MR::connectToSceneCollisionMapObjMovementCalcAnim((LiveActor *))
 0002:803EEF54       MR::connectToSceneCollisionMapObjWeakLight((LiveActor *))
 0002:803EEF68       MR::connectToSceneCollisionMapObjStrongLight((LiveActor *))
 0002:803EEF7C       MR::connectToSceneCollisionEnemy((LiveActor *))
 0002:803EEF90       MR::connectToSceneCollisionEnemyMovement((NameObj *))
 0002:803EEFDC       MR::connectToSceneCollisionEnemyStrongLight((LiveActor *))
 0002:803EEFF0       MR::connectToSceneCollisionEnemyNoShadowedMapObjStrongLight((LiveActor *))
 0002:803EF004       MR::connectToSceneNpc((LiveActor *))
 0002:803EF018       MR::connectToSceneNpcMovement((LiveActor *))
 0002:803EF02C       MR::connectToSceneRide((LiveActor *))
 0002:803EF040       MR::connectToSceneEnemy((LiveActor *))
 0002:803EF054       MR::connectToSceneEnemyMovement((NameObj *))
 0002:803EF0A0       MR::connectToSceneMapObj((LiveActor *))
 0002:803EF0B4       MR::connectToSceneMapObjMovement((NameObj *))
 0002:803EF100       MR::connectToSceneMapObjMovementCalcAnim((NameObj *))
 0002:803EF14C       MR::connectToSceneMapObjNoMovement((LiveActor *))
 0002:803EF160       MR::connectToSceneMapObjNoCalcAnim((LiveActor *))
 0002:803EF174       MR::connectToSceneMapObjNoCalcAnimStrongLight((LiveActor *))
 0002:803EF188       MR::connectToSceneMapObjDecoration((LiveActor *))
 0002:803EF19C       MR::connectToSceneMapObjDecorationStrongLight((LiveActor *))
 0002:803EF1B0       MR::connectToSceneMapObjDecorationMovement((NameObj *))
 0002:803EF1FC       MR::connectToSceneMapObjStrongLight((LiveActor *))
 0002:803EF210       MR::connectToSceneMapParts((LiveActor *))
 0002:803EF224       MR::connectToScenePlanet((LiveActor *))
 0002:803EF28C       MR::connectToSceneEnvironment((LiveActor *))
 0002:803EF2A0       MR::connectToSceneEnvironmentStrongLight((LiveActor *))
 0002:803EF2B4       MR::connectToClippedMapParts((LiveActor *))
 0002:803EF2C8       MR::connectToSceneEnemyDecoration((LiveActor *))
 0002:803EF2DC       MR::connectToSceneEnemyDecorationMovement((NameObj *))
 0002:803EF328       MR::connectToSceneEnemyDecorationMovementCalcAnim((NameObj *))
 0002:803EF374       MR::connectToSceneItem((LiveActor *))
 0002:803EF388       MR::connectToSceneItemStrongLight((LiveActor *))
 0002:803EF39C       MR::connectToSceneIndirectEnemy((LiveActor *))
 0002:803EF3B0       MR::connectToSceneIndirectNpc((LiveActor *))
 0002:803EF3C4       MR::connectToSceneIndirectMapObj((LiveActor *))
 0002:803EF3D8       MR::connectToSceneIndirectMapObjStrongLight((LiveActor *))
 0002:803EF3EC       MR::connectToSceneScreenEffectMovement((NameObj *))
 0002:803EF438       MR::connectToSceneAreaObj((NameObj *))
 0002:803EF484       MR::connectToScene3DModelFor2D((LiveActor *))
 0002:803EF498       MR::connectToSceneLayout((NameObj *))
 0002:803EF4E4       MR::connectToSceneLayoutMovementCalcAnim((NameObj *))
 0002:803EF530       MR::connectToSceneLayoutDecoration((NameObj *))
 0002:803EF57C       MR::connectToSceneTalkLayout((NameObj *))
 0002:803EF5C8       MR::connectToSceneTalkLayoutNoMovement((NameObj *))
 0002:803EF614       MR::connectToSceneWipeLayout((NameObj *))
 0002:803EF660       MR::connectToSceneLayoutOnPause((NameObj *))
 0002:803EF6AC       MR::connectToSceneLayoutOnPauseNoMovement((NameObj *))
 0002:803EF6F8       MR::connectToSceneLayoutOnPauseMovementCalcAnim((NameObj *))
 0002:803EF744       MR::connectToSceneLayoutMovement((NameObj *))
 0002:803EF790       MR::connectToSceneMovie((NameObj *))
 0002:803EF7DC       MR::connectToSceneMirrorMapObj((LiveActor *))
 0002:803EF7F0       MR::connectToSceneMirrorMapObjDecoration((LiveActor *))
 0002:803EF804       MR::connectToSceneMirrorMapObjNoMovement((LiveActor *))
 0002:803EF818       MR::connectToSceneCamera((NameObj *))
 0002:803EF864       MR::connectToSceneNoShadowedMapObj((LiveActor *))
 0002:803EF878       MR::connectToSceneNoShadowedMapObjStrongLight((LiveActor *))
 0002:803EF88C       MR::connectToSceneNoSilhouettedMapObj((LiveActor *))
 0002:803EF8A0       MR::connectToSceneNoSilhouettedMapObjStrongLight((LiveActor *))
 0002:803EF8B4       MR::connectToSceneNoSilhouettedMapObjWeakLightNoMovement((LiveActor *))
 0002:803EF8C8       MR::connectToSceneSky((LiveActor *))
 0002:803EF8DC       MR::connectToSceneAir((LiveActor *))
 0002:803EF8F0       MR::connectToSceneSun((LiveActor *))
 0002:803EF904       MR::connectToSceneCrystal((LiveActor *))
 0002:803EF918       MR::connectToSceneNormalMapObj((LiveActor *))
 0002:803EF92C       NameObjFunction::requestMovementOn((NameObj *))
 0002:803EF930       MR::requestMovementOn((LiveActor *))
 0002:803EF974       NameObjFunction::requestMovementOn((NameObj *))
 0002:803EF978       NameObjFunction::requestMovementOff((NameObj *))
 0002:803EF9C4       MR::joinToMovementOnOffGroup((char const *,NameObj *,ulong))
 0002:803EFA18       MR::onMovementOnOffGroup((char const *))
 0002:803EFA54       MR::registerPreDrawFunction((MR::FunctorBase const &,int))
 0002:803EFAA0       MR::createDrawAdaptor((char const *,MR::FunctorBase const &))
 0002:803EFB04       MR::createAdaptorAndConnectToDrawBloomModel((char const *,MR::FunctorBase const &))
 0002:803EFB90       MR::listenNameObjStageSwitchOffB((NameObj const *,StageSwitchCtrl const *,MR::FunctorBase const &))
 0002:803EFBFC       MR::listenNameObjStageSwitchOnOffB((NameObj const *,StageSwitchCtrl const *,MR::FunctorBase const &,MR::FunctorBase const &))
 0002:803EFD60       MR::listenNameObjStageSwitchOnB((NameObj const *,StageSwitchCtrl const *,MR::FunctorBase const &))
 0002:803EFEB4       MR::createAndAddResourceHolder((char const *))
 0002:803EFEC4       MR::loadResourceFromArc((char const *,char const *))
 0002:803EFF0C       MR::isExistResourceInArc((char const *,char const *))
 0002:803EFF54       MR::loadTexFromArc((char const *,char const *))
 0002:803EFF9C       MR::loadTexFromArc((char const *))
 0002:803F0018       @unnamed@ObjUtil_cpp@::isExistFileInArcLocal((ResourceHolder const *,char const *,__va_list_struct *))
 0002:803F0068       MR::isExistFileInArc((ResourceHolder const *,char const *,...))
 0002:803F00F4       @unnamed@ObjUtil_cpp@::tryCreateCsvParserLocal((ResourceHolder const *,char const *,__va_list_struct *))
 0002:803F018C       MR::createCsvParser((ResourceHolder const *,char const *,...))
 0002:803F0218       MR::createCsvParser((char const *,char const *,...))
 0002:803F02A4       MR::tryCreateCsvParser((LiveActor const *,char const *,...))
 0002:803F03D0       MR::getCsvDataElementNum((JMapInfo const *))
 0002:803F03EC       MR::getCsvDataStr((char const **,JMapInfo const *,char const *,long))
 0002:803F044C       MR::getCsvDataStrOrNULL((char const **,JMapInfo const *,char const *,long))
 0002:803F0490       MR::getCsvDataS32((long *,JMapInfo const *,char const *,long))
 0002:803F04A4       MR::getCsvDataU8((uchar *,JMapInfo const *,char const *,long))
 0002:803F04EC       MR::getCsvDataF32((float *,JMapInfo const *,char const *,long))
 0002:803F0564       MR::getCsvDataBool((bool *,JMapInfo const *,char const *,long))
 0002:803F05EC       MR::getCsvDataVec((Vec *,JMapInfo const *,char const *,long))
 0002:803F06AC       MR::getCsvDataColor((_GXColor *,JMapInfo const *,char const *,long))
 0002:803F079C       MR::isStageStatePowerStarAppeared((void))
 0002:803F07C0       MR::declarePowerStar((NameObj const *))
 0002:803F07D4       MR::declarePowerStarCoin100((void))
 0002:803F07E8       MR::appearPowerStarContinueCurrentDemo((NameObj const *,JGeometry::TVec3<f> const &))
 0002:803F0800       MR::appearPowerStarWithoutDemo((NameObj const *))
 0002:803F0818       MR::requestAppearPowerStar((NameObj const *))
 0002:803F0830       MR::requestAppearPowerStar((NameObj const *,JGeometry::TVec3<f> const &))
 0002:803F0848       MR::requestAppearPowerStar((NameObj const *,long,JGeometry::TVec3<f> const &))
 0002:803F0858       MR::requestAppearPowerStar((NameObj const *,LiveActor const *,float))
 0002:803F08FC       MR::requestAppearPowerStarCoin100((void))
 0002:803F0920       MR::createPowerStarDemoModel((NameObj const *,char const *,float *[4]))
 0002:803F0974       MR::declareCoin((NameObj const *,long))
 0002:803F0D40       MR::appearStarPiece((NameObj const *,JGeometry::TVec3<f> const &,long,float,float,bool))
 0002:803F0DB8       MR::appearStarPieceToDirection((NameObj const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,float,float,bool))
 0002:803F0E38       MR::initStarPieceGetCSSound((void))
 0002:803F0E64       MR::createKinokoOneUp((void))
 0002:803F0EDC       MR::appearKinokoOneUpPop((BenefitItemObj *,float *[4],float))
 0002:803F10A0       MR::createKinokoSuper((void))
 0002:803F1108       MR::appearKinokoOneUpPop((BenefitItemObj *,float *[4],float))
 0002:803F110C       MR::stopScene((long))
 0002:803F1148       MR::stopSceneForDefaultHit((long))
 0002:803F11D0       MR::tryRumblePadVeryWeak((void const *,long))
 0002:803F1250       MR::tryRumbleDefaultHit((void const *,long))
 0002:803F128C       MR::tryRumblePadMiddle((void const *,long))
 0002:803F1384       MR::shakeCameraVeryStrong((void))
 0002:803F13B0       MR::shakeCameraStrong((void))
 0002:803F13DC       MR::shakeCameraNormalStrong((void))
 0002:803F1408       MR::shakeCameraNormal((void))
 0002:803F1434       MR::shakeCameraNormalWeak((void))
 0002:803F1460       MR::shakeCameraWeak((void))
 0002:803F148C       MR::shakeCameraVeryWeak((void))
 0002:803F14B8       MR::shakeCameraInfinity((NameObj *,float,float))
 0002:803F1524       MR::stopShakingCamera((NameObj *))
 0002:803F155C       MR::isName((NameObj const *,char const *))
 0002:803F1588       MR::isSame((NameObj const *,NameObj const *))
 0002:803F15DC       MR::tryFindNamePos((char const *,float *[4]))
 0002:803F15E0       gap_btm_cback0
 0002:803F163C       MR::findNamePosOnGround((char const *,float *[4]))
 0002:803F1784       MR::tryFindNamePos((char const *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *))
 0002:803F17D8       MR::tryFindLinkNamePos((NameObj const *,char const *,float *[4]))
 0002:803F18C8       __sinit__ObjUtil_cpp
 0002:803F192C       ParabolicPath::ParabolicPath((void))
 0002:803F19A0       ParabolicPath::initFromMaxHeight((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:803F1A28       ParabolicPath::initFromUpVector((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803F1B1C       ParabolicPath::initFromUpVectorAddHeight((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:803F1BB0       ParabolicPath::calcPosition(const(JGeometry::TVec3<f> *,float))
 0002:803F1C5C       ParabolicPath::calcDirection(const(JGeometry::TVec3<f> *,float,float))
 0002:803F1D14       ParabolicPath::getLength(const(float,float,long))
 0002:803F1E20       ParabolicPath::calcPathSpeedFromAverageSpeed(const(float))
 0002:803F1E64       MR::isOnGroundPlayer((void))
 0002:803F1E74       MR::forceKillPlayerByAbyss((void))
 0002:803F1E80       MR::forceKillPlayerByWaterRace((void))
 0002:803F1E8C       MR::forceKillPlayerByGroundRace((void))
 0002:803F1E98       MR::forceKillPlayerByGhostRace((void))
 0002:803F1EA4       MR::isPlayerDead((void))
 0002:803F1EF4       MarioAccess::isTeresaDisappear((void))
 0002:803F1EF8       MR::isPlayerInAreaObj((char const *))
 0002:803F1F34       MR::getPlayerPos((void))
 0002:803F1F58       MR::getPlayerCenterPos((void))
 0002:803F1F7C       MarioAccess::getTakePos((JGeometry::TVec3<f> *))
 0002:803F1FBC       MR::getPlayerRotate((void))
 0002:803F1FE0       MR::getPlayerShadowRotate((void))
 0002:803F2004       MarioAccess::getVelocity((void))
 0002:803F2008       MarioAccess::getLastMove((void))
 0002:803F200C       MarioAccess::setJumpVec((JGeometry::TVec3<f> const &))
 0002:803F2010       MR::getPlayerHitRadius((void))
 0002:803F2048       MarioAccess::setWalkingResist((float))
 0002:803F2070       MarioAccess::calcSpinPullVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803F2074       MR::checkPlayerActionTrigger((void))
 0002:803F2098       MR::checkPlayerSwingTrigger((void))
 0002:803F20BC       MR::calcDistanceToPlayer((JGeometry::TVec3<f> const &))
 0002:803F2128       MR::getPlayerFrontVec((JGeometry::TVec3<f> *))
 0002:803F219C       MarioAccess::getThrowVec((JGeometry::TVec3<f> *))
 0002:803F21D4       MR::getPlayerGroundNormal((void))
 0002:803F220C       MR::setPlayerSwingInhibitTimer((ushort))
 0002:803F223C       MR::setPlayerSwingPermission((bool))
 0002:803F226C       MarioAccess::setStateWait((void))
 0002:803F2270       MR::startBckPlayer((char const *,char const *))
 0002:803F2284       MarioAccess::changeAnimationE((char const *,BckCtrlData const &))
 0002:803F2288       MarioAccess::changeAnimationE((char const *,long))
 0002:803F22D4       MarioAccess::getAnimationFrameMax((void))
 0002:803F2310       MarioAccess::keepCurrentAnimation((void))
 0002:803F2314       MarioAccess::progressAnimation((void))
 0002:803F231C       MR::setBckBlendWeight((float,float))
 0002:803F2348       MR::setBckBlendWeight((float,float,float))
 0002:803F2378       MR::setBckBlendWeight((float,float,float,float))
 0002:803F2414       MarioAccess::forceFly((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:803F2418       MarioAccess::tornadoJump((void))
 0002:803F241C       MarioAccess::tornadoJumpMini((void))
 0002:803F2420       MarioAccess::becomeNormalJumpStatus((void))
 0002:803F2424       MR::isOnPlayer((HitSensor const *))
 0002:803F2474       MarioAccess::isOnActor((LiveActor const *))
 0002:803F2478       MR::isOnPlayerShadow((LiveActor const *))
 0002:803F24C8       MarioAccess::getShadowHeight((void))
 0002:803F24CC       MR::setPlayerPos((char const *))
 0002:803F2528       MR::setPlayerPosAndWait((JGeometry::TVec3<f> const &))
 0002:803F2558       btu_init_core
 0002:803F2584       MR::setPlayerLinkPosAndWait((NameObj const *,char const *))
 0002:803F25E4       MR::setPlayerPosOnGround((char const *))
 0002:803F2628       MR::setPlayerPosOnGroundAndWait((char const *))
 0002:803F2678       MarioAccess::isHipDropFalling((void))
 0002:803F267C       MarioAccess::isHipDropLand((void))
 0002:803F2680       MarioAccess::incLife((ulong))
 0002:803F2684       MarioAccess::incOxygen((ulong))
 0002:803F2688       MarioAccess::isConfrontDeath((void))
 0002:803F268C       MarioAccess::addStarPiece((void))
 0002:803F2694       MarioAccess::scatterStarPiece((ulong))
 0002:803F2698       MarioAccess::isSwingAction((void))
 0002:803F269C       MR::isPlayerPointedBy2POnTriggerButton((void))
 0002:803F26CC       MarioAccess::isSquat((void))
 0002:803F26D0       MarioAccess::isInRush((void))
 0002:803F26D4       MarioAccess::isNeedBrakingCamera((void))
 0002:803F26D8       MarioAccess::isFlying((void))
 0002:803F26DC       MR::isPlayerElementMode((long))
 0002:803F2718       MR::isPlayerElementModeTornado((void))
 0002:803F2748       MR::isPlayerElementModeInvincible((void))
 0002:803F2778       MR::isPlayerElementModeBee((void))
 0002:803F27A8       MR::isPlayerElementModeHopper((void))
 0002:803F27D8       MR::isPlayerHidden((void))
 0002:803F2808       MR::isPlayerElementModeIce((void))
 0002:803F2838       MR::isPlayerElementModeNormal((void))
 0002:803F2864       MarioAccess::isSkating((void))
 0002:803F2868       MarioAccess::changeItemStatus((long))
 0002:803F2874       MarioAccess::isParalyzing((void))
 0002:803F28E8       MR::isPlayerJumpRising((void))
 0002:803F290C       MarioAccess::validateSensor((void))
 0002:803F2910       MR::isPlayerInBind((void))
 0002:803F2914       MR::endBindAndPlayerWait((LiveActor *))
 0002:803F2974       MR::endBindAndPlayerJump((LiveActor *,JGeometry::TVec3<f> const &,ulong))
 0002:803F29B8       MR::endBindAndPlayerForceJump((LiveActor *,JGeometry::TVec3<f> const &,ulong))
 0002:803F2A08       MR::endBindAndPlayerWeakGravityJump((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2A48       MR::endBindAndPlayerForceWeakGravityJump((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2A94       MR::endBindAndSpinDriverJump((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2AE0       MR::endBindAndPlayerWeakGravityLimitJump((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2B78       MR::endBindAndPlayerDamage((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2BCC       MR::endBindAndPlayerFlip((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F2C20       MR::endBindAndPlayerJumpWithRollLanding((LiveActor *,JGeometry::TVec3<f> const &,ulong))
 0002:803F2C70       MR::endBindAndPlayerDamageMsg((LiveActor *,ulong))
 0002:803F2CC8       MR::endBindAndPlayerDamageMsg((LiveActor *,ulong,JGeometry::TVec3<f> const &))
 0002:803F2D64       def_803F2CF4
 0002:803F2D7C       MR::endBindAndPlayerAcidDamage((LiveActor *))
 0002:803F2DF0       MR::endBindAndPlayerFreezeDamage((LiveActor *))
 0002:803F2E64       MR::endBindAndPlayerFireDamage((LiveActor *))
 0002:803F2ED8       MR::endBindAndPlayerElectricDamage((LiveActor *))
 0002:803F2F4C       MR::getCurrentRushActor((void))
 0002:803F2F88       MR::getCurrentRushSensor((void))
 0002:803F2FC0       MarioAccess::tryCoinPull((void))
 0002:803F2FF8       MR::resetSystemAndGameStatus((void))
 0002:803F3000       MR::isPlayerTakingActor((char const *))
 0002:803F305C       MR::isPlayerCarryAny((void))
 0002:803F3088       MR::startSoundPlayer((char const *,long))
 0002:803F30D0       MR::startLevelSoundPlayer((char const *,long))
 0002:803F3160       MR::startSoundPlayerJ((char const *))
 0002:803F3198       MarioAccess::show((void))
 0002:803F319C       MarioAccess::hide((void))
 0002:803F320C       MarioAccess::startDownWipe((void))
 0002:803F3210       MR::setCameraTargetToPlayer((CameraTargetArg *))
 0002:803F3254       MarioAccess::isFpViewChangingFailure((void))
 0002:803F3258       MarioAccess::stopFpView((void))
 0002:803F32A8       MarioAccess::noticeDashChance((void))
 0002:803F32AC       MarioAccess::startTalk((LiveActor const *))
 0002:803F32B4       MarioAccess::preventRush((void))
 0002:803F32B8       MR::isExistMario((void))
 0002:803F32C0       MR::startPlayerEvent((char const *))
 0002:803F3318       MarioAccess::offControl((void))
 0002:803F331C       MarioAccess::onControl((bool))
 0002:803F3320       MarioAccess::isOffControl((void))
 0002:803F3324       MR::unlockPlayerAnimation((void))
 0002:803F3398       MR::setPlayerBaseMtx((float *[4]))
 0002:803F339C       MarioAccess::getBaseMtx((void))
 0002:803F33C8       MarioAccess::readyDemo((void))
 0002:803F33CC       MarioAccess::onFollowDemo((void))
 0002:803F33F4       MR::calcPlayerJointMtx((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,char const *))
 0002:803F3454       MarioAccess::isOnPress((void))
 0002:803F3458       MarioAccess::addVelocity((JGeometry::TVec3<f> const &))
 0002:803F345C       MarioAccess::addVelocityFromArea((JGeometry::TVec3<f> const &))
 0002:803F3460       MarioAccess::isInWaterMode((void))
 0002:803F3464       MarioAccess::isOnWaterSurface((void))
 0002:803F3498       MarioAccess::calcWorldPadDir((JGeometry::TVec3<f> *,float,float))
 0002:803F349C       MR::getFullScreenBlurTexture((void))
 0002:803F34C0       MR::getPlayerMovementTimer((void))
 0002:803F34E4       MarioAccess::endTalk((void))
 0002:803F3554       MR::createRailGraphFromJMap((JMapInfoIter const &))
 0002:803F36F8       RailGraphIter::RailGraphIter((RailGraphIter const &))
 0002:803F3724       MR::createRailGraphIter((RailGraph const *))
 0002:803F3788       RailGraphIter::moveNodeNext((void))
 0002:803F378C       MR::moveNodeNearPosition((RailGraphIter *,JGeometry::TVec3<f> const &,float,RailGraphNodeSelecter *))
 0002:803F37C8       MR::selectReverseEdge((RailGraphIter *))
 0002:803F380C       J3DDisplayListObj::callDL(const(void))
 0002:803F3810       RailGraphIter::isWatchedPrevEdge(const(void))
 0002:803F3814       RailGraphIter::getCurrentNode(const(void))
 0002:803F3818       RailGraphIter::getNextNode(const(void))
 0002:803F381C       MR::calcWatchEdgeVector((RailGraphIter const *,JGeometry::TVec3<f> *))
 0002:803F387C       MR::calcWatchEdgeDirection((RailGraphIter const *,JGeometry::TVec3<f> *))
 0002:803F38B0       MR::getNearNodeIndex((RailGraph const *,JGeometry::TVec3<f> const &,float,RailGraphNodeSelecter *))
 0002:803F3994       MR::getSelectEdgeArg0((RailGraphIter const *))
 0002:803F39B8       MR::getSelectEdgeArg1((RailGraphIter const *))
 0002:803F39DC       MR::getSelectEdgeArg2((RailGraphIter const *))
 0002:803F3A00       MR::getSelectEdgeArg3((RailGraphIter const *))
 0002:803F3A24       MR::getWatchEdgeArg7((RailGraphIter const *))
 0002:803F3A48       MR::moveTransToOtherActorRailPos((LiveActor *,LiveActor const *))
 0002:803F3A58       MR::moveTransToCurrentRailPos((LiveActor *))
 0002:803F3A68       MR::moveCoord((LiveActor *,float))
 0002:803F3AA4       MR::moveCoordAndTransToRailPoint((LiveActor *,long))
 0002:803F3AF8       MR::moveCoordAndCheckPassPointNo((LiveActor *,float))
 0002:803F3B74       MR::moveCoordAndFollowTransAndCheckPassPointNo((LiveActor *))
 0002:803F3BD0       MR::moveCoordToEndPos((LiveActor *))
 0002:803F3C08       MR::isRailReachedEdge((LiveActor const *))
 0002:803F3C10       MR::moveCoordAndFollowTrans((LiveActor *,float))
 0002:803F3C4C       MR::moveCoordAndTransToNextPoint((LiveActor *))
 0002:803F3C8C       MR::moveCoordToStartPos((LiveActor *))
 0002:803F3CD0       MR::moveCoordAndTransToNearestRailPoint((LiveActor *))
 0002:803F3DD8       MR::moveCoordAndTransToRailStartPoint((LiveActor *))
 0002:803F3E1C       MR::setRailDirectionToStart((LiveActor *))
 0002:803F3E34       MR::setRailDirectionToEnd((LiveActor *))
 0002:803F3E4C       MR::setRailDirectionCloseToCoord((LiveActor *,float))
 0002:803F3F18       MR::setRailDirectionCloseToNearestPos((LiveActor *,JGeometry::TVec3<f> const &))
 0002:803F3F58       MR::calcMovingDirectionAlongRail((LiveActor *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float,bool,bool *))
 0002:803F4100       MR::calcRailClippingInfo((JGeometry::TVec3<f> *,float *,LiveActor const *,float,float))
 0002:803F43E0       MR::calcNearestRailDirection((JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &))
 0002:803F4498       MR::calcNearestRailPosAndDirection((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *,JGeometry::TVec3<f> const &))
 0002:803F4550       @unnamed@RailUtil_cpp@::updateBoundingBox((RailRider const *,JGeometry::TBox3<f> *))
 0002:803F4608       MR::calcBoundingBox((RailRider *,JGeometry::TBox3<f> *,float))
 0002:803F4728       MR::calcDifferenceRailCoord((LiveActor const *,float,float))
 0002:803F47C4       MR::calcDifferenceRailCoord((LiveActor const *,float))
 0002:803F47D8       MR::calcDistanceHorizonToCurrentPos((LiveActor const *))
 0002:803F484C       MR::calcRailPointPos((JGeometry::TVec3<f> *,LiveActor const *,int))
 0002:803F485C       MR::calcRailPosFrontCoord((JGeometry::TVec3<f> *,LiveActor const *,float))
 0002:803F4948       MR::calcRailPosAndDirectionAtCoord((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *,float))
 0002:803F49A8       MR::calcRailStartPointDirection((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F49BC       MR::calcRailEndPointDirection((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F4A14       MR::calcRailStartPointPos((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F4A28       MR::calcRailEndPointPos((JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F4AD4       MR::calcRailStartPointPosAndDirection((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F4B2C       MR::calcRailEndPointPosAndDirection((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,LiveActor const *))
 0002:803F4B8C       MR::calcDistanceToNextRailPoint((LiveActor const *,float *))
 0002:803F4C30       MR::calcDistanceToCurrentAndNextRailPoint((LiveActor const *,float *,float *))
 0002:803F4D50       MR::calcRailRateToNextPoint((float *,LiveActor const *))
 0002:803F4DD0       MR::isExistRail((LiveActor const *))
 0002:803F4DE0       MR::getRailPointNum((LiveActor const *))
 0002:803F4DE8       MR::getCurrentRailPointNo((LiveActor const *))
 0002:803F4E14       MR::getRailPos((LiveActor const *))
 0002:803F4E20       MR::getRailPointPosStart((LiveActor const *))
 0002:803F4E2C       MR::getRailPointPosEnd((LiveActor const *))
 0002:803F4E38       MR::getRailDirection((LiveActor const *))
 0002:803F4E44       MR::getRailCoord((LiveActor const *))
 0002:803F4E50       MR::getRailCoordSpeed((LiveActor const *))
 0002:803F4E64       MR::setRailCoordSpeed((LiveActor *,float))
 0002:803F4E70       MR::accelerateRailCoordSpeed((LiveActor *,float))
 0002:803F4ED8       MR::adjustmentRailCoordSpeed((LiveActor *,float,float))
 0002:803F4F18       MR::slowDownRailCoordSpeed((LiveActor *,float))
 0002:803F4F40       MR::isRailReachedNearGoal((LiveActor const *,float))
 0002:803F4FD4       MR::isRailGoingToEnd((LiveActor const *))
 0002:803F4FD8       J3DColorBlockLightOff::getColorChanNum(const(void))
 0002:803F4FE0       MR::isRailReachedNearNextPoint((LiveActor const *,float))
 0002:803F506C       MR::isRailReachedHorizonCurrentPos((LiveActor const *,float))
 0002:803F50A4       MR::getRailArg0WithInit((LiveActor const *,long *))
 0002:803F5118       @unnamed@RailUtil_cpp@::getRailPointArgF32NoInit((LiveActor const *,long,long,float *))
 0002:803F5238       @unnamed@RailUtil_cpp@::getRailNextPointArgF32NoInit((LiveActor const *,long,float *))
 0002:803F53D0       @unnamed@RailUtil_cpp@::getRailNextPointArgBoolNoInit((LiveActor const *,long,bool *))
 0002:803F545C       MR::getRailPointArg0NoInit((LiveActor const *,long,long *))
 0002:803F54B0       MR::getRailPointArg2WithInit((LiveActor const *,long,long *))
 0002:803F5558       MR::getRailPointArg1NoInit((LiveActor const *,long,long *))
 0002:803F55AC       MR::getRailPointArg4NoInit((LiveActor const *,long,long *))
 0002:803F5600       MR::getRailPointArg6NoInit((LiveActor const *,long,long *))
 0002:803F5654       MR::getRailPointArg7NoInit((LiveActor const *,long,long *))
 0002:803F56A8       MR::getRailPointArg2WithInit((LiveActor const *,long,float *))
 0002:803F56B8       MR::getRailPointArg3WithInit((LiveActor const *,long,float *))
 0002:803F56D8       MR::getRailPointArg1NoInit((LiveActor const *,long,float *))
 0002:803F56E8       MR::getNextRailPointArg0WithInit((LiveActor const *,long *))
 0002:803F5734       MR::getNextRailPointArg1NoInit((LiveActor const *,long *))
 0002:803F5818       MR::getCurrentRailPointArg5NoInit((LiveActor const *,long *))
 0002:803F5864       MR::getCurrentRailPointArg7NoInit((LiveActor const *,long *))
 0002:803F5984       MR::getNextRailPointArg2WithInit((LiveActor const *,bool *))
 0002:803F59AC       @unnamed@RailUtil_cpp@::getRailPointArgName((long))
 0002:803F5A38       @unnamed@SceneUtil_cpp@::getRailInfoFromRailId((JMapInfoIter *,JMapInfo const **,StageDataHolder const *,int))
 0002:803F5A94       MR::setCurrentScenarioNo((long,long))
 0002:803F5AB8       MR::getCurrentStageName((void))
 0002:803F5AC8       MR::isEqualSceneName((char const *))
 0002:803F5AD8       MR::isEqualStageName((char const *))
 0002:803F5B2C       MR::isStageDisablePauseMenu((void))
 0002:803F5B84       MR::isStageAstroLocation((void))
 0002:803F5C00       MR::isStageStarPieceFollowGroupLimit((void))
 0002:803F5C64       MR::isStageKoopaVs((void))
 0002:803F5CFC       MR::isBeginScenarioStarter((void))
 0002:803F5D40       MR::isStageSuddenDeathDodoryu((void))
 0002:803F5D98       MR::setInitializeStatePlacementPlayer((void))
 0002:803F5DA8       MR::setInitializeStatePlacementHighPriority((void))
 0002:803F5DB8       MR::setInitializeStatePlacement((void))
 0002:803F5DC8       MR::setInitializeStateAfterPlacement((void))
 0002:803F5DD8       MR::isInitializeStateEnd((void))
 0002:803F5DE8       MR::isInitializeStatePlacementSomething((void))
 0002:803F5E78       MR::playSceneForScenarioOpeningCamera((void))
 0002:803F5ED0       MR::getCurrentMarioStartIdInfo((void))
 0002:803F5F34       MR::getStageArchive((char const *))
 0002:803F5F8C       MR::getGeneralPosData((char const **,JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JMapLinkInfo **,int))
 0002:803F6050       MR::getChildObjNum((JMapInfoIter const &))
 0002:803F608C       MR::getChildObjName((char const **,JMapInfoIter const &,int))
 0002:803F60F8       MR::initChildObj((NameObj *,JMapInfoIter const &,int))
 0002:803F626C       MR::getPlacedHiddenStarScenarioNo((char const *,long))
 0002:803F6304       MR::getRailInfo((JMapInfoIter *,JMapInfo const **,JMapInfoIter const &))
 0002:803F6370       MR::getNextLinkRailInfo((JMapInfoIter *,JMapInfo const **,JMapInfoIter const &))
 0002:803F6454       MR::getPlacedRailNum((long))
 0002:803F64A8       MR::getCameraRailInfo((JMapInfoIter *,JMapInfo const **,long,long))
 0002:803F6504       MR::getCameraRailInfoFromRailDataIndex((JMapInfoIter *,JMapInfo const **,int,long))
 0002:803F6578       MR::getStageCameraData((void **,long *,long))
 0002:803F6604       MR::getCurrentScenarioStartAnimCameraData((void **,long *))
 0002:803F669C       MR::incCoin((int))
 0002:803F66E0       MR::getCoinNum((void))
 0002:803F6738       MR::getPurpleCoinNum((void))
 0002:803F6768       MR::isPlacementLocalStage((void))
 0002:803F6798       MR::getPlacedZoneId((JMapInfoIter const &))
 0002:803F67D0       MR::getZonePlacementMtx((long))
 0002:803F6840       MR::getJapaneseObjectName((char const *))
 0002:803F6900       MR::getCurrentPlacementZoneName((void))
 0002:803F6944       MR::startSpinHitSound((LiveActor const *))
 0002:803F6958       MR::ProhibitSchedulerAndInterrupts::ProhibitSchedulerAndInterrupts((bool))
 0002:803F6990       MR::ProhibitSchedulerAndInterrupts::~ProhibitSchedulerAndInterrupts((void))
 0002:803F69F0       @unnamed@ScreenUtil_cpp@::getCaptureScreenDirector((void))
 0002:803F6A00       @unnamed@ScreenUtil_cpp@::getPlayTimerScene((void))
 0002:803F6A10       @unnamed@ScreenUtil_cpp@::appearInformationMessage((bool,bool))
 0002:803F6A94       @unnamed@ScreenUtil_cpp@::getStarCounter((void))
 0002:803F6ABC       @unnamed@ScreenUtil_cpp@::getStarPieceCounter((void))
 0002:803F6AE4       MR::getViWidth((void))
 0002:803F6B44       MR::getScreenWidth((void))
 0002:803F6B74       MR::getSafetyFrameWidth((void))
 0002:803F6C40       MR::getSafetyFrameLeft((void))
 0002:803F6C88       MR::getSafetyFrameRight((void))
 0002:803F6CD0       MR::convertFrameBufferPosToScreenPos((JGeometry::TVec2<f> *,JGeometry::TVec2<f> const &))
 0002:803F6D84       MR::convertScreenPosToFrameBufferPos((JGeometry::TVec2<f> *,JGeometry::TVec2<f> const &))
 0002:803F6F8C       MR::isWipeActive((void))
 0002:803F6FF4       MR::isWipeBlank((void))
 0002:803F7024       MR::isWipeOpen((void))
 0002:803F7054       MR::closeSystemWipeWhiteFade((long))
 0002:803F70BC       MR::openSystemWipeWhiteFade((long))
 0002:803F718C       MR::forceOpenSystemWipeFade((void))
 0002:803F727C       MR::forceCloseSystemWipeWhiteFade((void))
 0002:803F729C       MR::isSystemWipeActive((void))
 0002:803F730C       MR::closeSystemWipeFadeWithCaptureScreen((long))
 0002:803F7364       MR::setWipeCircleCenterPos((JGeometry::TVec3<f> const &))
 0002:803F7374       MR::requestMovementOnImageEffect((void))
 0002:803F754C       MR::createNormalBloom((void))
 0002:803F7554       MR::isNormalBloomOn((void))
 0002:803F75C8       MR::isNormalBloomForEachModel((void))
 0002:803F7620       MR::setNormalBloomIntensity((uchar))
 0002:803F7654       MR::setNormalBloomThreshold((uchar))
 0002:803F7688       MR::setNormalBloomBlurIntensity1((uchar))
 0002:803F76BC       MR::setNormalBloomBlurIntensity2((uchar))
 0002:803F76F0       MR::createSimpleBloom((void))
 0002:803F76F8       MR::createScreenBlur((void))
 0002:803F7700       MR::createDepthOfFieldBlur((void))
 0002:803F773C       MR::createCenterScreenBlur((void))
 0002:803F7744       MR::startCenterScreenBlur((long,float,uchar,long,long))
 0002:803F77B0       MR::startGlobalTimer((void))
 0002:803F77B4       MR::resetGlobalTimer((void))
 0002:803F77D8       MR::isGlobalTimerEnd((void))
 0002:803F77FC       MR::startGlobalTimerTimeUp((void))
 0002:803F7820       MR::requestPowerUpHPMeter((void))
 0002:803F78F8       MR::isActiveDefaultGameLayout((void))
 0002:803F791C       MR::forceAppearDefaultGameLayout((void))
 0002:803F7988       MR::isStopCinemaFrame((void))
 0002:803F7AE8       MR::appearInformationMessage((wchar_t const *,bool))
 0002:803F7B38       MR::appearInformationMessageCenter((char const *,bool))
 0002:803F7C70       MR::appearYesNoSelector((char const *,char const *,char const *))
 0002:803F7CEC       MR::isYesNoSelectedYes((void))
 0002:803F7D44       MR::setYesNoSelectorSE((char const *,char const *,char const *))
 0002:803F7D98       MR::resetYesNoSelectorSE((void))
 0002:803F7DD0       MR::startMoviePlayer((char const *))
 0002:803F7E14       MR::stopMoviePlayer((void))
 0002:803F7E40       MR::isActiveMoviePlayer((void))
 0002:803F7E84       MR::isMoviePlayerPlaying((void))
 0002:803F7EC4       MR::getMovieCurrentFrame((void))
 0002:803F7F04       MR::getMovieTotalFrame((void))
 0002:803F7F30       MR::setMovieVolume((float,long))
 0002:803F7F7C       MR::appearStarCounter((void))
 0002:803F7FAC       MR::disappearStarCounter((void))
 0002:803F7FD0       MR::forceSyncStarPieceCounter((void))
 0002:803F7FF4       MR::forceAppearStarPieceCounterForTicoFat((void))
 0002:803F801C       MR::disappearStarPieceCounterForTicoFat((void))
 0002:803F8044       MR::createPurpleCoinCounter((void))
 0002:803F8068       MR::validatePurpleCoinCounter((void))
 0002:803F8090       MR::requestCounterLayoutAppearanceForTicoEat((bool))
 0002:803F80C8       MR::openWipeCircle((long))
 0002:803F80D8       MR::openWipeFade((long))
 0002:803F80E8       MR::openWipeWhiteFade((long))
 0002:803F80F8       MR::startGameOverWipe((void))
 0002:803F8134       MR::startDownWipe((void))
 0002:803F8170       MR::requestOneUp((void))
 0002:803F81AC       MR::requestChangeScene((char const *))
 0002:803F81B0       MR::requestChangeSceneTitle((void))
 0002:803F81E8       MR::requestChangeStageInGameAfterLoadingGameData((void))
 0002:803F8220       MR::requestChangeStageAfterStageClear((void))
 0002:803F8258       MR::requestChangeStageAfterMiss((void))
 0002:803F82EC       MR::requestChangeStageInGameMoving((char const *,long,JMapIdInfo const &))
 0002:803F8328       MR::requestChangeStageInGameMoving((char const *,long))
 0002:803F837C       MR::requestChangeSceneAfterGameOver((void))
 0002:803F83F0       MR::requestChangeStageGoBackAstroDome((void))
 0002:803F8428       MR::requestStartScenarioSelect((char const *))
 0002:803F8460       MR::requestStartScenarioSelectForComet((char const *,long))
 0002:803F8498       GameSequenceFunction::hasRetryGalaxySequence((void))
 0002:803F84DC       MR::requestGoToAstroGalaxy((long))
 0002:803F8528       MR::requestGoToAstroDomeFromAstroGalaxy((long,long))
 0002:803F857C       ResourceShare::~ResourceShare((void))
 0002:803F85D4       ResourceShare::ResourceShare((void))
 0002:803F8638       MR::startSystemSE((JAISoundID,long,long))
 0002:803F8688       MR::startSystemLevelSE((char const *,long,long))
 0002:803F8724       MR::limitedSound((char const *,long))
 0002:803F8774       MR::stopSystemSE((JAISoundID,ulong))
 0002:803F87B4       MR::startAtmosphereSE((char const *,long,long))
 0002:803F8860       MR::startSoundObject((AudSoundObject *,char const *))
 0002:803F88B8       MR::startSoundObjectLevel((AudSoundObject *,char const *,long))
 0002:803F8910       MR::startSoundObjectLevel((AudSoundObject *,JAISoundID,long))
 0002:803F8980       MR::startSoundObjectLevelParam((AudSoundObject *,char const *,long,long,long))
 0002:803F89D8       MR::startSoundObjectLevelParam((AudSoundObject *,JAISoundID,long,long,long))
 0002:803F8A3C       MR::startSound((LiveActor const *,char const *,long,long))
 0002:803F8AF8       MR::startSound((LiveActor const *,JAISoundID,long,long))
 0002:803F8B8C       MR::startSoundSeVer((LiveActor const *,char const *,long,long))
 0002:803F8C04       MR::startLevelSound((LiveActor const *,char const *,long,long,long))
 0002:803F8C88       MR::startLevelSound((LiveActor const *,JAISoundID,long,long,long))
 0002:803F8D1C       MR::startLevelSoundSeVer((LiveActor const *,char const *,long,long,long))
 0002:803F8D9C       MR::stopSound((LiveActor const *,char const *,ulong))
 0002:803F8DFC       MR::stopSound((LiveActor const *,JAISoundID,ulong))
 0002:803F8E2C       MR::setSeVersion((LiveActor const *,ulong))
 0002:803F8E38       MR::releaseSoundHandle((LiveActor const *,char const *))
 0002:803F8E84       MR::startBas((LiveActor const *,char const *,bool,float,float))
 0002:803F8F40       MR::actorSoundMovement((LiveActor *))
 0002:803F8FD8       AudSeKeeper::makeBox((char const *,char const *))
 0002:803F8FDC       AudSeKeeper::playLevel((char const *,char const *))
 0002:803F8FE0       MR::hasME((void))
 0002:803F9034       MR::startSystemME((char const *))
 0002:803F9084       MR::getMapSoundCodeFoot((LiveActor const *))
 0002:803F9168       MR::setMapSondCodeGravity((LiveActor const *,long))
 0002:803F917C       MR::startTalkSound((uchar,LiveActor const *))
 0002:803F91FC       MR::startRemixSound((long,long,float))
 0002:803F92D0       MR::getRemixMelodyNoteNum((long))
 0002:803F9358       MR::startSubBGM((char const *,bool))
 0002:803F939C       MR::startStageBGMFromStageName((char const *,char const *,long))
 0002:803F941C       MR::stopStageBGM((ulong))
 0002:803F9464       MR::unlockStageBGM((void))
 0002:803F949C       MR::isStopOrFadeoutBgmName((char const *))
 0002:803F94D0       MR::moveVolumeSubBGM((float,ulong))
 0002:803F9528       MR::moveVolumeStageBGMForNoteFairy((float,ulong))
 0002:803F9580       AudWrap::startLastStageBgm((void))
 0002:803F9584       MR::isPlayingStageBgm((void))
 0002:803F95CC       MR::isPlayingSubBgmID((ulong))
 0002:803F9688       MR::isStopOrFadeoutStageBgmID((ulong))
 0002:803F978C       MR::isPreparedStageBgm((void))
 0002:803F97CC       MR::setStageBGMState((long,ulong))
 0002:803F9824       MR::setStageBGMStateBit((ulong))
 0002:803F98AC       MR::stopSubBGM((ulong))
 0002:803F99D4       MR::playLevelMarioPinchBGM((bool))
 0002:803F9A24       MR::stopMarioPinchBGMSoon((void))
 0002:803F9A58       MR::submitTrigSE((void))
 0002:803F9A80       MR::permitTrigSE((void))
 0002:803F9AA8       MR::submitLevelSE((void))
 0002:803F9AD0       MR::permitLevelSE((void))
 0002:803F9AF8       MR::submitSE((void))
 0002:803F9B30       MR::permitSE((void))
 0002:803F9B68       MR::isPermitSE((void))
 0002:803F9BB8       MR::setCubeBgmChangeInvalid((void))
 0002:803F9BE0       MR::isCubeBgmChangeInvalid((void))
 0002:803F9C04       MR::clearBgmQueue((void))
 0002:803F9C50       MR::getAreaObj((char const *,JGeometry::TVec3<f> const &))
 0002:803F9CCC       MR::setAudioEffectType((long,long))
 0002:803F9D18       MR::startCSSound((char const *,char const *,long))
 0002:803F9D98       MR::startCSSound2P((char const *,char const *))
 0002:803F9DEC       MR::startSystemSE((char const *,long,long))
 0002:803F9EA0       MR::startDPDHitSound((void))
 0002:803F9F30       MR::start2PJumpAssistSound((void))
 0002:803F9FA8       MR::start2PJumpAssistJustSound((void))
 0002:803FA020       MR::start2PAttackAssistSound((void))
 0002:803FA098       MR::limitedStarPieceHitSound((void))
 0002:803FA0A8       MR::startCurrentStageBGM((void))
 0002:803FA0EC       MR::startBossBGM((long))
 0002:803FA240       def_803FA120
 0002:803FA254       MR::startEventBGM((long))
 0002:803FA334       MR::startAfterBossBGM((void))
 0002:803FA3D0       JAISound::updateLifeTime((ulong))
 0002:803FA3E4       @unnamed@StarPointerUtil_cpp@::getStarPointerOnOffController((void))
 0002:803FA3F8       @unnamed@StarPointerUtil_cpp@::always((long))
 0002:803FA400       @unnamed@StarPointerUtil_cpp@::onReaction((ulong long,long,bool,bool,bool))
 0002:803FA46C       @unnamed@StarPointerUtil_cpp@::checkPointingTarget((@unnamed@StarPointerUtil_cpp@::StarPointerTargetInfo *,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &,float,float))
 0002:803FA478       @unnamed@StarPointerUtil_cpp@::checkPointingWithoutCheckZ((@unnamed@StarPointerUtil_cpp@::StarPointerTargetInfo *,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &,float,float))
 0002:803FA65C       MR::initStarPointerGameScene((void))
 0002:803FA6A8       MR::onStarPointerSceneOut((void))
 0002:803FA760       MR::initStarPointerTarget((LiveActor *,float,JGeometry::TVec3<f> const &))
 0002:803FA7D4       MR::initStarPointerTargetAtPos((LiveActor *,float,JGeometry::TVec3<f> const *,JGeometry::TVec3<f> const &))
 0002:803FA850       MR::initStarPointerTargetAtMtx((LiveActor *,float,float *[4],JGeometry::TVec3<f> const &))
 0002:803FA8B4       MR::initStarPointerTargetAtJoint((LiveActor *,char const *,float,JGeometry::TVec3<f> const &))
 0002:803FA920       MR::addStarPointerTargetCircle((LayoutActor *,char const *,float,JGeometry::TVec2<f> const &,char const *))
 0002:803FA944       MR::isStarPointerValid((long))
 0002:803FA9A8       MR::isStarPointerPointing((LiveActor const *,long,bool,char const *))
 0002:803FA9C8       MR::tryStarPointerCheck((LiveActor const *,bool,char const *))
 0002:803FA9DC       MR::tryStarPointerCheckWithoutRumble((LiveActor *,bool))
 0002:803FA9EC       MR::isStarPointerPointingPane((LayoutActor const *,char const *,long,bool,char const *))
 0002:803FAD6C       MR::isStarPointerPointing1PWithoutCheckZ((LiveActor const *,char const *,bool,bool))
 0002:803FAEDC       MR::isStarPointerPointing2POnPressButton((LiveActor const *,char const *,bool,bool))
 0002:803FB04C       MR::isStarPointerPointing2POnTriggerButton((LiveActor const *,char const *,bool,bool))
 0002:803FB0EC       MR::isStarPointerPointingFileSelect((LiveActor const *))
 0002:803FB148       MR::isStarPointerPointing1Por2P((LiveActor const *,char const *,bool,bool))
 0002:803FB26C       MR::requestTicoSeedGuidanceForce((void))
 0002:803FB2B4       MR::requestPointerGuidanceNoInformation((void))
 0002:803FB2E4       MR::isExistStarPointerGuidanceFrame1P((void))
 0002:803FB334       MR::activeStarPointerGuidance((void))
 0002:803FB370       MR::tryShowTimeoutedStarPointerGuidance((void))
 0002:803FB3E0       MR::isExistStarPointerTarget((LiveActor const *))
 0002:803FB3F0       MR::setStarPointerTargetRadius3d((LiveActor *,float))
 0002:803FB540       MR::getStarPointerProjMtx((void))
 0002:803FB568       MR::getStarPointerRadius((long))
 0002:803FB5BC       MR::getStarPointerScreenPosition((long))
 0002:803FB5F4       MR::getStarPointerScreenPositionOrEdge((long))
 0002:803FB648       MR::getStarPointerScreenSpeed((long))
 0002:803FB740       MR::getStarPointerLastPointedPort((LiveActor const *))
 0002:803FB74C       MR::getStarPointerScreenVelocity((long))
 0002:803FB784       MR::getStarPointerWorldVelocityDirection((JGeometry::TVec3<f> *,long))
 0002:803FB7D4       MR::getStarPointerWorldPosUsingDepth((long))
 0002:803FB80C       MR::calcStarPointerWorldPointingPos((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,long))
 0002:803FB874       MR::calcStarPointerWorldPointingPosInsideEdge((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,long))
 0002:803FB900       MR::calcStarPointerPosOnPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long,bool))
 0002:803FBAAC       MR::calcStarPointerWorldVelocityDirectionOnPlane((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,long))
 0002:803FBC88       MR::calcPointRadius2D((JGeometry::TVec3<f> const &,float))
 0002:803FC278       MR::tryStartStarPointerCommandStream((LiveActor const *,JGeometry::TVec3<f> const *,long,bool))
 0002:803FC2D0       MR::tryEndStarPointerCommandStream((LiveActor const *,long))
 0002:803FC33C       MR::isStarPointerCommandStream((LiveActor const *,long))
 0002:803FC3EC       MR::startStarPointerModeGame((void *))
 0002:803FC424       MR::startStarPointerModeDemo((void *))
 0002:803FC45C       MR::startStarPointerModeDemoWithStarPointer((void *))
 0002:803FC494       MR::startStarPointerModeDemoWithHandPointerFinger((void *))
 0002:803FC4CC       MR::startStarPointerModeDemoMarioDeath((void *))
 0002:803FC504       MR::startStarPointerModeMarioLauncher((void *))
 0002:803FC53C       MR::startStarPointerModeHomeButton((void *))
 0002:803FC574       MR::startStarPointerModeChooseYesNo((void *))
 0002:803FC5AC       MR::requestStarPointerModePauseMenu((void *))
 0002:803FC5E4       MR::startStarPointerModeScenarioSelectScene((void *))
 0002:803FC61C       MR::startStarPointerModeBlueStar((void *))
 0002:803FC654       MR::startStarPointerModePowerStarGetDemo((void *))
 0002:803FC68C       MR::startStarPointerModeStarPieceTarget((void *))
 0002:803FC6C4       MR::startStarPointerModeSphereSelectorFinger((void *))
 0002:803FC6FC       MR::startStarPointerModeSphereSelectorOnReaction((void *))
 0002:803FC734       MR::startStarPointerModeEnding((void *))
 0002:803FC76C       MR::startStarPointerModeCommandStream((void *))
 0002:803FC7A4       MR::startStarPointerMode1PInvalid2PValid((void *))
 0002:803FC7DC       MR::endStarPointerMode((void *))
 0002:803FC810       MR::requestStarPointerModeErrorWindow((void *))
 0002:803FC848       MR::requestStarPointerModeSaveLoad((void *))
 0002:803FC880       MR::requestStarPointerModePictureBook((void *))
 0002:803FC8F0       MR::requestStarPointerModeBlueStarReady((void *))
 0002:803FC928       MR::requestStarPointerModeBigBubble((void *,JGeometry::TVec3<f> const &))
 0002:803FC97C       MR::isStarPointerModeBlueStarReady((void))
 0002:803FC9AC       MR::isStarPointerModeStarPieceTarget((void))
 0002:803FC9DC       MR::isStarPointerModeMarioLauncher((void))
 0002:803FCA54       MR::enableStarPointerShootStarPiece((void))
 0002:803FCA80       MR::disableStarPointerShootStarPiece((void))
 0002:803FCAAC       MR::isEnableStarPointerShootStarPiece((long))
 0002:803FCB0C       MR::isStarPointer2PTransparencyMode((void))
 0002:803FCC64       MR::isStarPointer1PInvalid2PValidMode((void))
 0002:803FCC94       MR::setStarPointerDrawSyncToken((void))
 0002:803FCCF8       MR::requestBlueStarGuidance((void))
 0002:803FCD5C       MR::requestTicoSeedGuidance((long))
 0002:803FCE4C       MR::requestFileSelectGuidance((void))
 0002:803FCE80       MR::requestFileSelectCopyGuidance((void))
 0002:803FCEB4       MR::requestStarPieceLectureGuidance((void))
 0002:803FCEE8       StarPointerOnOffController::isMode((StarPointerModeEnum))
 0002:803FCF1C       MR::addFilePrefix((char *,ulong,char const *,char const *))
 0002:803FCF40       MR::makeDateString((wchar_t *,long,long,long,long))
 0002:803FCFAC       MR::makeTimeString((wchar_t *,long,long,long))
 0002:803FD010       MR::makeClearTimeString((wchar_t *,ulong))
 0002:803FD0BC       MR::makeMinuteAndSecondString((wchar_t *,ulong))
 0002:803FD14C       MR::addNumberFontTag((wchar_t *,int))
 0002:803FD160       MR::removeExtensionString((char *,ulong,char const *))
 0002:803FD1DC       MR::makeRaceBestTimeString((wchar_t *,int))
 0002:803FD218       MR::makeRaceCurrentTimeString((wchar_t *))
 0002:803FD250       MR::copyString((char *,char const *,ulong))
 0002:803FD254       MR::copyString((wchar_t *,wchar_t const *,ulong))
 0002:803FD258       MR::addPictureFontCode((wchar_t *,int))
 0002:803FD268       MR::addPictureFontTag((wchar_t *,int))
 0002:803FD294       MR::addPictureFontTagPlayerIcon((wchar_t *))
 0002:803FD2D8       MR::addNewLine((wchar_t *))
 0002:803FD2EC       MR::addNumberFontTag((wchar_t *,wchar_t const *,...))
 0002:803FD3C8       MR::getBasename((char const *))
 0002:803FD40C       MR::extractString((char *,char const *,ulong,ulong))
 0002:803FD44C       MR::convertUTF16ToASCII((char *,wchar_t const *,long))
 0002:803FD49C       MR::strcasecmp((char const *,char const *))
 0002:803FD4A0       MR::isEqualString((char const *,char const *))
 0002:803FD4C8       MR::isEqualStringCase((char const *,char const *))
 0002:803FD4F0       MR::isEqualSubString((char const *,char const *))
 0002:803FD518       MR::hasStringSpace((char const *))
 0002:803FD544       MR::isDigitStringTail((char const *,int))
 0002:803FD5F4       MR::isExistString((char const *,char const *const *,ulong))
 0002:803FD66C       MR::isNullOrEmptyString((char const *))
 0002:803FD6B8       MR::isMessageEditorNextTag((wchar_t const *))
 0002:803FD6E0       MR::getStringLengthWithMessageTag((wchar_t const *))
 0002:803FD764       MR::scan32((char const *,char const *,long *))
 0002:803FD7B8       MR::scan16((char const *,char const *,ushort *))
 0002:803FD814       MR::scan8((char const *,char const *,uchar *))
 0002:803FD870       MR::scanf32((char const *,char const *,float *))
 0002:803FD8C8       MR::scanu8x4((char const *,char const *,uchar *))
 0002:803FD950       MR::scans16x4((char const *,char const *,short *))
 0002:803FD9DC       MR::scanf32x4((char const *,char const *,float *))
 0002:803FDA40       SwitchEventFunctorListener::SwitchEventFunctorListener((void))
 0002:803FDA5C       SwitchEventFunctorListener::setOnFunctor((MR::FunctorBase const &))
 0002:803FDAA0       SwitchEventFunctorListener::setOffFunctor((MR::FunctorBase const &))
 0002:803FDAE4       SwitchEventFunctorListener::listenSwitchOnEvent((void))
 0002:803FDB04       SwitchEventFunctorListener::listenSwitchOffEvent((void))
 0002:803FDB24       MR::getGameSystemObjHolder((void))
 0002:803FDB30       @unnamed@SystemUtil_cpp@::getFunctionAsyncExecutor((void))
 0002:803FDB40       MR::getFontOnCurrentLanguage((void))
 0002:803FDB4C       MR::getPictureFontNW4R((void))
 0002:803FDB5C       MR::getMenuFontNW4R((void))
 0002:803FDB6C       MR::getNumberFontNW4R((void))
 0002:803FDB7C       MR::getCinemaFontNW4R((void))
 0002:803FDB8C       MR::getParticleResourceHolder((void))
 0002:803FDB9C       GameSystemFunction::requestChangeArchivePlayer((bool))
 0002:803FDBA0       MR::waitEndChangeArchivePlayer((void))
 0002:803FDBC8       MR::callMethodAllSceneNameObj((void (NameObj::)(void const *,void *)))
 0002:803FDC08       @unnamed@SystemUtil_cpp@::getSceneNameObjHolder((void))
 0002:803FDC84       MR::setRandomSeedFromStageName((void))
 0002:803FDCB4       MR::clearFileLoaderRequestFileInfo((bool))
 0002:803FDDBC       MR::tryEndFunctionAsyncExecute((char const *))
 0002:803FDE48       MR::resumeAsyncExecuteThread((char const *))
 0002:803FDE8C       MR::isSuspendedAsyncExecuteThread((char const *))
 0002:803FDEDC       MR::isAspectRatioFlag16Per9((void))
 0002:803FDEE0       MR::destroySceneMessage((void))
 0002:803FDF28       MR::stopAllSound((ulong))
 0002:803FDF3C       __stdio_atexit
 0002:803FDF78       MR::getPlayerRestartIdInfo((void))
 0002:803FDF8C       MR::setPlayerRestartIdInfo((JMapIdInfo const &))
 0002:803FDFA0       MR::registerBranchFunc((TalkMessageCtrl *,TalkMessageFuncBase const &))
 0002:803FDFA4       MR::registerEventFunc((TalkMessageCtrl *,TalkMessageFuncBase const &))
 0002:803FDFA8       MR::registerAnimeFunc((TalkMessageCtrl *,TalkMessageFuncBase const &))
 0002:803FDFAC       MR::registerKillFunc((TalkMessageCtrl *,TalkMessageFuncBase const &))
 0002:803FDFB0       MR::setMessageArg((TalkMessageCtrl *,int))
 0002:803FDFE0       MR::setMessageArg((TalkMessageCtrl *,wchar_t const *))
 0002:803FE010       MR::createTalkCtrlDirect((LiveActor *,JMapInfoIter const &,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:803FE108       MR::createTalkCtrlDirectOnRootNodeAutomatic((LiveActor *,JMapInfoIter const &,char const *,JGeometry::TVec3<f> const &,float *[4]))
 0002:803FE18C       MR::tryTalkForceWithoutDemoMarioPuppetable((TalkMessageCtrl *))
 0002:803FE1FC       MR::tryTalkNearPlayerAtEnd((TalkMessageCtrl *))
 0002:803FE2E4       MR::tryTalkForceWithoutDemoMarioPuppetableAtEnd((TalkMessageCtrl *))
 0002:803FE514       MR::tryTalkTimeKeepDemoWithoutPauseMarioPuppetable((TalkMessageCtrl *))
 0002:803FE620       MR::tryTalkSelectLeft((TalkMessageCtrl *))
 0002:803FE668       MR::tryTalkSelectRight((TalkMessageCtrl *))
 0002:803FE6C0       MR::setMessageBalloonFollowOffset((TalkMessageCtrl *,JGeometry::TVec3<f> const &))
 0002:803FE6D4       TalkMessageCtrl::isNearPlayer(const(float))
 0002:803FE6D8       TalkMessageCtrl::inMessageArea(const(void))
 0002:803FE6DC       MR::isTalkNone((TalkMessageCtrl const *))
 0002:803FE714       MR::isTalkEnableEnd((TalkMessageCtrl const *))
 0002:803FE728       TalkFunction::onTalkStateNone((TalkMessageCtrl *))
 0002:803FE72C       MR::resetNode((TalkMessageCtrl *))
 0002:803FE760       TalkMessageCtrl::readMessage((void))
 0002:803FE7A0       MR::resetAndForwardNode((TalkMessageCtrl *,long))
 0002:803FE80C       MR::forwardNodeNextBranchLeft((TalkMessageCtrl *))
 0002:803FE854       MR::forwardNodeNextBranchRight((TalkMessageCtrl *))
 0002:803FE89C       MR::forwardNodeCurrentBranchLeft((TalkMessageCtrl *))
 0002:803FE8DC       MR::forwardNodeCurrentBranchRight((TalkMessageCtrl *))
 0002:803FE91C       MR::tryForwardNode((TalkMessageCtrl *))
 0002:803FE98C       MR::setDistanceToTalk((TalkMessageCtrl *,float))
 0002:803FE994       MR::onRootNodeAutomatic((TalkMessageCtrl *))
 0002:803FE9A0       MR::offRootNodeAutomatic((TalkMessageCtrl *))
 0002:803FE9AC       MR::onReadNodeAutomatic((TalkMessageCtrl *))
 0002:803FE9B8       MR::offReadNodeAutomatic((TalkMessageCtrl *))
 0002:803FE9C4       MR::onStartOnlyFront((TalkMessageCtrl *))
 0002:803FE9D0       TalkFunction::isTalkSystemStart((TalkMessageCtrl const *))
 0002:803FE9D4       TalkFunction::isTalkSystemEnd((TalkMessageCtrl const *))
 0002:803FE9D8       TalkMessageCtrl::setMessageArg((CustomTagArg const &))
 0002:803FE9EC       MR::getAreaObjManager((char const *))
 0002:803FEA20       MR::getAreaObj((char const *,JGeometry::TVec3<f> const &))
 0002:803FEA64       MR::isInAreaObj((char const *,JGeometry::TVec3<f> const &))
 0002:803FEAB0       MR::getAreaObjArg((AreaObj const *,long))
 0002:803FEB10       def_803FEACC
 0002:803FEB18       MR::getWaterAreaInfo((WaterInfo *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,bool))
 0002:803FF154       WaterAreaFunction::tryInWhirlPoolAccelerator((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> *))
 0002:803FF168       MR::calcCubeAxisZ((AreaObj const *,JGeometry::TVec3<f> *))
 0002:803FF1D4       MR::getCubeLocalBox((AreaObj const *))
 0002:803FF1F0       MR::calcSpherePos((JGeometry::TVec3<f> *,AreaObj const *))
 0002:803FF200       MR::getSphereRadius((AreaObj const *))
 0002:803FF20C       MR::calcCylinderPos((JGeometry::TVec3<f> *,AreaObj const *))
 0002:803FF22C       MR::calcCylinderUpVec((JGeometry::TVec3<f> *,AreaObj const *))
 0002:803FF23C       MR::getCylinderRadius((AreaObj const *))
 0002:803FF248       MR::tryToUpdatePlayerRestartIdInfo((JGeometry::TVec3<f> const &))
 0002:803FF29C       MR::getWaterAreaObj((WaterInfo *,JGeometry::TVec3<f> const &))
 0002:803FF30C       MR::calcAreaMoveVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:803FF42C       MR::getCurrentAstroOverlookAreaObj((void))
 0002:803FF478       BaseMatrixFollower::BaseMatrixFollower((NameObj *,JMapInfoIter const &))
 0002:803FF500       BaseMatrixFollower::getFollowTargetActor(const(void))
 0002:803FF50C       BaseMatrixFollower::calcFollowMatrix(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *))
 0002:803FF564       BaseMatrixFollower::isEnableFollow(const(void))
 0002:803FF598       BaseMatrixFollowTarget::BaseMatrixFollowTarget((JMapLinkInfo const *))
 0002:803FF5DC       BaseMatrixFollowTarget::set((LiveActor *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *,BaseMatrixFollowValidater *))
 0002:803FF63C       BaseMatrixFollowTarget::getHostBaseMtx(const(void))
 0002:803FF684       BaseMatrixFollowTarget::isValid(const(long))
 0002:803FF6A8       BaseMatrixFollowTargetHolder::BaseMatrixFollowTargetHolder((char const *,long,long))
 0002:803FF7E8       BaseMatrixFollowTargetHolder::initAfterPlacement((void))
 0002:803FF86C       BaseMatrixFollowTargetHolder::movement((void))
 0002:803FF8E8       BaseMatrixFollowTargetHolder::addFollower((BaseMatrixFollower *))
 0002:803FF974       BaseMatrixFollowTargetHolder::setFollowTargetInfo((LiveActor *,JMapInfoIter const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *,BaseMatrixFollowValidater *))
 0002:803FFA00       BaseMatrixFollowTargetHolder::findFollowTarget((JMapLinkInfo const *))
 0002:803FFAE8       BaseMatrixFollowTargetHolder::findFollowTarget((BaseMatrixFollower const *))
 0002:803FFB04       MR::isValidFollowID((JMapInfoIter const &))
 0002:803FFB58       MR::addBaseMatrixFollower((BaseMatrixFollower *))
 0002:803FFB9C       MR::addBaseMatrixFollowTarget((LiveActor *,JMapInfoIter const &,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const *,BaseMatrixFollowValidater *))
 0002:803FFC18       nullsub_102
 0002:803FFC7C       BaseMatrixFollowTargetHolder::~BaseMatrixFollowTargetHolder((void))
 0002:803FFD50       BezierSurface::BezierSurface((long,ulong))
 0002:803FFEBC       BezierSurface::setST((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &))
 0002:803FFF1C       BezierSurface::calcBuffer((void))
 0002:803FFF68       BezierSurface::draw(const(void))
 0002:803FFF8C       BezierSurface::calcTrianglePatchVertix(const(JGeometry::TVec3<f> *))
 0002:80400060       BezierSurface::calcTrianglePatchNormal(const(JGeometry::TVec3<f> *))
 0002:80400190       BezierSurface::drawTrianglePatchPos(const(void))
 0002:80400238       BezierSurface::drawTrianglePatchPosNorm(const(void))
 0002:80400314       BezierSurface::drawTrianglePatchPosST(const(void))
 0002:80400440       BezierSurface::drawTrianglePatchPosNormST(const(void))
 0002:804005D4       MR::BothDirPtrLink::BothDirPtrLink((void *))
 0002:804005EC       MR::BothDirPtrLink::~BothDirPtrLink((void))
 0002:80400650       MR::BothDirPtrList::BothDirPtrList((bool))
 0002:80400688       MR::BothDirPtrList::~BothDirPtrList((void))
 0002:804006F4       MR::BothDirPtrList::initiate((void))
 0002:80400708       MR::BothDirPtrList::setFirst((MR::BothDirPtrLink *))
 0002:8040072C       MR::BothDirPtrList::append((MR::BothDirPtrLink *))
 0002:804007D0       MR::BothDirPtrList::remove((MR::BothDirPtrLink *))
 0002:8040087C       CollisionPartsFilterSensor::isInvalidParts(const(CollisionParts const *))
 0002:80400894       CollisionPartsFilterActor::isInvalidParts(const(CollisionParts const *))
 0002:804008B0       TDDraw::setViewMtx((float *[4]))
 0002:804008BC       TDDraw::loadViewMtx((float *[4]))
 0002:804008C4       TDDraw::setModelMtx((float *[4]))
 0002:80400914       TDDraw::resetViewMtx((void))
 0002:80400954       TDDraw::close((void))
 0002:80400988       TDDraw::setup((ulong,ulong,uchar))
 0002:80400F64       TDDraw::sendPoint((JGeometry::TVec3<f> const &,ulong))
 0002:80400FA4       TDDraw::sendPoint((JGeometry::TVec3<f> const &))
 0002:80400FB4       TDDraw::drawLine((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,ulong))
 0002:80401028       TDDraw::drawCircle((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,ulong,ulong))
 0002:804010D8       TDDraw::drawCircle((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,ulong,ulong))
 0002:804011E4       TDDraw::drawFillCircle((JGeometry::TVec3<f> const &,float,ulong,ulong,ulong))
 0002:80401348       TDDraw::drawFillCircle((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,ulong,ulong))
 0002:804014A0       TDDraw::drawFillFan((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,ulong,float,float,ulong))
 0002:804015CC       TDDraw::drawCylinder((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,ulong,ulong,ulong))
 0002:80401784       TDDraw::drawSpherePart((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,float,float,float,float,float,ulong,ulong,ulong))
 0002:80401B14       TDDraw::drawSphere((JGeometry::TVec3<f> const &,float,ulong,ulong))
 0002:80401B84       TDDraw::drawSphere3D((JGeometry::TVec3<f>,float,ulong,ulong))
 0002:80401C0C       TDDraw::drawTexture((JGeometry::TVec2<f> const &,JUTTexture *,JGeometry::TVec2<f> const &))
 0002:80401D00       TDDraw::drawTexture3D((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float,JUTTexture *,bool,bool))
 0002:80402008       TDDraw::drawFillBox((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,ulong))
 0002:804020A4       TDDraw::drawFillBox((JGeometry::TVec2<f> const &,JGeometry::TVec2<f> const &,ulong))
 0002:80402140       TDDraw::drawFillBox3D((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,ulong))
 0002:8040247C       MR::loadProjectionMtx((void))
 0002:80402480       TDDraw::cameraInit2D((void))
 0002:80402660       TDDraw::mixFogColor((JGeometry::TVec3<f>,float,ulong))
 0002:8040273C       TDDraw::tileConversion8((uchar *,ulong,ulong))
 0002:8040280C       TDDraw::tileConversion16((ushort *,ulong,ulong))
 0002:804028E0       TDDraw::getTexel32((JUTTexture const *,ulong,ulong))
 0002:804028F8       TDDraw::getTexel32((uchar const *,ulong,ulong,ulong))
 0002:80402944       TDDraw::setTexel32((JUTTexture *,ulong,ulong,ulong))
 0002:80402968       TDDraw::setTexel32((uchar *,ulong,ulong,ulong,ulong))
 0002:804029B0       TDDraw::invProject((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,float *[4],float const *,float const *,bool))
 0002:80402BE4       TDDraw::project2D((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80402CF0       TDDraw::project2D((JGeometry::TVec2<f> *,JGeometry::TVec3<f> const &))
 0002:80402D30       TDDraw::fix2Dpos((JGeometry::TVec3<f> *))
 0002:80402DE0       TDDraw::setGXColor((ulong,_GXColor *))
 0002:80402E00       MR::ddSetVtxFormat((ulong))
 0002:80402F18       MR::ddChangeTev((void))
 0002:80403078       MR::ddSendVtxData((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &))
 0002:804030F0       MR::ddSendVtxData((JGeometry::TVec3<f> const &,JGeometry::TVec2<f> const &))
 0002:80403140       MR::ddLightingOn((ushort))
 0002:80403198       MR::ddLightingOff((void))
 0002:80403224       FixedPosition::FixedPosition((LiveActor const *,char const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80403280       FixedPosition::FixedPosition((LiveActor const *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80403314       FixedPosition::calc((void))
 0002:80403514       FixedPosition::init((float *[4],JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80403574       FixedPosition::FixedPosition((LiveActor const *,char const *,LiveActor const *))
 0002:804036A0       BindSphere::BindSphere((JGeometry::TVec3<f> const &,float))
 0002:804036E0       BindCone::BindCone((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float,float))
 0002:80403788       BindCone::isInPoint(const(JGeometry::TVec3<f> const &))
 0002:80403870       BindCone::calcVertexPosition((void))
 0002:804038E8       BindCone::calcGeneratrixLength((void))
 0002:80403970       BindCone::setDirection((JGeometry::TVec3<f> const &))
 0002:804039A8       MR::bindSpereToCone((BindResult *,JGeometry::TVec3<f> const &,BindSphere const &,BindCone const &))
 0002:80404034       MR::updateBindPositionAndVelocity((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,BindResult const &,float))
 0002:80404104       IKJoint::IKJoint((void))
 0002:80404150       IKJoint::setRootBoneLength((float))
 0002:80404160       MR::makeMtxSideUp((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80404164       IKJoint::checkReachIKTarget((float,float,float))
 0002:80404198       IKJoint::calcIKRootAngleCosign((float,float,float))
 0002:8040426C       IKJoint::update((float *[4],float *[4],float *[4],JGeometry::TVec3<f> const &))
 0002:8040438C       IKJoint::updateByLocalRootAndWorldTarget((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8040442C       IKJoint::updateByLocalRootAndDirection((JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:804044CC       IKJoint::updateByUpVector((JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:8040456C       IKJoint::updateByDistanceOnly((float))
 0002:804046D8       IKJoint::calcToTargetMatrixByFirstPose(const(JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> *,JGeometry::TPosition3<Q29JGeometry38TMatrix34<Q29JGeometry13SMatrix34C<f>>> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &))
 0002:80404838       IKJoint::getEndJointPosition(const(JGeometry::TVec3<f> *))
 0002:804048B4       IKJoint::getMinLimitDistance(const(void))
 0002:804048C8       IKJoint::getMaxLimitDistance(const(void))
 0002:804048D8       JMapIdInfo::JMapIdInfo((long,JMapInfoIter const &))
 0002:8040491C       JMapIdInfo::JMapIdInfo((long,long))
 0002:80404928       JMapIdInfo::initialize((long,JMapInfoIter const &))
 0002:80404960       MR::createJMapIdInfoFromGroupId((JMapInfoIter const &))
 0002:804049B4       MR::createJMapIdInfoFromClippingGroupId((JMapInfoIter const &))
 0002:80404A08       JMapInfo::JMapInfo((void))
 0002:80404A20       JMapInfo::~JMapInfo((void))
 0002:80404A60       JMapInfo::attach((void const *))
 0002:80404A8C       JMapInfo::searchItemInfo(const(char const *))
 0002:80404B2C       JMapInfo::getValueType(const(char const *))
 0002:80404B78       JMapInfo::getValueFast(const(int,int,char const **))
 0002:80404BF0       JMapInfo::getValueFast(const(int,int,ulong *))
 0002:80404C7C       JMapInfo::getValueFast(const(int,int,long *))
 0002:80404D30       MR::findJMapInfoElementNoCase((JMapInfo const *,char const *,char const *,int))
 0002:80404DD8       JMapInfo::findElementBinary(const(char const *,char const *))
 0002:80404E9C       JMapLinkInfo::JMapLinkInfo((JMapInfoIter const &,bool))
 0002:80404EEC       JMapLinkInfo::isValid(const(void))
 0002:80404F34       JMapLinkInfo::setLinkedInfo((JMapInfoIter const &))
 0002:80405000       JMapLinkInfo::setLinkInfo((JMapInfoIter const &))
 0002:804050D4       JointController::JointController((void))
 0002:80405100       JointController::registerCallBack((void))
 0002:8040511C       JointController::calcJointMatrixAndSetSystem((J3DJoint *))
 0002:804051B0       JointController::calcJointMatrixAfterChildAndSetSystem((J3DJoint *))
 0002:80405234       JointController::staticCallBack((J3DJoint *,int))
 0002:804052C4       MR::setJointControllerParam((JointController *,LiveActor const *,ushort))
 0002:8040536C       J3DModel::getAnmMtx((int))
 0002:80405380       JointRumbler::JointRumbler((LiveActor *,char const *,float,float,ulong,bool,long))
 0002:80405494       JointRumbler::update((void))
 0002:804054FC       JointRumbler::start((void))
 0002:80405538       JointRumbler::reset((void))
 0002:80405598       JointRumbler::updateModelScale((float))
 0002:804055FC       JointRumbler::updateScale((JGeometry::TVec3<f> *,float))
 0002:8040563C       @unnamed@OctahedronBezierSurface_cpp@::calcBezierHandlePoint((JGeometry::TVec3<f> *,JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,JGeometry::TVec3<f> const &,float))
 0002:80405808       OctahedronBezierSurface::OctahedronBezierSurface((ulong))
 0002:80405AD0       OctahedronBezierSurface::getVertexPtr((long))
 0002:80405AF8       OctahedronBezierSurface::setDivideLevel((long))
 0002:80405B54       OctahedronBezierSurface::calcControlPoint((void))
 0002:80405BAC       OctahedronBezierSurface::calcControlPoint((void))
 0002:80406704       OctahedronBezierSurface::draw(const(void))
 0002:80406758       PostureHolder::PostureHolder((LiveActor const *))
 0002:804067B0       PostureHolder::store((LiveActor const *))
 0002:80406804       PostureHolder::restore((LiveActor *))
 0002:8040685C       RumbleCalculator::RumbleCalculator((float,float,float,ulong))
 0002:80406890       RumbleCalculator::start((ulong))
 0002:804068B8       RumbleCalculator::calc((void))
 0002:804069CC       RumbleCalculator::reset((void))
 0002:80406A18       RumbleCalculatorCosMultLinear::calcValues((JGeometry::TVec3<f> *,JGeometry::TVec3<f> const &))
 0002:80406A9C       SpringValue::SpringValue((void))
 0002:80406AC0       SpringValue::setParam((float,float,float,float,float))
 0002:80406AF0       SpringValue::update((void))
 0002:80406B24       MR::createTriangleFilterFunc((bool (*)(Triangle const *)))
 0002:80406B6C       TriangleFilterDangerCode::isInvalidTriangle(const(Triangle const *))
 0002:80406C18       TriggerChecker::TriggerChecker((void))
 0002:80406C28       TriggerChecker::update((bool))
 0002:80406C38       TriggerChecker::setInput((bool))
 0002:80406C4C       TriggerChecker::getOnTrigger(const(void))
 0002:80406C74       TriggerChecker::getOffTrigger(const(void))
 0002:80406C9C       ValueControl::ValueControl((int))
 0002:80406CB4       ValueControl::setDirToOne((void))
 0002:80406CC0       ValueControl::setDirToOneResetFrame((void))
 0002:80406CCC       ValueControl::setDirToZero((void))
 0002:80406CD8       ValueControl::setDirToZeroResetFrame((void))
 0002:80406CE4       ValueControl::setMaxFrame((int))
 0002:80406D5C       ValueControl::update((void))
 0002:80406DA8       ValueControl::setZero((void))
 0002:80406DE4       ValueControl::setOne((void))
 0002:80406E20       ValueControl::getValue(const(void))
 0002:80406E6C       ValueControl::resetFrame((void))
 0002:80406E90       @unnamed@NWC24Function_cpp@::isLastUpdateToday((long long *))
 0002:80406F28       MR::calcWiiMailSize((ushort const *,ushort const *,ulong,ulong))
 0002:8040701C       MR::checkWiiMailLimit((ulong))
 0002:80407074       MR::updateWiiMailSentSize((ulong))
 0002:804070D8       MR::getGameMessageDirect((char const *))
 0002:80407274       NWC24Messenger::term((char const *))
 0002:804072B0       NWC24Messenger::isSent(const(char const *))
 0002:804072E4       NWC24Messenger::isError(const(char const *))
 0002:804073A4       NWC24Messenger::isRunning(const(void))
 0002:804073D8       NWC24Messenger::reset((void))
 0002:80407550       NWC24MessengerSub::SendState::SendState((NWC24Messenger *))
 0002:804075C4       NWC24MessengerSub::SendState::initAfterResourceLoaded((void))
 0002:8040761C       NWC24MessengerSub::SendState::updateNerve((void))
 0002:80407680       NWC24MessengerSub::SendState::calcAnim((void))
 0002:804076E4       NWC24MessengerSub::SendState::draw(const(void))
 0002:80407748       NWC24MessengerSub::SendState::reset((void))
 0002:804077BC       NWC24MessengerSub::SendState::exeWait((void))
 0002:8040785C       NWC24MessengerSub::SendState::exeOpenBG((void))
 0002:8040790C       NWC24MessengerSub::SendState::exeRunBG((void))
 0002:804079DC       NWC24MessengerSub::SendState::exeOpenFG((void))
 0002:80407A7C       NWC24MessengerSub::SendState::exeRunFG((void))
 0002:80407AFC       NWC24MessengerSub::SendState::exeCloseFG((void))
 0002:80407B6C       NWC24MessengerSub::SendState::exeUpdateLimitFG((void))
 0002:80407BD0       NWC24MessengerSub::SendState::exeRetryErrorFG((void))
 0002:80407C4C       NWC24MessengerSub::SendState::exeOpenErrorFG((void))
 0002:80407CEC       def_80407CA0
 0002:80407D38       NWC24MessengerSub::SendState::exeSendFatalErrorFG((void))
 0002:80407E50       NWC24MessengerSub::SendState::exeCloseErrorFG((void))
 0002:80407F18       NWC24MessengerSub::SendState::exeSendFullErrorFG((void))
 0002:80407FD0       NWC24MessengerSub::SendState::exeWaitCloseSysInfoMini((void))
 0002:80408038       NWC24MessengerSub::SendState::selectTask((void))
 0002:80408074       NWC24MessengerSub::SendState::openSystem((void))
 0002:8040808C       NWC24MessengerSub::SendState::isRestorableError(const(void))
 0002:8040812C       NWC24MessengerSub::SendState::checkFinish((void))
 0002:80408144       NWC24MessengerSub::SendState::closeSystem((void))
 0002:8040819C       NWC24MessengerSub::SendState::hasFatalErrorOccured(const(void))
 0002:804081C0       NWC24MessengerSub::SendState::doneTask((void))
 0002:804081E8       NWC24MessengerSub::SendState::appearSysInfo((char const *,long))
 0002:8040828C       NWC24MessengerSub::SendState::setNerveAfterSysInfoWindowMiniDisappear((Nerve const *))
 0002:804085C8       NWC24MessengerSub::@unnamed@NWC24Messenger_cpp@::SendStateNrvCloseBG::execute(const(Spine *))
 0002:8040861C       NWC24MessengerSub::@unnamed@NWC24Messenger_cpp@::SendStateNrvRetry::execute(const(Spine *))
 0002:8040874C       NWC24SendThread::NWC24SendThread((long,JKRHeap *))
 0002:804088C8       NWC24SendThread::isDone((NWC24Err *,ulong *))
 0002:8040893C       NWC24SendThread::threadProc((void *))
 0002:80408B44       NWC24SendThread::checkTotalSize((NWC24SendThread::MsgSendStatus *))
 0002:80408BA4       NWC24SendThread::setToMyself((NWC24MsgObj *))
 0002:80408C88       NWC24System::open((NWC24Err *,long *))
 0002:80408D14       NWC24System::close((NWC24Err *))
 0002:80408D78       MR::strlenUTF16((ushort const *))
 0002:80408DAC       LuigiMailDirector::LuigiMailDirector((void))
 0002:80408DCC       LuigiMailDirector::initAfterResourceLoaded((void))
 0002:80409010       JASDSPChannel::free((void))
 0002:80409020       LuigiMailDirector::prepareMessage((void))
 0002:804090A0       ReceiverTagMail::ReceiverTagMail((char const *,char const *,char const *))
 0002:8040912C       ReceiverTagMail::send((uchar const *,ulong))
 0002:804091B0       ReceiverTagMail::update((void))
 0002:80409210       ReceiverTagMail::isDone(const(void))
 0002:8040922C       JKRHeap::JKRHeap((void *,ulong,JKRHeap *,bool))
 0002:80409344       JSUList<11JKRDisposer>::~JSUList<11JKRDisposer>((void))
 0002:804093A0       JSUTree<7JKRHeap>::~JSUTree<7JKRHeap>((void))
 0002:80409470       JKRHeap::~JKRHeap((void))
 0002:80409564       JKRHeap::initArena((char **,ulong *,int))
 0002:8040962C       DVDSetAutoInvalidation
 0002:8040965C       JKRHeap::alloc((ulong,int,JKRHeap *))
 0002:804096AC       JKRHeap::free((void *,JKRHeap *))
 0002:80409714       JKRHeap::dispose((void))
 0002:80409784       JKRHeap::resize((void *,ulong))
 0002:804097B4       JKRHeap::getTotalFreeSize((void))
 0002:804097C4       JKRHeap::findFromRoot((void *))
 0002:80409808       JKRHeap::find(const(void *))
 0002:804098B4       JKRHeap::findAllHeap(const(void *))
 0002:80409960       JKRHeap::dispose_subroutine((ulong,ulong))
 0002:80409A14       JKRHeap::dispose((void *,ulong))
 0002:80409A3C       JKRHeap::dispose_subroutine((ulong,ulong))
 0002:80409A90       JKRHeap::copyMemory((void *,void *,ulong))
 0002:80409AB8       JKRDefaultMemoryErrorRoutine(void *,ulong,int)
 0002:80409AD8       JKRHeap::setErrorHandler((void (*)(void *,ulong,int)))
 0002:80409AF8       __nw(ulong)
 0002:80409B04       __nw(ulong,int)
 0002:80409B0C       __nw(ulong,JKRHeap *,int)
 0002:80409B1C       __nwa(ulong)
 0002:80409B28       __nwa(ulong,int)
 0002:80409B30       __nwa(ulong,JKRHeap *,int)
 0002:80409B40       __dl(void *)
 0002:80409B48       __dla(void *)
 0002:80409B50       JKRHeap::state_register(const(JKRHeap::TState *,ulong))
 0002:80409B54       JKRHeap::state_compare(const(JKRHeap::TState const &,JKRHeap::TState const &))
 0002:80409B6C       JKRHeap::state_dump(const(JKRHeap::TState const &))
 0002:80409B70       JKRHeap::setAltAramStartAdr((ulong))
 0002:80409B78       JKRHeap::getAltAramStartAdr((void))
 0002:80409B80       JKRHeap::do_changeGroupID((uchar))
 0002:80409B88       JKRHeap::do_getCurrentGroupId((void))
 0002:80409B90       JKRHeap::dump_sort((void))
 0002:80409B98       JSUTreeIterator<7JASHeap>::__pp((void))
 0002:80409BB4       JSUListIterator<12JKRAramBlock>::__pp((int))
 0002:80409BC8       JKRExpHeap::createRoot((int,bool))
 0002:80409C48       JKRExpHeap::create((ulong,JKRHeap *,bool))
 0002:80409D20       JKRExpHeap::create((void *,ulong,JKRHeap *,bool))
 0002:80409DD0       JKRExpHeap::do_destroy((void))
 0002:80409E54       JKRExpHeap::JKRExpHeap((void *,ulong,JKRHeap *,bool))
 0002:80409EDC       JKRUnitHeap::~JKRUnitHeap((void))
 0002:80409F48       JKRExpHeap::do_alloc((ulong,int))
 0002:8040A050       JKRExpHeap::allocFromHead((ulong,int))
 0002:8040A2B4       JKRExpHeap::allocFromHead((ulong))
 0002:8040A398       JKRExpHeap::allocFromTail((ulong,int))
 0002:8040A4F8       JKRExpHeap::allocFromTail((ulong))
 0002:8040A5D4       JKRExpHeap::do_free((void *))
 0002:8040A65C       JKRExpHeap::do_freeAll((void))
 0002:8040A6D0       JKRExpHeap::do_freeTail((void))
 0002:8040A768       JKRExpHeap::do_changeGroupID((uchar))
 0002:8040A7B8       JKRExpHeap::do_resize((void *,ulong))
 0002:8040A96C       JKRExpHeap::do_getSize((void *))
 0002:8040A9F0       JKRExpHeap::do_getFreeSize((void))
 0002:8040AA5C       JKRExpHeap::do_getMaxFreeBlock((void))
 0002:8040AAD0       JKRExpHeap::do_getTotalFreeSize((void))
 0002:8040AB34       JKRExpHeap::getUsedSize(const(uchar))
 0002:8040ABAC       JKRExpHeap::isEmpty((void))
 0002:8040ABF4       JKRExpHeap::appendUsedList((JKRExpHeap::CMemBlock *))
 0002:8040AC94       JKRExpHeap::setFreeBlock((JKRExpHeap::CMemBlock *,JKRExpHeap::CMemBlock *,JKRExpHeap::CMemBlock *))
 0002:8040ACE0       JKRExpHeap::removeFreeBlock((JKRExpHeap::CMemBlock *))
 0002:8040AD14       JKRExpHeap::removeUsedBlock((JKRExpHeap::CMemBlock *))
 0002:8040AD48       JKRExpHeap::recycleFreeBlock((JKRExpHeap::CMemBlock *))
 0002:8040AEDC       JKRExpHeap::joinTwoBlocks((JKRExpHeap::CMemBlock *))
 0002:8040AFB0       JKRExpHeap::check((void))
 0002:8040B198       JKRExpHeap::dump((void))
 0002:8040B368       JKRExpHeap::dump_sort((void))
 0002:8040B568       JKRExpHeap::CMemBlock::initiate((JKRExpHeap::CMemBlock *,JKRExpHeap::CMemBlock *,ulong,uchar,uchar))
 0002:8040B588       JKRExpHeap::CMemBlock::allocFore((ulong,uchar,uchar,uchar,uchar))
 0002:8040B5CC       JKRExpHeap::CMemBlock::allocBack((ulong,uchar,uchar,uchar,uchar))
 0002:8040B624       JKRExpHeap::CMemBlock::getHeapBlock((void *))
 0002:8040B640       JKRExpHeap::state_register(const(JKRHeap::TState *,ulong))
 0002:8040B6E8       JKRUnitHeap::state_compare(const(JKRHeap::TState const &,JKRHeap::TState const &))
 0002:8040B72C       JKRSolidHeap::create((ulong,JKRHeap *,bool))
 0002:8040B7D0       JKRUnitHeap::do_destroy((void))
 0002:8040B830       JKRSolidHeap::JKRSolidHeap((void *,ulong,JKRHeap *,bool))
 0002:8040B8F8       JKRSolidHeap::do_alloc((ulong,int))
 0002:8040B9A0       JKRSolidHeap::allocFromHead((ulong,int))
 0002:8040BA64       JKRSolidHeap::allocFromTail((ulong,int))
 0002:8040BB20       JKRSolidHeap::do_freeAll((void))
 0002:8040BB80       JKRSolidHeap::do_freeTail((void))
 0002:8040BC0C       JKRSolidHeap::do_getSize((void *))
 0002:8040BC6C       JKRSolidHeap::check((void))
 0002:8040BCF8       JKRSolidHeap::dump((void))
 0002:8040BDF0       JKRSolidHeap::state_register(const(JKRHeap::TState *,ulong))
 0002:8040BE9C       JKRUnitHeap::create((ulong,ulong,ulong,JKRHeap *,bool))
 0002:8040C054       JKRUnitHeap::JKRUnitHeap((uchar *,uchar *,ulong,ulong,ulong,ulong,JKRHeap *,bool))
 0002:8040C15C       JKRUnitHeap::clearBatArea((void))
 0002:8040C1F8       JKRUnitHeap::find1FreeBlock((int))
 0002:8040C2E8       JKRUnitHeap::findFreeBlock((int,ulong))
 0002:8040C30C       JKRUnitHeap::findFreeBlock_fromHead((ulong))
 0002:8040C498       JKRUnitHeap::findFreeBlock_fromTail((ulong))
 0002:8040C614       JKRUnitHeap::do_freeAll((void))
 0002:8040C660       JKRUnitHeap::do_getSize((void *))
 0002:8040C6AC       JKRUnitHeap::do_getFreeSize((void))
 0002:8040C6E4       JKRUnitHeap::do_getMaxFreeBlock((void))
 0002:8040C720       JKRUnitHeap::do_getTotalFreeSize((void))
 0002:8040C728       JKRUnitHeap::indexToAddress((int))
 0002:8040C758       JKRUnitHeap::addressToIndex((void *))
 0002:8040C7A0       JKRUnitHeap::isUnitUsed(const(int))
 0002:8040C7EC       JKRUnitHeap::setUnitUsed((int))
 0002:8040C830       JKRUnitHeap::check((void))
 0002:8040C8F8       JKRUnitHeap::dump((void))
 0002:8040C9A4       JKRUnitHeap::state_register(const(JKRHeap::TState *,ulong))
 0002:8040CA60       JKRDisposer::JKRDisposer((void))
 0002:8040CB1C       JKRDisposer::~JKRDisposer((void))
 0002:8040CB9C       JKRThread::JKRThread((ulong,int,int))
 0002:8040CC38       JKRThread::JKRThread((JKRHeap *,ulong,int,int))
 0002:8040CCD0       JKRThread::~JKRThread((void))
 0002:8040CDA4       JKRThread::setCommon_mesgQueue((JKRHeap *,int))
 0002:8040CE10       JKRThread::setCommon_heapSpecified((JKRHeap *,ulong,int))
 0002:8040CEAC       JKRThread::searchThread((OSThread *))
 0002:8040CEE4       JKRThreadSwitch::enter((JKRThread *,int))
 0002:8040CF7C       __sinit__JKRThread_cpp
 0002:8040CFE4       JKRThread::TLoad::TLoad((void))
 0002:8040D020       JKRThread::TLoad::clear((void))
 0002:8040D1B8       JKRAram::create((ulong,ulong,long,long,long))
 0002:8040D250       JKRAram::~JKRAram((void))
 0002:8040D2E4       JKRAram::run((void))
 0002:8040D348       JKRAram::checkOkAddress((uchar *,ulong,JKRAramBlock *,ulong))
 0002:8040D3E4       JKRAram::changeGroupIdIfNeed((uchar *,int))
 0002:8040D444       JKRAram::mainRamToAram((uchar *,ulong,ulong,JKRExpandSwitch,ulong,JKRHeap *,int,ulong *))
 0002:8040D670       JKRAram::aramToMainRam((ulong,uchar *,ulong,JKRExpandSwitch,ulong,JKRHeap *,int,ulong *))
 0002:8040D8CC       JKRDecompressFromAramToMainRam(ulong,void *,ulong,ulong,ulong,ulong *)
 0002:8040DD8C       __sinit__JKRDvdAramRipper_cpp
 0002:8040DDD4       JKRCheckCompressed_noASR(uchar *)
 0002:8040DE00       JKRDecompExpandSize(uchar *)
 0002:8040DE24       JKRAram::decideAramGroupId((int))
 0002:8040DECC       JKRAramHeap::JKRAramHeap((ulong,ulong))
 0002:8040DF98       JKRAramHeap::~JKRAramHeap((void))
 0002:8040E048       JKRAramHeap::alloc((ulong,JKRAramHeap::EAllocMode))
 0002:8040E0C0       JKRAramHeap::allocFromHead((ulong))
 0002:8040E128       JKRAramHeap::allocFromTail((ulong))
 0002:8040E268       JKRAramBlock::JKRAramBlock((ulong,ulong,ulong,uchar,bool))
 0002:8040E334       JKRAramBlock::~JKRAramBlock((void))
 0002:8040E3F0       JKRAramBlock::allocHead((ulong,uchar,JKRAramHeap *))
 0002:8040E490       JKRAramBlock::allocTail((ulong,uchar,JKRAramHeap *))
 0002:8040E538       JKRAramPiece::prepareCommand((int,ulong,ulong,ulong,JKRAramBlock *,void (*)(ulong)))
 0002:8040E5B0       JKRAramPiece::startDMA((JKRAMCommand *))
 0002:8040E5B4       JKRAramPiece::orderAsync((int,ulong,ulong,ulong,JKRAramBlock *,void (*)(ulong)))
 0002:8040E6F4       JKRAramPiece::sync((JKRAMCommand *,int))
 0002:8040E7B0       JKRAramPiece::orderSync((int,ulong,ulong,ulong,JKRAramBlock *))
 0002:8040E840       JKRAramPiece::doneDMA((ulong))
 0002:8040E89C       JKRAMCommand::JKRAMCommand((void))
 0002:8040E964       JKRAMCommand::~JKRAMCommand((void))
 0002:8040EA48       JKRAramStream::create((long))
 0002:8040EAB4       JKRDecomp::JKRDecomp((long))
 0002:8040EB5C       JKRAramStream::run((void))
 0002:8040EBB4       JKRAramStream::writeToAram((JKRAramStreamCommand *))
 0002:8040EDA8       JKRAramStream::write_StreamToAram_Async((JSUFileInputStream *,ulong,ulong,ulong,ulong *))
 0002:8040EE7C       JKRAramStream::sync((JKRAramStreamCommand *,int))
 0002:8040EF10       JKRAramStream::setTransBuffer((uchar *,ulong,JKRHeap *))
 0002:8040EF64       JKRFileLoader::JKRFileLoader((void))
 0002:8040F014       JKRFileLoader::~JKRFileLoader((void))
 0002:8040F090       JKRFileLoader::unmount((void))
 0002:8040F0C8       JKRFileLoader::getGlbResource((char const *,JKRFileLoader *))
 0002:8040F16C       JKRFileLoader::removeVolumeList((JSULink<13JKRFileLoader> *))
 0002:8040F2E4       JKRArcFinder::JKRArcFinder((JKRArchive *,long,long))
 0002:8040F370       JKRArcFinder::findNextFile((void))
 0002:8040F40C       JKRFileFinder::JKRFileFinder((void))
 0002:8040F468       JKRArchive::check_mount_already((long))
 0002:8040F4BC       JKRArchive::check_mount_already((long,JKRHeap *))
 0002:8040F528       JKRArchive::mount((char const *,JKRArchive::EMountMode,JKRHeap *,JKRArchive::EMountDirection))
 0002:8040F584       JKRArchive::mount((long,JKRArchive::EMountMode,JKRHeap *,JKRArchive::EMountDirection))
 0002:8040F6C8       JKRArchive::becomeCurrent((char const *))
 0002:8040F74C       JKRArchive::getDirEntry(const(JKRArchive::SDirEntry *,ulong))
 0002:8040F7C4       JKRArchive::getResource((char const *))
 0002:8040F840       JKRArchive::getResource((ulong,char const *))
 0002:8040F8C0       JKRArchive::getResource((ushort))
 0002:8040F970       JKRArchive::readResource((void *,ulong,ulong,char const *))
 0002:8040FA14       JKRArchive::readResource((void *,ulong,char const *))
 0002:8040FAB0       JKRArchive::readResource((void *,ulong,ushort))
 0002:8040FB28       JKRArchive::removeResourceAll((void))
 0002:8040FBB0       JKRArchive::removeResource((void *))
 0002:8040FC10       JKRMemArchive::removeResource((void *))
 0002:8040FC4C       JKRArchive::getResSize(const(void const *))
 0002:8040FC80       JKRArchive::countResource(const(void))
 0002:8040FCC4       JKRArchive::countFile(const(char const *))
 0002:8040FD24       JKRArchive::getFirstFile(const(char const *))
 0002:8040FDC8       JKRArchive::getFileAttribute(const(ulong))
 0002:8040FE00       JKRArchive::JKRArchive((void))
 0002:8040FE4C       JKRArchive::JKRArchive((long,JKRArchive::EMountMode))
 0002:8040FF40       JKRArchive::isSameName(const(JKRArchive::CArcName &,ulong,ushort))
 0002:8040FF88       JKRArchive::findResType(const(ulong))
 0002:8040FFBC       JKRArchive::findDirectory(const(char const *,ulong))
 0002:80410094       JKRArchive::findTypeResource(const(ulong,char const *))
 0002:8041014C       JKRArchive::findFsResource(const(char const *,ulong))
 0002:8041022C       JKRArchive::findIdxResource(const(ulong))
 0002:80410254       JKRArchive::findNameResource(const(char const *))
 0002:804102DC       JKRArchive::findPtrResource(const(void const *))
 0002:80410310       JKRArchive::findIdResource(const(ushort))
 0002:80410388       JKRArchive::CArcName::store((char const *))
 0002:80410418       JKRArchive::CArcName::store((char const *,char))
 0002:804104CC       JKRArchive::setExpandSize((JKRArchive::SDIFileEntry *,ulong))
 0002:80410508       JKRArchive::getExpandSize(const(JKRArchive::SDIFileEntry *))
 0002:80410584       JKRMemArchive::JKRMemArchive((long,JKRArchive::EMountDirection))
 0002:80410634       JKRMemArchive::~JKRMemArchive((void))
 0002:804106DC       JKRMemArchive::fixedInit((long))
 0002:8041071C       JKRMemArchive::mountFixed((void *,JKRMemBreakFlag))
 0002:804107E8       JKRMemArchive::open((long,JKRArchive::EMountDirection))
 0002:80410930       JKRMemArchive::open((void *,ulong,JKRMemBreakFlag))
 0002:804109C8       JKRMemArchive::fetchResource((JKRArchive::SDIFileEntry *,ulong *))
 0002:804109FC       JKRMemArchive::fetchResource((void *,ulong,JKRArchive::SDIFileEntry *,ulong *))
 0002:80410AB0       JKRMemArchive::removeResourceAll((void))
 0002:80410B3C       JKRMemArchive::fetchResource_subroutine((uchar *,ulong,uchar *,ulong,int))
 0002:80410C08       JKRMemArchive::getExpandedResSize(const(void const *))
 0002:80410C80       JKRAramArchive::JKRAramArchive((long,JKRArchive::EMountDirection))
 0002:80410D24       JKRAramArchive::~JKRAramArchive((void))
 0002:80410E64       JKRAramArchive::open((long))
 0002:80411180       JKRAramArchive::fetchResource((JKRArchive::SDIFileEntry *,ulong *))
 0002:8041127C       JKRAramArchive::fetchResource((void *,ulong,JKRArchive::SDIFileEntry *,ulong *))
 0002:80411368       JKRAramArchive::fetchResource_subroutine((ulong,ulong,uchar *,ulong,int))
 0002:80411428       JKRAramArchive::fetchResource_subroutine((ulong,ulong,JKRHeap *,int,uchar **))
 0002:80411564       JKRAramArchive::getExpandedResSize(const(void const *))
 0002:804116D8       JKRConvertAttrToCompressionType(int)
 0002:804116F4       JKRDvdArchive::JKRDvdArchive((long,JKRArchive::EMountDirection))
 0002:80411798       JKRDvdArchive::~JKRDvdArchive((void))
 0002:804118B4       JKRDvdArchive::open((long))
 0002:80411B2C       JKRDvdArchive::fetchResource((JKRArchive::SDIFileEntry *,ulong *))
 0002:80411C2C       JKRDvdArchive::fetchResource((void *,ulong,JKRArchive::SDIFileEntry *,ulong *))
 0002:80411D10       JKRDvdArchive::fetchResource_subroutine((long,ulong,ulong,uchar *,ulong,int,int))
 0002:80411F04       JKRDvdArchive::fetchResource_subroutine((long,ulong,ulong,JKRHeap *,int,int,uchar **))
 0002:8041210C       JKRDvdArchive::getExpandedResSize(const(void const *))
 0002:80412238       JKRCompArchive::JKRCompArchive((long,JKRArchive::EMountDirection))
 0002:804122DC       JKRCompArchive::~JKRCompArchive((void))
 0002:8041241C       JKRCompArchive::open((long))
 0002:80412960       JKRCompArchive::fetchResource((JKRArchive::SDIFileEntry *,ulong *))
 0002:80412AD4       JKRCompArchive::fetchResource((void *,ulong,JKRArchive::SDIFileEntry *,ulong *))
 0002:80412C60       JKRCompArchive::removeResourceAll((void))
 0002:80412CF4       JKRCompArchive::removeResource((void *))
 0002:80412D64       JKRCompArchive::getExpandedResSize(const(void const *))
 0002:80412EF8       JKRDvdFile::JKRDvdFile((void))
 0002:80412F48       JKRDvdFile::JKRDvdFile((long))
 0002:80412FC0       JKRDvdFile::~JKRDvdFile((void))
 0002:80413048       JKRDvdFile::initiate((void))
 0002:804130B4       JKRDvdFile::open((long))
 0002:80413194       JKRDvdFile::close((void))
 0002:80413214       JKRDvdFile::readData((void *,long,long))
 0002:804132D0       JKRDvdFile::sync((void))
 0002:80413324       JKRDvdFile::doneProcess((long,DVDFileInfo *))
 0002:80413380       JKRFile::JKRFile((void))
 0002:804134AC       JKRDvdRipper::loadToMainRAM((long,uchar *,JKRExpandSwitch,ulong,JKRHeap *,JKRDvdRipper::EAllocDirection,ulong,int *,ulong *))
 0002:80413624       JKRDvdRipper::loadToMainRAM((JKRDvdFile *,uchar *,JKRExpandSwitch,ulong,JKRHeap *,JKRDvdRipper::EAllocDirection,ulong,int *,ulong *))
 0002:80413AC4       JKRDecompressFromDVD(JKRDvdFile *,void *,ulong,ulong,ulong,ulong,ulong *)
 0002:804140CC       WPADGetDpdSensitivity
 0002:804140D4       JKRDvdAramRipper::loadToAram((long,ulong,JKRExpandSwitch,ulong,ulong,ulong *))
 0002:80414178       JKRDvdAramRipper::loadToAram((JKRDvdFile *,ulong,JKRExpandSwitch,ulong,ulong,ulong *))
 0002:8041421C       JKRDvdAramRipper::loadToAram_Async((JKRDvdFile *,ulong,JKRExpandSwitch,void (*)(ulong),ulong,ulong,ulong *))
 0002:804142D4       JKRDvdAramRipper::callCommand_Async((JKRADCommand *))
 0002:80414628       JKRDvdAramRipper::syncAram((JKRADCommand *,int))
 0002:80414700       JKRADCommand::JKRADCommand((void))
 0002:80414740       JKRADCommand::~JKRADCommand((void))
 0002:804147D0       JKRDecompressFromDVDToAram(JKRDvdFile *,ulong,ulong,ulong,ulong,ulong,ulong *)
 0002:80414CA4       dmaBufferFlush(ulong)
 0002:80414E38       JKRDecomp::create((long))
 0002:80414F3C       JKRDecomp::run((void))
 0002:80414FFC       JKRDecomp::prepareCommand((uchar *,uchar *,ulong,ulong,void (*)(ulong)))
 0002:8041506C       JKRDecomp::sendCommand((JKRDecompCommand *))
 0002:80415080       JKRDecomp::sync((JKRDecompCommand *,int))
 0002:804150D4       JKRDecomp::orderSync((uchar *,uchar *,ulong,ulong))
 0002:80415144       JKRDecomp::decode((uchar *,uchar *,ulong,ulong))
 0002:804151C0       JKRDecomp::decodeSZP((uchar *,uchar *,ulong,ulong))
 0002:80415370       JKRDecomp::decodeSZS((uchar *,uchar *,ulong,ulong))
 0002:80415454       JKRDecomp::checkCompressed((uchar *))
 0002:804154CC       JKRDecompCommand::JKRDecompCommand((void))
 0002:80415534       JSUPtrLink::~JSUPtrLink((void))
 0002:804155D0       JSUPtrList::~JSUPtrList((void))
 0002:80415718       JSUPtrList::prepend((JSUPtrLink *))
 0002:804157BC       JSUPtrList::insert((JSUPtrLink *,JSUPtrLink *))
 0002:8041592C       JSUInputStream::read((void *,long))
 0002:8041598C       JSUInputStream::skip((long))
 0002:80415A0C       JSURandomInputStream::skip((long))
 0002:80415A70       JSURandomInputStream::seek((long,JSUStreamSeekFrom))
 0002:80415ABC       JSUIosBase::setState((JSUIosBase::EIoState))
 0002:80415AD4       JSUOutputStream::write((void const *,long))
 0002:80415B34       JSUOutputStream::skip((long,signed char))
 0002:80415BB8       JSURandomOutputStream::seek((long,JSUStreamSeekFrom))
 0002:80415C04       JSURandomOutputStream::getAvailable(const(void))
 0002:80415C60       JSUMemoryOutputStream::setBuffer((void *,long))
 0002:80415C74       JSUMemoryInputStream::readData((void *,long))
 0002:80415CEC       JSUMemoryOutputStream::seekPos((long,JSUStreamSeekFrom))
 0002:80415D7C       JSUMemoryOutputStream::writeData((void const *,long))
 0002:80415E84       JSUFileInputStream::JSUFileInputStream((JKRFile *))
 0002:80415EA4       JSUFileInputStream::readData((void *,long))
 0002:80415F7C       JSUFileInputStream::seekPos((long,JSUStreamSeekFrom))
 0002:80416064       JSUFileInputStream::getLength(const(void))
 0002:80416078       JGadget::getHashCode((char const *))
 0002:804160EC       JGadget::TNodeLinkList::splice((JGadget::TNodeLinkList::iterator,JGadget::TNodeLinkList &,JGadget::TNodeLinkList::iterator))
 0002:804161A0       JGadget::TNodeLinkList::Erase((JGadget::TLinkListNode *))
 0002:804161C4       JGadget::TNodeLinkList::Remove((JGadget::TLinkListNode *))
 0002:80416258       JGadget::TNodeLinkList::Initialize_((void))
 0002:80416270       JUTTexture::JUTTexture((int,int,_GXTexFmt))
 0002:8041636C       JUTTexture::~JUTTexture((void))
 0002:804163E4       JUTTexture::storeTIMG((ResTIMG const *,uchar))
 0002:8041655C       JUTTexture::storeTIMG((ResTIMG const *,JUTPalette *))
 0002:80416574       JUTTexture::storeTIMG((ResTIMG const *,JUTPalette *,_GXTlut))
 0002:80416684       JUTTexture::attachPalette((JUTPalette *))
 0002:804166C4       JUTTexture::init((void))
 0002:804166F4       JUTTexture::initTexObj((void))
 0002:804167EC       JUTTexture::initTexObj((_GXTlut))
 0002:804168EC       JUTTexture::load((_GXTexMapID))
 0002:80416940       JUTTexture::capture((int,int,_GXTexFmt,bool,uchar))
 0002:804169F4       JUTTexture::setEmbPaletteDelFlag((bool))
 0002:80416A08       JUTPalette::storeTLUT((_GXTlut,ResTLUT *))
 0002:80416A90       JUTPalette::storeTLUT((_GXTlut,_GXTlutFmt,JUTTransparency,ushort,void *))
 0002:80416AB4       JUTPalette::load((void))
 0002:80416AF4       JUTNameTab::JUTNameTab((void))
 0002:80416B34       JUTNameTab::JUTNameTab((ResNTAB const *))
 0002:80416B70       JUTNameTab::setResource((ResNTAB const *))
 0002:80416BA8       JUTNameTab::getIndex(const(char const *))
 0002:80416C48       JUTNameTab::getName(const(ushort))
 0002:80416C74       JUTNameTab::calcKeyCode(const(char const *))
 0002:80416CE4       JUTFont::setCharColor((JUtility::TColor))
 0002:80416D44       JUTFont::drawString_size_scale((float,float,float,float,char const *,ulong,bool))
 0002:80416E64       JUTException::JUTException((JUTDirectPrint *))
 0002:80416F40       JUTException::create((JUTDirectPrint *))
 0002:80416FA4       JUTException::run((void))
 0002:804170BC       JUTException::errorHandler((ushort,OSContext *,ulong,ulong))
 0002:804171AC       JUTException::panic_f_va((char const *,int,char const *,__va_list_struct *))
 0002:804172D4       JUTException::panic_f((char const *,int,char const *,...))
 0002:80417360       JUTException::showFloatSub((int,float))
 0002:80417460       JUTException::showFloat((OSContext *))
 0002:8041756C       JUTException::searchPartialModule((ulong,ulong *,ulong *,ulong *,ulong *))
 0002:8041762C       JUTException::showStack((OSContext *))
 0002:80417718       JUTException::showMainInfo((ushort,OSContext *,ulong,ulong))
 0002:80417958       JUTException::showGPR((OSContext *))
 0002:80417A08       JUTException::showMapInfo_subroutine((ulong,bool))
 0002:80417BB8       JUTException::showGPRMap((OSContext *))
 0002:80417CB0       JUTException::showSRR0Map((OSContext *))
 0002:80417D68       JUTException::printDebugInfo((JUTException::EInfoPage,ushort,OSContext *,ulong,ulong))
 0002:80417E0C       JUTException::isEnablePad(const(void))
 0002:80417E44       JUTException::printContext((ushort,OSContext *,ulong,ulong))
 0002:804182DC       JUTException::waitTime((long))
 0002:80418368       JUTException::createFB((void))
 0002:80418450       JUTException::queryMapAddress((char *,ulong,long,ulong *,ulong *,char *,ulong,bool,bool))
 0002:80418530       JUTException::createConsole((void *,ulong))
 0002:80418610       JUTExternalFB::JUTExternalFB((_GXRenderModeObj *,_GXGamma,void *,ulong))
 0002:8041875C       JUTDirectPrint::start((void))
 0002:804187D4       JUTDirectPrint::erase((int,int,int,int))
 0002:80418868       JUTDirectPrint::drawChar((int,int,int))
 0002:80418AB4       JUTDirectPrint::changeFrameBuffer((void *,ushort,ushort))
 0002:80418AE4       JUTDirectPrint::printSub((ushort,ushort,char const *,__va_list_struct *,bool))
 0002:80418C1C       JUTDirectPrint::drawString((ushort,ushort,char *))
 0002:80418C2C       JUTDirectPrint::drawString_f((ushort,ushort,char const *,...))
 0002:80418CBC       JUTDirectPrint::setCharColor((JUtility::TColor))
 0002:80418CD0       JUTDirectPrint::setCharColor((uchar,uchar,uchar))
 0002:80418E44       nullsub_29
 0002:80418E48       JUTAssertion::flush_subroutine((void))
 0002:80418E84       JUTAssertion::flushMessage((void))
 0002:80418F3C       JUTAssertion::flushMessage_dbPrint((void))
 0002:80419114       bta_sys_set_trace_level
 0002:8041911C       JUTVideo::createManager((_GXRenderModeObj const *))
 0002:80419170       JUTVideo::destroyManager((void))
 0002:804191B8       JUTVideo::JUTVideo((_GXRenderModeObj const *))
 0002:8041929C       JUTVideo::~JUTVideo((void))
 0002:80419308       JUTVideo::preRetraceProc((ulong))
 0002:804194C8       JUTVideo::drawDoneStart((void))
 0002:804194D4       JUTVideo::dummyNoDrawWait((void))
 0002:804194E0       JUTVideo::drawDoneCallback((void))
 0002:80419554       JUTVideo::postRetraceProc((ulong))
 0002:804195A0       JUTVideo::setRenderMode((_GXRenderModeObj const *))
 0002:80419618       nullsub_30
 0002:8041961C       JUTXfb::getDisplayingXfb(const(void))
 0002:8041963C       JUTXfb::getDrawnXfb(const(void))
 0002:8041965C       JUTXfb::clearIndex((void))
 0002:80419670       JUTXfb::~JUTXfb((void))
 0002:804196E4       JUTXfb::delXfb((int))
 0002:8041970C       JUTXfb::createManager((void *,void *,void *))
 0002:80419798       JUTXfb::destroyManager((void))
 0002:804197C8       JUTXfb::initiate((void *,void *,void *,JUTXfb::EXfbNumber))
 0002:80419808       JUTConsole::create((uint,void *,ulong))
 0002:80419888       JUTConsole::JUTConsole((uint,uint,bool))
 0002:80419990       JUTConsole::~JUTConsole((void))
 0002:80419A04       JUTConsole::getLineFromObjectSize((ulong,uint))
 0002:80419A14       JUTConsole::clear((void))
 0002:80419A70       JUTConsole::doDraw(const(JUTConsole::EConsoleType))
 0002:80419F28       JUTConsole::print_f((char const *,...))
 0002:80419FDC       JUTConsole::print((char const *))
 0002:8041A298       JUTConsole::scroll((int))
 0002:8041A36C       JUTConsole::getUsedLine(const(void))
 0002:8041A390       JUTConsole::getLineOffset(const(void))
 0002:8041A3B4       JUTConsoleManager::JUTConsoleManager((void))
 0002:8041A3D4       JUTConsoleManager::createManager((JKRHeap *))
 0002:8041A41C       JUTConsoleManager::appendConsole((JUTConsole *))
 0002:8041A478       JUTConsoleManager::removeConsole((JUTConsole *))
 0002:8041A534       JUTConsoleManager::draw(const(void))
 0002:8041A5B4       JUTConsoleManager::drawDirect(const(bool))
 0002:8041A628       JUTConsoleManager::setDirectConsole((JUTConsole *))
 0002:8041A688       JUTWarningConsole_f_va
 0002:8041A7FC       JUTConsole::getLinePtr(const(int))
 0002:8041A818       JUTFont::drawString_scale((float,float,float,float,char const *,bool))
 0002:8041A908       J2DGrafContext::J2DGrafContext((float,float,float,float))
 0002:8041A9F0       J2DGrafContext::setPort((void))
 0002:8041AA9C       J2DGrafContext::setup2D((void))
 0002:8041AC78       J2DGrafContext::setScissor((void))
 0002:8041AE74       J2DGrafContext::place((JGeometry::TBox2<f> const &))
 0002:8041AEBC       J2DGrafContext::setColor((JUtility::TColor,JUtility::TColor,JUtility::TColor,JUtility::TColor))
 0002:8041AFBC       J2DGrafContext::fillBox((JGeometry::TBox2<f> const &))
 0002:8041B0B4       J2DGrafContext::setColor((JUtility::TColor))
 0002:8041B174       JGeometry::TVec2<f>::setMax((JGeometry::TVec2<f> const &))
 0002:8041B1A8       JGeometry::TVec2<f>::setMin((JGeometry::TVec2<f> const &))
 0002:8041B1DC       JGeometry::TBox<Q29JGeometry8TVec2<f>>::isValid(const(void))
 0002:8041B228       J2DOrthoGraph::J2DOrthoGraph((void))
 0002:8041B288       J2DOrthoGraph::J2DOrthoGraph((float,float,float,float,float,float))
 0002:8041B35C       J2DOrthoGraph::setPort((void))
 0002:8041B3B4       J2DOrthoGraph::setOrtho((JGeometry::TBox2<f> const &,float,float))
 0002:8041B40C       J2DOrthoGraph::setLookat((void))
 0002:8041B448       J2DFillBox(float,float,float,float,JUtility::TColor)
 0002:8041B488       J2DFillBox(JGeometry::TBox2<f> const &,JUtility::TColor)
 0002:8041B4F8       JUTTexture::JUTTexture((void))
 0002:8041B538       JUTTexture::setCaptureFlag((bool))
 0002:8041B54C       J2DPane::J2DPane((void))
 0002:8041B5FC       J2DPane::initiate((void))
 0002:8041B668       J2DPane::changeUseTrans((J2DPane *))
 0002:8041B808       J2DPane::~J2DPane((void))
 0002:8041B8C0       J2DPane::place((JGeometry::TBox2<f> const &))
 0002:8041BAF4       J2DPane::move((float,float))
 0002:8041BB50       J2DPane::add((float,float))
 0002:8041BB78       J2DPane::resize((float,float))
 0002:8041BC4C       J2DPane::search((ulong long))
 0002:8041BCF8       J2DPane::searchUserInfo((ulong long))
 0002:8041BDA4       J2DPane::isUsed((ResTIMG const *))
 0002:8041BE28       J2DPane::isUsed((ResFONT const *))
 0002:8041BEAC       J2DPane::makeMatrix((float,float,float,float))
 0002:8041BFEC       J2DPane::setCullBack((_GXCullMode))
 0002:8041C060       J2DPane::getFirstChildPane((void))
 0002:8041C098       J2DPane::getNextChildPane((void))
 0002:8041C0D0       J2DPane::getParentPane((void))
 0002:8041C0EC       J2DPane::J2DCast_F32_to_S16((float,uchar))
 0002:8041C1A0       J2DPane::setAnimation((J2DAnmBase *))
 0002:8041C240       J2DPane::setAnimation((J2DAnmTransform *))
 0002:8041C248       J2DPane::clearAnmTransform((void))
 0002:8041C2C8       J2DPane::animationTransform((J2DAnmTransform const *))
 0002:8041C364       J2DPane::setVisibileAnimation((J2DAnmVisibilityFull *))
 0002:8041C3F0       J2DPane::setVtxColorAnimation((J2DAnmVtxColor *))
 0002:8041C47C       J2DPane::animationPane((J2DAnmTransform const *))
 0002:8041C518       J2DPane::updateTransform((J2DAnmTransform const *))
 0002:8041C618       __sinit__J2DPane_cpp
 0002:8041C658       J2DPane::calcMtx((void))
 0002:8041C680       J2DPane::makeMatrix((float,float))
 0002:8041C6A0       nullsub_106
 0002:8041C6A4       nullsub_105
 0002:8041C6A8       J2DPane::setAlpha((uchar))
 0002:8041C6B0       nullsub_107
 0002:8041C6B4       nullsub_112
 0002:8041C6B8       nullsub_109
 0002:8041C6BC       nullsub_108
 0002:8041C6C0       nullsub_111
 0002:8041C6C4       nullsub_110
 0002:8041C6E8       nullsub_104
 0002:8041C6EC       nullsub_103
 0002:8041C6F0       J2DPane::setConnectParent((bool))
 0002:8041C700       J2DPane::setCullBack((bool))
 0002:8041C720       J3DAnmTransformFullWithLerp::getKind(const(void))
 0002:8041C728       JSUTree<7J2DPane>::JSUTree<7J2DPane>((J2DPane *))
 0002:8041C7C8       JSUTree<7J2DPane>::~JSUTree<7J2DPane>((void))
 0002:8041C854       JGeometry::TBox<Q29JGeometry8TVec2<f>>::addPos((JGeometry::TVec2<f> const &))
 0002:8041C890       J2DScreen::getNameResource((char const *))
 0002:8041C8E0       J2DPicture::J2DPicture((JUTTexture *))
 0002:8041C9B8       J2DPicture::initiate((ResTIMG const *,ResTLUT const *))
 0002:8041CA4C       J2DPicture::private_initiate((ResTIMG const *,ResTLUT const *))
 0002:8041CB78       J2DPicture::initinfo((void))
 0002:8041CC50       J2DPicture::~J2DPicture((void))
 0002:8041CCFC       J2DPicture::prepareTexture((uchar))
 0002:8041CDC8       J2DPicture::insert((ResTIMG const *,JUTPalette *,uchar,float))
 0002:8041D110       J2DPicture::insert((char const *,JUTPalette *,uchar,float))
 0002:8041D180       J2DPicture::insert((JUTTexture *,uchar,float))
 0002:8041D354       J2DPicture::remove((uchar))
 0002:8041D468       J2DPicture::remove((JUTTexture *))
 0002:8041D4AC       J2DPicture::changeTexture((ResTIMG const *,uchar))
 0002:8041D594       J2DPicture::changeTexture((char const *,uchar))
 0002:8041D5EC       J2DPicture::changeTexture((ResTIMG const *,uchar,JUTPalette *))
 0002:8041D6F4       J2DPicture::changeTexture((char const *,uchar,JUTPalette *))
 0002:8041D754       J2DPicture::drawSelf((float,float))
 0002:8041D7BC       J2DPicture::drawSelf((float,float,float *[3][4]))
 0002:8041D810       J2DPicture::drawFullSet((float,float,float,float,float *[3][4]))
 0002:8041D884       J2DPicture::draw((float,float,float,float,bool,bool,bool))
 0002:8041DB98       J2DPicture::drawOut((JGeometry::TBox2<f> const &,JGeometry::TBox2<f> const &))
 0002:8041DF88       J2DPicture::drawTexCoord((float,float,float,float,short,short,short,short,short,short,short,short,float *[3][4]))
 0002:8041E1D8       J2DPicture::setTevMode((void))
 0002:8041E6D8       J2DPicture::swap((float &,float &))
 0002:8041E6EC       J2DPicture::setBlendColorRatio((float,float,float,float,float,float,float,float))
 0002:8041E700       J2DPicture::setBlendAlphaRatio((float,float,float,float,float,float,float,float))
 0002:8041E714       J2DPicture::setBlendKonstColor((void))
 0002:8041E7E0       J2DPicture::setBlendKonstAlpha((void))
 0002:8041E8AC       J2DPicture::getNewColor((JUtility::TColor *))
 0002:8041E96C       J2DPicture::setTexCoord((JGeometry::TVec2<s> *,JUTTexture const *,J2DBinding,J2DMirror,bool))
 0002:8041EC6C       J2DPicture::isUsed((ResTIMG const *))
 0002:8041ECB8       J2DPicture::getUsableTlut((uchar))
 0002:8041ED7C       J2DPicture::getTlutID((ResTIMG const *,uchar))
 0002:8041EDA8       J2DPicture::append((ResTIMG const *,float))
 0002:8041EDBC       J2DPicture::insert((ResTIMG const *,uchar,float))
 0002:8041EDD4       J2DPicture::append((char const *,float))
 0002:8041EDE8       J2DPicture::insert((char const *,uchar,float))
 0002:8041EE00       J2DPicture::append((JUTTexture *,float))
 0002:8041EE14       J2DPicture::setBlendRatio((float,float,float,float,float,float,float,float))
 0002:8041EEB0       J2DPicture::setCornerColor((JUtility::TColor,JUtility::TColor,JUtility::TColor,JUtility::TColor))
 0002:8041EF18       J2DPicture::getTexture(const(uchar))
 0002:8041EF38       J2DPicture::append((ResTIMG const *,JUTPalette *,float))
 0002:8041EF4C       J2DPicture::load((uchar))
 0002:8041EF60       J2DPicture::load((_GXTexMapID,uchar))
 0002:8041EF94       J2DPane::isUsed((ResFONT const *))
 0002:8041EFA0       J2DPicture::getWhite(const(void))
 0002:8041EFA8       J2DPicture::getBlack(const(void))
 0002:8041EFB0       J2DPicture::setBlackWhite((JUtility::TColor,JUtility::TColor))
 0002:8041EFFC       J2DPicture::setWhite((JUtility::TColor))
 0002:8041F024       J2DPicture::setBlack((JUtility::TColor))
 0002:8041F04C       J2DPicture::getTextureCount(const(void))
 0002:8041F054       J2DPicture::drawOut((float,float,float,float,float,float))
 0002:8041F170       J2DPicture::drawOut((float,float,float,float,float,float,float,float))
 0002:8041F240       J2DPicture::draw((float,float,bool,bool,bool))
 0002:8041F264       J2DPicture::remove((void))
 0002:8041F280       J2DPicture::prepend((ResTIMG const *,float))
 0002:8041F294       J2DPicture::prepend((ResTIMG const *,JUTPalette *,float))
 0002:8041F2A8       J2DPicture::prepend((char const *,float))
 0002:8041F2BC       J2DPicture::prepend((char const *,JUTPalette *,float))
 0002:8041F2D0       J2DPicture::prepend((JUTTexture *,float))
 0002:8041F2E4       J2DPicture::append((char const *,JUTPalette *,float))
 0002:8041F2F8       J2DPicture::getTypeID(const(void))
 0002:8041F314       J2DDataManage::get((char const *))
 0002:8041F378       J3DGDSetGenMode(uchar,uchar,uchar,uchar,_GXCullMode)
 0002:8041F414       J3DGDSetGenMode_3Param(uchar,uchar,uchar)
 0002:8041F4A0       J3DGDSetLightAttn(_GXLightID,float,float,float,float,float,float)
 0002:8041F540       J3DGDSetLightColor(_GXLightID,_GXColor)
 0002:8041F5C8       J3DGDSetLightPos(_GXLightID,float,float,float)
 0002:8041F638       J3DGDSetLightDir(_GXLightID,float,float,float)
 0002:8041F6A8       J3DGDSetVtxAttrFmtv(_GXVtxFmt,_GXVtxAttrFmtList const *,bool)
 0002:8041F8D0       def_8041F7B0
 0002:8041FA68       J3DGDSetTexCoordGen(_GXTexGenType,_GXTexGenSrc)
 0002:8041FB50       def_8041FA98
 0002:8041FBD8       J3DGDSetTexCoordScale2(_GXTexCoordID,ushort,uchar,uchar,ushort,uchar,uchar)
 0002:8041FCC0       J3DGDSetTexLookupMode(_GXTexMapID,_GXTexWrapMode,_GXTexWrapMode,_GXTexFilter,_GXTexFilter,float,float,float,uchar,uchar,_GXAnisotropy)
 0002:8041FDD0       J3DGDSetTexImgAttr(_GXTexMapID,ushort,ushort,_GXTexFmt)
 0002:8041FE00       J3DGDSetTexImgPtr(_GXTexMapID,void *)
 0002:8041FE20       J3DGDSetTexImgPtrRaw(_GXTexMapID,ulong)
 0002:8041FE74       J3DGDSetTexTlut(_GXTexMapID,ulong,_GXTlutFmt)
 0002:8041FE9C       J3DGDLoadTlut(void *,ulong,_GXTlutSize)
 0002:8041FF9C       J3DGDSetIndTexMtx(_GXIndTexMtxID,float *[3],signed char)
 0002:8042011C       J3DGDSetIndTexCoordScale(_GXIndTexStageID,_GXIndTexScale,_GXIndTexScale,_GXIndTexScale,_GXIndTexScale)
 0002:804201A8       J3DGDSetIndTexOrder(ulong,_GXTexCoordID,_GXTexMapID,_GXTexCoordID,_GXTexMapID,_GXTexCoordID,_GXTexMapID,_GXTexCoordID,_GXTexMapID)
 0002:804202EC       J3DGDSetTevOrder(_GXTevStageID,_GXTexCoordID,_GXTexMapID,_GXChannelID,_GXTexCoordID,_GXTexMapID,_GXChannelID)
 0002:804203F4       J3DGDSetTevKColor(_GXTevKColorID,_GXColor)
 0002:80420498       J3DGDSetTevColorS10(_GXTevRegID,_GXColorS10)
 0002:80420574       J3DGDSetFog(_GXFogType,float,float,float,float,_GXColor)
 0002:80420728       J3DGDSetFogRangeAdj(uchar,ushort,_GXFogAdjTable *)
 0002:804207F0       J3DFifoLoadPosMtxImm(float *[4],ulong)
 0002:80420870       J3DFifoLoadNrmMtxImm(float *[4],ulong)
 0002:804208DC       J3DFifoLoadNrmMtxImm3x3(float *[3],ulong)
 0002:80420948       J3DFifoLoadNrmMtxToTexMtx(float *[4],ulong)
 0002:804209E0       J3DFifoLoadNrmMtxToTexMtx3x3(float *[3],ulong)
 0002:80420A78       J3DFifoLoadTexCached(_GXTexMapID,ulong,_GXTexCacheSize,ulong,_GXTexCacheSize)
 0002:80420B20       J3DGDWriteBPCmd(ulong)
 0002:80420B3C       J3DGDWrite_u32(ulong)
 0002:80420B9C       J3DGDWriteXFCmdHdr(ushort,uchar)
 0002:80420BF0       J3DGDWrite_u16(ushort)
 0002:80420C20       J3DGDWriteCPCmd(uchar,ulong)
 0002:80420C54       __GDLightID2Offset
 0002:80420C74       J3DSys::J3DSys((void))
 0002:80420D50       J3DSys::loadPosMtxIndx(const(int,ushort))
 0002:80420D74       J3DSys::loadNrmMtxIndx(const(int,ushort))
 0002:80420D9C       J3DSys::setTexCacheRegion((_GXTexCacheSize))
 0002:80420F40       J3DSys::drawInit((void))
 0002:80421600       J3DSys::reinitGX((void))
 0002:80421688       J3DSys::reinitLighting((void))
 0002:80421794       J3DSys::reinitTransform((void))
 0002:80421898       J3DSys::reinitTexture((void))
 0002:8042193C       J3DSys::reinitTevStages((void))
 0002:80421CEC       J3DSys::reinitIndStages((void))
 0002:80421DDC       J3DSys::reinitPixelProc((void))
 0002:80421E94       J3DVertexData::J3DVertexData((void))
 0002:80421F14       J3DVertexBuffer::setVertexData((J3DVertexData *))
 0002:80421F5C       J3DVertexBuffer::init((void))
 0002:80421FDC       J3DVertexBuffer::setArray(const(void))
 0002:80422000       J3DDrawMtxData::J3DDrawMtxData((void))
 0002:80422054       J3DVertexBuffer::frameInit((void))
 0002:80422070       J3DCalcBBoardMtx(float *[4])
 0002:80422198       J3DCalcYBBoardMtx(float *[4])
 0002:804222AC       J3DPSCalcInverseTranspose(float *[4],float *[3])
 0002:80422374       J3DGetTranslateRotateMtx(J3DTransformInfo const &,float *[4])
 0002:80422464       J3DGetTranslateRotateMtx(short,short,short,float,float,float,float *[4])
 0002:80422514       J3DGetTextureMtx(J3DTextureSRTInfo const &,Vec const &,float *[4])
 0002:804225C8       J3DGetTextureMtxOld(J3DTextureSRTInfo const &,Vec const &,float *[4])
 0002:8042267C       J3DGetTextureMtxMaya(J3DTextureSRTInfo const &,float *[4])
 0002:8042272C       J3DGetTextureMtxMayaOld(J3DTextureSRTInfo const &,float *[4])
 0002:804227DC       J3DScaleNrmMtx(float *[4],Vec const &)
 0002:80422840       J3DScaleNrmMtx33(float *[3],Vec const &)
 0002:80422894       J3DMtxProjConcat(float *[4],float *[4],float *[4])
 0002:804229B8       J3DPSMtxArrayConcat(float *[4],float *[4],float *[4],ulong)
 0002:80422A94       JMath::fastSqrt<f>(float (float))
 0002:80422AAC       J3DDisplayListObj::newDisplayList((ulong))
 0002:80422B0C       J3DDisplayListObj::newSingleDisplayList((ulong))
 0002:80422B60       J3DDisplayListObj::single_To_Double((void))
 0002:80422BC4       J3DDisplayListObj::setSingleDisplayList((void *,ulong))
 0002:80422BE0       J3DDisplayListObj::swapBuffer((void))
 0002:80422C04       J3DDisplayListObj::beginDL((void))
 0002:80422C5C       J3DDisplayListObj::endDL((void))
 0002:80422CB8       J3DDisplayListObj::beginDL((void))
 0002:80422CBC       J3DDisplayListObj::endPatch((void))
 0002:80422D00       J3DPacket::addChildPacket((J3DPacket *))
 0002:80422D20       J3DDrawPacket::J3DDrawPacket((void))
 0002:80422D8C       J3DDrawPacket::newSingleDisplayList((ulong))
 0002:80422E7C       J3DDrawPacket::draw((void))
 0002:80422E8C       J3DMatPacket::J3DMatPacket((void))
 0002:80422F24       J3DMatPacket::addShapePacket((J3DShapePacket *))
 0002:80422F44       J3DMatPacket::endDiff((void))
 0002:80422F5C       J3DMatPacket::isSame(const(J3DMatPacket *))
 0002:80422F80       J3DMatPacket::draw((void))
 0002:80423010       J3DShapePacket::J3DShapePacket((void))
 0002:804230A4       J3DShapePacket::calcDifferedBufferSize((ulong))
 0002:80423284       J3DShapePacket::newDifferedDisplayList((ulong))
 0002:804232D4       J3DShapePacket::prepareDraw(const(void))
 0002:804233F0       J3DShapePacket::draw((void))
 0002:80423490       J3DShapePacket::drawFast((void))
 0002:80423530       J3DMatPacket::entry((J3DDrawBuffer *))
 0002:80423590       J3DShapeMtx::resetMtxLoadCache((void))
 0002:804235CC       J3DShapeMtx::loadMtxIndx_PCPU(const(int,ushort))
 0002:80423628       J3DShapeMtx::loadMtxIndx_NCPU(const(int,ushort))
 0002:80423678       J3DShapeMtx::loadMtxIndx_PNCPU(const(int,ushort))
 0002:804236D0       J3DDifferedTexMtx::loadExecute((float const *[4]))
 0002:80423974       def_80423790
 0002:80423C5C       def_80423A2C
 0002:80423CB0       J3DShapeMtxConcatView::loadMtxConcatView_PNGP(const(int,ushort))
 0002:80423D4C       J3DShapeMtxConcatView::loadMtxConcatView_PCPU(const(int,ushort))
 0002:80423DF4       J3DShapeMtxConcatView::loadMtxConcatView_NCPU(const(int,ushort))
 0002:80423EA0       J3DShapeMtxConcatView::loadMtxConcatView_PNCPU(const(int,ushort))
 0002:80423F50       J3DShapeMtxConcatView::loadMtxConcatView_PNGP_LOD(const(int,ushort))
 0002:8042400C       J3DShapeMtx::load(const(void))
 0002:80424068       J3DShapeMtx::calcNBTScale((Vec const &,float *[3][3],float *[3][3]))
 0002:804240C8       J3DShapeMtxConcatView::load(const(void))
 0002:804241A0       J3DShapeMtxConcatView::loadNrmMtx(const(int,ushort,float *[4]))
 0002:804242A0       J3DShapeMtxMulti::load(const(void))
 0002:80424340       J3DShapeMtxMulti::calcNBTScale((Vec const &,float *[3][3],float *[3][3]))
 0002:804243D4       J3DShapeMtxMultiConcatView::load(const(void))
 0002:804245DC       J3DShapeMtxMultiConcatView::loadNrmMtx(const(int,ushort,float *[4]))
 0002:804246F0       J3DShapeMtxBBoardConcatView::load(const(void))
 0002:80424820       J3DShapeMtxYBBoardConcatView::load(const(void))
 0002:80424978       J3DPSMtx33Copy(float *[3],float *[3])
 0002:804249A4       J3DPSMtx33CopyFrom34(float *[4],float *[3])
 0002:804249D8       J3DModelData::getDrawMtxIndex(const(ushort))
 0002:80424B08       J3DShapeMtxMulti::getUseMtxIndex(const(ushort))
 0002:80424BE8       J3DShapeDraw::countVertex((ulong))
 0002:80424C34       J3DShapeDraw::addTexMtxIndexInDL((ulong,ulong,ulong))
 0002:80424D7C       J3DShapeDraw::J3DShapeDraw((uchar const *,ulong))
 0002:80424D94       J3DShapeDraw::draw(const(void))
 0002:80424DE4       J3DShape::initialize((void))
 0002:80424E54       J3DShape::addTexMtxIndexInDL((_GXAttr,ulong))
 0002:80424F4C       J3DShape::addTexMtxIndexInVcd((_GXAttr))
 0002:80425038       J3DShape::calcNBTScale((Vec const &,float *[3][3],float *[3][3]))
 0002:804250B8       J3DShape::countBumpMtxNum(const(void))
 0002:8042512C       J3DLoadArrayBasePtr(_GXAttr,void *)
 0002:8042515C       J3DShape::loadVtxArray(const(void))
 0002:804251CC       J3DShape::isSameVcdVatCmd((J3DShape *))
 0002:80425208       J3DShape::makeVtxArrayCmd((void))
 0002:8042548C       J3DShape::makeVcdVatCmd((void))
 0002:8042552C       J3DShape::loadPreDrawSetting(const(void))
 0002:80425580       J3DShape::setArrayAndBindPipeline(const(void))
 0002:80425634       J3DShape::drawFast(const(void))
 0002:80425780       J3DShape::draw(const(void))
 0002:804257C8       J3DShape::simpleDraw(const(void))
 0002:8042584C       J3DShape::simpleDrawCache(const(void))
 0002:804258FC       J3DCurrentMtx::load(const(void))
 0002:80425950       J3DMaterial::createColorBlock((ulong))
 0002:80425A44       J3DMaterial::createTexGenBlock((ulong))
 0002:80425AF4       J3DMaterial::createTevBlock((int))
 0002:80425D94       J3DMaterial::createIndBlock((int))
 0002:80425E6C       J3DMaterial::createPEBlock((ulong,ulong))
 0002:80425FC4       J3DMaterial::calcSizeColorBlock((ulong))
 0002:80426014       J3DMaterial::calcSizeTexGenBlock((ulong))
 0002:80426040       J3DMaterial::calcSizeTevBlock((int))
 0002:80426088       J3DMaterial::calcSizeIndBlock((int))
 0002:8042609C       J3DMaterial::calcSizePEBlock((ulong,ulong))
 0002:80426104       J3DMaterial::initialize((void))
 0002:80426154       J3DMaterial::countDLSize((void))
 0002:80426210       J3DMaterial::makeDisplayList_private((J3DDisplayListObj *))
 0002:80426388       J3DMaterial::makeDisplayList((void))
 0002:804263B8       J3DMaterial::makeSharedDisplayList((void))
 0002:804263C0       J3DMaterial::load((void))
 0002:80426410       J3DMaterial::loadSharedDL((void))
 0002:80426474       J3DMaterial::patch((void))
 0002:8042650C       J3DMaterial::diff((ulong))
 0002:80426664       J3DMaterial::calc((float const *[4]))
 0002:804266DC       J3DMaterial::calcDiffTexMtx((float const *[4]))
 0002:80426718       J3DMaterial::setCurrentMtx((void))
 0002:80426730       J3DMaterial::calcCurrentMtx((void))
 0002:804269A0       J3DMaterial::copy((J3DMaterial *))
 0002:80426A4C       J3DMaterial::reset((void))
 0002:80426A88       J3DMaterial::change((void))
 0002:80426AA8       J3DMaterial::newSingleSharedDisplayList((ulong))
 0002:80426BA8       J3DMaterial::initialize((void))
 0002:80426BB4       J3DLockedMaterial::load((void))
 0002:80426BC8       J3DLockedMaterial::loadSharedDL((void))
 0002:80426BF8       J3DMaterial::initialize((void))
 0002:80426C54       J3DColorBlockLightOff::J3DColorBlockLightOff((void))
 0002:80426CF8       J3DTexGenBlockPatched::J3DTexGenBlockPatched((void))
 0002:80426F68       J3DColorChan::J3DColorChan((void))
 0002:8042703C       J3DNBTScale::J3DNBTScale((void))
 0002:80427068       J3DTevStage::J3DTevStage((void))
 0002:8042723C       J3DIndTevStage::J3DIndTevStage((void))
 0002:804272F4       J3DIndTexMtx::J3DIndTexMtx((void))
 0002:8042736C       J3DIndTexCoordScale::J3DIndTexCoordScale((void))
 0002:804273B8       J3DAlphaComp::J3DAlphaComp((void))
 0002:804273D0       J3DCurrentMtx::setCurrentTexMtx((uchar,uchar,uchar,uchar,uchar,uchar,uchar,uchar))
 0002:80427410       J3DGDWriteXFCmd(ushort,ulong)
 0002:804274F8       J3DColorBlockLightOff::initialize((void))
 0002:80427590       J3DColorBlockAmbientOn::initialize((void))
 0002:80427680       J3DColorBlockLightOn::initialize((void))
 0002:80427790       J3DTexGenBlockBasic::initialize((void))
 0002:804277C0       J3DTexGenBlock4::initialize((void))
 0002:8042782C       J3DTevBlockPatched::initialize((void))
 0002:80427960       J3DTevBlock1::initialize((void))
 0002:80427988       J3DTevBlock2::initialize((void))
 0002:80427A98       J3DTevBlock4::initialize((void))
 0002:80427BE0       J3DTevBlock16::initialize((void))
 0002:80427D40       J3DPEBlockFogOff::initialize((void))
 0002:80427D64       J3DPEBlockFull::initialize((void))
 0002:80427D90       J3DColorBlockLightOff::countDLSize((void))
 0002:80427D98       J3DColorBlockAmbientOn::countDLSize((void))
 0002:80427DA0       J3DColorBlockLightOn::countDLSize((void))
 0002:80427DA8       J3DTexGenBlockPatched::countDLSize((void))
 0002:80427DB0       J3DTexGenBlock4::countDLSize((void))
 0002:80427DB8       J3DTexGenBlockBasic::countDLSize((void))
 0002:80427DC0       J3DTevBlockPatched::countDLSize((void))
 0002:80427DC8       J3DTevBlock1::countDLSize((void))
 0002:80427DD0       J3DTevBlock2::countDLSize((void))
 0002:80427DD8       J3DTevBlock4::countDLSize((void))
 0002:80427DE0       J3DTevBlock16::countDLSize((void))
 0002:80427DE8       J3DIndBlockFull::countDLSize((void))
 0002:80427E18       J3DColorBlockLightOff::load((void))
 0002:80427EB8       J3DColorBlockAmbientOn::load((void))
 0002:80427F74       J3DColorBlockLightOn::load((void))
 0002:80428068       J3DColorBlockLightOn::patch((void))
 0002:804280B4       J3DColorBlockLightOff::patchMatColor((void))
 0002:8042812C       J3DColorBlockLightOff::patchLight((void))
 0002:80428200       J3DColorBlockLightOn::patchMatColor((void))
 0002:80428278       J3DColorBlockLightOn::patchLight((void))
 0002:80428330       J3DColorBlockLightOff::diff((ulong))
 0002:80428398       J3DColorBlockLightOn::diffMatColor((void))
 0002:804283E4       J3DColorBlockLightOff::diffLight((void))
 0002:80428440       J3DColorBlockLightOn::diff((ulong))
 0002:804284FC       J3DColorBlockLightOn::diffLight((void))
 0002:80428590       J3DTexGenBlock4::load((void))
 0002:80428630       J3DTexGenBlockBasic::load((void))
 0002:804286D0       J3DTexGenBlockPatched::patch((void))
 0002:80428754       J3DTexGenBlock4::patch((void))
 0002:804287F0       J3DTexGenBlockBasic::patch((void))
 0002:8042888C       J3DTexGenBlockPatched::diff((ulong))
 0002:804288F4       J3DTexGenBlockPatched::diffTexMtx((void))
 0002:80428954       J3DTexGenBlockPatched::diffTexGen((void))
 0002:80428974       J3DTevBlock1::load((void))
 0002:80428A28       J3DTevBlock2::load((void))
 0002:80428C68       J3DTevBlock4::load((void))
 0002:80428ECC       J3DTevBlock16::load((void))
 0002:80429134       J3DTevBlock16::patchTexNo((void))
 0002:804291B8       J3DTevBlockPatched::patchTevReg((void))
 0002:804292A4       J3DTevBlockPatched::patchTexNoAndTexCoordScale((void))
 0002:804293A4       J3DTevBlock16::patch((void))
 0002:804293F0       J3DTevBlock1::patchTexNo((void))
 0002:80429460       J3DTevBlock1::patchTexNoAndTexCoordScale((void))
 0002:80429518       J3DTevBlock2::patchTexNo((void))
 0002:8042959C       J3DTevBlock2::patchTevReg((void))
 0002:80429688       J3DTevBlock2::patchTexNoAndTexCoordScale((void))
 0002:804297AC       J3DTevBlock4::patchTexNo((void))
 0002:80429830       J3DTevBlock4::patchTevReg((void))
 0002:8042991C       J3DTevBlock4::patchTexNoAndTexCoordScale((void))
 0002:80429AEC       J3DTevBlock16::patchTevReg((void))
 0002:80429BD8       J3DTevBlock16::patchTexNoAndTexCoordScale((void))
 0002:80429D24       J3DTevBlock::diff((ulong))
 0002:80429DE0       J3DTevBlock16::diffTexNo((void))
 0002:80429E40       J3DTevBlockPatched::diffTevStage((void))
 0002:80429EA4       J3DTevBlockPatched::diffTevStageIndirect((void))
 0002:80429F0C       J3DTevBlockPatched::diffTevReg((void))
 0002:80429FD4       J3DTevBlockPatched::diffTexCoordScale((void))
 0002:8042A060       J3DTevBlock1::diffTexNo((void))
 0002:8042A080       J3DTevBlock1::diffTevStage((void))
 0002:8042A0B8       J3DTevBlock1::diffTevStageIndirect((void))
 0002:8042A0C4       J3DTevBlock1::diffTexCoordScale((void))
 0002:8042A0E0       J3DTevBlock2::diffTexNo((void))
 0002:8042A140       J3DTevBlock2::diffTevReg((void))
 0002:8042A208       J3DTevBlock2::diffTevStage((void))
 0002:8042A26C       J3DTevBlock2::diffTevStageIndirect((void))
 0002:8042A2D4       J3DTevBlock2::diffTexCoordScale((void))
 0002:8042A338       J3DTevBlock4::diffTexNo((void))
 0002:8042A398       J3DTevBlock4::diffTevReg((void))
 0002:8042A460       J3DTevBlock4::diffTevStage((void))
 0002:8042A4C4       J3DTevBlock4::diffTevStageIndirect((void))
 0002:8042A52C       J3DTevBlock4::diffTexCoordScale((void))
 0002:8042A618       J3DTevBlock16::diffTevReg((void))
 0002:8042A6E0       J3DTevBlock16::diffTevStage((void))
 0002:8042A744       J3DTevBlock16::diffTevStageIndirect((void))
 0002:8042A7AC       J3DTevBlock16::diffTexCoordScale((void))
 0002:8042A838       J3DTevBlockPatched::ptrToIndex((void))
 0002:8042A9C8       J3DTevBlock::indexToPtr_private((ulong))
 0002:8042AA5C       J3DIndBlockFull::load((void))
 0002:8042AB80       J3DIndBlockFull::diff((ulong))
 0002:8042AC30       J3DPEBlockOpa::load((void))
 0002:8042AC98       J3DPEBlockTexEdge::load((void))
 0002:8042AD00       J3DPEBlockXlu::load((void))
 0002:8042AD68       J3DPEBlockFogOff::load((void))
 0002:8042ADBC       J3DPEBlockFogOff::diffBlend((void))
 0002:8042AE00       J3DPEBlockFull::load((void))
 0002:8042AE70       J3DPEBlockFull::patch((void))
 0002:8042AECC       J3DPEBlockFull::diffFog((void))
 0002:8042AF04       J3DPEBlockFull::diffBlend((void))
 0002:8042AF48       J3DPEBlockFull::diff((ulong))
 0002:8042AFB0       J3DColorBlockLightOff::reset((J3DColorBlock *))
 0002:8042B078       J3DColorBlockAmbientOn::reset((J3DColorBlock *))
 0002:8042B1A0       J3DColorBlockLightOn::reset((J3DColorBlock *))
 0002:8042B2C8       J3DTexGenBlockPatched::reset((J3DTexGenBlock *))
 0002:8042B3D0       J3DTexGenBlock4::reset((J3DTexGenBlock *))
 0002:8042B4F8       J3DTexGenBlockBasic::reset((J3DTexGenBlock *))
 0002:8042B620       J3DTevBlockPatched::reset((J3DTevBlock *))
 0002:8042B790       J3DTevBlock1::reset((J3DTevBlock *))
 0002:8042B850       J3DTevBlock2::reset((J3DTevBlock *))
 0002:8042BAC0       J3DTevBlock4::reset((J3DTevBlock *))
 0002:8042BEA0       J3DTevBlock16::reset((J3DTevBlock *))
 0002:8042C0E4       J3DIndBlockFull::reset((J3DIndBlock *))
 0002:8042C1F0       J3DPEBlockFogOff::reset((J3DPEBlock *))
 0002:8042C2CC       J3DPEBlockFull::reset((J3DPEBlock *))
 0002:8042C3E4       J3DTexGenBlockPatched::calc((float const *[4]))
 0002:8042C55C       def_8042C464
 0002:8042C59C       J3DTexGenBlockPatched::calcWithoutViewMtx((float const *[4]))
 0002:8042C6B0       def_8042C61C
 0002:8042C6F0       J3DTexGenBlockPatched::calcPostTexMtx((float const *[4]))
 0002:8042C800       def_8042C778
 0002:8042C848       J3DTexGenBlockPatched::calcPostTexMtxWithoutViewMtx((float const *[4]))
 0002:8042C924       def_8042C8C0
 0002:8042C964       __sinit__J3DMatBlock_cpp
 0002:8042C984       J3DTevStage::setStageNo((ulong))
 0002:8042C99C       J3DColorChan::load(const(void))
 0002:8042CA44       loadTexCoordScale(_GXTexCoordID,J3DTexCoordScaleInfo const &)
 0002:8042CA7C       J3DAlphaComp::load(const(void))
 0002:8042CAA8       J3DBlend::load(const(uchar))
 0002:8042CB80       J3DZMode::load(const(void))
 0002:8042CBA4       J3DFog::load(const(void))
 0002:8042CC24       J3DTevStage::__as((J3DTevStage &))
 0002:8042CC58       J3DAlphaComp::__as((J3DAlphaComp &))
 0002:8042CC74       J3DTexCoord::resetTexMtxReg((void))
 0002:8042CC80       J3DAlphaComp::__as((J3DAlphaComp const &))
 0002:8042CC9C       J3DTevStage::setTevSwapModeInfo((J3DTevSwapModeInfo const &))
 0002:8042CCC4       J3DTevStage::__as((J3DTevStage const &))
 0002:8042CD2C       GDSetCurrOffset
 0002:8042CE40       J3DGDSetTevKonstantSel_SwapModeTable(_GXTevStageID,_GXTevKColorSel,_GXTevKAlphaSel,_GXTevKColorSel,_GXTevKAlphaSel,_GXTevColorChan,_GXTevColorChan)
 0002:8042CE98       J3DGDSetAlphaCompare(_GXCompare,uchar,_GXAlphaOp,_GXCompare,uchar)
 0002:8042CED0       J3DGDSetBlendMode(_GXBlendMode,_GXBlendFactor,_GXBlendFactor,_GXLogicOp)
 0002:8042CF9C       J3DGDSetZMode(uchar,_GXCompare,uchar)
 0002:8042CFCC       J3DGDSetZCompLoc(ulong)
 0002:8042D0F8       J3DPEBlockFull::setFogOffset((ulong))
 0002:8042D108       J3DPEBlockFull::getDither(const(void))
 0002:8042D110       J3DPEBlockFull::setDither((uchar const *))
 0002:8042D11C       J3DPEBlockFull::setDither((uchar))
 0002:8042D124       J3DPEBlockFull::getZCompLoc(const(void))
 0002:8042D12C       J3DPEBlockFull::setZCompLoc((uchar const *))
 0002:8042D138       J3DPEBlockFull::setZCompLoc((uchar))
 0002:8042D148       J3DPEBlockFull::setZMode((J3DZMode))
 0002:8042D168       J3DPEBlockFull::setBlend((J3DBlend const &))
 0002:8042D1FC       J3DPEBlockFogOff::getDither(const(void))
 0002:8042D204       J3DPEBlockFogOff::setDither((uchar const *))
 0002:8042D210       J3DPEBlockFogOff::setDither((uchar))
 0002:8042D218       J3DPEBlockFogOff::getZCompLoc(const(void))
 0002:8042D220       J3DPEBlockFogOff::setZCompLoc((uchar const *))
 0002:8042D23C       J3DPEBlockFogOff::setZMode((J3DZMode))
 0002:8042D25C       J3DPEBlockFogOff::setBlend((J3DBlend const &))
 0002:8042D298       J3DPEBlockFogOff::diff((ulong))
 0002:8042D398       J3DIndBlockFull::~J3DIndBlockFull((void))
 0002:8042D418       J3DIndBlockFull::getIndTexCoordScale((ulong))
 0002:8042D428       J3DIndBlockFull::setIndTexCoordScale((ulong,J3DIndTexCoordScale))
 0002:8042D458       J3DIndBlockFull::getIndTexMtx((ulong))
 0002:8042D468       J3DIndBlockFull::setIndTexMtx((ulong,J3DIndTexMtx))
 0002:8042D498       J3DIndBlockFull::getIndTexOrder((ulong))
 0002:8042D4A8       J3DIndBlockFull::setIndTexOrder((ulong,J3DIndTexOrder))
 0002:8042D53C       J3DTevBlock16::setTevRegOffset((ulong))
 0002:8042D544       J3DTevBlock16::getTevRegOffset(const(void))
 0002:8042D554       J3DTevBlock16::getIndTevStage((ulong))
 0002:8042D564       J3DTevBlock16::setIndTevStage((ulong,J3DIndTevStage))
 0002:8042D58C       J3DTevBlock16::getTevSwapModeTable((ulong))
 0002:8042D598       J3DTevBlock16::setTevSwapModeTable((ulong,J3DTevSwapModeTable))
 0002:8042D5B8       J3DTevBlock16::setTevStage((ulong,J3DTevStage))
 0002:8042D5E8       J3DTevBlock16::getTevStage((ulong))
 0002:8042D630       J3DTevBlock16::setTevStageNum((uchar const *))
 0002:8042D63C       J3DTevBlock16::setTevStageNum((uchar))
 0002:8042D644       J3DTevBlock16::getTevKAlphaSel((ulong))
 0002:8042D650       J3DTevBlock16::setTevKAlphaSel((ulong,uchar const *))
 0002:8042D660       J3DTevBlock16::setTevKAlphaSel((ulong,uchar))
 0002:8042D66C       J3DTevBlock16::getTevKColorSel((ulong))
 0002:8042D678       J3DTevBlock16::setTevKColorSel((ulong,uchar const *))
 0002:8042D688       J3DTevBlock16::setTevKColorSel((ulong,uchar))
 0002:8042D694       J3DTevBlock16::getTevKColor((ulong))
 0002:8042D6A4       J3DTevBlock16::setTevKColor((ulong,J3DGXColor))
 0002:8042D6D4       J3DTevBlock16::getTevColor((ulong))
 0002:8042D6E4       J3DTevBlock16::setTevColor((ulong,J3DGXColorS10))
 0002:8042D714       J3DTevBlockPatched::getTevOrder((ulong))
 0002:8042D724       J3DTevBlockPatched::setTevOrder((ulong,J3DTevOrder))
 0002:8042D754       J3DTevBlockPatched::getTexNo(const(ulong))
 0002:8042D764       J3DTevBlockPatched::setTexNo((ulong,ushort const *))
 0002:8042D778       J3DTevBlockPatched::setTexNo((ulong,ushort))
 0002:8042D7F4       J3DTevBlock4::getIndTevStage((ulong))
 0002:8042D804       J3DTevBlock4::setIndTevStage((ulong,J3DIndTevStage))
 0002:8042D82C       J3DTevBlock4::getTevSwapModeTable((ulong))
 0002:8042D838       J3DTevBlock4::setTevSwapModeTable((ulong,J3DTevSwapModeTable))
 0002:8042D858       J3DTevBlock4::setTevStage((ulong,J3DTevStage))
 0002:8042D888       J3DTevBlock4::getTevStage((ulong))
 0002:8042D8D0       J3DTevBlock4::setTevStageNum((uchar const *))
 0002:8042D8DC       J3DTevBlock4::setTevStageNum((uchar))
 0002:8042D8E4       J3DTevBlock4::getTevKAlphaSel((ulong))
 0002:8042D8F0       J3DTevBlock4::setTevKAlphaSel((ulong,uchar const *))
 0002:8042D900       J3DTevBlock4::setTevKAlphaSel((ulong,uchar))
 0002:8042D90C       J3DTevBlock4::getTevKColorSel((ulong))
 0002:8042D918       J3DTevBlock4::setTevKColorSel((ulong,uchar const *))
 0002:8042D928       J3DTevBlock4::setTevKColorSel((ulong,uchar))
 0002:8042D934       J3DTevBlock4::getTevKColor((ulong))
 0002:8042D944       J3DTevBlock4::setTevKColor((ulong,J3DGXColor))
 0002:8042D974       J3DTevBlock4::getTevColor((ulong))
 0002:8042D984       J3DTevBlock4::setTevColor((ulong,J3DGXColorS10))
 0002:8042D9B4       J3DTevBlock4::getTevOrder((ulong))
 0002:8042D9C4       J3DTevBlock4::setTevOrder((ulong,J3DTevOrder))
 0002:8042DA80       J3DTevBlock2::setTevRegOffset((ulong))
 0002:8042DA98       J3DTevBlock2::getIndTevStage((ulong))
 0002:8042DAA8       J3DTevBlock2::setIndTevStage((ulong,J3DIndTevStage))
 0002:8042DAB4       RFLSetExpression
 0002:8042DAD0       J3DTevBlock2::getTevSwapModeTable((ulong))
 0002:8042DADC       J3DTevBlock2::setTevSwapModeTable((ulong,J3DTevSwapModeTable))
 0002:8042DAFC       J3DTevBlock2::setTevStage((ulong,J3DTevStage))
 0002:8042DB2C       J3DTevBlock2::getTevStage((ulong))
 0002:8042DB6C       J3DTevBlock2::getTevStageNum(const(void))
 0002:8042DB74       J3DTevBlock2::setTevStageNum((uchar const *))
 0002:8042DB80       J3DTevBlock2::setTevStageNum((uchar))
 0002:8042DB88       J3DTevBlock2::getTevKAlphaSel((ulong))
 0002:8042DB94       J3DTevBlock2::setTevKAlphaSel((ulong,uchar const *))
 0002:8042DBA4       J3DTevBlock2::setTevKAlphaSel((ulong,uchar))
 0002:8042DBB0       J3DTevBlock2::getTevKColorSel((ulong))
 0002:8042DBBC       J3DTevBlock2::setTevKColorSel((ulong,uchar const *))
 0002:8042DBCC       J3DTevBlock2::setTevKColorSel((ulong,uchar))
 0002:8042DBD8       J3DTevBlock2::getTevKColor((ulong))
 0002:8042DBE8       J3DTevBlock2::setTevKColor((ulong,J3DGXColor))
 0002:8042DC18       J3DTevBlock2::getTevColor((ulong))
 0002:8042DC28       J3DTevBlock2::setTevColor((ulong,J3DGXColorS10))
 0002:8042DC58       J3DColorBlockLightOn::getAmbColor((ulong))
 0002:8042DC68       J3DColorBlockLightOn::setAmbColor((ulong,J3DGXColor))
 0002:8042DD70       J3DTevBlock1::setIndTevStage((ulong,J3DIndTevStage))
 0002:8042DD98       J3DTevBlock1::getTevStage((ulong))
 0002:8042DDA8       J3DTevBlock1::setTevStage((ulong,J3DTevStage))
 0002:8042DDE8       J3DTevBlock1::getTevOrder((ulong))
 0002:8042DDF8       J3DTevBlock1::setTevOrder((ulong,J3DTevOrder))
 0002:8042DECC       J3DTevBlockPatched::getTevKColorSel((ulong))
 0002:8042DED8       J3DTevBlockPatched::setTevKColorSel((ulong,uchar const *))
 0002:8042DEE8       J3DTevBlockPatched::setTevKColorSel((ulong,uchar))
 0002:8042DEF4       J3DTevBlockPatched::getTevKColor((ulong))
 0002:8042DF04       J3DTevBlockPatched::setTevKColor((ulong,J3DGXColor))
 0002:8042DF34       J3DTevBlockPatched::getTevColor((ulong))
 0002:8042DF44       J3DTevBlockPatched::setTevColor((ulong,J3DGXColorS10))
 0002:8042DF74       J3DTevBlockPatched::getIndTevStage((ulong))
 0002:8042DF84       J3DTevBlockPatched::setIndTevStage((ulong,J3DIndTevStage))
 0002:8042DFAC       J3DTevBlockPatched::getTevStage((ulong))
 0002:8042DFBC       J3DTevBlockPatched::setTevStage((ulong,J3DTevStage))
 0002:8042E060       J3DTevBlockPatched::getTevStageNum(const(void))
 0002:8042E068       J3DTevBlockPatched::setTevStageNum((uchar const *))
 0002:8042E074       J3DTevBlockPatched::setTevStageNum((uchar))
 0002:8042E0E0       J3DTexGenBlockPatched::getTexMtx((ulong))
 0002:8042E0F0       J3DTexGenBlockPatched::setTexMtx((ulong,J3DTexMtx *))
 0002:8042E100       J3DTexGenBlockPatched::getTexCoord((ulong))
 0002:8042E110       J3DTexGenBlockPatched::setTexCoord((ulong,J3DTexCoord const *))
 0002:8042E130       J3DTexGenBlockPatched::setTexGenNum((ulong const *))
 0002:8042E184       J3DTexGenBlock4::getNBTScale((void))
 0002:8042E18C       JASTrack::readPort((ulong))
 0002:8042E25C       J3DColorBlockLightOn::setColorChanOffset((ulong))
 0002:8042E284       J3DColorBlockLightOn::setCullMode((uchar const *))
 0002:8042E290       J3DColorBlockLightOn::setCullMode((uchar))
 0002:8042E298       J3DColorBlockLightOn::getLight((ulong))
 0002:8042E2A8       J3DColorBlockLightOn::setLight((ulong,J3DLightObj *))
 0002:8042E2B8       J3DColorBlockLightOn::getColorChan((ulong))
 0002:8042E2C8       J3DColorBlockLightOn::setColorChan((ulong,J3DColorChan const *))
 0002:8042E2D4       MR::SendMailObj::setTag((ushort))
 0002:8042E300       J3DColorBlockLightOn::setColorChanNum((uchar const *))
 0002:8042E34C       J3DColorBlockLightOff::getMatColor((ulong))
 0002:8042E35C       J3DColorBlockLightOff::setMatColor((ulong,J3DGXColor))
 0002:8042E3C0       J3DColorBlockLightOff::setCullMode((uchar const *))
 0002:8042E3CC       J3DColorBlockLightOff::setCullMode((uchar))
 0002:8042E3D4       J3DColorBlockLightOff::getColorChan((ulong))
 0002:8042E3E4       J3DColorBlockLightOff::setColorChan((ulong,J3DColorChan const *))
 0002:8042E41C       J3DColorBlockLightOff::setColorChanNum((uchar const *))
 0002:8042E4A8       J3DColorBlockAmbientOn::getAmbColor((ulong))
 0002:8042E4B8       J3DColorBlockAmbientOn::setAmbColor((ulong,J3DGXColor))
 0002:8042E500       J3DLightObj::load(const(ulong))
 0002:8042E5B8       loadTexCoordGens(ulong,J3DTexCoord *)
 0002:8042E6AC       J3DTexMtx::load(const(ulong))
 0002:8042E8D0       J3DTexMtx::calcTexMtx((float const *[4]))
 0002:8042EB74       def_8042E914
 0002:8042EBBC       J3DTexMtx::calcPostTexMtx((float const *[4]))
 0002:8042EECC       def_8042EC00
 0002:8042EF14       isTexNoReg(void *)
 0002:8042EF38       getTexNoReg(void *)
 0002:8042EF44       loadTexNo(ulong,ushort const &)
 0002:8042F0C8       patchTexNo_PtrToIdx(ulong,ushort const &)
 0002:8042F0D0       loadNBTScale(J3DNBTScale &)
 0002:8042F104       makeTexCoordTable(void)
 0002:8042F1FC       makeAlphaCmpTable(void)
 0002:8042F264       makeZModeTable(void)
 0002:8042F2CC       makeTevSwapTable(void)
 0002:8042F410       J3DDrawBuffer::initialize((void))
 0002:8042F440       J3DDrawBuffer::allocBuffer((ulong))
 0002:8042F49C       J3DDrawBuffer::frameInit((void))
 0002:8042F4D0       J3DDrawBuffer::entryMatSort((J3DMatPacket *))
 0002:8042F614       J3DDrawBuffer::entryMatAnmSort((J3DMatPacket *))
 0002:8042F6CC       J3DDrawBuffer::entryZSort((J3DMatPacket *))
 0002:8042F7E8       J3DDrawBuffer::entryModelSort((J3DMatPacket *))
 0002:8042F838       J3DDrawBuffer::entryInvalidSort((J3DMatPacket *))
 0002:8042F88C       J3DDrawBuffer::entryNonSort((J3DMatPacket *))
 0002:8042F8C0       J3DDrawBuffer::draw(const(void))
 0002:8042F914       J3DDrawBuffer::drawHead(const(void))
 0002:8042F98C       J3DDrawBuffer::drawTail(const(void))
 0002:8042FA08       J3DDrawBuffer::calcZRatio((void))
 0002:8042FA48       J3DTexMtxInfo::__as((J3DTexMtxInfo const &))
 0002:8042FAC4       J3DTexMtxInfo::setEffectMtx((float *[4]))
 0002:8042FB0C       J3DIndTexMtxInfo::__as((J3DIndTexMtxInfo const &))
 0002:8042FB30       J3DFogInfo::__as((J3DFogInfo const &))
 0002:8042FBB0       J3DNBTScale::J3DNBTScale((J3DNBTScaleInfo const &))
 0002:8042FBD4       J3DShapeTable::initShapeNodes((J3DDrawMtxData *,J3DVertexData *))
 0002:8042FC40       J3DShapeTable::sortVcdVatCmd((void))
 0002:8042FCDC       J3DJointTree::J3DJointTree((void))
 0002:8042FD64       J3DJointTree::makeHierarchy((J3DJoint *,J3DModelHierarchy const **,J3DMaterialTable *,J3DShapeTable *))
 0002:8042FE48       def_8042FDC0
 0002:8042FEC8       J3DJointTree::findImportantMtxIndex((void))
 0002:8042FF7C       J3DJointTree::calc((J3DMtxBuffer *,Vec const &,float const (&)[3][4]))
 0002:8042FFF4       J3DJointTree::~J3DJointTree((void))
 0002:80430050       J3DModelData::clear((void))
 0002:80430068       J3DModelData::J3DModelData((void))
 0002:804300DC       J3DModelData::newSharedDisplayList((ulong))
 0002:80430190       J3DModelData::indexToPtr((void))
 0002:8043025C       J3DModelData::syncJ3DSysFlags(const(void))
 0002:804302D8       J3DModelData::~J3DModelData((void))
 0002:80430340       J3DMtxBuffer::initialize((void))
 0002:80430384       J3DMtxBuffer::create((J3DModelData *,ulong))
 0002:8043048C       J3DMtxBuffer::createAnmMtx((J3DModelData *))
 0002:804304F0       J3DMtxBuffer::createWeightEnvelopeMtx((J3DModelData *))
 0002:80430550       J3DMtxBuffer::setNoUseDrawMtx((void))
 0002:8043057C       J3DMtxBuffer::createDoubleDrawMtx((J3DModelData *,ulong))
 0002:80430670       J3DMtxBuffer::createBumpMtxArray((J3DModelData *,ulong))
 0002:80430898       J3DMtxBuffer::calcWeightEnvelopeMtx((void))
 0002:80430AC4       J3DMtxBuffer::calcDrawMtx((ulong,Vec const &,float const (&)[3][4]))
 0002:80430CF4       J3DMtxBuffer::calcNrmMtx((void))
 0002:80430E10       J3DMtxBuffer::calcBBoardMtx((void))
 0002:80430F54       J3DCalcViewBaseMtx(float *[4],Vec const &,float const (&)[3][4],float *[4])
 0002:80431010       J3DMtxBuffer::setNrmMtx((int,float *[4]))
 0002:8043105C       J3DMtxBuffer::getNrmMtx((int))
 0002:80431078       J3DModel::initialize((void))
 0002:80431100       J3DModel::entryModelData((J3DModelData *,ulong,ulong))
 0002:80431270       J3DModel::createShapePacket((J3DModelData *))
 0002:80431324       J3DModel::createMatPacket((J3DModelData *,ulong))
 0002:80431504       J3DModel::lock((void))
 0002:8043153C       J3DModel::unlock((void))
 0002:80431574       J3DModel::makeDL((void))
 0002:8043160C       J3DModel::calcMaterial((void))
 0002:80431778       J3DModel::calcDiffTexMtx((void))
 0002:804318B8       J3DModel::calcAnmMtx((void))
 0002:80431920       J3DModel::calcWeightEnvelopeMtx((void))
 0002:80431954       J3DModel::update((void))
 0002:804319A0       J3DModel::calc((void))
 0002:80431AFC       J3DModel::entry((void))
 0002:80431BF0       J3DModel::viewCalc((void))
 0002:80431E14       J3DModel::calcBumpMtx((void))
 0002:80431F0C       J3DModel::calcBBoardMtx((void))
 0002:80431F28       J3DModel::prepareShapePackets((void))
 0002:80431F8C       J3DModel::getNrmMtxPtr((void))
 0002:80431FA4       J3DModel::getBumpMtxPtr((int))
 0002:80432004       J3DFrameCtrl::init((short))
 0002:80432034       J3DFrameCtrl::checkPass((float))
 0002:80432578       J3DFrameCtrl::update((void))
 0002:80432998       J3DAnmTransform::J3DAnmTransform((short,float *,short *,float *))
 0002:80432A0C       J3DAnmTransformFull::getTransform(const(ushort,J3DTransformInfo *))
 0002:80432D6C       J3DAnmTransformFullWithLerp::getTransform(const(ushort,J3DTransformInfo *))
 0002:80433590       J3DAnmTransformKey::calcTransform(const(float,ushort,J3DTransformInfo *))
 0002:804339B8       J3DGetKeyFrameInterpolation_s___FfP18J3DAnmKeyTableBasePs_f
 0002:80433B88       J3DHermiteInterpolation(float,short const *,short const *,short const *,short const *,short const *,short const *)
 0002:80433BDC       J3DGetKeyFrameInterpolation_f___FfP18J3DAnmKeyTableBasePf_f
 0002:80433CFC       J3DHermiteInterpolation(float,float const *,float const *,float const *,float const *,float const *,float const *)
 0002:80433D4C       J3DAnmTextureSRTKey::J3DAnmTextureSRTKey((void))
 0002:80433DE4       J3DAnmTextureSRTKey::calcTransform(const(float,ushort,J3DTextureSRTInfo *))
 0002:80434054       J3DAnmClusterFull::getWeight(const(ushort))
 0002:804340E8       J3DAnmClusterKey::getWeight(const(ushort))
 0002:80434154       J3DAnmVtxColor::J3DAnmVtxColor((void))
 0002:804341D0       J3DAnmVtxColorKey::J3DAnmVtxColorKey((void))
 0002:8043422C       J3DAnmVtxColorFull::getColor(const(uchar,ushort,_GXColor *))
 0002:80434400       J3DAnmVtxColorKey::getColor(const(uchar,ushort,_GXColor *))
 0002:804346E8       J3DAnmColor::J3DAnmColor((void))
 0002:80434748       J3DAnmColor::searchUpdateMaterialID((J3DMaterialTable *))
 0002:804347E0       J3DAnmTevRegKey::searchUpdateMaterialID((J3DModelData *))
 0002:804347E8       J3DAnmColorKey::J3DAnmColorKey((void))
 0002:8043483C       J3DAnmColorFull::getColor(const(ushort,_GXColor *))
 0002:80434A00       J3DAnmColorKey::getColor(const(ushort,_GXColor *))
 0002:80434CC0       J3DAnmTevRegKey::J3DAnmTevRegKey((void))
 0002:80434D60       J3DAnmTexPattern::J3DAnmTexPattern((void))
 0002:80434DBC       J3DAnmTexPattern::getTexNo(const(ushort,ushort *))
 0002:80434E74       J3DAnmVisibilityFull::getVisibility(const(ushort,uchar *))
 0002:80434F04       J3DAnmTexPattern::searchUpdateMaterialID((J3DMaterialTable *))
 0002:80434FA4       J3DAnmTextureSRTKey::searchUpdateMaterialID((J3DMaterialTable *))
 0002:804350C0       J3DAnmTevRegKey::getTevColorReg(const(ushort,_GXColorS10 *))
 0002:80435380       J3DAnmTevRegKey::getTevKonstReg(const(ushort,_GXColor *))
 0002:80435640       J3DAnmTevRegKey::searchUpdateMaterialID((J3DMaterialTable *))
 0002:80435744       J3DAnmBase::J3DAnmBase((void))
 0002:804357AC       J3DAnmBase::J3DAnmBase((short))
 0002:804359B0       J3DAnmVtxColorKey::getKind(const(void))
 0002:804359F8       J3DAnmVtxColorFull::getKind(const(void))
 0002:80435A44       J3DAnmVtxColor::getKind(const(void))
 0002:80435A4C       J3DAnmClusterKey::getKind(const(void))
 0002:80435A94       J3DAnmClusterFull::getKind(const(void))
 0002:80435C14       OSf32tou8_1
 0002:80435C30       OSf32tos16
 0002:80435C4C       J3DMaterialAnm::initialize((void))
 0002:80435CF0       J3DMaterialAnm::calc(const(J3DMaterial *))
 0002:80435ED0       J3DMaterialAnm::setMatColorAnm((int,J3DMatColorAnm *))
 0002:80435F10       J3DMaterialAnm::setTexMtxAnm((int,J3DTexMtxAnm *))
 0002:80435F50       J3DMaterialAnm::setTexNoAnm((int,J3DTexNoAnm *))
 0002:80435F90       J3DMaterialAnm::setTevColorAnm((int,J3DTevColorAnm *))
 0002:80435FD0       J3DMaterialAnm::setTevKColorAnm((int,J3DTevKColorAnm *))
 0002:80436010       J3DSkinDeform::deform((J3DModel *))
 0002:80436078       J3DVtxColorCalc::calc((J3DModel *))
 0002:8043608C       J3DDeformData::deform((J3DModel *))
 0002:80436094       J3DDeformData::deform((J3DVertexBuffer *))
 0002:8043615C       J3DDeformer::deform((J3DVertexBuffer *,ushort))
 0002:80436240       J3DDeformer::deform_VtxPosF32((J3DVertexBuffer *,J3DCluster *,J3DClusterKey *,float *))
 0002:804363AC       J3DDeformer::deform_VtxNrmF32((J3DVertexBuffer *,J3DCluster *,J3DClusterKey *,float *))
 0002:804368F4       J3DDeformer::deform((J3DVertexBuffer *,ushort,float *))
 0002:80436A04       J3DDeformer::normalizeWeight((int,float *))
 0002:80436A68       J3DMtxCalcJ3DSysInitBasic::init((Vec const &,float const (&)[3][4]))
 0002:80436AF4       J3DMtxCalcJ3DSysInitMaya::init((Vec const &,float const (&)[3][4]))
 0002:80436B80       J3DMtxCalcCalcTransformBasic::calcTransform((J3DTransformInfo const &))
 0002:80436C6C       J3DMtxCalcCalcTransformSoftimage::calcTransform((J3DTransformInfo const &))
 0002:80436DA4       J3DMtxCalcCalcTransformMaya::calcTransform((J3DTransformInfo const &))
 0002:80436F40       J3DJoint::appendChild((J3DJoint *))
 0002:80436F70       J3DJoint::J3DJoint((void))
 0002:80437028       J3DJoint::entryIn((void))
 0002:804371BC       J3DJoint::recursiveCalc((void))
 0002:80437304       checkScaleOne(Vec const &)
 0002:8043733C       J3DMaterialTable::clear((void))
 0002:80437364       J3DMaterialTable::J3DMaterialTable((void))
 0002:804373D8       J3DMaterialTable::removeMatColorAnimator((J3DAnmColor *))
 0002:80437470       J3DMaterialTable::removeTexNoAnimator((J3DAnmTexPattern *))
 0002:80437514       J3DMaterialTable::removeTexMtxAnimator((J3DAnmTextureSRTKey *))
 0002:804375DC       J3DMaterialTable::removeTevRegAnimator((J3DAnmTevRegKey *))
 0002:804376F0       J3DMaterialTable::createTexMtxForAnimator((J3DAnmTextureSRTKey *))
 0002:80437824       J3DMaterialTable::entryMatColorAnimator((J3DAnmColor *))
 0002:804378E0       J3DMaterialTable::entryTexNoAnimator((J3DAnmTexPattern *))
 0002:804379B4       J3DMaterialTable::entryTexMtxAnimator((J3DAnmTextureSRTKey *))
 0002:80437B5C       J3DMaterialTable::entryTevRegAnimator((J3DAnmTevRegKey *))
 0002:80437CA4       J3DMaterial::getMaterialAnm((void))
 0002:80437CBC       J3DMaterialFactory::J3DMaterialFactory((J3DMaterialBlock const &))
 0002:80438028       J3DMaterialFactory::J3DMaterialFactory((J3DMaterialDLBlock const &))
 0002:804380A8       J3DMaterialFactory::countUniqueMaterials((void))
 0002:804380F0       J3DMaterialFactory::newTexGenNum(const(int))
 0002:80438128       J3DMaterialFactory::countStages(const(int))
 0002:804381AC       J3DMaterialFactory::create(const(J3DMaterial *,J3DMaterialFactory::MaterialType,int,ulong))
 0002:80438228       J3DMaterialFactory::createNormalMaterial(const(J3DMaterial *,int,ulong))
 0002:80438B74       J3DMaterialFactory::createPatchedMaterial(const(J3DMaterial *,int,ulong))
 0002:8043946C       J3DMaterialFactory::modifyPatchedCurrentMtx(const(J3DMaterial *,int))
 0002:8043959C       J3DMaterialFactory::createLockedMaterial(const(J3DMaterial *,int,ulong))
 0002:804397EC       J3DMaterialFactory::calcSize(const(J3DMaterial *,J3DMaterialFactory::MaterialType,int,ulong))
 0002:8043986C       J3DMaterialFactory::calcSizeNormalMaterial(const(J3DMaterial *,int,ulong))
 0002:8043999C       J3DMaterialFactory::calcSizePatchedMaterial(const(J3DMaterial *,int,ulong))
 0002:80439A6C       J3DMaterialFactory::calcSizeLockedMaterial(const(J3DMaterial *,int,ulong))
 0002:80439A84       J3DMaterialFactory::newMatColor(const(int,int))
 0002:80439B18       J3DMaterialFactory::newColorChanNum(const(int))
 0002:80439B50       J3DMaterialFactory::newColorChan(const(int,int))
 0002:80439C20       J3DMaterialFactory::newAmbColor(const(int,int))
 0002:80439CEC       J3DMaterialFactory::newTexCoord(const(int,int))
 0002:80439D88       J3DMaterialFactory::newTexMtx(const(int,int))
 0002:80439E14       J3DMaterialFactory::newCullMode(const(int))
 0002:80439E54       J3DMaterialFactory::newTexNo(const(int,int))
 0002:80439E9C       J3DMaterialFactory::newTevOrder(const(int,int))
 0002:80439F30       J3DMaterialFactory::newTevColor(const(int,int))
 0002:80439FCC       J3DMaterialFactory::newTevKColor(const(int,int))
 0002:8043A060       J3DMaterialFactory::newTevStageNum(const(int))
 0002:8043A098       J3DMaterialFactory::newTevStage(const(int,int))
 0002:8043A1C0       J3DMaterialFactory::newTevSwapModeTable(const(int,int))
 0002:8043A238       J3DMaterialFactory::newIndTexStageNum(const(int))
 0002:8043A260       J3DMaterialFactory::newIndTexOrder(const(int,int))
 0002:8043A2DC       J3DMaterialFactory::newIndTexMtx(const(int,int))
 0002:8043A384       J3DMaterialFactory::newIndTevStage(const(int,int))
 0002:8043A410       J3DMaterialFactory::newIndTexCoordScale(const(int,int))
 0002:8043A46C       J3DMaterialFactory::newFog(const(int))
 0002:8043A518       J3DMaterialFactory::newAlphaComp(const(int))
 0002:8043A5B8       J3DMaterialFactory::newBlend(const(int))
 0002:8043A644       J3DMaterialFactory::newZMode(const(int))
 0002:8043A6A4       J3DMaterialFactory::newZCompLoc(const(int))
 0002:8043A6DC       J3DMaterialFactory::newDither(const(int))
 0002:8043A714       J3DMaterialFactory::newNBTScale(const(int))
 0002:8043A7B8       J3DMaterial::J3DMaterial((void))
 0002:8043A84C       J3DMaterialFactory::getMaterialMode(const(int))
 0002:8043A9D0       J3DTevStage::setTexSel((uchar))
 0002:8043A9E8       J3DTevStage::setRasSel((uchar))
 0002:8043A9FC       J3DTexCoord::J3DTexCoord((void))
 0002:8043AA14       J3DTevStage::setTevStageInfo((J3DTevStageInfo const &))
 0002:8043ABBC       J3DIndTevStage::setIndTevStageInfo((J3DIndTevStageInfo const &))
 0002:8043AC68       J3DTevSwapModeTable::J3DTevSwapModeTable((J3DTevSwapModeTableInfo const &))
 0002:8043ACBC       calcColorChanID(ushort,uchar,uchar,uchar,uchar,uchar)
 0002:8043AD5C       J3DMaterialFactory_v21::J3DMaterialFactory_v21((J3DMaterialBlock_v21 const &))
 0002:8043B040       J3DMaterialFactory_v21::countUniqueMaterials((void))
 0002:8043B060       J3DMaterialFactory_v21::newTexGenNum(const(int))
 0002:8043B098       J3DMaterialFactory_v21::countStages(const(int))
 0002:8043B11C       J3DMaterialFactory_v21::create(const(J3DMaterial *,int,ulong))
 0002:8043B8B0       J3DMaterialFactory_v21::newMatColor(const(int,int))
 0002:8043B944       J3DMaterialFactory_v21::newColorChanNum(const(int))
 0002:8043B97C       J3DMaterialFactory_v21::newColorChan(const(int,int))
 0002:8043BA84       J3DMaterialFactory_v21::newTexCoord(const(int,int))
 0002:8043BB14       J3DMaterialFactory_v21::newTexMtx(const(int,int))
 0002:8043BBA0       J3DMaterialFactory_v21::newCullMode(const(int))
 0002:8043BBE0       J3DMaterialFactory_v21::newTexNo(const(int,int))
 0002:8043BC28       J3DMaterialFactory_v21::newTevOrder(const(int,int))
 0002:8043BCBC       J3DMaterialFactory_v21::newTevColor(const(int,int))
 0002:8043BD58       J3DMaterialFactory_v21::newTevKColor(const(int,int))
 0002:8043BDEC       J3DMaterialFactory_v21::newTevStageNum(const(int))
 0002:8043BE24       J3DMaterialFactory_v21::newTevStage(const(int,int))
 0002:8043BF4C       J3DMaterialFactory_v21::newTevSwapModeTable(const(int,int))
 0002:8043BFC4       J3DMaterialFactory_v21::newFog(const(int))
 0002:8043C070       J3DMaterialFactory_v21::newAlphaComp(const(int))
 0002:8043C110       J3DMaterialFactory_v21::newBlend(const(int))
 0002:8043C19C       J3DMaterialFactory_v21::newZMode(const(int))
 0002:8043C1FC       J3DMaterialFactory_v21::newZCompLoc(const(int))
 0002:8043C234       J3DMaterialFactory_v21::newDither(const(int))
 0002:8043C26C       J3DMaterialFactory_v21::newNBTScale(const(int))
 0002:8043C310       J3DMaterialFactory_v21::getMaterialMode(const(int))
 0002:8043C32C       J3DModelLoader::J3DModelLoader((void))
 0002:8043C35C       J3DModelLoaderDataBase::load((void const *,ulong))
 0002:8043C45C       J3DModelLoaderDataBase::loadMaterialTable((void const *))
 0002:8043C4DC       J3DModelLoaderDataBase::loadBinaryDisplayList((void const *,ulong))
 0002:8043C570       J3DModelLoader::load((void const *,ulong))
 0002:8043C808       J3DModelLoader::loadMaterialTable((void const *))
 0002:8043C93C       J3DModelLoader::loadBinaryDisplayList((void const *,ulong))
 0002:8043CBC0       J3DModelLoader::setupBBoardInfo((void))
 0002:8043CCDC       J3DModelLoader::readInformation((J3DModelInfoBlock const *,ulong))
 0002:8043CE24       J3DModelLoader::readVertex((J3DVertexBlock const *))
 0002:8043D078       J3DModelLoader::readEnvelop((J3DEnvelopeBlock const *))
 0002:8043D108       J3DModelLoader::readDraw((J3DDrawBlock const *))
 0002:8043D1C0       J3DModelLoader::readJoint((J3DJointBlock const *))
 0002:8043D2A4       J3DModelLoader_v26::readMaterial((J3DMaterialBlock const *,ulong))
 0002:8043D520       J3DModelLoader_v21::readMaterial_v21((J3DMaterialBlock_v21 const *,ulong))
 0002:8043D784       J3DModelLoader::readShape((J3DShapeBlock const *,ulong))
 0002:8043D8A8       J3DModelLoader::readTextureTable((J3DTextureBlock const *))
 0002:8043D96C       J3DModelLoader_v26::readMaterialTable((J3DMaterialBlock const *,ulong))
 0002:8043DAA8       J3DModelLoader_v21::readMaterialTable_v21((J3DMaterialBlock_v21 const *,ulong))
 0002:8043DCA8       J3DModelLoader::readPatchedMaterial((J3DMaterialBlock const *,ulong))
 0002:8043DDE4       J3DModelLoader::readMaterialDL((J3DMaterialDLBlock const *,ulong))
 0002:8043DF90       J3DModelLoader::modifyMaterial((ulong))
 0002:8043E108       nullsub_113
 0002:8043E110       nullsub_114
 0002:8043E128       J3DModelData::makeHierarchy((J3DJoint *,J3DModelHierarchy const **))
 0002:8043E170       J3DTexture::J3DTexture((ushort,ResTIMG *))
 0002:8043E1D0       J3DJoint::setMtxType((uchar))
 0002:8043E270       J3DMtxCalcNoAnm<28J3DMtxCalcCalcTransformBasic,25J3DMtxCalcJ3DSysInitBasic>::calc((void))
 0002:8043E2BC       J3DMtxCalcNoAnm<32J3DMtxCalcCalcTransformSoftimage,29J3DMtxCalcJ3DSysInitSoftimage>::init((Vec const &,float const (&)[3][4]))
 0002:8043E2EC       J3DMtxCalcNoAnm<32J3DMtxCalcCalcTransformSoftimage,29J3DMtxCalcJ3DSysInitSoftimage>::calc((void))
 0002:8043E350       J3DModelLoader::countMaterialNum((void const *))
 0002:8043E390       J3DModelLoader::calcLoadSize((void const *,ulong))
 0002:8043E540       J3DModelLoader::calcLoadMaterialTableSize((void const *))
 0002:8043E618       J3DModelLoader::calcLoadBinaryDisplayListSize((void const *,ulong))
 0002:8043E824       J3DModelLoader::calcSizeInformation((J3DModelInfoBlock const *,ulong))
 0002:8043E890       J3DModelLoader::calcSizeJoint((J3DJointBlock const *))
 0002:8043E8BC       J3DModelLoader::calcSizeDraw((J3DDrawBlock const *))
 0002:8043E8D0       J3DModelLoader_v26::calcSizeMaterial((J3DMaterialBlock const *,ulong))
 0002:8043E9BC       J3DModelLoader::calcSizeShape((J3DShapeBlock const *,ulong))
 0002:8043EA60       J3DModelLoader::calcSizeTexture((J3DTextureBlock const *))
 0002:8043EA7C       J3DModelLoader_v26::calcSizeMaterialTable((J3DMaterialBlock const *,ulong))
 0002:8043EB10       J3DModelLoader::calcSizePatchedMaterial((J3DMaterialBlock const *,ulong))
 0002:8043EBA4       J3DModelLoader::calcSizeMaterialDL((J3DMaterialDLBlock const *,ulong))
 0002:8043EC84       J3DJointFactory::J3DJointFactory((J3DJointBlock const &))
 0002:8043ECC0       J3DJointFactory::create((int))
 0002:8043EE08       J3DShapeFactory::J3DShapeFactory((J3DShapeBlock const &))
 0002:8043EED8       J3DShapeFactory::create((int,ulong,_GXVtxDescList *))
 0002:8043F06C       J3DShapeFactory::newShapeMtx(const(ulong,int,int))
 0002:8043F264       J3DShapeFactory::newShapeDraw(const(int,int))
 0002:8043F2E8       J3DShapeFactory::allocVcdVatCmdBuffer((ulong))
 0002:8043F354       J3DShapeFactory::calcSize((int,ulong))
 0002:8043F3D4       J3DShapeFactory::calcSizeVcdVatCmdBuffer((ulong))
 0002:8043F3E4       J3DShapeFactory::calcSizeShapeMtx(const(ulong,int,int))
 0002:8043F48C       J3DShapeFactory::getMtxGroupNum(const(int))
 0002:8043F4AC       J3DShapeMtxConcatView::J3DShapeMtxConcatView((ushort))
 0002:8043F4C0       J3DAnmLoaderDataBase::load((void const *,J3DAnmLoaderDataBaseFlag))
 0002:8043F9BC       J3DAnmFullLoader_v15::load((void const *))
 0002:8043FB08       J3DAnmFullLoader_v15::setResource((J3DAnmBase *,void const *))
 0002:8043FC54       J3DAnmFullLoader_v15::setAnmTransform((J3DAnmTransformFull *,J3DAnmTransformFullData const *))
 0002:8043FCE8       J3DAnmFullLoader_v15::setAnmColor((J3DAnmColorFull *,J3DAnmColorFullData const *))
 0002:8043FDD0       J3DAnmFullLoader_v15::setAnmTexPattern((J3DAnmTexPattern *,J3DAnmTexPatternFullData const *))
 0002:8043FE6C       J3DAnmFullLoader_v15::setAnmVisibility((J3DAnmVisibilityFull *,J3DAnmVisibilityFullData const *))
 0002:8043FED0       J3DAnmKeyLoader_v15::setAnmCluster((J3DAnmClusterKey *,J3DAnmClusterKeyData const *))
 0002:8043FF24       J3DAnmKeyLoader_v15::setAnmVtxColor((J3DAnmVtxColorKey *,J3DAnmVtxColorKeyData const *))
 0002:804400D0       J3DAnmKeyLoader_v15::load((void const *))
 0002:8044021C       J3DAnmKeyLoader_v15::setResource((J3DAnmBase *,void const *))
 0002:80440368       J3DAnmKeyLoader_v15::setAnmTransform((J3DAnmTransformKey *,J3DAnmTransformKeyData const *))
 0002:80440404       J3DAnmKeyLoader_v15::setAnmTextureSRT((J3DAnmTextureSRTKey *,J3DAnmTextureSRTKeyData const *))
 0002:80440690       J3DAnmKeyLoader_v15::setAnmColor((J3DAnmColorKey *,J3DAnmColorKeyData const *))
 0002:804407EC       J3DAnmKeyLoader_v15::setAnmTevReg((J3DAnmTevRegKey *,J3DAnmTevRegKeyData const *))
 0002:80440BC4       J3DAnmCluster::J3DAnmCluster((short,float *))
 0002:80440C30       J3DAnmTransformFull::J3DAnmTransformFull((void))
 0002:80440D2C       JMAEulerToQuat(short,short,short,Quaternion *)
 0002:80440DFC       JMAQuatLerp(Quaternion const *,Quaternion const *,float,Quaternion *)
 0002:80440EF8       JMAVECScaleAdd(Vec const *,Vec const *,Vec *,float)
 0002:80440F1C       JMAVECLerp(Vec const *,Vec const *,Vec *,float)
 0002:80440F48       JMAMTXApplyScale(float const *[4],float *[4],float,float,float)
 0002:80440F9C       JMath::TAtanTable<1024,f>::atan2_(const(float,float))
 0002:804410AC       __sinit__JMATrigonometric_cpp
 0002:804410EC       JMath::TAtanTable<1024,f>::get_(const(float,float))
 0002:80441134       JMath::TSinCosTable<14,f>::TSinCosTable<14,f>((void))
 0002:80441240       JMath::TAtanTable<1024,f>::TAtanTable<1024,f>((void))
 0002:804412F4       JMath::TAsinAcosTable<1024,f>::TAsinAcosTable<1024,f>((void))
 0002:804413A8       JPAResourceManager::JPAResourceManager((void const *,JKRHeap *))
 0002:80441400       JPAResourceManager::getResource(const(ushort))
 0002:80441444       JPAResourceManager::swapTexture((ResTIMG const *,char const *))
 0002:804414DC       JPAResourceManager::registRes((JPAResource *))
 0002:804414FC       JPAResourceManager::registTex((JPATexture *))
 0002:8044151C       JPAResource::JPAResource((void))
 0002:8044158C       JPAResource::init((JKRHeap *))
 0002:804426A0       def_804425C0
 0002:804429FC       def_8044291C
 0002:80442AB8       JPAResource::calc((JPAEmitterWorkData *,JPABaseEmitter *))
 0002:80442D94       JPAResource::draw((JPAEmitterWorkData *,JPABaseEmitter *))
 0002:80442E74       JPAResource::drawP((JPAEmitterWorkData *))
 0002:8044319C       JPAResource::drawC((JPAEmitterWorkData *))
 0002:80443484       JPAResource::setPTev((void))
 0002:8044371C       JPAResource::setCTev((JPAEmitterWorkData *))
 0002:80443888       JPAResource::calc_p((JPAEmitterWorkData *,JPABaseParticle *))
 0002:80443904       JPAResource::calc_c((JPAEmitterWorkData *,JPABaseParticle *))
 0002:80443980       JPAResource::calcField((JPAEmitterWorkData *,JPABaseParticle *))
 0002:804439FC       JPAResource::calcKey((JPAEmitterWorkData *))
 0002:80443B10       def_80443A8C
 0002:80443B40       JPAResource::calcWorkData_c((JPAEmitterWorkData *))
 0002:80443CF4       JPAResource::calcWorkData_d((JPAEmitterWorkData *))
 0002:80443D78       JPAList<15JPABaseParticle>::erase((JPANode<15JPABaseParticle> *))
 0002:80443E24       JPAList<15JPABaseParticle>::push_front((JPANode<15JPABaseParticle> *))
 0002:80443E74       JPASetLineWidth(JPAEmitterWorkData *)
 0002:80443EF4       JPASetLineWidth(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80443F84       JPARegistPrm(JPAEmitterWorkData *)
 0002:80444020       JPARegistEnv(JPAEmitterWorkData *)
 0002:804440AC       JPARegistPrmEnv(JPAEmitterWorkData *)
 0002:804441D4       JPARegistAlpha(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444280       JPARegistPrmAlpha(JPAEmitterWorkData *,JPABaseParticle *)
 0002:8044432C       JPARegistPrmAlphaEnv(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444464       JPARegistAlphaEnv(JPAEmitterWorkData *,JPABaseParticle *)
 0002:8044459C       JPARegistEnv(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444628       JPACalcClrIdxNormal(JPAEmitterWorkData *)
 0002:80444654       JPACalcClrIdxNormal(JPAEmitterWorkData *,JPABaseParticle *)
 0002:8044467C       JPACalcClrIdxRepeat(JPAEmitterWorkData *)
 0002:804446AC       JPACalcClrIdxRepeat(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804446E8       JPACalcClrIdxReverse(JPAEmitterWorkData *)
 0002:80444728       JPACalcClrIdxReverse(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444774       JPACalcClrIdxRandom(JPAEmitterWorkData *)
 0002:80444780       JPACalcClrIdxMerge(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444800       JPACalcClrIdxRandom(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444834       JPACalcPrm(JPAEmitterWorkData *)
 0002:80444858       JPACalcPrm(JPAEmitterWorkData *,JPABaseParticle *)
 0002:8044487C       JPACalcEnv(JPAEmitterWorkData *)
 0002:804448A0       JPACalcEnv(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804448C4       JPACalcColorCopy(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444910       JPAGenTexCrdMtxIdt(JPAEmitterWorkData *)
 0002:8044492C       JPAGenTexCrdMtxAnm(JPAEmitterWorkData *)
 0002:80444948       JPAGenTexCrdMtxPrj(JPAEmitterWorkData *)
 0002:80444964       JPAGenCalcTexCrdMtxAnm(JPAEmitterWorkData *)
 0002:80444B34       JPALoadCalcTexCrdMtxAnm(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444CF0       JPALoadTex(JPAEmitterWorkData *)
 0002:80444D18       JPALoadTexAnm(JPAEmitterWorkData *)
 0002:80444D40       JPALoadTexAnm(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444D60       JPACalcTexIdxNormal(JPAEmitterWorkData *)
 0002:80444D9C       JPACalcTexIdxNormal(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444DD4       JPACalcTexIdxRepeat(JPAEmitterWorkData *)
 0002:80444E0C       JPACalcTexIdxRepeat(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444E50       JPACalcTexIdxReverse(JPAEmitterWorkData *)
 0002:80444EA0       JPACalcTexIdxReverse(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444EFC       JPACalcTexIdxRandom(JPAEmitterWorkData *)
 0002:80444F18       JPACalcTexIdxMerge(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444FB0       JPACalcTexIdxRandom(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80444FEC       JPALoadPosMtxCam(JPAEmitterWorkData *)
 0002:80444FF8       nullsub_60
 0002:80445218       JPADrawBillboard(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445300       JPADrawRotBillboard(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445728       JPADrawRotation(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445870       JPADrawPoint(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445908       JPADrawEmitterCallBackB(JPAEmitterWorkData *)
 0002:8044592C       JPADrawParticleCallBack(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445958       makeColorTable(_GXColor **,JPAClrAnmKeyData const *,uchar,short,JKRHeap *)
 0002:80445BD8       JPABaseShape::JPABaseShape((uchar const *,JKRHeap *))
 0002:80445CE0       JPABaseShape::setGX(const(JPAEmitterWorkData *))
 0002:80445E0C       JPAResourceManager::load((ushort,_GXTexMapID))
 0002:80445E38       JPACalcScaleX(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445EB0       JPACalcScaleY(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445F28       JPACalcScaleCopy(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445F34       JPACalcScaleAnmNormal(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445F40       JPACalcScaleAnmRepeatX(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80445FA8       JPACalcScaleAnmRepeatY(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80446010       JPACalcScaleAnmReverseX(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804460A8       JPACalcScaleAnmReverseY(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80446140       JPACalcAlphaAnm(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804461EC       JPACalcAlphaFlickAnm(JPAEmitterWorkData *,JPABaseParticle *)
 0002:80446310       JPADynamicsBlock::JPADynamicsBlock((uchar const *))
 0002:80446344       JPAExtraShape::init((void))
 0002:80446458       JPARegistChildPrmEnv(JPAEmitterWorkData *)
 0002:804465A0       JPACalcChildAlphaOut(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804465CC       JPACalcChildScaleOut(JPAEmitterWorkData *,JPABaseParticle *)
 0002:804465FC       JPALoadExTex(JPAEmitterWorkData *)
 0002:804466E0       JPAVolumePoint(JPAEmitterWorkData *)
 0002:80446798       JPAVolumeLine(JPAEmitterWorkData *)
 0002:804468A8       JPAVolumeCircle(JPAEmitterWorkData *)
 0002:80446A2C       JPAVolumeCube(JPAEmitterWorkData *)
 0002:80446AEC       JPAVolumeSphere(JPAEmitterWorkData *)
 0002:80446D1C       JPAVolumeCylinder(JPAEmitterWorkData *)
 0002:80446E64       JPAVolumeTorus(JPAEmitterWorkData *)
 0002:80446FA8       JPADynamicsBlock::init((void))
 0002:80447044       JPADynamicsBlock::create((JPAEmitterWorkData *))
 0002:80447224       JPARandom::get_rndm_f((void))
 0002:80447264       JPABaseEmitter::checkFlag(const(ulong))
 0002:8044727C       JPABaseEmitter::get_r_ss((void))
 0002:804472A4       JPABaseEmitter::get_r_zp((void))
 0002:804472D4       JPAFieldBase::calcAffect((JPAFieldBlock *,JPABaseParticle *))
 0002:804473A4       JPAFieldBase::calcFadeAffect(const(JPAFieldBlock *,float))
 0002:80447440       JPAFieldGravity::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:804474C0       JPAFieldAir::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:80447534       JPAFieldMagnet::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:80447588       JPAFieldMagnet::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:804475EC       JPAFieldNewton::prepare((JPAEmitterWorkData *,JPAFieldBlock *))
 0002:80447654       JPAFieldNewton::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:804476F4       JPAFieldConvection::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:80447804       JPAFieldRandom::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:804478D8       JPAFieldDrag::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:80447958       JPAFieldSpin::calc((JPAEmitterWorkData *,JPAFieldBlock *,JPABaseParticle *))
 0002:80447A34       JPAFieldBlock::JPAFieldBlock((uchar const *,JKRHeap *))
 0002:80447A6C       JPAFieldBlock::init((JKRHeap *))
 0002:80447CD8       def_80447B48
 0002:80447CF8       JPABaseEmitter::get_r_zh((void))
 0002:80447E80       JPAKeyBlock::JPAKeyBlock((uchar const *))
 0002:80447E90       JPAKeyBlock::calc((float))
 0002:80447F28       JPATexture::JPATexture((uchar const *))
 0002:80447F88       JASWaveArc::~JASWaveArc((void))
 0002:80447FE4       JPAResourceLoader::JPAResourceLoader((uchar const *,JPAResourceManager *))
 0002:80448024       JPAResourceLoader::load_jpc((uchar const *,JPAResourceManager *))
 0002:804483C8       JPAEmitterManager::JPAEmitterManager((ulong,ulong,JKRHeap *,uchar,uchar))
 0002:8044862C       JPAEmitterManager::createSimpleEmitterID((JGeometry::TVec3<f> const &,ushort,uchar,uchar,JPAEmitterCallBack *,JPAParticleCallBack *))
 0002:80448710       JPAEmitterManager::calc((uchar))
 0002:80448790       JPAEmitterManager::draw((JPADrawInfo const *,uchar))
 0002:80448984       JPAEmitterManager::forceDeleteEmitter((JPABaseEmitter *))
 0002:804489F0       JPAEmitterManager::entryResourceManager((JPAResourceManager *,uchar))
 0002:80448A64       JPABaseEmitter::JPABaseEmitter((void))
 0002:80448B0C       JPABaseEmitter::~JPABaseEmitter((void))
 0002:80448B98       JPAEmitterCallBack::~JPAEmitterCallBack((void))
 0002:80448BD8       JPABaseEmitter::createParticle((void))
 0002:80448C68       JPABaseEmitter::createChild((JPABaseParticle *))
 0002:80448CE4       JPABaseEmitter::deleteAllParticle((void))
 0002:80448D54       JPABaseEmitter::processTillStartFrame((void))
 0002:80448D94       JPABaseEmitter::processTermination((void))
 0002:80448E2C       JPABaseEmitter::calcEmitterGlobalPosition(const(JGeometry::TVec3<f> *))
 0002:80448EAC       JPAList<15JPABaseParticle>::pop_front((void))
 0002:80448F0C       JPAList<15JPABaseParticle>::pop_back((void))
 0002:80448F6C       JPAParticleCallBack::~JPAParticleCallBack((void))
 0002:80448FAC       JPABaseParticle::init_p((JPAEmitterWorkData *))
 0002:80449530       JPABaseParticle::init_c((JPAEmitterWorkData *,JPABaseParticle *))
 0002:804499CC       JPABaseParticle::calc_p((JPAEmitterWorkData *))
 0002:80449BF8       JPABaseParticle::calc_c((JPAEmitterWorkData *))
 0002:80449DF8       JPABaseParticle::canCreateChild((JPAEmitterWorkData *))
 0002:80449E7C       JPABaseParticle::getCalcCurrentPositionX(const(JPABaseEmitter const *))
 0002:80449EA4       JPABaseParticle::getCalcCurrentPositionY(const(JPABaseEmitter const *))
 0002:80449ECC       JPABaseParticle::getCalcCurrentPositionZ(const(JPABaseEmitter const *))
 0002:80449EF4       JGeometry::TVec3<f>::setLength((JGeometry::TVec3<f> const &,float))
 0002:80449FA4       JPAGetDirMtx(JGeometry::TVec3<f> const &,float *[4])
 0002:8044A0C8       JPAGetYZRotateMtx(short,short,float *[4])
 0002:8044A140       JPAGetXYZRotateMtx(short,short,short,float *[4])
 0002:8044A1F4       JPASetRMtxfromMtx(float const *[4],float *[4])
 0002:8044A21C       JPASetRMtxTVecfromMtx(float const *[4],float *[4],JGeometry::TVec3<f> *)
 0002:8044A244       JPASetRMtxSTVecfromMtx(float const *[4],float *[4],JGeometry::TVec3<f> *,JGeometry::TVec3<f> *)
 0002:8044A3B0       JPACalcKeyAnmValue(float,ushort,float const *)
 0002:8044A470       GDInitGDLObj
 0002:8044A488       GDFlushCurrToMem
 0002:8044A498       GDPadCurr32
 0002:8044A5B0       __DVDPrintFatalMessage
 0002:8044A5C8       GDSetVtxDescv
 0002:8044A80C       def_8044A640
 0002:8044ABA4       GDSetArray
 0002:8044ADAC       GDSetArrayRaw
 0002:8044AFB0       GDSetTexCoordGen
 0002:8044B0B8       def_8044B000
 0002:8044B3E4       GDSetCullMode
 0002:8044B570       GDSetGenMode
 0002:8044B990       GDSetGenMode2
 0002:8044BDC8       GDSetTevDirect
 0002:8044BEA4       GDSetChanAmbColor
 0002:8044C038       GDSetChanMatColor
 0002:8044C1CC       GDSetChanCtrl
 0002:8044C4DC       GDSetFog
 0002:8044C9D8       GDSetBlendMode
 0002:8044CC68       GDSetBlendModeEtc
 0002:8044CE80       GDSetZMode
 0002:8044CF80       GDSetDstAlpha
 0002:8044D068       GDSetTevColorCalc
 0002:8044D2B0       GDSetTevAlphaCalcAndSwap
 0002:8044D52C       GDSetTevColor
 0002:8044D820       GDSetAlphaCompare
 0002:8044D928       GDSetTevOrder
 0002:8044DA98       GDSetTexLookupMode
 0002:8044DCF8       GDSetTexImgAttr
 0002:8044DDF0       GDSetTexImgPtr
 0002:8044DED8       GDSetCurrentMtx
 0002:804514EC       THPVideoDecode
 0002:804517AC       __THPReadFrameHeader
 0002:804518E0       __THPReadScaneHeader
 0002:804519F4       __THPReadQuantizationTable
 0002:80451D8C       __THPReadHuffmanTableSpecification
 0002:80452150       __THPPrepBitStream
 0002:80452398       __THPDecompressYUV
 0002:8045249C       __THPDecompressiMCURow512x448
 0002:804526E8       __THPInverseDCTNoYPos
 0002:80452B74       __THPInverseDCTY8
 0002:80453008       __THPDecompressiMCURow640x480
 0002:80453258       __THPDecompressiMCURowNxN
 0002:804534B4       __THPHuffDecodeDCTCompY
 0002:80453B10       __THPHuffDecodeDCTCompU
 0002:80454198       __THPHuffDecodeDCTCompV
 0002:80454820       THPInit
 0002:804548BC       THPAudioDecode
 0002:80454D50       TPLBind
 0002:80454E64       TPLGet
 0002:80454E84       WENCGetEncodeData
 0002:8045515C       RSONotifyModuleLoaded
 0002:80455160       RSONotifyPreRSOLink
 0002:80455164       RSONotifyPostRSOLink
 0002:80455168       RSONotifyPreRSOLinkFar
 0002:8045516C       RSONotifyPostRSOLinkFar
 0002:80455170       LocateObject
 0002:804554E8       RSOStaticLocateObject
 0002:804557F4       RSOLink
 0002:80455924       RSOIsImportSymbolResolvedAll
 0002:80455974       FindExportIndex
 0002:80455B64       RSOFindExportSymbolAddr
 0002:80455BC4       RSORelocate
 0002:80455D90       RSORelocateSmallDataSection
 0002:80455FE0       RSOListInit
 0002:80456050       LinkList
 0002:80456138       cnvJumpCode
 0002:8045621C       RSOGetJumpCodeSize
 0002:8045622C       RSOMakeJumpCode
 0002:804563DC       RSOLinkJump
 0002:804564CC       RFLGetWorkSize
 0002:804564E8       RFLInitResAsync
 0002:80456888       RFLExit
 0002:80456A10       bootloadDB2Res_
 0002:80456C3C       __DVDGetAutoFatalMessaging
 0002:80456C50       RFLiAlloc32
 0002:80456C64       RFLiFree
 0002:80456C74       RFLiGetDBManager
 0002:80456C90       RFLiGetHDBManager
 0002:80456CAC       RFLiGetLoader
 0002:80456CC8       RFLiGetWorking
 0002:80456CE4       RFLiSetWorking
 0002:80456CF8       RFLGetAsyncStatus
 0002:80456D80       RFLGetLastReason
 0002:80456DA8       RFLiGetAccInfo
 0002:80456DCC       RFLiGetCtrlBufManager
 0002:80456DE8       RFLiGetUseDeluxTex
 0002:80456E04       RFLiGetLastReason
 0002:80456E20       RFLiSetFileBroken
 0002:80456E48       RFLiNotFoundError
 0002:80456E68       RFLiNeedRepairError
 0002:80456E88       RFLiInitLoader
 0002:80456F9C       parseOnmemoryRes_
 0002:80457114       loadResRead2ndcallback_
 0002:80457234       j_RFLExit
 0002:80457238       loadResRead1stcallback_
 0002:80457324       loadResGetlengthcallback_
 0002:804573C8       loadResOpencallback_
 0002:80457438       RFLiLoadResourceHeaderAsync
 0002:804574CC       getNANDFile_
 0002:80457650       RFLiGetShapeSize
 0002:804577BC       RFLiLoadShape
 0002:80457E00       RFLFreeCachedResource
 0002:80457E6C       RFLIsResourceCached
 0002:80457EB4       RFLiInitAccessInfo
 0002:80457F30       RFLiExitAccessInfo
 0002:80457F74       j_RFLiGetWorking
 0002:80457F78       RFLiStartWorking
 0002:80457FC8       RFLiEndWorking
 0002:80458044       opencallback_
 0002:80458328       createcallback_
 0002:80458600       close2opencallback_
 0002:804588C8       RFLiOpenAsync
 0002:80458CA4       readcallback_
 0002:80458F0C       readseekcallback_
 0002:80459200       RFLiReadAsync
 0002:804593C8       closecallback_
 0002:80459560       RFLiCloseAsync
 0002:8045972C       getlengthcallback_
 0002:804598BC       RFLiGetLengthAsync
 0002:80459A68       RFLGetModelBufferSize
 0002:80459B44       RFLInitCharModel
 0002:80459BB0       RFLiInitCharModel
 0002:80459F24       RFLSetMtx
 0002:80459F8C       RFLiGetFacelineColor
 0002:80459FB8       RFLLoadDrawSetting
 0002:8045A2B4       RFLLoadVertexSetting
 0002:8045A354       RFLLoadMaterialSetting
 0002:8045A414       RFLDrawOpaCore
 0002:8045A920       RFLDrawXluCore
 0002:8045ABA4       RFLiInitCharModelRes
 0002:8045B2DC       RFLiInitShapeRes
 0002:8045B8C4       RFLiInitTexRes
 0002:8045B9E0       RFLSetModelDrawDoneCallback
 0002:8045BA10       RFLiSetupCopyTex
 0002:8045BB40       RFLiMakeTexture
 0002:8045CBC8       RFLiSetup2DCameraAndParam
 0002:8045CDA0       RFLiSetTev4Mouth
 0002:8045CFE8       RFLiSetTev4Eye
 0002:8045D298       RFLiSetFaceParts
 0002:8045D7A0       RFLiCapture
 0002:8045E030       RFLiDrawQuad
 0002:8045E228       RFLiGetMaxMaskRsl
 0002:8045E290       RFLiGetMaskBufSize
 0002:8045E2D0       RFLMakeIcon
 0002:8045E344       RFLiMakeIcon
 0002:8045E884       RFLSetIconDrawDoneCallback
 0002:8045E8B4       RFLiInitHiddenDatabase
 0002:8045E8E8       RFLiInitDatabase
 0002:8045E94C       bootloadCheckCRCCb_
 0002:8045E9BC       bootloadDBcallback_
 0002:8045EB14       bootloadDBopencallback_
 0002:8045EC44       RFLiBootLoadDatabaseAsync
 0002:8045ED24       RFLiGetCharData
 0002:8045EE90       convertRaw2InfoCore_
 0002:8045F048       RFLiConvertRaw2Info
 0002:8045F098       RFLiConvertHRaw2Info
 0002:8045F0E8       convertInfo2RawCore_
 0002:8045F294       RFLiGetCharInfo
 0002:8045F338       RFLIsAvailableOfficialData
 0002:8045F374       RFLiIsSameID
 0002:8045F508       RFLiIsValidID
 0002:8045F540       RFLiIsSpecialID
 0002:8045F600       RFLiIsTemporaryID
 0002:8045F658       RFLSearchOfficialData
 0002:8045F74C       RFLiIsValidName2
 0002:8045F7BC       alarmCheckCb_
 0002:8045F95C       RFLiInitCtrlBuf
 0002:8045FB04       RFLiGetControllerData
 0002:8045FBF8       RFLGetMiddleDBBufferSize
 0002:8045FC00       RFLInitMiddleDB
 0002:8045FCAC       RFLiGetCharInfoMiddleDB
 0002:8045FD48       RFLiGetDefaultData
 0002:8045FD60       RFLiCheckValidInfo
 0002:804601C4       RFLiIsValidOnNAND
 0002:804601F0       RFLiPickupCharInfo
 0002:80460330       copyChar2Additional_
 0002:804604C0       RFLGetAdditionalInfo
 0002:80460514       RFLiClearDBBuffer
 0002:804605D0       NETGetUniversalCalendar
 0002:804606BC       Mail_strcpy
 0002:804606EC       Mail_strlen
 0002:80460710       STD_strnlen
 0002:80460874       Mail_strcat
 0002:804608C4       Mail_strncat
 0002:80460924       convNum
 0002:80460F18       Mail_vsprintf
 0002:804612FC       def_80461080
 0002:804613D8       NWC24FOpen
 0002:804614CC       NWC24iFOpenNand
 0002:8046154C       def_80461508
 0002:80461604       NWC24iFOpenVF
 0002:8046172C       NWC24FClose
 0002:80461814       NWC24iFCloseNand
 0002:804618C4       NWC24FSeek
 0002:80461AB4       NWC24FRead
 0002:80461C84       NWC24FWrite
 0002:80461E5C       NWC24FGetLength
 0002:80461F18       NWC24FDeleteVF
 0002:80461F98       NWC24MountVF
 0002:804620A0       NWC24UnmountVF
 0002:80462120       NWC24CheckSizeVF
 0002:804621B4       BufferedWrite
 0002:80462348       BufferedWriteFlush
 0002:804624B8       BufferedRead
 0002:804626A4       NWC24GetMyUserId
 0002:8046280C       NWC24iConfigOpen
 0002:80462884       NWC24iConfigReload
 0002:80462978       NWC24iConfigFlush
 0002:80462AF8       NWC24GetAccountDomain
 0002:80462B04       NWC24GetMBoxDir
 0002:80462B74       NWC24GetAppId
 0002:80462BC0       NWC24GetGroupId
 0002:80462C64       CheckConfig
 0002:80462D6C       NWC24Date_Init
 0002:80462D9C       NWC24iConvIdToStr
 0002:80462F78       NWC24iRegister
 0002:80462FB0       NWC24OpenLib
 0002:80462FD0       NWC24OpenLibInternal
 0002:80463180       def_80463170
 0002:8046319C       NWC24CloseLib
 0002:80463208       NWC24IsMsgLibOpened
 0002:8046321C       nandIsInitialized
 0002:80463230       NWC24IsMsgLibOpenBlocking
 0002:80463244       NWC24BlockOpenMsgLib
 0002:804632E4       NWC24iSetNewMsgArrived
 0002:80463308       NWC24InitMsgObj
 0002:804634F8       NWC24SetMsgToId
 0002:8046355C       NWC24SetMsgText
 0002:80463694       NWC24SetMsgAttached
 0002:804638FC       NWC24SetMsgAltName
 0002:80463980       NWC24SetMsgMBNoReply
 0002:804639D8       NWC24SetMsgLedPattern
 0002:80463AA4       NWC24GetMsgSize
 0002:80463AC8       NWC24iOpenMBox
 0002:80463C5C       NWC24iMBoxOpenNewMsg
 0002:80463D9C       NWC24iMBoxCloseMsg
 0002:80463E50       NWC24iMBoxCancelMsg
 0002:80464054       NWC24iMBoxAddMsgObj
 0002:80464220       NWC24iMBoxFlushHeader
 0002:80464370       NWC24iMBoxCheck
 0002:80464480       DeleteMsg
 0002:80464920       DuplicationCheck
 0002:80464C98       GetCachedMBCHeader
 0002:80464E90       AddMBCEntry
 0002:80464FDC       ClearMBCEntry
 0002:804650C8       MountVFMBox
 0002:80465254       CopyMsgObjToMBCFmt
 0002:80465400       Base64Encode
 0002:80465534       NWC24Base64Encode
 0002:80465550       NWC24InitBase64Table
 0002:80465830       QEncode
 0002:80465B64       NWC24iGetMIMETypeSuffix
 0002:80465BF4       NWC24GetCharsetStr
 0002:80465C3C       NWC24GetEncodingStr
 0002:80465C84       NWC24CommitMsg
 0002:80466A38       CheckMsgObject
 0002:80466AD8       CheckMsgBoxSpace
 0002:80466E54       SynthesizeAddrStr
 0002:804673C8       WriteDateField
 0002:80467500       WriteXWiiAppIdField
 0002:8046761C       WriteXWiiFaceField
 0002:8046771C       WriteXWiiAltNameField
 0002:8046781C       WriteMIMEAttachHeader
 0002:8046798C       WriteContentTypeField
 0002:80467AC0       WritePlainText
 0002:80467B80       WriteBase64Data
 0002:80467CE4       WriteQPData
 0002:80467DD4       NWC24SuspendScheduler
 0002:80467EA4       NWC24ResumeScheduler
 0002:80467F94       NWC24iSetScriptMode
 0002:80468134       NWC24iRequestGenerateUserId
 0002:804682F0       NWC24iTrySuspendForOpenLib
 0002:804683D0       NWC24iResumeForCloseLib
 0002:8046849C       ExecSuspendScheduler
 0002:804684AC       ExecTrySuspendScheduler
 0002:80468638       ExecResumeScheduler
 0002:80468648       ExecNoParamCommand
 0002:804687A8       NWC24iDateToMinutes
 0002:80468850       NWC24iMinutesToDate
 0002:804688F4       NWC24iEpochSecondsToDate
 0002:80468A30       NWC24iDateToOSCalendarTime
 0002:80468B84       ConvertDateToDays
 0002:80468D48       ConvertDaysToDate
 0002:80468EE4       NWC24iOpenFriendList
 0002:80468F20       GetCachedFLHeader
 0002:80469000       NWC24iOpenSecretFriendList
 0002:8046903C       GetCachedSecretFLHeader
 0002:8046911C       NWC24iCheckUserIdCRC
 0002:804691B4       getUnScrambleId
 0002:80469438       NWC24iGetUniversalTime
 0002:80469578       NWC24iGetTimeDifference
 0002:804696EC       NWC24iSetRtcCounter
 0002:80469834       NWC24iSynchronizeRtcCounter
 0002:804698C8       NWC24iOpenResourceManager
 0002:80469940       NWC24iCloseResourceManager
 0002:80469974       NWC24iIoctlResourceManager
 0002:804699BC       NWC24iIoctlResourceManagerAsync
 0002:80469A20       CallbackAsyncIpc
 0002:80469A2C       __OSVIDimReplyHandler
 0002:80469A3C       NWC24iOpenDlTaskList
 0002:80469DF0       NWC24iLoadDlHeader
 0002:80469F80       DeleteDlTask
 0002:8046A144       NWC24iPrepareShutdown
 0002:8046A204       NWC24Shutdown
 0002:8046A2D4       VFipf_toupper
 0002:8046A2EC       VFipf_memcpy
 0002:8046A414       VFipf_memset
 0002:8046A50C       VFipf_strlen
 0002:8046A52C       VFipf_strcpy
 0002:8046A550       VFipf_strcmp
 0002:8046A588       VFipf_strncmp
 0002:8046A5D4       VFiPFCODE_Combine_Width
 0002:8046A5E0       VFiPFCODE_Divide_Width
 0002:8046A5F0       VFiPF_LE16_TO_U16_STR
 0002:8046A718       VFiPFSTR_GetStrPos
 0002:8046A730       VFiPFSTR_MoveStrPos
 0002:8046A810       VFiPFSTR_InitStr
 0002:8046A8BC       VFiPFSTR_StrLen
 0002:8046A8D0       VFiPFSTR_StrNumChar
 0002:8046A9B0       VFiPFSTR_StrCmp
 0002:8046AA54       VFiPFSTR_StrNCmp
 0002:8046AB50       VFiPFSTR_ToUpperNStr
 0002:8046AC3C       VFipf_w_strlen
 0002:8046AC60       VFipf_w_strcpy
 0002:8046AC84       VFipf_w_strncmp
 0002:8046ACD0       VFiPFDRV_GetBPBInformation
 0002:8046ADBC       VFiPFDRV_GetFSINFOInformation
 0002:8046AF78       VFiPFDRV_StoreFreeCountToFSINFO
 0002:8046B12C       VFiPFDRV_IsWProtected
 0002:8046B1B0       VFiPFDRV_init
 0002:8046B230       VFiPFDRV_finalize
 0002:8046B248       VFiPFDRV_mount
 0002:8046B480       VFiPFDRV_unmount
 0002:8046B508       VFiPFDRV_format
 0002:8046B630       VFiPFDRV_lwrite
 0002:8046B738       VFiPFDRV_lerase
 0002:8046B7B8       VFipdm_bpb_calculate_common_bpb_fields
 0002:8046B8CC       VFipdm_bpb_get_bpb_information
 0002:8046BE04       VFipdm_bpb_get_fsinfo_information
 0002:8046BE64       VFipdm_bpb_set_fsinfo_information
 0002:8046BF28       VFipdm_bpb_check_boot_sector
 0002:8046C070       VFipdm_bpb_check_fsinfo_sector
 0002:8046C11C       VFipdm_disk_get_handle
 0002:8046C300       VFipdm_disk_do_get_permission
 0002:8046C444       VFipdm_disk_check_disk_handle
 0002:8046C4F4       VFipdm_disk_open_disk
 0002:8046C668       VFipdm_disk_close_disk
 0002:8046C8B8       VFipdm_disk_get_part_permission
 0002:8046C9A0       VFipdm_disk_release_part_permission
 0002:8046CB30       VFipdm_disk_physical_read
 0002:8046CC80       VFipdm_disk_physical_write
 0002:8046CDD0       VFipdm_disk_physical_erase
 0002:8046CF10       VFipdm_disk_format
 0002:8046D048       VFipdm_disk_get_lba_size
 0002:8046D134       VFipdm_disk_get_media_information
 0002:8046D240       VFipdm_disk_check_media_insert
 0002:8046D344       VFipdm_disk_check_data_erase
 0002:8046D448       VFipdm_disk_set_disk
 0002:8046D530       VFipdm_disk_notify_media_insert
 0002:8046D60C       VFipdm_part_get_start_sector
 0002:8046D76C       VFipdm_part_convert_lsector_to_block
 0002:8046D8EC       VFipdm_part_get_handle
 0002:8046DA70       VFipdm_part_open_partition
 0002:8046DB94       VFipdm_part_close_partition
 0002:8046DD70       VFipdm_part_get_permission
 0002:8046DF48       VFipdm_part_release_permission
 0002:8046E0C8       VFipdm_part_format
 0002:8046E208       VFipdm_part_logical_write
 0002:8046E630       VFipdm_part_logical_erase
 0002:8046E7D0       VFipdm_part_check_data_erase
 0002:8046E8E4       VFipdm_part_check_media_write_protect
 0002:8046E9E8       VFipdm_part_check_media_insert
 0002:8046EAEC       VFipdm_part_check_media_detect
 0002:8046ED04       VFipdm_part_set_change_media_state
 0002:8046EDC0       VFipdm_part_set_driver_error_code
 0002:8046EDDC       VFipdm_part_get_driver_error_code
 0002:8046EDF8       VFipdm_mbr_get_table
 0002:8046EF0C       VFipdm_mbr_get_mbr_part_table
 0002:8046EFC8       VFipdm_mbr_get_epbr_part_table
 0002:8046F194       VFipdm_mbr_check_master_boot_record
 0002:8046F3B0       VFipdm_init_diskmanager
 0002:8046F4D8       VFipdm_open_disk
 0002:8046F538       VFipdm_open_partition
 0002:8046F594       VFipdm_close_partition
 0002:8046F5D4       VFiPFCACHE_InitPageList
 0002:8046F854       VFiPFCACHE_FlushPageIfNeeded
 0002:8046F954       VFiPFCACHE_DoAllocatePage
 0002:8046FC9C       VFiPFCACHE_DoReadPage
 0002:8046FEA0       VFiPFCACHE_DoReadPageAndFlushIfNeeded
 0002:80470134       VFiPFCACHE_DoReadNumSector
 0002:80470388       VFiPFCACHE_DoWritePage
 0002:804704BC       VFiPFCACHE_DoWriteNumSectorAndFreeIfNeeded
 0002:804708F8       VFiPFCACHE_DoFlushCache
 0002:804709F8       VFiPFCACHE_SetCache
 0002:80470A0C       VFiPFCACHE_SetFATBufferSize
 0002:80470A1C       VFiPFCACHE_SetDataBufferSize
 0002:80470A2C       VFiPFCACHE_InitCaches
 0002:80470AF4       VFiPFCACHE_UpdateModifiedSector
 0002:80470B5C       VFiPFCACHE_AllocateDataPage
 0002:80470BD0       VFiPFCACHE_FreeDataPage
 0002:80470C60       VFiPFCACHE_ReadFATPage
 0002:80470CA0       VFiPFCACHE_ReadDataPageAndFlushIfNeeded
 0002:80470D30       VFiPFCACHE_WriteDataNumSectorAndFreeIfNeeded
 0002:80470D90       VFiPFCACHE_WriteFATPage
 0002:80470DCC       VFiPFCACHE_WriteDataPage
 0002:80470E68       VFiPFCACHE_SearchDataCache
 0002:80470EEC       VFiPFCACHE_FlushFATCache
 0002:80470F20       VFiPFCACHE_FlushDataCacheSpecific
 0002:80471044       VFiPFCACHE_FlushAllCaches
 0002:8047109C       VFiPFCACHE_FreeAllCaches
 0002:804711D8       VFiPFCLUSTER_InitLastAccessCluster
 0002:804711E8       VFiPFCLUSTER_UpdateLastAccessCluster
 0002:804712A4       VFiPFCLUSTER_SetLastAccessCluster
 0002:804712B4       VFiPFCLUSTER_AppendCluster
 0002:804714D0       VFiPFCLUSTER_GetAppendSize
 0002:80471678       VFiPFDIR_FinalizeAllDirs
 0002:80471704       VFiPFENT_searchEmptyTailSFN
 0002:80471A6C       VFiPFENT_findEmptyTailSFN
 0002:80471B84       VFiPFENT_CalcCheckSum
 0002:80471BF4       VFiPFENT_LoadShortNameFromBuf
 0002:80471C3C       VFiPFENT_loadEntryNumericFieldsFromBuf
 0002:80471CE8       VFiPFENT_LoadLFNEntryFieldsFromBuf
 0002:80471F08       VFiPFENT_storeLFNEntryFieldsToBuf
 0002:80472074       VFiPFENT_GetParentEntryOfPath
 0002:80472110       VFiPFENT_findEntry
 0002:804722A0       VFiPFENT_allocateEntry
 0002:8047230C       VFiPFENT_GetRootDir
 0002:804723B4       VFiPFENT_MakeRootDir
 0002:8047249C       VFiPFENT_CompareAttr
 0002:80472510       VFiPFENT_compareEntryName
 0002:80472640       VFiPFENT_UpdateSFNEntry
 0002:804727F8       VFiPFENT_UpdateEntry
 0002:80472A48       VFiPFENT_AdjustSFN
 0002:80472B24       VFiPFENT_RemoveEntry
 0002:80472C9C       VFiPFENT_getcurrentDateTimeForEnt
 0002:80472D20       VFiPFENT_InitENT
 0002:80472F58       VFiPFENT_FillVoidEntryToSectors
 0002:80473258       VFiPFENT_ITER_RecalcEntryIterator
 0002:8047336C       VFiPFENT_ITER_GetEntry
 0002:80473620       VFiPFENT_ITER_DoFindEntry
 0002:80473C04       VFiPFENT_ITER_DoAllocateEntry
 0002:80474010       VFiPFENT_ITER_DoGetEntryOfPath
 0002:80474624       VFiPFENT_ITER_IteratorInitialize
 0002:80474728       VFiPFENT_ITER_IsAtLogicalEnd
 0002:80474834       VFiPFENT_ITER_Advance
 0002:8047492C       VFiPFENT_ITER_Retreat
 0002:80474C58       VFiPFENT_ITER_FindEntry
 0002:80474D4C       VFiPFENT_ITER_AllocateEntry
 0002:80474E50       VFiPFENT_ITER_GetEntryOfPath
 0002:80474EF8       VFiPFENT_ITER_FindCluster
 0002:8047521C       VFiPFFAT_ReadFATSector
 0002:8047534C       VFiPFFAT_SearchForNumFreeClusters
 0002:80475550       VFiPFFAT_FindClusterLink
 0002:8047570C       VFiPFFAT_FindClusterLinkPage
 0002:804758B8       VFiPFFAT_ReadClusterPage
 0002:80475A84       VFiPFFAT_WriteCluster
 0002:80475CA8       VFiPFFAT_WriteClusterPage
 0002:80475ED0       VFiPFFAT_DoAllocateChain
 0002:8047617C       VFiPFFAT_GetClusterInChain
 0002:804764E4       VFiPFFAT_GetClusterContinuousSectorInChain
 0002:80476614       VFiPFFAT_GetClusterAllocatedInChain
 0002:80476724       VFiPFFAT_GetClusterSpecified
 0002:804768A4       VFiPFFAT_GetClusterAllocated
 0002:804769BC       VFiPFFAT_GetSector
 0002:80476B74       VFiPFFAT_UpdateFATEntry
 0002:80476BB0       VFiPFFAT_UpdateAlternateFATEntry
 0002:80476C74       VFiPFFAT_GetSectorSpecified
 0002:80476D24       VFiPFFAT_GetSectorAllocated
 0002:80476DD0       VFiPFFAT_GetContinuousSector
 0002:80476F64       VFiPFFAT_CountAllocatedClusters
 0002:80477094       VFiPFFAT_CountFreeClusters
 0002:804772D8       VFiPFFAT_FreeChain
 0002:804776B8       VFiPFFAT_GetBeforeChain
 0002:80477850       VFiPFFAT_GetBeforeSector
 0002:80477980       VFiPFFAT_InitFATRegion
 0002:80477C30       VFiPFFAT_MakeRootDir
 0002:80477D18       VFiPFFAT_TraceClustersChain
 0002:80477F30       VFiPFFAT_ReadValueToSpecifiedCluster
 0002:80477FC4       VFiPFFAT_ResetFFD
 0002:80478020       VFiPFFAT_InitFFD
 0002:80478088       VFiPFFAT_FinalizeFFD
 0002:804780A8       VFiPFFAT_SetLastAccess
 0002:804780BC       VFiPFFAT_GetValueOfEOC2
 0002:804780D8       VFiPFFAT12_ReadFATEntry
 0002:804782BC       VFiPFFAT12_ReadFATEntryPage
 0002:80478598       VFiPFFAT12_WriteFATEntry
 0002:8047873C       VFiPFFAT12_WriteFATEntryPage
 0002:80478C10       VFiPFFAT16_ReadFATEntry
 0002:80478D74       VFiPFFAT16_ReadFATEntryPage
 0002:80478F34       VFiPFFAT16_WriteFATEntry
 0002:80478FCC       VFiPFFAT16_WriteFATEntryPage
 0002:8047919C       VFiPFFAT32_ReadFATEntry
 0002:80479310       VFiPFFAT32_ReadFATEntryPage
 0002:804794E0       VFiPFFAT32_WriteFATEntry
 0002:80479600       VFiPFFAT32_WriteFATEntryPage
 0002:804797F0       j_VFiPFVOL_InitModule
 0002:804797F4       VFiPFFILE_Cursor_AdvanceToRead
 0002:80479910       VFiPFFILE_Cursor_ReadHeadSector
 0002:80479BA8       VFiPFFILE_Cursor_ReadBodySectors
 0002:80479D7C       VFiPFFILE_Cursor_ReadTailSector
 0002:80479FF8       VFiPFFILE_Cursor_Read
 0002:8047A13C       VFiPFFILE_Cursor_WriteHeadSector
 0002:8047A398       VFiPFFILE_Cursor_WriteTailSector
 0002:8047A674       VFiPFFILE_Cursor_Write_Overwrite
 0002:8047A8E0       VFiPFFILE_Cursor_Write
 0002:8047AC80       VFiPFFILE_Cursor_MoveToClusterEnd
 0002:8047AE48       VFiPFFILE_GetSFD
 0002:8047B01C       VFiPFFILE_createEmptyFile
 0002:8047B138       VFiPFFILE_p_fopen
 0002:8047B5F4       VFiPFFILE_p_fread
 0002:8047B794       VFiPFFILE_p_fwrite
 0002:8047BAE8       VFiPFFILE_p_finfo
 0002:8047BC0C       VFiPFFILE_GetOpenedFile
 0002:8047BCA4       VFiPFFILE_FinalizeAllFiles
 0002:8047BD48       VFiPFFILE_remove
 0002:8047BF0C       VFiPFFILE_fopen
 0002:8047C054       VFiPFFILE_fclose
 0002:8047C3E8       VFiPFFILE_fread
 0002:8047C624       VFiPFFILE_fwrite
 0002:8047C8C4       VFiPFFILE_fseek
 0002:8047CC5C       VFiPFFILE_finfo
 0002:8047CEA8       VFiPFPATH_DoSplitPath
 0002:8047D088       VFiPFPATH_GetNextCharOfPattern
 0002:8047D344       VFiPFPATH_DoMatchFileNameWithPattern
 0002:8047D7F8       VFiPFPATH_MatchFileNameWithPattern
 0002:8047DB60       VFiPFPATH_cmpTailSFN
 0002:8047DB8C       VFiPFPATH_InitTokenOfPath
 0002:8047DB9C       VFiPFPATH_GetNextTokenOfPath
 0002:8047DF28       VFiPFPATH_GetVolumeFromPath
 0002:8047DFC0       VFiPFPATH_putShortName
 0002:8047E148       VFiPFPATH_getShortName
 0002:8047E3A4       VFiPFPATH_getLongNameformShortName
 0002:8047E554       VFiPFPATH_GetLengthFromShortname
 0002:8047E5BC       VFiPFPATH_GetLengthFromUnicode
 0002:8047E658       VFiPFPATH_transformFromUnicodeToNormal
 0002:8047E784       VFiPFPATH_transformInUnicode
 0002:8047E81C       VFiPFPATH_parseShortName
 0002:8047EF94       VFiPFPATH_parseShortNameNumeric
 0002:8047F170       VFiPFPATH_CheckExtShortNameSignature
 0002:8047F1DC       VFiPFPATH_CheckExtShortName
 0002:8047F500       VFiPFPATH_GetExtShortNameIndex
 0002:8047F6A4       VFiPFPATH_AdjustExtShortName
 0002:8047F718       VFiPFSEC_ReadFAT
 0002:8047F7D0       VFiPFSEC_WriteFAT
 0002:8047F8C0       VFiPFSEC_ReadData
 0002:8047F9AC       VFiPFSEC_ReadDataSector
 0002:8047FC3C       VFiPFSEC_WriteData
 0002:8047FD84       VFiPFSEC_WriteDataSector
 0002:8047FFC0       VFiPFVOL_DoMountVolume
 0002:804800D4       VFiPFVOL_p_unmount
 0002:804801D8       VFiPFVOL_InitModule
 0002:80480364       VFiPFVOL_CheckForRead
 0002:80480520       VFiPFVOL_CheckForWrite
 0002:804806F4       VFiPFVOL_GetCurrentDir
 0002:804808B0       VFiPFVOL_SetCurrentVolume
 0002:804809FC       VFiPFVOL_GetCurrentVolume
 0002:80480B50       VFiPFVOL_GetVolumeFromDrvChar
 0002:80480BA4       VFiPFVOL_LoadVolumeLabelFromBuf
 0002:80480BE8       VFiPFVOL_errnum
 0002:80480BF8       VFiPFVOL_getdev
 0002:80480E98       VFiPFVOL_attach
 0002:8048148C       VFiPFVOL_detach
 0002:804815A8       VFiPFVOL_unmount
 0002:80481798       VFiPFCODE_CP932_OEM2Unicode
 0002:80481954       VFiPFCODE_CP932_Unicode2OEM
 0002:80481BBC       VFiPFCODE_CP932_OEMCharWidth
 0002:80481BF0       VFiPFCODE_CP932_isOEMMBchar
 0002:80481C7C       VFiPFAPI_ParseOpenModeString
 0002:80481D4C       VFiPFAPI_convertError
 0002:80481D8C       VFiPFAPI_convertReturnValue
 0002:80481D9C       VFiPFAPI_convertReturnValue2NULL
 0002:80481DB4       VFiPFAPI_convertReturnValue4unmount
 0002:80481DD8       VFipf2_attach
 0002:80481E6C       VFipf2_unmount
 0002:80481F00       VFipf2_fopen
 0002:80481FB4       VFipf2_fwrite
 0002:80482050       VFipf2_init_prfile2
 0002:80482090       VFipf2_remove
 0002:8048211C       nullsub_36
 0002:80482120       VFiPFSYS_GetCurrentContextID
 0002:80482130       VFiPFSYS_TimeStamp
 0002:804821A8       VFInitEx
 0002:80482270       VF_activate_drive_common
 0002:80482364       VFMountDriveNANDFlashEx
 0002:804824F0       VFUnmountDrive
 0002:804825CC       VF_path2handleidx
 0002:804826A8       VFOpenFile
 0002:80482784       VFCloseFile
 0002:804827F0       VFSeekFile
 0002:8048287C       VFReadFile
 0002:80482918       VFWriteFile
 0002:804829A4       VFDeleteFile
 0002:80482A74       VFGetFileSizeByFd
 0002:80482AB8       VFGetLastDeviceError
 0002:80482B40       VFGetDriveFreeSize
 0002:80482BC4       VFSetSyncMode
 0002:80482C58       VFSysSetLastError
 0002:80482C68       VFSys_create_cache
 0002:80482DAC       VFSysGetHandleP
 0002:80482DD8       VFSysHandleP2Idx
 0002:80482E38       VFSysVol2HandleP
 0002:80482EAC       VFSysPDMDisk2HandleIdx
 0002:80482F10       VFSysGetDriveP
 0002:80482F50       VFSysPDMDisk2DriveP
 0002:80482FBC       VFSysInit
 0002:80483140       VFSysSetDeviceNANDFlash
 0002:8048332C       VFSysUnsetDevice
 0002:80483484       VFSysCheckExistPrfFile_nandflash_sub
 0002:804835E4       VFSysCheckExistPrfFile_nandflash
 0002:804835F0       VFSysCheckExistPrfFile_ram
 0002:8048362C       VFSysCheckExistPrfFile_dvd
 0002:80483760       VFSysCheckExistPrfFile
 0002:804837E8       VFSysMountDrv
 0002:80483AA8       VFSysUnmountDrv
 0002:80483BF8       VFSysOpenFile_current
 0002:80483CE4       VFSysOpenFile
 0002:80483E20       VFSysCloseFile
 0002:80483F08       VFSysSeekFile
 0002:80484010       VFSysReadFile
 0002:80484188       VFSysWriteFile
 0002:80484294       VFSysDeleteFile_current
 0002:80484364       VFSysDeleteFile
 0002:80484474       VFSysGetFileSizeByFd
 0002:804844DC       VFSysGetDriveFreeSize
 0002:804845CC       VFSysGetLastDeviceError_current
 0002:80484678       VFSysGetLastDeviceError
 0002:804846C0       j_VFi_NandSetNANDFuncEx
 0002:804846C4       VFSysSetSyncMode
 0002:8048474C       _MakeWStr
 0002:80484878       dHash_InitHashTable
 0002:8048497C       dHash_SearchHashW
 0002:80484B0C       dHash_GetArg
 0002:80484B6C       dHash_SetArg
 0002:80484D54       dHash_DeleteData
 0002:80484DCC       dTM_GetNowTime
 0002:80484EAC       dCommon_DevideBuff32
 0002:80484F14       dCommon_IsPrfFile
 0002:80484F7C       nullsub_37
 0002:80484F80       dCommon_MakeFsInfoSec
 0002:80484FCC       dCommon_GetPhysicalOffset
 0002:80484FDC       dCommon_GetNiceFatType
 0002:80485064       dCommon_GetReservedSecFromFatType
 0002:80485078       dCommon_GetRootEntNumFromFatType
 0002:80485094       dCommon_MakeBootSector
 0002:804852D8       dCommon_ReadDummyBPB
 0002:80485450       dCommon_WriteDummyBPB
 0002:80485558       dCommon_initDriveInfo
 0002:80485644       dCommon_getFileSizeFromDisk
 0002:80485698       dCommon_setFileSizeToDisk
 0002:804856F0       dCommon_getLastDeviceErrorFromDisk
 0002:80485744       dCommon_setLastDeviceErrorToDisk
 0002:8048579C       dCommon_setLastDeviceErrorToDisk2
 0002:804857C4       j_VFSysPDMDisk2HandleIdx
 0002:804857C8       dCommon_setFatTypeToDisk
 0002:80485820       dCommon_getResvSecNumFromDisk
 0002:80485874       dCommon_setResvSecNumToDisk
 0002:804858CC       dCommon_getRootEntNumFromDisk
 0002:80485920       dCommon_setRootEntNumToDisk
 0002:80485978       dCommon_FlushFromVol
 0002:804859F4       VFi_NandPrivateCreateDir
 0002:80485AB4       VFi_NandClose
 0002:80485E54       VFi_NandGetLength
 0002:80485F0C       VFi_NandOpenSp
 0002:80486124       VFi_NandSetNANDFuncEx
 0002:80486170       A32_NANDRead
 0002:80486520       A32_NANDWrite
 0002:80486790       VFi_NandFlushNANDFromHandleIdx
 0002:80486AB4       _MountPrfFile
 0002:8048715C       nanddrv_BuildUpFSInfoSector
 0002:80487194       nanddrv_BuildUpBootSector
 0002:80487238       nanddrv_init
 0002:80487284       nanddrv_mount
 0002:804872F0       nanddrv_format
 0002:80487308       nanddrv_pwrite
 0002:80487390       nanddrv_unmount
 0002:8048748C       nanddrv_finalize
 0002:804874C4       nanddrv_get_disk_info
 0002:8048756C       VFi_nanddrv_init_drv_tbl
 0002:80487584       nanddrv_physical_read
 0002:80487724       nanddrv_physical_write
 0002:804878B8       nullsub_38
 0002:804878BC       JASCalc::imixcopy((short const *,short const *,short *,ulong))
 0002:804878EC       JASCalc::bcopyfast((void const *,void *,ulong))
 0002:80487928       JASCalc::bcopy((void const *,void *,ulong))
 0002:80487A28       JASCalc::bzero((void *,ulong))
 0002:80487AF4       JASCalc::pow2((float))
 0002:80487C1C       JASTaskThread::JASTaskThread((int,int,ulong))
 0002:80487C7C       JASTaskThread::~JASTaskThread((void))
 0002:80487D10       JASTaskThread::allocCallStack((void (*)(void *),void const *,ulong))
 0002:80487D88       JASTaskThread::allocCallStack((void (*)(void *),void *))
 0002:80487DE8       JASTaskThread::sendCmdMsg((void (*)(void *),void *))
 0002:80487ED0       JASTaskThread::run((void))
 0002:80487F80       JASMemChunkPool<1024,Q217JASThreadingModel19ObjectLevelLockable>::free((void *))
 0002:80488040       JASMemChunkPool<1024,Q217JASThreadingModel19ObjectLevelLockable>::alloc((ulong))
 0002:80488184       JASMemChunkPool<1024,Q217JASThreadingModel19ObjectLevelLockable>::MemoryChunk::MemoryChunk((JASMemChunkPool<1024,Q217JASThreadingModel19ObjectLevelLockable>::MemoryChunk *))
 0002:804881A0       JASDvd::createThread((long,int,ulong))
 0002:804882BC       JASCallbackMgr::reject((long (*)(void *),void *))
 0002:80488344       JASCallbackMgr::callback((void))
 0002:804883BC       JASHeap::JASHeap((JASDisposer *))
 0002:80488420       JASHeap::initRootHeap((void *,ulong))
 0002:80488488       JASHeap::alloc((JASHeap *,ulong))
 0002:80488670       JASHeap::free((void))
 0002:80488798       JASHeap::insertChild((JASHeap *,JASHeap *,void *,ulong,bool))
 0002:80488880       JASHeap::getTailHeap((void))
 0002:80488914       JASHeap::getTailOffset((void))
 0002:80488980       JASHeap::getCurOffset((void))
 0002:80488A08       JASGenericMemPool::~JASGenericMemPool((void))
 0002:80488A74       JASGenericMemPool::newMemPool((ulong,int))
 0002:80488AF4       JASGenericMemPool::alloc((ulong))
 0002:80488B3C       JASGenericMemPool::free((void *,ulong))
 0002:80488B60       JASKernel::setupRootHeap((JKRSolidHeap *,ulong))
 0002:80488C54       JASKernel::setupAramHeap((ulong,ulong))
 0002:80488D38       JASResArcLoader::getResSize((JKRArchive const *,ushort))
 0002:80488D6C       JASResArcLoader::loadResourceCallback((void *))
 0002:80488E08       JASResArcLoader::TLoadResInfo::TLoadResInfo((JKRArchive *,ushort,void *,ulong))
 0002:80488E2C       JASResArcLoader::loadResourceAsync((JKRArchive *,ushort,uchar *,ulong,void (*)(ulong,ulong),ulong))
 0002:80488EA4       JASProbe::start((char const *))
 0002:80488EF4       JASProbe::stop((void))
 0002:80489014       JASProbe::start((long,char const *))
 0002:8048903C       JASProbe::stop((long))
 0002:80489064       JASReport(char const *,...)
 0002:804891A0       JASPortCmd::TPortHead::execCommandOnce((void))
 0002:80489218       JASPortCmd::TPortHead::execCommandStay((void))
 0002:80489280       __sinit__JASCmdStack_cpp
 0002:80489374       JASTrack::JASTrack((void))
 0002:80489404       JASTrack::~JASTrack((void))
 0002:80489480       JASTrack::setChannelMgrCount((ulong))
 0002:80489554       JASTrack::init((void))
 0002:8048978C       JASTrack::initTimed((void))
 0002:804897DC       JASTrack::inherit((JASTrack const &))
 0002:8048988C       JASTrack::assignExtBuffer((ulong,JASSoundParams *))
 0002:804898A0       JASSeqCtrl::start((void *,ulong))
 0002:804898A4       JASTrack::startSeq((void))
 0002:804898F8       JASTrack::stopSeq((void))
 0002:80489940       JASTrack::start((void))
 0002:8048994C       JASTrack::close((void))
 0002:80489A10       JASTrack::connectChild((ulong,JASTrack *))
 0002:80489A3C       JASTrack::closeChild((ulong))
 0002:80489AB4       JASTrack::openChild((ulong))
 0002:80489BD0       JASTrack::connectBus((int,int))
 0002:80489BE0       JASTrack::setLatestKey((uchar))
 0002:80489C1C       JASTrack::noteOn((ulong,ulong,ulong))
 0002:80489CEC       JASTrack::gateOn((ulong,ulong,float,ulong))
 0002:80489E94       JASTrack::noteOff((ulong,ushort))
 0002:80489F1C       JASTrack::checkNoteStop(const(ulong))
 0002:80489F68       JASTrack::overwriteOsc((JASChannel *))
 0002:80489FD4       JASTrack::updateTimedParam((void))
 0002:8048A044       JASTrack::updateTrack((float))
 0002:8048A1DC       JASTrack::updateTempo((void))
 0002:8048A274       JASTrack::updateSeq((bool,float))
 0002:8048A334       JASTrack::seqTimeToDspTime((float))
 0002:8048A3E0       JASTrack::setParam((ulong,float,ulong))
 0002:8048A404       JASTrack::noteOffAll((ushort))
 0002:8048A494       JASTrack::mute((bool))
 0002:8048A4B4       JASTrack::setOscScale((ulong,float))
 0002:8048A4C4       JASTrack::setOscTable((ulong,JASOscillator::Point const *))
 0002:8048A4E4       JASTrack::setOscAdsr((short,short,short,short,ushort))
 0002:8048A558       JASTrack::setFIR((short const *))
 0002:8048A58C       JASTrack::setIIR((short const *))
 0002:8048A5CC       JASTrack::writePort((ulong,ushort))
 0002:8048A630       JASTrack::setChannelPauseFlag((bool))
 0002:8048A6CC       JASTrack::pause((bool))
 0002:8048A72C       JASTrack::getTransposeTotal(const(void))
 0002:8048A780       JASTrack::isMute(const(void))
 0002:8048A7E4       JASTrack::setTempo((ushort))
 0002:8048A7F8       JASTrack::setTempoRate((float))
 0002:8048A80C       JASTrack::setTimebase((ushort))
 0002:8048A820       JASTrack::updateChannel((JASChannel *,JASDsp::TChannel *))
 0002:8048A8D8       JASTrack::channelUpdateCallback((ulong,JASChannel *,JASDsp::TChannel *,void *))
 0002:8048A9A4       JASTrack::getRootTrack((void))
 0002:8048A9BC       JASTrack::tickProc((void))
 0002:8048AAB4       JASTrack::seqMain((void))
 0002:8048AB88       gdev_cc_pre_continue
 0002:8048ABAC       JASTrack::TList::append((JASTrack *))
 0002:8048AC18       JASTrack::TList::seqMain((void))
 0002:8048AD00       JASTrack::TChannelMgr::TChannelMgr((JASTrack *))
 0002:8048AD84       JASTrack::TChannelMgr::init((void))
 0002:8048ADFC       JASTrack::TChannelMgr::releaseAll((void))
 0002:8048AEEC       JASTrack::TChannelMgr::setPauseFlag((bool))
 0002:8048AF4C       __sinit__JASTrack_cpp
 0002:8048B030       JGadget::TLinkList<8JASTrack,-584>::Push_back((JASTrack *))
 0002:8048B07C       JGadget::TLinkList<8JASTrack,-584>::begin((void))
 0002:8048B0B0       JGadget::TNodeLinkList::end((void))
 0002:8048B124       JGadget::TLinkList<8JASTrack,-584>::Insert((JGadget::TLinkList<8JASTrack,-584>::iterator,JASTrack *))
 0002:8048B180       JGadget::TLinkList<8JASTrack,-584>::Element_toNode((JASTrack *))
 0002:8048B1B8       nullsub_39
 0002:8048B1F0       JGadget::TNodeLinkList::begin((void))
 0002:8048B22C       JGadget::TLinkList<8JASTrack,-584>::iterator::__as((JGadget::TLinkList<8JASTrack,-584>::iterator const &))
 0002:8048B2A0       nullsub_40
 0002:8048B2D4       JGadget::TNodeLinkList::iterator::__pp((void))
 0002:8048B338       JGadget::TLinkList<8JASTrack,-584>::Element_toValue((JGadget::TLinkListNode *))
 0002:8048B380       JGadget::__ne((JGadget::TLinkList<8JASTrack,-584>::iterator,JGadget::TLinkList<8JASTrack,-584>::iterator))
 0002:8048B3C0       JGadget::__eq((JGadget::TLinkList<8JASTrack,-584>::iterator,JGadget::TLinkList<8JASTrack,-584>::iterator))
 0002:8048B3F8       JGadget::__eq((JGadget::TNodeLinkList::iterator,JGadget::TNodeLinkList::iterator))
 0002:8048B440       JGadget::TNodeLinkList::TNodeLinkList((void))
 0002:8048B544       JASMemPool_MultiThreaded<8JASTrack>::free((void *,ulong))
 0002:8048B62C       JASMemPool_MultiThreaded<8JASTrack>::alloc((ulong))
 0002:8048B6FC       JASCriticalSection::JASCriticalSection((void))
 0002:8048B798       JAUWaveBankTable::getWaveBank((ulong))
 0002:8048B7BC       JASPtrArray<7JASBank,256>::JASPtrArray<7JASBank,256>((void))
 0002:8048B7F4       JASPtrTable<7JASBank>::JASPtrTable<7JASBank>((JASBank **,ulong))
 0002:8048B838       JASGlobalInstance<19JASDefaultBankTable>::JASGlobalInstance<19JASDefaultBankTable>((bool))
 0002:8048B858       JASGlobalInstance<19JASDefaultBankTable>::~JASGlobalInstance<19JASDefaultBankTable>((void))
 0002:8048B8BC       JASDefaultBankTable::~JASDefaultBankTable((void))
 0002:8048B920       JASChannel::setKey((long))
 0002:8048B928       JASChannel::setVelocity((ulong))
 0002:8048B930       JASChannel::setVibrate((float,float))
 0002:8048B978       JASChannel::setTremolo((float,float))
 0002:8048B9C0       JASChannelParams::init((void))
 0002:8048BA30       JASDefaultBankTable::JASDefaultBankTable((void))
 0002:8048BA78       JASBankTable<256>::JASBankTable<256>((void))
 0002:8048BACC       JASTrack::TList::TList((void))
 0002:8048BB04       JASTrackPort::init((void))
 0002:8048BB34       JASTrackPort::readImport((ulong))
 0002:8048BB58       JASTrackPort::readExport((ulong))
 0002:8048BB7C       JASTrackPort::writeImport((ulong,ushort))
 0002:8048BBA0       JASTrackPort::writeExport((ulong,ushort))
 0002:8048BBC4       JASTrackPort::checkImport(const(ulong))
 0002:8048BBE0       JASTrackPort::checkExport(const(ulong))
 0002:8048BBFC       JASRegisterParam::init((void))
 0002:8048BC3C       JASRegisterParam::write((JASRegisterParam::RegID,ulong))
 0002:8048BD40       JASRegisterParam::read((JASRegisterParam::RegID))
 0002:8048BE20       def_8048BD78
 0002:8048BE28       JASSeqCtrl::JASSeqCtrl((void))
 0002:8048BE90       JASSeqCtrl::init((void))
 0002:8048BEEC       JASSeqCtrl::start((void *,ulong))
 0002:8048BF30       JASSeqCtrl::tickProc((JASTrack *))
 0002:8048C028       JASSeqCtrl::interrupt((JASSeqCtrl::IntrType))
 0002:8048C04C       JASSeqCtrl::setIntrMask((ulong))
 0002:8048C05C       JASSeqCtrl::clrIntrMask((ulong))
 0002:8048C06C       JASSeqCtrl::retIntr((void))
 0002:8048C094       JASSeqCtrl::findIntr((void))
 0002:8048C0E4       JASSeqCtrl::checkIntr((void))
 0002:8048C154       JASSeqCtrl::timerProcess((void))
 0002:8048C218       JASSeqParser::conditionCheck((JASTrack *,JASSeqParser::BranchCondition))
 0002:8048C2EC       JASSeqParser::writeReg((JASTrack *,ulong,ulong))
 0002:8048C4CC       def_8048C364
 0002:8048C4E4       JASSeqParser::readReg(const(JASTrack *,ulong))
 0002:8048C668       JASSeqParser::cmdOpenTrack((JASTrack *,ulong *))
 0002:8048C72C       JASSeqParser::cmdCallF((JASTrack *,ulong *))
 0002:8048C7A8       JASSeqParser::cmdRetF((JASTrack *,ulong *))
 0002:8048C7F4       JASSeqParser::cmdJmp((JASTrack *,ulong *))
 0002:8048C80C       JASSeqParser::cmdJmpF((JASTrack *,ulong *))
 0002:8048C864       JASSeqParser::cmdJmpTable((JASTrack *,ulong *))
 0002:8048C898       JASSeqParser::cmdCallTable((JASTrack *,ulong *))
 0002:8048C938       JASSeqParser::cmdNote((JASTrack *,ulong *))
 0002:8048C97C       JASSeqParser::cmdNoteOn((JASTrack *,ulong *))
 0002:8048C9BC       JASSeqParser::cmdNoteOff((JASTrack *,ulong *))
 0002:8048C9F0       JASSeqParser::cmdReadPort((JASTrack *,ulong *))
 0002:8048CA50       JASSeqParser::cmdWritePort((JASTrack *,ulong *))
 0002:8048CA84       JASSeqParser::cmdParentWritePort((JASTrack *,ulong *))
 0002:8048CAC0       JASSeqParser::cmdChildWritePort((JASTrack *,ulong *))
 0002:8048CB0C       JASSeqParser::cmdParentReadPort((JASTrack *,ulong *))
 0002:8048CB78       JASSeqParser::cmdChildReadPort((JASTrack *,ulong *))
 0002:8048CBF0       JASSeqParser::cmdCheckPortExport((JASTrack *,ulong *))
 0002:8048CC80       JASSeqParser::cmdWait((JASTrack *,ulong *))
 0002:8048CCB8       JASSeqParser::cmdWaitByte((JASTrack *,ulong *))
 0002:8048CCC8       JASSeqParser::cmdSetLastNote((JASTrack *,ulong *))
 0002:8048CD00       JASSeqParser::cmdEnvScaleSet((JASTrack *,ulong *))
 0002:8048CD54       JASSeqParser::cmdEnvSet((JASTrack *,ulong *))
 0002:8048CE10       JASSeqParser::cmdSetIntTable((JASTrack *,ulong *))
 0002:8048CE78       JASSeqParser::cmdClrI((JASTrack *,ulong *))
 0002:8048CEA8       JASSeqParser::cmdRetI((JASTrack *,ulong *))
 0002:8048CEE4       JASSeqParser::cmdIntTimer((JASTrack *,ulong *))
 0002:8048CF00       JASSeqParser::cmdSyncCPU((JASTrack *,ulong *))
 0002:8048CF68       JASSeqParser::cmdTempo((JASTrack *,ulong *))
 0002:8048CFA8       JASSeqParser::cmdFIRSet((JASTrack *,ulong *))
 0002:8048CFDC       JASSeqParser::cmdIIRSet((JASTrack *,ulong *))
 0002:8048D030       JASSeqParser::cmdIIRCutOff((JASTrack *,ulong *))
 0002:8048D074       JASSeqParser::cmdBankPrg((JASTrack *,ulong *))
 0002:8048D090       JASSeqParser::cmdBank((JASTrack *,ulong *))
 0002:8048D0A4       JASSeqParser::cmdPrg((JASTrack *,ulong *))
 0002:8048D0B8       JASSeqParser::cmdParamI((JASTrack *,ulong *))
 0002:8048D118       JASSeqParser::cmdParamII((JASTrack *,ulong *))
 0002:8048D178       JASSeqParser::cmdParamE((JASTrack *,ulong *))
 0002:8048D1F4       JASSeqParser::cmdParamEI((JASTrack *,ulong *))
 0002:8048D270       JASSeqParser::cmdReg((JASTrack *,ulong *))
 0002:8048D3A0       def_8048D2B4
 0002:8048D3D8       JASSeqParser::cmdRegLoad((JASTrack *,ulong *))
 0002:8048D408       JASSeqParser::cmdRegUni((JASTrack *,ulong *))
 0002:8048D47C       JASSeqParser::cmdRegTblLoad((JASTrack *,ulong *))
 0002:8048D550       JASSeqParser::cmdDump((JASTrack *,ulong *))
 0002:8048D6CC       JASSeqParser::cmdPrintf((JASTrack *,ulong *))
 0002:8048D8CC       JASSeqParser::execNoteOnGate((JASTrack *,ulong,ulong,ulong,ulong))
 0002:8048D970       JASSeqParser::execNoteOnMidi((JASTrack *,ulong,ulong,ulong))
 0002:8048D984       JASSeqParser::execNoteOff((JASTrack *,ulong))
 0002:8048D994       JASSeqParser::execCommand((JASTrack *,long (JASSeqParser::)(void const *,void *,JASTrack *,ulong *),ulong,ulong *))
 0002:8048D9C0       JASSeqParser::parseNoteOff((JASTrack *,uchar))
 0002:8048D9F8       JASSeqParser::parseNoteOn((JASTrack *,uchar))
 0002:8048DAA4       JASSeqParser::parseCommand((JASTrack *,uchar,ushort))
 0002:8048DC98       JASSeqParser::parse((JASTrack *))
 0002:8048DCEC       __sinit__JASSeqParser_cpp
 0002:8048DF44       JASSeqReader::init((void))
 0002:8048E0E8       JASSeqReader::readMidiValue((void))
 0002:8048E154       JASSeqReader::getStackPtr(const(ulong))
 0002:8048E178       JASAramStream::initSystem((ulong,ulong))
 0002:8048E204       JASAramStream::JASAramStream((void))
 0002:8048E2F8       JASAramStream::init((ulong,ulong,void (*)(ulong,JASAramStream *,void *),void *))
 0002:8048E3B8       JASAramStream::prepare((long,int))
 0002:8048E470       JASAramStream::start((void))
 0002:8048E4A0       JASAramStream::stop((ushort))
 0002:8048E4D4       JASAramStream::pause((bool))
 0002:8048E51C       JASAramStream::cancel((void))
 0002:8048E55C       JASAramStream::getBlockSamples(const(void))
 0002:8048E588       JASAramStream::headerLoadTask((void *))
 0002:8048E59C       JASAramStream::firstLoadTask((void *))
 0002:8048E66C       JASAramStream::load((void))
 0002:8048E670       JASAramStream::finishTask((void *))
 0002:8048E6D0       JASAramStream::prepareFinishTask((void *))
 0002:8048E728       JASAramStream::headerLoad((ulong,int))
 0002:8048E8EC       JASAramStream::load((void))
 0002:8048EB78       JASAramStream::channelProc((void))
 0002:8048EB7C       JASAramStream::dvdErrorCheck((void *))
 0002:8048EBBC       def_8048EBAC
 0002:8048EBD8       JASAramStream::channelCallback((ulong,JASChannel *,JASDsp::TChannel *,void *))
 0002:8048EBF8       JASAramStream::updateChannel((ulong,JASChannel *,JASDsp::TChannel *))
 0002:8048F238       JASAramStream::channelProc((void))
 0002:8048F418       JASAramStream::channelStart((void))
 0002:8048F63C       JASAramStream::channelStop((ushort))
 0002:8048F704       JASBank::noteOnOsc((int,uchar,uchar,ushort,void (*)(ulong,JASChannel *,JASDsp::TChannel *,void *),void *))
 0002:8048F7DC       JASPoolAllocObject_MultiThreaded<10JASChannel>::__nw((ulong))
 0002:8048F890       JASBasicBank::JASBasicBank((void))
 0002:8048F8DC       JASBasicBank::getInstParam(const(int,int,int,JASInstParam *))
 0002:8048F954       JASBasicBank::getInst(const(int))
 0002:8048F9D0       JASVoiceBank::getInstParam(const(int,int,int,JASInstParam *))
 0002:8048FA54       JASBasicInst::JASBasicInst((void))
 0002:8048FAB4       JASBasicInst::~JASBasicInst((void))
 0002:8048FB2C       JASBasicInst::getParam(const(int,int,JASInstParam *))
 0002:8048FC74       JASBasicInst::setKeyRegionCount((ulong,JKRHeap *))
 0002:8048FCF0       JASBasicInst::appendEffect((JASPtrListAdaptor<13JASInstEffect> *))
 0002:8048FD30       JASBasicInst::getKeyRegion((int))
 0002:8048FD54       JASBasicInst::TKeymap::~TKeymap((void))
 0002:8048FDAC       JASBasicInst::TKeymap::setVeloRegionCount((ulong,JKRHeap *))
 0002:8048FE04       JASBasicInst::TKeymap::getVeloRegion(const(int))
 0002:8048FE8C       JASBasicInst::TKeymap::TKeymap((void))
 0002:8048FEB0       JASDrumSet::JASDrumSet((void))
 0002:8048FF34       JASDrumSet::getParam(const(int,int,JASInstParam *))
 0002:80490094       JASDrumSet::setPerc((int,JASDrumSet::TPerc *))
 0002:804900A4       JASDrumSet::TPerc::TPerc((void))
 0002:804900D4       JASDrumSet::TPerc::setVeloRegionCount((ulong,JKRHeap *))
 0002:8049012C       JASDrumSet::TPerc::getVeloRegion((int))
 0002:8049013C       JASDrumSet::TPerc::appendEffect((JASPtrListAdaptor<13JASInstEffect> *))
 0002:8049016C       JASDsp::TChannel::setPauseFlag((uchar))
 0002:80490180       JASBasicWaveBank::JASBasicWaveBank((void))
 0002:804901D4       JASBasicWaveBank::~JASBasicWaveBank((void))
 0002:80490284       JASBasicWaveBank::getWaveGroup((ulong))
 0002:804902A8       JASBasicWaveBank::setGroupCount((ulong,JKRHeap *))
 0002:80490390       JASBasicWaveBank::setWaveTableSize((ulong,JKRHeap *))
 0002:804903F4       JASBasicWaveBank::incWaveTable((JASBasicWaveBank::TWaveGroup const *))
 0002:80490494       JASBasicWaveBank::decWaveTable((JASBasicWaveBank::TWaveGroup const *))
 0002:80490564       JASBasicWaveBank::getWaveHandle(const(ulong))
 0002:80490594       JASBasicWaveBank::TWaveGroup::TWaveGroup((JASBasicWaveBank *))
 0002:804905EC       JASBasicWaveBank::TWaveGroup::~TWaveGroup((void))
 0002:804906E4       JASBasicWaveBank::TWaveGroup::setWaveCount((ulong,JKRHeap *))
 0002:8049079C       JASBasicWaveBank::TWaveGroup::setWaveInfo((int,ulong,JASWaveInfo const &))
 0002:80490824       OSSetAlarmUserData
 0002:8049082C       JASBasicWaveBank::TWaveGroup::onEraseDone((void))
 0002:80490844       JASSimpleWaveBank::TWaveHandle::getWavePtr(const(void))
 0002:804908A8       JASBasicWaveBank::TWaveInfo::TWaveInfo((void))
 0002:804908F0       JASSimpleWaveBank::JASSimpleWaveBank((void))
 0002:80490950       JASSimpleWaveBank::~JASSimpleWaveBank((void))
 0002:80490A10       JASSimpleWaveBank::setWaveTableSize((ulong,JKRHeap *))
 0002:80490A8C       JASSimpleWaveBank::getWaveHandle(const(ulong))
 0002:80490AB0       JASSimpleWaveBank::setWaveInfo((ulong,JASWaveInfo const &))
 0002:80490B40       JASSimpleWaveBank::getWaveArc((ulong))
 0002:80490B8C       JASSimpleWaveBank::TWaveHandle::TWaveHandle((void))
 0002:80490BCC       JASInstSense::effect(const(int,int,JASInstParam *))
 0002:80490D7C       JASInstSense::setParams((int,int,float,float))
 0002:80490D90       JASInstRand::effect(const(int,int,JASInstParam *))
 0002:80490EC4       JASWSParser::getGroupCount((void const *))
 0002:80490EE4       JASWSParser::createWaveBank((void const *,JKRHeap *))
 0002:80490F40       JASWSParser::createBasicWaveBank((void const *,JKRHeap *))
 0002:804911C8       JASWSParser::createSimpleWaveBank((void const *,JKRHeap *))
 0002:80491448       JASBNKParser::createBasicBank((void const *,JKRHeap *))
 0002:804914F4       JASBNKParser::Ver1::findChunk((void const *,ulong))
 0002:80491538       JASBNKParser::Ver1::createEffector((void const *,JKRHeap *))
 0002:80491614       JASBNKParser::Ver1::createBasicBank((void const *,JKRHeap *))
 0002:80491B0C       JASBNKParser::Ver0::createBasicBank((void const *,JKRHeap *))
 0002:80492354       JASBNKParser::Ver0::getOscTableEndPtr((JASOscillator::Point const *))
 0002:80492368       JASInstRand::JASInstRand((void))
 0002:80492390       JASInstSense::JASInstSense((void))
 0002:804923C0       JASPtrListAdaptor<13JASInstEffect>::JASPtrListAdaptor<13JASInstEffect>((JASInstEffect *))
 0002:804923D0       JASWaveArcLoader::getRootHeap((void))
 0002:804923E8       JASWaveArcLoader::setCurrentDir((char const *))
 0002:80492454       JASWaveArc::JASWaveArc((void))
 0002:8049251C       JASWaveArc::loadSetup((ulong))
 0002:804925B0       JASWaveArc::eraseSetup((void))
 0002:80492644       JASWaveArc::loadToAramCallback((void *))
 0002:804926D0       JASWaveArc::sendLoadCmd((void))
 0002:8049279C       JASWaveArc::onDispose((void))
 0002:804927E4       JASWaveArc::setEntryNum((long))
 0002:80492848       JASChannel::JASChannel((void (*)(ulong,JASChannel *,JASDsp::TChannel *,void *),void *))
 0002:80492968       JASChannel::~JASChannel((void))
 0002:80492A08       JASChannel::playForce((void))
 0002:80492AE8       JASChannel::release((ushort))
 0002:80492B74       JASChannel::setOscInit((ulong,JASOscillator::Data const *))
 0002:80492B8C       JASChannel::setMixConfig((ulong,ushort))
 0002:80492B9C       JASChannel::calcPan((JASChannel::PanVector const *))
 0002:80492BC8       JASChannel::effectOsc((ulong,JASOscillator::EffectParams *))
 0002:80492C98       def_80492C18
 0002:80492CB0       JASChannel::setKeySweepTarget((long,ulong))
 0002:80492D1C       JASChannel::updateEffectorParam((JASDsp::TChannel *,ushort *,JASOscillator::EffectParams const &))
 0002:80492F20       JASChannel::dspUpdateCallback((ulong,JASDsp::TChannel *,void *))
 0002:80492FAC       JASChannel::initialUpdateDSPChannel((JASDsp::TChannel *))
 0002:804932A4       JASChannel::updateDSPChannel((JASDsp::TChannel *))
 0002:804935F4       JASChannel::updateAutoMixer((JASDsp::TChannel *,float,float,float,float))
 0002:80493710       JASChannel::updateMixer((float,float,float,float,ushort *))
 0002:80493848       def_80493818
 0002:804938E0       def_804938B0
 0002:80493A14       JASChannel::free((void))
 0002:80493A24       JASChannel::initBankDisposeMsgQueue((void))
 0002:80493A60       JASChannel::receiveBankDisposeMsg((void))
 0002:80493AD4       JASChannel::checkBankDispose(const(void))
 0002:80493B2C       JASCalc::clamp01((float))
 0002:80493B5C       JASOscillator::EffectParams::EffectParams((void))
 0002:80493BE4       JASLfo::JASLfo((void))
 0002:80493C14       JASLfo::getValue(const(void))
 0002:80493CAC       JASLfo::incCounter((float))
 0002:80493CFC       JASLfo::resetCounter((void))
 0002:80493D48       JASOscillator::JASOscillator((void))
 0002:80493D78       JASOscillator::initStart((JASOscillator::Data const *))
 0002:80493E18       JASOscillator::incCounter((float))
 0002:80493E60       JASOscillator::getValue(const(void))
 0002:80493E7C       JASOscillator::release((void))
 0002:80493F74       JASOscillator::update((void))
 0002:8049412C       JASOscillator::updateCurrentValue((float))
 0002:804941F8       JASDriver::initAI((void (*)(void)))
 0002:8049434C       j_AIStartDMA
 0002:80494350       j_AIStopDMA
 0002:80494354       JASDriver::setOutputRate((JASOutputRate))
 0002:80494390       JASDriver::updateDac((void))
 0002:804944D0       JASDriver::updateDSP((void))
 0002:804945CC       JASDriver::readDspBuffer((short *,ulong))
 0002:804946E8       JASDriver::finishDSPFrame((void))
 0002:804947B0       AXFXSetHooks
 0002:804947CC       JASDriver::mixMonoTrack((short *,ulong,short *(*)(long)))
 0002:80494878       JASDriver::mixMonoTrackWide((short *,ulong,short *(*)(long)))
 0002:80494924       JASDriver::mixExtraTrack((short *,ulong,short *(*)(long)))
 0002:804949FC       JASDriver::mixInterleaveTrack((short *,ulong,short *(*)(long)))
 0002:80494A84       JASCalc::clamp<s,l>(short (long))
 0002:80494AAC       JASAudioThread::create((long))
 0002:80494B1C       JASAudioThread::stop((void))
 0002:80494B2C       JASAudioThread::run((void))
 0002:80494C70       JASAudioThread::DMACallback((void))
 0002:80494CC0       JASAudioThread::DSPCallback((void *))
 0002:80494D2C       JASAudioThread::~JASAudioThread((void))
 0002:80494DF0       JASAudioReseter::JASAudioReseter((void))
 0002:80494E78       JASAudioReseter::start((ulong,bool))
 0002:80494F24       JASAudioReseter::calc((void))
 0002:80494FF8       JASAudioReseter::calc((void))
 0002:80494FFC       JASDSPChannel::JASDSPChannel((void))
 0002:80495038       JASDSPChannel::start((void))
 0002:80495048       JASDSPChannel::drop((void))
 0002:804950CC       JASDSPChannel::initAll((void))
 0002:80495150       JASDSPChannel::alloc((uchar,long (*)(ulong,JASDsp::TChannel *,void *),void *))
 0002:804951BC       JASDSPChannel::allocForce((uchar,long (*)(ulong,JASDsp::TChannel *,void *),void *))
 0002:80495238       JASDSPChannel::getLowestChannel((int))
 0002:804952C8       JASDSPChannel::getLowestActiveChannel((void))
 0002:80495354       JASDSPChannel::updateProc((void))
 0002:8049559C       JASDSPChannel::updateAll((void))
 0002:80495610       JASDSPChannel::killActiveChannel((void))
 0002:80495648       JASDSPChannel::getHandle((ulong))
 0002:80495658       JASDsp::boot((void (*)(void *)))
 0002:804956A0       JASDsp::setDSPMixerLevel((float))
 0002:804956B8       JASDsp::getDSPHandle((int))
 0002:804956C8       JASDsp::setFilterTable((short *,short *,ulong))
 0002:804956EC       JASDsp::invalChannelAll((void))
 0002:804956F8       JASDsp::initBuffer((void))
 0002:804957B4       JASDsp::setFXLine((uchar,short *,JASDsp::FxlineConfig_ *))
 0002:804958E0       JASDsp::TChannel::init((void))
 0002:80495900       JASDsp::TChannel::playStart((void))
 0002:80495964       JASDsp::TChannel::playStop((void))
 0002:80495970       JASDsp::TChannel::replyFinishRequest((void))
 0002:80495980       JASDsp::TChannel::forceStop((void))
 0002:8049598C       JASDsp::TChannel::isFinish(const(void))
 0002:8049599C       JASDsp::TChannel::setWaveInfo((JASWaveInfo const &,ulong,ulong))
 0002:80495AB4       JASDsp::TChannel::setOscInfo((ulong))
 0002:80495ACC       JASDsp::TChannel::initAutoMixer((void))
 0002:80495AF8       JASDsp::TChannel::setAutoMixer((ushort,uchar,uchar,uchar,uchar))
 0002:80495B20       JASDsp::TChannel::setPitch((ushort))
 0002:80495B34       JASDsp::TChannel::setMixerInitVolume((uchar,short))
 0002:80495B50       JASDsp::TChannel::setMixerVolume((uchar,short))
 0002:80495B80       JASDsp::TChannel::flush((void))
 0002:80495B88       JASDsp::TChannel::initFilter((void))
 0002:80495BE4       JASDsp::TChannel::setFilterMode((ushort))
 0002:80495C1C       JASDsp::TChannel::setIIRFilterParam((short *))
 0002:80495C28       JASDsp::TChannel::setFIR8FilterParam((short *))
 0002:80495C34       JASDsp::TChannel::setDistFilter((short))
 0002:80495C3C       JASDsp::TChannel::setBusConnect((uchar,uchar))
 0002:80495C5C       DSP_CreateMap2(ulong)
 0002:80495C98       JASDsp::setDSPMixerLevel((float))
 0002:80495C9C       AXGetAuxCReturnVolume
 0002:80495CB8       JASDriver::waitSubFrame((void))
 0002:80495CF4       JASDriver::rejectCallback((long (*)(void *),void *))
 0002:80495DC0       __sinit__JASDriverIF_cpp
 0002:80495E28       JASSoundParams::combine((JASSoundParams const &,JASSoundParams const &))
 0002:80496B0C       JAISe::JAISe((JAISeMgr *,JAISoundStrategyMgr<5JAISe> *,ulong))
 0002:80496BB0       JAISe::mixOut_((JASSoundParams const &))
 0002:80496CB4       JAISe::startTrack_((JASSoundParams const &))
 0002:80496D68       JAISe::JAISeCategoryMgr_mixOut_((bool,JASSoundParams const &,JAISoundActivity))
 0002:80496F18       JAISe::JAISeCategoryMgr_calc_((void))
 0002:80496FE4       JAISe::JAISound_tryDie_((void))
 0002:8049706C       JAISe::JAISeMgr_startID_((JAISoundID,JGeometry::TVec3<f> const *,JAIAudience *))
 0002:80497108       JAISe::prepare_getSeqData_((void))
 0002:804971A8       JAISe::prepare_((void))
 0002:80497250       JAISe::getTrack((void))
 0002:80497258       JAISe::getChildTrack((int))
 0002:8049726C       JAISe::getTempoMgr((void))
 0002:80497274       str_804994EC
 0002:804972D8       JAISound::stop_JAISound_((void))
 0002:804972EC       JAISeCategoryMgr::isUsingSeqData((JAISeqDataRegion const &))
 0002:80497354       JAISeCategoryMgr::releaseSeqData((JAISeqDataRegion const &))
 0002:804973D4       JAISeCategoryMgr::JAISeMgr_calc_((void))
 0002:80497430       JAISeCategoryMgr::JAISeMgr_freeDeadSe_((void))
 0002:804974DC       JAISeCategoryMgr::JAISeMgr_acceptsNewSe_(const(ulong))
 0002:80497594       JAISeCategoryMgr::sortByPriority_((void))
 0002:80497630       JAISeCategoryMgr::stop((ulong))
 0002:80497684       JAISeCategoryMgr::stop((void))
 0002:804976C8       JAISeCategoryMgr::stopSoundID((JAISoundID))
 0002:80497738       JAISeCategoryMgr::JAISeMgr_mixOut_((JAISoundParamsMove const &,JAISoundActivity))
 0002:80497880       JAISeMgr::JAISeMgr((bool))
 0002:80497918       JAISeMgr::isUsingSeqData((JAISeqDataRegion const &))
 0002:80497988       JAISeMgr::releaseSeqData((JAISeqDataRegion const &))
 0002:80497A14       JAISeMgr::setCategoryArrangement((JAISeCategoryArrangement const &))
 0002:80497A4C       JAISeMgr::stop((void))
 0002:80497AA0       JAISeMgr::stop((ulong))
 0002:80497AFC       JAISeMgr::stopSoundID((JAISoundID))
 0002:80497B60       JAISeMgr::initParams((void))
 0002:80497BC4       JAISeMgr::setSeqDataMgr((JAISeqDataMgr *))
 0002:80497C18       JAISeMgr::resetSeqDataMgr((void))
 0002:80497C6C       JAISeMgr::newSe_((int,ulong))
 0002:80497D24       JAISeMgr::calc((void))
 0002:80497DA4       JAISeMgr::mixOut((void))
 0002:80497E08       JAISeMgr::getNumActiveSe(const(void))
 0002:80497E34       JAISeqDataRegion::intersects(const(JAISeqData const &))
 0002:80497E6C       JAISoundChild::calc((void))
 0002:80497EE4       JAISoundParamsTransition::TTransition::apply((float))
 0002:80497F18       JAISoundParamsMove::init((void))
 0002:80497F6C       JAISoundParamsTransition::TTransition::zero((void))
 0002:80497F84       JAISeCategoryMgr::JAISeCategoryMgr((void))
 0002:80497FE4       JAISeMgr::getAudience((int))
 0002:80498070       JAISeMgr::~JAISeMgr((void))
 0002:804980F0       JAISeMgr::startSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:80498328       JAISeq::JAISeq((JAISeqMgr *,JAISoundStrategyMgr<6JAISeq> *))
 0002:804983DC       JAISeq::JAISeqMgr_startID_((JAISoundID,JGeometry::TVec3<f> const *,JAIAudience *,int,int))
 0002:8049847C       JAISeq::playSeqData_((JASSoundParams const &,JAISoundActivity))
 0002:8049851C       JAISeq::reserveChildTracks_((int))
 0002:80498600       JAISeq::releaseChildTracks_((void))
 0002:80498694       JAISeq::prepare_getSeqData_((void))
 0002:80498744       JAISeq::prepare_((JASSoundParams const &,JAISoundActivity))
 0002:80498814       def_80498784
 0002:80498830       JAISeq::JAISeqMgr_calc_((void))
 0002:80498924       JAISeq::die_((void))
 0002:804989CC       JAISeq::JAISound_tryDie_((void))
 0002:80498A68       JAISeq::mixOut_((JASSoundParams const &,JAISoundActivity))
 0002:80498C08       JAISeq::JAISeqMgr_mixOut_((JASSoundParams const &,JAISoundActivity))
 0002:80498C94       JAISeq::getChild((int))
 0002:80498D20       JAISeq::releaseChild((int))
 0002:80498DA4       JAISeq::getTrack((void))
 0002:80498DAC       JAISeq::getChildTrack((int))
 0002:80498DE8       JAISeq::getTempoMgr((void))
 0002:80498F8C       JAISeqMgr::isUsingSeqData((JAISeqDataRegion const &))
 0002:80498FF4       JAISeqMgr::releaseSeqData((JAISeqDataRegion const &))
 0002:80499070       JAISeqMgr::JAISeqMgr((bool))
 0002:80499120       JAISeqMgr::freeDeadSeq_((void))
 0002:8049918C       JAISeq::~JAISeq((void))
 0002:80499208       JAISeqMgr::startSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:80499358       JAISeqMgr::calc((void))
 0002:804993FC       JAISeqMgr::stop((void))
 0002:8049943C       JAISeqMgr::stop((ulong))
 0002:8049948C       JAISeqMgr::stopSoundID((JAISoundID))
 0002:804994F8       JAISeqMgr::mixOut((void))
 0002:80499554       JAISeqMgr::beginStartSeq_((void))
 0002:804995A0       JAISeqMgr::endStartSeq_((JAISeq *,JAISoundHandle *))
 0002:804996D8       JAISeqMgr::~JAISeqMgr((void))
 0002:80499830       JAISoundHandle::releaseSound((void))
 0002:8049984C       JAISound::releaseHandle((void))
 0002:80499868       JAISound::attachHandle((JAISoundHandle *))
 0002:804998D4       JAISoundStatus_::lockWhenPrepared((void))
 0002:804998F8       JAISoundStatus_::unlockIfLocked((void))
 0002:80499934       JAISoundParams::mixOutAll((JASSoundParams const &,JASSoundParams *,float))
 0002:804999AC       JAISound::JAISound((void))
 0002:804999EC       JAISound::start_JAISound_((JAISoundID,JGeometry::TVec3<f> const *,JAIAudience *))
 0002:80499AF4       JAISound::stop((ulong))
 0002:80499BE8       JAISound::die_JAISound_((void))
 0002:80499C5C       JAISound::calc_JAISound_((void))
 0002:80499E50       JAISound::initTrack_JAISound_((JASTrack *))
 0002:80499F24       JAISound::increasePrepareCount_JAISound_((void))
 0002:80499F54       JAISoundChild::init((void))
 0002:80499FB0       JAISoundChild::mixOut((JASTrack *))
 0002:8049A064       JAISoundHandles::getHandleSoundID((JAISoundID))
 0002:8049A100       JAISoundHandles::setPos((JGeometry::TVec3<f> const &))
 0002:8049A158       JAISoundStarter::JAISoundStarter((bool))
 0002:8049A224       JAISoundParamsMove::moveVolume((float,ulong))
 0002:8049A24C       JAISoundParamsMove::movePitch((float,ulong))
 0002:8049A274       JAISoundParamsMove::moveFxMix((float,ulong))
 0002:8049A29C       JAISoundParamsTransition::TTransition::set((float,float,ulong))
 0002:8049A34C       JAISoundStarter::startLevelSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:8049A47C       JAIStream_JASAramStreamCallback_(ulong,JASAramStream *,void *)
 0002:8049A4AC       JAIStream::JAIStream((JAIStreamMgr *,JAISoundStrategyMgr<9JAIStream> *))
 0002:8049A544       JAIStream::JAIStreamMgr_startID_((JAISoundID,long,JGeometry::TVec3<f> const *,JAIAudience *,int))
 0002:8049A5DC       JAIStream::prepare_prepareStream_((void))
 0002:8049A7A0       JAIStream::prepare_((void))
 0002:8049A844       JAIStream::prepare_startStream_((void))
 0002:8049A890       JAIStream::JAIStreamMgr_mixOut_((JASSoundParams const &,JAISoundActivity))
 0002:8049AABC       JAIStream::die_JAIStream_((void))
 0002:8049AB58       JAIStream::JAISound_tryDie_((void))
 0002:8049ABE8       JAIStream::JAIStreamMgr_calc_((void))
 0002:8049ACA0       JAIStream::getChild((int))
 0002:8049AD18       JAIStream::releaseChild((int))
 0002:8049AE60       JAIStreamMgr::JAIStreamMgr((bool))
 0002:8049AEF8       JAIStreamMgr::startSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:8049B034       JAIStreamMgr::freeDeadStream_((void))
 0002:8049B0E0       JAIStreamMgr::calc((void))
 0002:8049B184       JAIStreamMgr::stop((void))
 0002:8049B1C4       JAIStreamMgr::stop((ulong))
 0002:8049B214       JAIStreamMgr::stopSoundID((JAISoundID))
 0002:8049B270       JAIStreamMgr::mixOut((void))
 0002:8049B2CC       JAIStreamMgr::newStream_((void))
 0002:8049B448       JAUAudience3DSetting::init((void))
 0002:8049B4B8       __sinit__JAUInitializer_cpp
 0002:8049B954       JAUAudioArcInterpreter::JAUAudioArcInterpreter((void))
 0002:8049B9B0       JAUAudioArcInterpreter::parse((void const *))
 0002:8049BA18       JAUAudioArcInterpreter::readCommand_((void))
 0002:8049BDD0       JAUAudioArcLoader::JAUAudioArcLoader((JAUSection *))
 0002:8049BE1C       JAUAudioArcInterpreter::parse((void const *))
 0002:8049BE20       JAUAudioArcLoader::load((char const *))
 0002:8049BE88       JAUAudioArcLoader::readWS((ulong,void const *,ulong))
 0002:8049BEE0       JAUAudioArcLoader::newVoiceBank((ulong,ulong))
 0002:8049BEFC       JAUAudioArcLoader::readBSTN((void const *,ulong))
 0002:8049BF14       JAUAudioArcLoader::readBMS_fromArchive((ulong))
 0002:8049BF80       JAUAudioArcLoader::newDynamicSeqBlock((ulong))
 0002:8049BFB8       JAUAudioArcLoader::readBSFT((void const *))
 0002:8049BFD4       JAUAudioArcLoader::readMaxSeCategory((int,int,int))
 0002:8049BFF4       JAUSection::asSectionHeap((void))
 0002:8049C014       JAUBankTable::getBank(const(ulong))
 0002:8049C038       JAU_JASInitializer::JAU_JASInitializer((void))
 0002:8049C090       JAU_JAIInitializer::JAU_JAIInitializer((void))
 0002:8049C0B4       JAU_JAIInitializer::initJAInterface((void))
 0002:8049C2A8       JAUSection::TSectionData::TSectionData((void))
 0002:8049C328       JAUDynamicSeqDataBlocks::~JAUDynamicSeqDataBlocks((void))
 0002:8049C450       JAUSection::TSectionData::resetRegisteredBankTables((void))
 0002:8049C49C       JAUSection::TSectionData::resetRegisteredWaveBankTables((void))
 0002:8049C4E8       JAUSection::JAUSection((JAUSectionHeap *,ulong,long))
 0002:8049C5D8       JAUSection::TSectionData::~TSectionData((void))
 0002:8049C658       JAUSection::finishBuild((void))
 0002:8049C720       JAUSection::dispose((void))
 0002:8049C7A8       JAUSection::newSoundTable((void const *,ulong,bool))
 0002:8049C86C       JAUSection::newSoundNameTable((void const *,ulong,bool))
 0002:8049C930       JAUSection::newStreamFileTable((void const *,bool))
 0002:8049CAB8       JAUSection::newSeSeqCollection((void const *,ulong))
 0002:8049CB58       JAUSection::newStaticSeqDataBlock_((JAISoundID,ulong))
 0002:8049CCA8       JAUSection::newStaticSeqData((JAISoundID,void const *,ulong))
 0002:8049CD10       JAUSection::newStaticSeqData((JAISoundID))
 0002:8049CDD8       JAUSection::loadDVDFile((char const *,bool,JKRExpandSwitch))
 0002:8049CE74       JAUSection::newCopy((void const *,ulong,long))
 0002:8049CED8       JAUSection::newWaveBank((ulong,void const *))
 0002:8049CFAC       JAUSection::loadWaveArc((ulong,ulong))
 0002:8049D074       JAUSection::loadWaveArc((ulong))
 0002:8049D128       JAUSection::eraseWaveArc((ulong,ulong))
 0002:8049D1EC       JAUSection::eraseWaveArc((ulong))
 0002:8049D29C       JAUSection::newBank((void const *,ulong))
 0002:8049D3A4       JAUSection::newVoiceBank((ulong,ulong))
 0002:8049D490       JAUSection::beginNewBankTable((ulong,ulong))
 0002:8049D574       JAUSection::endNewBankTable((void))
 0002:8049D5C4       JAUSectionHeap::TSectionHeapData::TSectionHeapData((void))
 0002:8049D630       JAUSectionHeap::setSeqDataArchive((JKRArchive *))
 0002:8049D690       JAUNewSectionHeap(JKRSolidHeap *,bool)
 0002:8049D710       JAUNewSectionHeap(bool)
 0002:8049D754       JAUSectionHeap::JAUSectionHeap((JKRSolidHeap *,bool,long))
 0002:8049D7FC       JAUSection::~JAUSection((void))
 0002:8049D870       JAUSectionHeap::getOpenSection((void))
 0002:8049D87C       JAUSectionHeap::getSoundTable((void))
 0002:8049D884       JAUSectionHeap::setSeqDataUser((JAISeqDataUser *))
 0002:8049D890       JAUSectionHeap::newDynamicSeqBlock((ulong))
 0002:8049D9D0       JAUSectionHeap::newDynamicSeqBlocks((ulong,int))
 0002:8049DA34       JAUSectionHeap::getSeqData((JAISoundID,JAISeqData *))
 0002:8049DADC       JAUSectionHeap::isWaveLoaded((ulong,ulong))
 0002:8049DB48       @unnamed@JAUSectionHeap_cpp@::TStreamDataMgr::getStreamFileEntry((JAISoundID))
 0002:8049DB70       std::bitset<255>::bitset<255>((void))
 0002:8049DC44       std::bitset<255>::reset((ulong))
 0002:8049DCC0       std::bitset<255>::test(const(ulong))
 0002:8049DD3C       std::bitset<255>::set((ulong,bool))
 0002:8049DDDC       JAUSectionHeap::~JAUSectionHeap((void))
 0002:8049DEC0       str_804A0118
 0002:8049DFB4       JASGlobalInstance<14JAUSectionHeap>::~JASGlobalInstance<14JAUSectionHeap>((void))
 0002:8049E070       JAUSectionHeap::TSectionHeapData::~TSectionHeapData((void))
 0002:8049E0CC       JAUSeqCollection::init((void const *))
 0002:8049E110       JAUSeqCollection::getSeqData((int,int,JAISeqData *))
 0002:8049E168       JAUSeqCollection::getSeqDataRegion((JAISeqDataRegion *))
 0002:8049E194       JAUSeqDataMgr_SeqCollection::JAUSeqDataMgr_SeqCollection((void))
 0002:8049E1B0       JAUSeqDataMgr_SeqCollection::setSeqDataUser((JAISeqDataUser *))
 0002:8049E1BC       JAUSeqDataMgr_SeqCollection::releaseSeqData((void))
 0002:8049E21C       JAUSeqDataMgr_SeqCollection::getSeqData((JAISoundID,JAISeqData *))
 0002:8049E2CC       JAUSeqDataBlock::JAUSeqDataBlock((void))
 0002:8049E300       JAUSeqDataBlocks::getSeqData((JAISoundID))
 0002:8049E34C       JAUSeqDataBlocks::seekFreeBlock((ulong))
 0002:8049E3A8       JAUSeqDataBlocks::hasFailedBlock((JAISoundID))
 0002:8049E3E8       JAUDynamicSeqDataBlocks::JAUDynamicSeqDataBlocks((void))
 0002:8049E468       JAUDynamicSeqDataBlocks::getSeqData((JAISoundID,JAISeqDataUser *,JAISeqData *,bool))
 0002:8049E548       JAUDynamicSeqDataBlocks::appendDynamicSeqDataBlock((JAUSeqDataBlock *))
 0002:8049E5B0       JAUDynamicSeqDataBlocks_receiveLoaded_(ulong,ulong)
 0002:8049E5D4       JAUDynamicSeqDataBlocks::loadDynamicSeq((JAISoundID,bool,JAISeqDataUser *))
 0002:8049E70C       JAUDynamicSeqDataBlocks::releaseIdleDynamicSeqDataBlock_((JAISeqDataUser *,ulong))
 0002:8049E7E8       JAUDynamicSeqDataBlocks::rearrangeLoadingSeqs_((void))
 0002:8049E87C       JAUSoundAnimation::getStartSoundIndex(const(float))
 0002:8049E900       JAUSoundAnimation::getEndSoundIndex(const(float))
 0002:8049E980       JAUSoundAnimator::JAUSoundAnimator((JAISoundHandles *))
 0002:8049E9AC       JAUSoundAnimator::ageSounds_((void))
 0002:8049EA64       JAUSoundAnimator::startAnimation((JAUSoundAnimation const *,bool,float,float))
 0002:8049EB3C       JAUSoundAnimator::updateSoundLifeTime_((float,float))
 0002:8049ED64       JAUSoundAnimator::getFreeHandle((JAUSoundAnimationSound const *))
 0002:8049EDA8       JAUSoundAnimator::playsSound((JAUSoundAnimationSound const *,JGeometry::TVec3<f> const &,float))
 0002:8049EE30       JAUSoundAnimator::modifySoundParams((JASSoundParams *,JAUSoundAnimationSound const *,float))
 0002:8049EF90       JAUSoundMgr::JAUSoundMgr((void))
 0002:8049EFF4       JAUSoundMgr::startSound((JAISoundID,JAISoundHandle *,JGeometry::TVec3<f> const *))
 0002:8049F0EC       JAUSoundMgr::setAudience((JAIAudience *))
 0002:8049F130       JAUSoundMgr::mixOut((void))
 0002:8049F1B0       JAUSoundMgr::stopSoundID((JAISoundID))
 0002:8049F220       JAUSoundMgr::stopSync((void))
 0002:8049F2B8       JAUSoundMgr::stop((ulong))
 0002:8049F30C       JAUSoundMgr::initParams((void))
 0002:8049F34C       JAUSoundMgr::getNumActiveSounds(const(void))
 0002:8049F390       JAUSoundObject::JAUSoundObject((JGeometry::TVec3<f> *,uchar,JKRHeap *))
 0002:8049F424       JAUSoundObject::~JAUSoundObject((void))
 0002:8049F49C       JAUSoundObject::dispose((void))
 0002:8049F548       JAUSoundObject::process((void))
 0002:8049F560       JAUSoundObject::startSound((JAISoundID))
 0002:8049F628       JAUSoundObject::startSoundIndex((JAISoundID,uchar))
 0002:8049F69C       JAUSoundObject::startLevelSound((JAISoundID))
 0002:8049F780       JAUSoundObject::startLevelSoundIndex((JAISoundID,uchar))
 0002:8049F844       JAUSoundObject::stopSound((JAISoundID,ulong))
 0002:8049F890       JAUSoundObject::getLowPrioSound((JAISoundID))
 0002:8049F978       JAUSoundObject::getFreeHandleNotReserved((void))
 0002:8049F9E0       JAISound::setLifeTime((ulong,bool))
 0002:8049FA14       JAUSoundTable::init((void const *))
 0002:8049FA5C       JAUSoundTable::getTypeID(const(JAISoundID))
 0002:8049FB14       JAUSoundTable::getData(const(JAISoundID))
 0002:8049FBE8       JAUSoundNameTable::getNumGroups_inSection(const(uchar))
 0002:8049FC1C       JAUSoundNameTable::getNumItems_inGroup(const(uchar,uchar))
 0002:8049FC88       JAUSoundNameTable::init((void const *))
 0002:8049FCD0       JAUSoundTable_<21JAUSoundNameTableRoot,24JAUSoundNameTableSection,22JAUSoundNameTableGroup,c>::getSection(const(int))
 0002:8049FD20       JAUSoundTable_<17JAUSoundTableRoot,20JAUSoundTableSection,18JAUSoundTableGroup,v>::getGroup(const(JAUSoundTableSection const *,int))
 0002:8049FDD4       JAUSoundTable_<21JAUSoundNameTableRoot,24JAUSoundNameTableSection,22JAUSoundNameTableGroup,c>::getGroup(const(JAUSoundNameTableSection const *,int))
 0002:8049FE38       JAUSoundTable_<21JAUSoundNameTableRoot,24JAUSoundNameTableSection,22JAUSoundNameTableGroup,c>::getItem(const(JAUSoundNameTableGroup const *,int))
 0002:8049FE84       JAUSoundNameTable::getName(const(JAISoundID))
 0002:8049FF1C       JAUStdSoundInfo::getBgmSeqResourceID(const(JAISoundID))
 0002:8049FF98       JAUStdSoundInfo::getSoundType(const(JAISoundID))
 0002:8049FFE8       JAUStdSoundInfo::getAudibleSw(const(JAISoundID))
 0002:804A0064       JAUStdSoundInfo::getPriority(const(JAISoundID))
 0002:804A00D4       JAUStdSoundInfo::getSeInfo(const(JAISoundID,JAISe *))
 0002:804A010C       JAUStdSoundInfo::getSeqInfo(const(JAISoundID,JAISeq *))
 0002:804A0138       JAUStdSoundInfo::getStreamInfo(const(JAISoundID,JAIStream *))
 0002:804A028C       JAUStdSoundInfo::getSoundInfo_(const(JAISoundID,JAISound *))
 0002:804A0328       JAUStdSoundInfo::getStreamFilePath((JAISoundID))
 0002:804A03A0       JAUStdSoundInfo::getStreamFileEntry((JAISoundID))
 0002:804A03F4       JAUStreamFileTable::init((void const *))
 0002:804A044C       JAUStreamFileTable::getFilePath(const(int))
 0002:804A0474       JAUStreamDataMgr_StreamFileTable::getStreamFileEntry((JAISoundID))
 0002:804A0508       ARStartDMA
 0002:804A05D4       ARAlloc
 0002:804A0624       ARInit
 0002:804A06C0       ARGetBaseAddress
 0002:804A06D0       __ARQPopTaskQueueHi
 0002:804A0740       __ARQServiceQueueLo
 0002:804A0840       __ARQInterruptServiceRoutine
 0002:804A08BC       ARQInit
 0002:804A092C       __TRK_get_MSR
 0002:804A0934       __TRK_set_MSR
 0002:804A093C       PPCMfhid0
 0002:804A0944       PPCMthid0
 0002:804A094C       PPCMfl2cr
 0002:804A0954       PPCMtl2cr
 0002:804A095C       PPCMtdec
 0002:804A0964       PPCSync
 0002:804A096C       PPCHalt
 0002:804A0980       PPCMtmmcr0
 0002:804A0988       PPCMtmmcr1
 0002:804A0990       PPCMtpmc1
 0002:804A0998       PPCMtpmc2
 0002:804A09A0       PPCMtpmc3
 0002:804A09A8       PPCMtpmc4
 0002:804A09B0       PPCMffpscr
 0002:804A09D0       PPCMtfpscr
 0002:804A09F8       PPCMfhid2
 0002:804A0A00       PPCMthid2
 0002:804A0A08       PPCMfwpar
 0002:804A0A14       PPCMtwpar
 0002:804A0A1C       PPCDisableSpeculation
 0002:804A0A44       PPCSetFpNonIEEEMode
 0002:804A0A4C       PPCMthid4
 0002:804A0A9C       __OSFPRInit
 0002:804A0BC4       __OSGetIOSRev
 0002:804A0C30       OSGetConsoleType
 0002:804A0EB4       ClearArena
 0002:804A1090       ClearMEM2Arena
 0002:804A1274       InquiryCallback
 0002:804A12B0       ReportOSInfo
 0002:804A1438       def_804A13D4
 0002:804A155C       OSInit
 0002:804A19D4       OSExceptionInit
 0002:804A1C54       __OSDBIntegrator
 0002:804A1C7C       __OSSetExceptionHandler
 0002:804A1C90       __OSGetExceptionHandler
 0002:804A1CA0       OSExceptionVector
 0002:804A1D3C       OSDefaultExceptionHandler
 0002:804A1D94       __OSPSInit
 0002:804A1DE8       __OSGetDIConfig
 0002:804A1DF8       OSRegisterVersion
 0002:804A1E08       OSGetAppGamename
 0002:804A1E8C       OSGetAppType
 0002:804A1EAC       __OSInitAlarm
 0002:804A1F14       InsertAlarm
 0002:804A2164       OSSetAlarm
 0002:804A21D4       OSSetPeriodicAlarm
 0002:804A2258       OSCancelAlarm
 0002:804A2370       DecrementerExceptionCallback
 0002:804A259C       ExternalInterruptHandler
 0002:804A25F4       OnReset
 0002:804A2690       DLInsert
 0002:804A273C       OSAllocFromHeap
 0002:804A2834       OSFreeToHeap
 0002:804A28AC       OSSetCurrentHeap
 0002:804A28BC       OSInitAlloc
 0002:804A292C       OSCreateHeap
 0002:804A29F8       OSAllocFromMEM1ArenaLo
 0002:804A2A2C       __AIClockInit
 0002:804A2C4C       __OSInitAudioSystem
 0002:804A2E14       __OSStopAudioSystem
 0002:804A2EE0       DCEnable
 0002:804A2EF4       DCInvalidateRange
 0002:804A2F20       DCFlushRange
 0002:804A2F50       DCStoreRange
 0002:804A2F80       DCFlushRangeNoSync
 0002:804A2FAC       DCStoreRangeNoSync
 0002:804A2FD8       DCZeroRange
 0002:804A3004       ICInvalidateRange
 0002:804A3038       ICFlashInvalidate
 0002:804A3048       ICEnable
 0002:804A305C       __LCEnable
 0002:804A3128       LCEnable
 0002:804A3160       LCDisable
 0002:804A3188       LCStoreBlocks
 0002:804A31AC       LCStoreData
 0002:804A324C       LCQueueWait
 0002:804A3260       DMAErrorHandler
 0002:804A33A8       __OSCacheInit
 0002:804A34E0       __OSLoadFPUContext
 0002:804A3604       __OSSaveFPUContext
 0002:804A372C       OSSaveFPUContext
 0002:804A3734       OSSetCurrentContext
 0002:804A3790       DVDLowGetImmBufferReg
 0002:804A379C       OSSaveContext
 0002:804A381C       OSLoadContext
 0002:804A38F4       OSGetStackPointer
 0002:804A38FC       OSSwitchFiber
 0002:804A392C       OSSwitchFiberEx
 0002:804A395C       OSClearContext
 0002:804A3980       OSInitContext
 0002:804A3A3C       OSDumpContext
 0002:804A3C9C       OSSwitchFPUContext
 0002:804A3D20       __OSContextInit
 0002:804A3D68       OSFillFPUContext
 0002:804A3E94       OSReport
 0002:804A3F20       OSVReport
 0002:804A3F24       OSPanic
 0002:804A4050       OSSetErrorHandler
 0002:804A42D8       __OSUnhandledException
 0002:804A4590       def_804A44E4
 0002:804A45C8       PackArgs_1
 0002:804A4748       Utf16ToArg
 0002:804A48A0       PackInstallerArgs
 0002:804A4A6C       Run
 0002:804A4AA8       Callback_1
 0002:804A4AB4       __OSGetExecParams
 0002:804A4AD8       callback
 0002:804A4AE0       __OSLaunchNextFirmware
 0002:804A514C       __OSLaunchMenu
 0002:804A5210       __OSCheckCompanyCode
 0002:804A5324       __OSCheckTmdSysVersion
 0002:804A5778       __OSLaunchTitle
 0002:804A5CCC       __OSReturnToMenul
 0002:804A5DD4       __OSBootDolSimple
 0002:804A661C       __OSBootDol
 0002:804A67FC       ScreenReport
 0002:804A6B20       ConfigureVideo
 0002:804A6E20       Halt
 0002:804A7420       GetFontCode
 0002:804A7554       Decode
 0002:804A76F8       OSSetFontEncode
 0002:804A7778       ReadFont
 0002:804A7A78       OSLoadFont
 0002:804A7BA0       ParseStringS
 0002:804A7C9C       ParseStringW
 0002:804A7E58       OSGetFontTexel
 0002:804A80E8       OSDisableInterrupts
 0002:804A80FC       OSEnableInterrupts
 0002:804A8110       OSRestoreInterrupts
 0002:804A8134       __OSSetInterruptHandler
 0002:804A8148       __OSGetInterruptHandler
 0002:804A8158       __OSInterruptInit
 0002:804A821C       SetInterruptMask
 0002:804A8478       __OSMaskInterrupts
 0002:804A84F8       __OSUnmaskInterrupts
 0002:804A8578       __OSDispatchInterrupt
 0002:804A886C       __OSModuleInit
 0002:804A8884       OSInitMessageQueue
 0002:804A88E4       OSSendMessage
 0002:804A89AC       OSReceiveMessage
 0002:804A8A88       OSJamMessage
 0002:804A8B88       OnShutdown
 0002:804A8BC4       MEMIntrruptHandler
 0002:804A8C0C       OSProtectRange
 0002:804A8CD4       ConfigMEM1_48MB
 0002:804A8DD4       ConfigMEM2_112MB
 0002:804A8F94       ConfigMEM2_128MB
 0002:804A91CC       ConfigMEM_ES1_0
 0002:804A921C       RealMode
 0002:804A9234       BATConfig
 0002:804A9384       __OSInitMemoryProtection
 0002:804A9434       OSInitMutex
 0002:804A946C       OSLockMutex
 0002:804A9548       OSUnlockMutex
 0002:804A9610       __OSUnlockAllMutex
 0002:804A967C       OSTryLockMutex
 0002:804A9738       __OSReboot
 0002:804A97A4       AXFXGetHooks
 0002:804A97B8       OSRegisterShutdownFunction
 0002:804A9840       __OSCallShutdownFunctions
 0002:804A98F0       __OSShutdownDevices
 0002:804A9F68       def_804A9F2C
 0002:804AA0B0       OSGetResetCode
 0002:804AA0E0       OSResetSystem
 0002:804AA0FC       WriteSramCallback
 0002:804AA234       __OSInitSram
 0002:804AA434       UnlockSram
 0002:804AA714       __OSSyncSram
 0002:804AA724       __OSReadROM
 0002:804AA848       OSGetWirelessID
 0002:804AA8C0       OSSetWirelessID
 0002:804AA95C       __OSGetRTCFlags
 0002:804AAA78       __OSClearRTCFlags
 0002:804AAB88       SystemCallVector
 0002:804AABA8       __OSInitSystemCall
 0002:804AAC08       nullsub_57
 0002:804AAC0C       __OSThreadInit
 0002:804AAE90       OSInitThreadQueue
 0002:804AAEA0       OSGetCurrentThread
 0002:804AAEAC       OSIsThreadSuspended
 0002:804AAEC0       OSIsThreadTerminated
 0002:804AAEEC       OSDisableScheduler
 0002:804AAF28       OSEnableScheduler
 0002:804AAF64       UnsetRun
 0002:804AAFCC       __OSGetEffectivePriority
 0002:804AB008       SetEffectivePriority
 0002:804AB1BC       __OSPromoteThread
 0002:804AB20C       SelectThread
 0002:804AB434       __OSReschedule
 0002:804AB44C       OSYieldThread
 0002:804AB488       OSCreateThread
 0002:804AB6F4       OSExitThread
 0002:804AB7D8       OSCancelThread
 0002:804AB9B0       OSJoinThread
 0002:804ABAF0       OSDetachThread
 0002:804ABB90       OSResumeThread
 0002:804ABE28       OSSuspendThread
 0002:804ABFBC       OSSleepThread
 0002:804AC0A8       OSWakeupThread
 0002:804AC19C       OSSetThreadPriority
 0002:804AC288       OSGetThreadPriority
 0002:804AC2B4       OSSleepTicks
 0002:804AC368       OSGetTime
 0002:804AC380       OSGetTick
 0002:804AC388       __OSGetSystemTime
 0002:804AC3EC       __OSTimeToSystemTime
 0002:804AC444       GetDates
 0002:804AC5B4       OSTicksToCalendarTime
 0002:804AC77C       OSUTF8to32
 0002:804AC88C       OSUTF16to32
 0002:804AC8FC       OSUTF32toANSI
 0002:804AC974       OSUTF32toSJIS
 0002:804AC9C4       __OSInitIPCBuffer
 0002:804ACA98       OSGetResetButtonState
 0002:804ACB48       __OSInitSTM
 0002:804ACD48       __OSSetVIForceDimming
 0002:804ACE40       __OSSetIdleLEDMode
 0002:804ACE80       __OSUnRegisterStateEvent
 0002:804ACF08       nullsub_62
 0002:804ACF0C       nullsub_63
 0002:804AD070       PlayRecordCallback
 0002:804AD2BC       def_804AD0DC
 0002:804AD520       __OSStartPlayRecord
 0002:804AD574       __OSStopPlayRecord
 0002:804AD75C       __OSWriteStateFlags
 0002:804AD840       __OSReadStateFlags
 0002:804AD968       __OSInitNet
 0002:804ADA1C       __OSCreateNandbootInfo
 0002:804ADACC       __OSWriteNandbootInfo
 0002:804ADC24       OSPlayTimeIsLimited
 0002:804ADC3C       __OSPlayTimeRebootCallback
 0002:804ADCC4       __OSPlayTimeFadeLastAIDCallback
 0002:804ADE80       __OSWriteExpiredFlag
 0002:804ADF94       __OSPlayTimeRebootThread
 0002:804AE080       __OSPlayTimeAlarmExpired
 0002:804AE19C       __OSGetPlayTime
 0002:804AE364       __OSInitPlayTime
 0002:804AE4BC       __init_user
 0002:804AE4DC       __init_cpp
 0002:804AE524       exit
 0002:804AE570       SetExiInterruptMask
 0002:804AE660       EXIImm
 0002:804AE8DC       EXIImmEx
 0002:804AE980       EXIDma
 0002:804AEA78       EXISync
 0002:804AECF4       EXISetExiCallback
 0002:804AED78       __EXIProbe
 0002:804AEEF8       EXIAttach
 0002:804AF010       EXIDetach
 0002:804AF0C8       EXISelect
 0002:804AF1F8       EXIDeselect
 0002:804AF2F8       EXIIntrruptHandler
 0002:804AF3B0       TCIntrruptHandler
 0002:804AF5C8       EXTIntrruptHandler
 0002:804AF698       EXIInit
 0002:804AF85C       EXILock
 0002:804AF958       EXIUnlock
 0002:804AFA30       UnlockedHandler
 0002:804AFA58       EXIGetID
 0002:804AFE04       ProbeBarnacle
 0002:804AFF7C       __OSEnableBarnacle
 0002:804B0138       EXIWriteReg
 0002:804B02C4       CompleteTransfer
 0002:804B05B8       SIInterruptHandler
 0002:804B09A4       SIInit
 0002:804B0A64       __SITransfer
 0002:804B0C14       SISetXY
 0002:804B0C70       AlarmHandler
 0002:804B0CFC       SITransfer
 0002:804B0E68       GetTypeCallback
 0002:804B1118       SIGetType
 0002:804B12CC       SISetSamplingRate
 0002:804B13AC       DBInit
 0002:804B13D4       __DBExceptionDestinationAux
 0002:804B141C       __DBExceptionDestination
 0002:804B142C       __DBIsExceptionMarked
 0002:804B1444       WUD_DEBUGPrint
 0002:804B1494       OnShutdown_1
 0002:804B1628       __VIRetraceHandler
 0002:804B1984       def_804B196C
 0002:804B1E38       VISetPreRetraceCallback
 0002:804B1E7C       VISetPostRetraceCallback
 0002:804B1EC0       getTiming
 0002:804B1FD0       def_804B1EDC
 0002:804B1FD8       __VIInit
 0002:804B21E8       VIInit
 0002:804B268C       def_804B2674
 0002:804B2730       VIWaitForRetrace
 0002:804B2784       setFbbRegs
 0002:804B2A3C       setHorizontalRegs
 0002:804B2B1C       setVerticalRegs
 0002:804B2CB0       VIConfigure
 0002:804B3394       VIConfigurePan
 0002:804B36E8       VIFlush
 0002:804B37FC       VISetNextFrameBuffer
 0002:804B3878       VISetBlack
 0002:804B38F8       VIGetCurrentLine
 0002:804B3988       VIGetTvFormat
 0002:804B39CC       def_804B39BC
 0002:804B39E8       VIGetDTVStatus
 0002:804B3A24       __VIDisplayPositionToXY
 0002:804B3C58       VIGetDimmingCount
 0002:804B3C80       VIEnableDimming
 0002:804B3CD4       VISetTimeToDimming
 0002:804B3D24       def_804B3D14
 0002:804B3DD8       VIResetDimmingCount
 0002:804B3DEC       __VIResetRFIdle
 0002:804B3DFC       WaitMicroTime
 0002:804B3E94       sendSlaveAddr
 0002:804B4248       __VISendI2CData
 0002:804B4818       __VISetYUVSEL
 0002:804B48BC       __VISetFilter4EURGB60
 0002:804B48FC       __VISetCGMS
 0002:804B4954       __VISetWSS
 0002:804B49B8       __VISetClosedCaption
 0002:804B4A24       __VISetMacrovision
 0002:804B57AC       __VISetGammaImm
 0002:804B5940       __VISetGamma
 0002:804B5958       __VISetTrapFilter
 0002:804B59B4       VISetTrapFilter
 0002:804B59D4       __VISetRGBOverDrive
 0002:804B5A58       VISetRGBModeImm
 0002:804B5A68       __VISetRGBModeImm
 0002:804B5AB0       __VISetRevolutionModeSimple
 0002:804B5EDC       PSMTXIdentity
 0002:804B5F08       PSMTXCopy
 0002:804B5F3C       PSMTXConcat
 0002:804B6008       PSMTXInverse
 0002:804B6100       PSMTXInvXpose
 0002:804B61C8       PSMTXRotTrig
 0002:804B6278       __PSMTXRotAxisRadInternal
 0002:804B6328       PSMTXRotAxisRad
 0002:804B63A4       PSMTXTrans
 0002:804B63D8       PSMTXTransApply
 0002:804B6424       PSMTXScale
 0002:804B644C       PSMTXScaleApply
 0002:804B64A4       PSMTXQuat
 0002:804B6548       C_MTXLookAt
 0002:804B66BC       C_MTXLightPerspective
 0002:804B67B4       C_MTXLightOrtho
 0002:804B683C       PSMTXMultVec
 0002:804B6890       PSMTXMultVecSR
 0002:804B68E4       PSMTXMultVecArraySR
 0002:804B696C       C_MTXPerspective
 0002:804B6A58       C_MTXOrtho
 0002:804B6AF0       PSMTX44Identity
 0002:804B6B24       PSMTX44Copy
 0002:804B6B68       PSVECAdd
 0002:804B6B8C       PSVECSubtract
 0002:804B6BB0       PSVECScale
 0002:804B6BCC       PSVECNormalize
 0002:804B6C10       C_VECMag
 0002:804B6C54       PSVECMag
 0002:804B6C98       PSVECDotProduct
 0002:804B6CB8       PSVECCrossProduct
 0002:804B6CF4       PSVECDistance
 0002:804B6D48       PSQUATMultiply
 0002:804B6DA4       PSQUATDotProduct
 0002:804B6DC4       C_QUATMtx
 0002:804B6F90       C_QUATSlerp
 0002:804B712C       __GXDefaultTexRegionCallback
 0002:804B7220       __GXDefaultTlutRegionCallback
 0002:804B7244       __GXShutdown
 0002:804B73B0       __GXInitRevisionBits
 0002:804B74E0       GXInit
 0002:804B79E4       __GXInitGX
 0002:804B82F8       GXCPInterruptHandler
 0002:804B8458       GXInitFifoBase
 0002:804B84E4       CPGPLinkCheck
 0002:804B85DC       GXSetCPUFifo
 0002:804B87BC       GXSetGPFifo
 0002:804B8A4C       __GXSaveFifo
 0002:804B8B54       GXGetGPStatus
 0002:804B8C34       GXGetFifoPtrs
 0002:804B8C9C       GXEnableBreakPt
 0002:804B8D3C       GXDisableBreakPt
 0002:804B8D84       __GXFifoInit
 0002:804B8E00       __GXCleanGPFifo
 0002:804B8FA0       GXSetVtxDesc
 0002:804B91B4       def_804B8FBC
 0002:804B9204       __GXSetVCD
 0002:804B92B4       __GXCalculateVLim
 0002:804B93E0       GXClearVtxDesc
 0002:804B9414       GXSetVtxAttrFmt
 0002:804B9584       def_804B9440
 0002:804B95B4       GXSetVtxAttrFmtv
 0002:804B9738       def_804B95F4
 0002:804B9778       __GXSetVAT
 0002:804B97F8       GXSetArray
 0002:804B9838       GXInvalidateVtxCache
 0002:804B9848       GXSetTexCoordGen2
 0002:804B98F0       def_804B9870
 0002:804B9A54       def_804B99E0
 0002:804B9A70       GXSetNumTexGens
 0002:804B9A94       GXSetMisc
 0002:804B9B20       GXFlush
 0002:804B9B7C       GXResetWriteGatherPipe
 0002:804B9BB0       __GXAbort
 0002:804B9D14       GXAbortFrame
 0002:804B9EC8       GXSetDrawSync
 0002:804B9F7C       GXSetDrawDone
 0002:804BA014       GXDrawDone
 0002:804BA0D4       GXPixModeSync
 0002:804BA0F8       GXTexModeSync
 0002:804BA11C       GXPokeAlphaMode
 0002:804BA12C       GXPokeAlphaRead
 0002:804BA144       GXPokeAlphaUpdate
 0002:804BA158       GXPokeBlendMode
 0002:804BA1B4       GXPokeColorUpdate
 0002:804BA1C8       GXPokeDstAlpha
 0002:804BA1E0       GXPokeDither
 0002:804BA1F4       GXPokeZMode
 0002:804BA210       GXPeekARGB
 0002:804BA228       GXPeekZ
 0002:804BA28C       GXTokenInterruptHandler
 0002:804BA354       GXFinishInterruptHandler
 0002:804BA3D4       __GXPEInit
 0002:804BA438       __GXSetDirtyState
 0002:804BA6B0       GXBegin
 0002:804BA7FC       __GXSendFlushPrim
 0002:804BA8D4       GXSetLineWidth
 0002:804BA908       GXSetPointSize
 0002:804BA93C       GXEnableTexOffsets
 0002:804BA978       GXSetCullMode
 0002:804BA9A0       GXSetCoPlanar
 0002:804BA9D4       __GXSetGenMode
 0002:804BA9F8       GXSetDispCopySrc
 0002:804BAA38       GXSetTexCopySrc
 0002:804BAA78       GXSetDispCopyDst
 0002:804BAA9C       GXSetTexCopyDst
 0002:804BABB8       GXSetDispCopyFrame2Field
 0002:804BABD8       GXSetCopyClamp
 0002:804BAC00       GXGetNumXfbLines
 0002:804BAC8C       GXGetYScaleFactor
 0002:804BAEBC       GXSetDispCopyYScale
 0002:804BAF88       GXSetCopyClear
 0002:804BB000       GXSetCopyFilter
 0002:804BB1E4       GXSetDispCopyGamma
 0002:804BB1F8       GXCopyDisp
 0002:804BB334       GXCopyTex
 0002:804BB48C       GXClearBoundingBox
 0002:804BB4C4       GXInitLightAttn
 0002:804BB4E0       GXInitLightSpot
 0002:804BB638       def_804BB550
 0002:804BB668       GXInitLightDistAttn
 0002:804BB738       GXInitLightPos
 0002:804BB748       GXInitLightDir
 0002:804BB764       GXInitSpecularDir
 0002:804BB870       GXInitSpecularDirHA
 0002:804BB89C       GXInitLightColor
 0002:804BB8A8       GXLoadLightObjImm
 0002:804BB924       GXSetChanAmbColor
 0002:804BB9FC       GXSetChanMatColor
 0002:804BBAD4       GXSetNumChans
 0002:804BBAF8       GXSetChanCtrl
 0002:804BBB9C       GXGetTexBufferSize
 0002:804BBBE0       def_804BBBB8
 0002:804BBCC0       __GetImageTileCount
 0002:804BBD04       def_804BBCDC
 0002:804BBD80       GXInitTexObj
 0002:804BBF28       def_804BBEC0
 0002:804BBF8C       GXInitTexObjCI
 0002:804BBFD4       GXInitTexObjLOD
 0002:804BC0D8       GXInitTexObjWrapMode
 0002:804BC104       GXGetTexObjAll
 0002:804BC168       GXGetTexObjWidth
 0002:804BC17C       GXGetTexObjHeight
 0002:804BC198       GXGetTexObjWrapS
 0002:804BC1A4       GXGetTexObjWrapT
 0002:804BC1B0       GXGetTexObjMipMap
 0002:804BC1BC       GXGetTexObjLODAll
 0002:804BC2A8       GXLoadTexObjPreLoaded
 0002:804BC40C       GXLoadTexObj
 0002:804BC460       GXInitTlutObj
 0002:804BC488       GXLoadTlut
 0002:804BC51C       GXInitTexCacheRegion
 0002:804BC5D0       GXInitTlutRegion
 0002:804BC5F0       GXInvalidateTexAll
 0002:804BC638       GXSetTexRegionCallback
 0002:804BC64C       GXSetTlutRegionCallback
 0002:804BC660       GXSetTexCoordScaleManually
 0002:804BC6DC       __SetSURegs
 0002:804BC76C       __GXSetSUTexRegs
 0002:804BC8D4       __GXSetTmemConfig
 0002:804BCC28       GXSetTevIndirect
 0002:804BCC90       GXSetIndTexMtx
 0002:804BCDE4       GXSetIndTexCoordScale
 0002:804BCEE8       GXSetIndTexOrder
 0002:804BCFB4       GXSetNumIndStages
 0002:804BCFD4       GXSetTevDirect
 0002:804BD01C       GXSetTevIndWarp
 0002:804BD070       nullsub_41
 0002:804BD074       __GXSetIndirectMask
 0002:804BD0A4       __GXFlushTextureState
 0002:804BD0C8       GXSetTevOp
 0002:804BD15C       GXSetTevColorIn
 0002:804BD19C       GXSetTevAlphaIn
 0002:804BD1DC       GXSetTevColorOp
 0002:804BD234       GXSetTevAlphaOp
 0002:804BD28C       GXSetTevColor
 0002:804BD2EC       GXSetTevColorS10
 0002:804BD350       GXSetTevKColor
 0002:804BD3AC       GXSetTevKColorSel
 0002:804BD3FC       GXSetTevKAlphaSel
 0002:804BD44C       GXSetTevSwapMode
 0002:804BD488       GXSetTevSwapModeTable
 0002:804BD504       GXSetAlphaCompare
 0002:804BD53C       GXSetZTexture
 0002:804BD5C8       GXSetTevOrder
 0002:804BD724       GXSetNumTevStages
 0002:804BD748       GXSetFog
 0002:804BD974       GXSetFogRangeAdj
 0002:804BDA98       GXSetBlendMode
 0002:804BDAE8       GXSetColorUpdate
 0002:804BDB14       GXSetAlphaUpdate
 0002:804BDB40       GXSetZMode
 0002:804BDB74       GXSetZCompLoc
 0002:804BDBA4       GXSetPixelFmt
 0002:804BDC4C       GXSetDither
 0002:804BDC78       GXSetDstAlpha
 0002:804BDCA8       GXSetFieldMask
 0002:804BDCDC       GXSetFieldMode
 0002:804BDEA8       GXCallDisplayList
 0002:804BDF1C       GXProject
 0002:804BE0A4       __GXSetProjection
 0002:804BE0E8       GXSetProjection
 0002:804BE14C       GXSetProjectionv
 0002:804BE198       GXGetProjectionv
 0002:804BE1D8       GXLoadPosMtxImm
 0002:804BE228       GXLoadNrmMtxImm
 0002:804BE280       GXSetCurrentMtx
 0002:804BE2A0       GXLoadTexMtxImm
 0002:804BE354       GXLoadTexMtxIndx
 0002:804BE3A4       __GXSetViewport
 0002:804BE434       GXSetViewport
 0002:804BE460       GXGetViewportv
 0002:804BE480       GXSetZScaleOffset
 0002:804BE4B0       GXSetScissor
 0002:804BE518       GXGetScissor
 0002:804BE560       GXSetScissorBoxOffset
 0002:804BE59C       GXSetClipMode
 0002:804BE5C4       __GXSetMatrixIndex
 0002:804BE64C       GXSetGPMetric
 0002:804BEB78       def_804BE774
 0002:804BEE6C       def_804BEB98
 0002:804BEE78       GXClearGPMetric
 0002:804BEE88       GXReadXfRasMetric
 0002:804BEF2C       __DVDFSInit
 0002:804BEF5C       DVDConvertPathToEntrynum
 0002:804BF264       DVDFastOpen
 0002:804BF2CC       DVDOpen
 0002:804BF578       AXFXReverbHiShutdown
 0002:804BF59C       entryToPath
 0002:804BF75C       DVDReadAsyncPrio
 0002:804BF82C       cbForReadAsync
 0002:804BF844       DVDReadPrio
 0002:804BF974       DVDOpenDir
 0002:804BFC0C       DVDReadDir
 0002:804BFCA0       StampCommand
 0002:804BFD54       nullsub_58
 0002:804BFD58       DVDInit
 0002:804BFEAC       stateReadingFST
 0002:804C0024       cbForStateReadingFST
 0002:804C01AC       cbForStateError
 0002:804C02BC       cbForStoreErrorCode1
 0002:804C02D0       cbForStoreErrorCode2
 0002:804C030C       CategorizeError
 0002:804C0318       DVDLowSetSpinupFlag
 0002:804C0400       cbForStoreErrorCode3
 0002:804C04C4       cbForStateGettingError
 0002:804C09C8       cbForUnrecoveredError
 0002:804C0BA8       cbForUnrecoveredErrorRetry
 0002:804C0C7C       cbForStateGoToRetry
 0002:804C0EBC       stateCheckID
 0002:804C11F4       cbForStateReadingTOC
 0002:804C1394       cbForStateReadingPartitionInfo
 0002:804C180C       cbForStateOpenPartition
 0002:804C1994       cbForStateOpenPartition2
 0002:804C1AF8       cbForStateCheckID1
 0002:804C1CC0       cbForStateCheckID2
 0002:804C1E54       stateCoverClosed
 0002:804C1EEC       def_804C1E88
 0002:804C1F18       ResetAlarmHandler
 0002:804C2168       cbForStateReset
 0002:804C224C       stateDownRotation
 0002:804C2314       cbForStateDownRotation
 0002:804C2554       stateCoverClosed_CMD
 0002:804C26CC       cbForStateCoverClosed
 0002:804C27A4       cbForPrepareCoverRegister
 0002:804C292C       CoverAlarmHandler
 0002:804C2950       stateReady
 0002:804C2C78       stateBusy
 0002:804C2D44       def_804C2CBC
 0002:804C31F8       def_804C2D64
 0002:804C3228       cbForStateBusy
 0002:804C3C08       DVDReadAbsAsyncPrio
 0002:804C3CEC       DVDInquiryAsync
 0002:804C3DC4       DVDGetCommandBlockStatus
 0002:804C3E8C       DVDGetDriveStatus
 0002:804C3F38       DVDResume
 0002:804C3F88       DVDCancelAsync
 0002:804C414C       def_804C40C8
 0002:804C42C4       def_804C3FD4
 0002:804C42EC       DVDCancel
 0002:804C43E0       __DVDGetCoverStatus
 0002:804C44A8       __DVDResetWithNoSpinup
 0002:804C44EC       DVDCheckDiskAsync
 0002:804C4704       def_804C4608
 0002:804C4728       __DVDPrepareResetAsync
 0002:804C4850       __DVDPrepareReset
 0002:804C4984       __DVDTestAlarm
 0002:804C49AC       nullsub_42
 0002:804C49B0       __DVDClearWaitingQueue
 0002:804C49E8       __DVDPushWaitingQueue
 0002:804C4A50       __DVDPopWaitingQueue
 0002:804C4AF0       __DVDCheckWaitingQueue
 0002:804C4B48       __DVDGetNextWaitingQueue
 0002:804C4BA8       __DVDDequeueWaitingQueue
 0002:804C4C08       cbForNandClose
 0002:804C4C34       cbForNandWrite
 0002:804C4C90       cbForNandSeek
 0002:804C4D58       cbForNandWrite0
 0002:804C4E78       cbForNandSeek2
 0002:804C4F34       cbForNandRead
 0002:804C501C       cbForNandSeek0
 0002:804C50BC       cbForNandSeek1
 0002:804C51BC       cbForNandOpen
 0002:804C52D8       cbForNandCreate
 0002:804C5380       cbForNandCreateDir
 0002:804C5414       cbForPrepareStatusRegister
 0002:804C54A4       __DVDStoreErrorCode
 0002:804C550C       DVDCompareDiskID
 0002:804C56CC       DVDSetAutoFatalMessaging
 0002:804C5754       lowCallback
 0002:804C5764       __DVDCheckDevice
 0002:804C59EC       doTransactionCallback
 0002:804C5AA4       doPrepareCoverRegisterCallback
 0002:804C5B60       DVDLowFinalize
 0002:804C5BB0       DVDLowInit
 0002:804C5E14       DVDLowReadDiskID
 0002:804C5F9C       DVDLowOpenPartition
 0002:804C6204       DVDLowOpenPartitionWithTmdAndTicketView
 0002:804C6468       DVDLowGetNoDiscBufferSizes
 0002:804C6674       DVDLowGetNoDiscOpenPartitionParams
 0002:804C690C       DVDLowClosePartition
 0002:804C6A70       DVDLowUnencryptedRead
 0002:804C6C04       DVDLowStopMotor
 0002:804C6D98       DVDLowInquiry
 0002:804C6F00       DVDLowRequestError
 0002:804C7074       DVDLowReset
 0002:804C71F0       DVDLowAudioBufferConfig
 0002:804C7384       DVDLowReportKey
 0002:804C7518       DVDLowSetMaximumRotation
 0002:804C7698       DVDLowRead
 0002:804C7848       DVDLowSeek
 0002:804C79C4       DVDLowGetCoverRegister
 0002:804C79E0       DVDLowPrepareCoverRegister
 0002:804C7B48       DVDLowPrepareStatusRegister
 0002:804C7CCC       DVDLowClearCoverInterrupt
 0002:804C7E7C       AIInitDMA
 0002:804C7EF8       AIStartDMA
 0002:804C7F0C       AIStopDMA
 0002:804C7F20       AIGetDMAStartAddr
 0002:804C7F38       AIGetDMALength
 0002:804C7F48       AISetDSPSampleRate
 0002:804C7FC0       AIInit
 0002:804C8140       __AIDHandler
 0002:804C81E8       __AICallbackStackSwitch
 0002:804C824C       __AI_SRC_INIT
 0002:804C8410       __AXRemoveFromStack
 0002:804C8494       AXFreeVoice
 0002:804C85AC       AXRegisterAuxACallback
 0002:804C863C       AXSetAuxCReturnVolume
 0002:804C8654       __AXSetPBDefault
 0002:804C8694       AXFXReverbHiInit
 0002:804C871C       j_AXFXReverbHiExpCallback
 0002:804C8720       AXFXReverbHiExpInit
 0002:804C88BC       AXFXReverbHiExpShutdown
 0002:804C8910       AXFXReverbHiExpCallback
 0002:804C8E2C       __AllocDelayLine
 0002:804C8FA0       __BzeroDelayLines
 0002:804C90C4       __FreeDelayLine
 0002:804C91D8       __InitParams
 0002:804C9534       FindContainHeap_
 0002:804C9674       MEMiInitHeapHead
 0002:804C9834       MEMiFinalizeHeap
 0002:804C99A0       AllocUsedBlockFromFreeBlock_
 0002:804C9BA4       AllocFromHead_
 0002:804C9C80       AllocFromTail_
 0002:804C9D48       RecycleRegion_
 0002:804C9EB0       MEMCreateExpHeapEx
 0002:804C9F90       MEMAllocFromExpHeapEx
 0002:804CA040       MEMFreeToExpHeap
 0002:804CA10C       MEMGetAllocatableSizeForExpHeapEx
 0002:804CA1E4       AllocatorAllocForExpHeap_
 0002:804CA1F4       AllocatorFreeForExpHeap_
 0002:804CA1FC       MEMAllocFromAllocator
 0002:804CA20C       MEMFreeToAllocator
 0002:804CA21C       MEMInitAllocatorForExpHeap
 0002:804CA238       MEMInitList
 0002:804CA250       MEMAppendListObject
 0002:804CA2C0       MEMRemoveListObject
 0002:804CA32C       MEMGetNextListObject
 0002:804CB28C       DSPCheckMailToDSP
 0002:804CB29C       DSPCheckMailFromDSP
 0002:804CB2AC       DSPReadMailFromDSP
 0002:804CB2C0       DSPSendMailToDSP
 0002:804CB2D4       DSPAssertInt
 0002:804CB310       DSPInit
 0002:804CB3D0       __DSP_debug_printf
 0002:804CB420       __DSP_exec_task
 0002:804CB5C4       __DSP_boot_task
 0002:804CB750       __DSP_remove_task
 0002:804CB7E4       nandCreate
 0002:804CB90C       NANDCreate
 0002:804CB980       NANDPrivateCreateDir
 0002:804CB9F4       NANDPrivateCreateDirAsync
 0002:804CBA6C       NANDDelete
 0002:804CBB1C       NANDPrivateDelete
 0002:804CBBB4       NANDPrivateDeleteAsync
 0002:804CBC74       NANDWrite
 0002:804CBCDC       NANDWriteAsync
 0002:804CBE34       NANDSeek
 0002:804CBED4       NANDSeekAsync
 0002:804CBF84       nandCreateDir
 0002:804CC19C       nandMove
 0002:804CC344       NANDGetStatus
 0002:804CC3A8       NANDGetLength
 0002:804CC430       nandGetFileStatusAsyncCallback
 0002:804CC4A4       NANDGetLengthAsync
 0002:804CC534       nandComposePerm
 0002:804CC588       nandSplitPerm
 0002:804CC614       nandGetStatus
 0002:804CC768       nandGetStatusCallback
 0002:804CC840       NANDPrivateGetStatus
 0002:804CC8A4       NANDPrivateGetStatusAsync
 0002:804CC938       nandOpen
 0002:804CCA4C       NANDOpen
 0002:804CCAD8       NANDPrivateOpen
 0002:804CCB64       NANDOpenAsync
 0002:804CCBDC       NANDPrivateOpenAsync
 0002:804CCC54       nandOpenCallback
 0002:804CCCCC       NANDClose
 0002:804CCD38       NANDCloseAsync
 0002:804CCDC0       NANDPrivateSafeOpenAsync
 0002:804CCDEC       nandSafeOpenAsync
 0002:804CCF54       nandSafeOpenCallback
 0002:804CD344       nandReadOpenCallback
 0002:804CD3E4       nandSafeCloseAsync
 0002:804CD4E0       nandSafeCloseCallback
 0002:804CD6A4       nandReadCloseCallback
 0002:804CD700       nandCloseCallback
 0002:804CD75C       nandRemoveTailToken
 0002:804CD830       nandGetHeadToken
 0002:804CD904       nandGetRelativeName
 0002:804CD99C       nandConvertPath
 0002:804CDAD8       nandIsPrivatePath
 0002:804CDB0C       nandIsUnderPrivatePath
 0002:804CDB78       nullsub_43
 0002:804CDB7C       nandConvertErrorCode
 0002:804CDCDC       nandGenerateAbsPath
 0002:804CDDA4       nandGetParentDirectory
 0002:804CDE48       NANDInit
 0002:804CDF74       nandOnShutdown
 0002:804CE040       nandShutdownCallback
 0002:804CE04C       NANDGetHomeDir
 0002:804CE0A0       nandCallback
 0002:804CE0DC       nandGetType
 0002:804CE3B0       NANDPrivateGetTypeAsync
 0002:804CE3F8       nandGetTypeCallback
 0002:804CE47C       NANDInitBanner
 0002:804CE558       NANDSecretGetUsage
 0002:804CE610       nandCalcUsage
 0002:804CE6CC       NANDCheck
 0002:804CE7D4       reserveFileDescriptor
 0002:804CE828       NANDLoggingAddMessageAsync
 0002:804CE920       asyncRoutine
 0002:804CEDA4       SCInit
 0002:804CEE44       SCCheckStatus
 0002:804CEF60       SCReloadConfFileAsync
 0002:804CF074       OpenCallbackFromReload
 0002:804CF144       ReadCallbackFromReload
 0002:804CF22C       CloseCallbackFromReload
 0002:804CF2B8       FinishFromReload
 0002:804CF3F4       j_FinishFromReload
 0002:804CF3F8       ParseConfBuf
 0002:804CF644       UnpackItem
 0002:804CF7DC       DeleteItemByID
 0002:804CF96C       CreateItemByID
 0002:804CFBE4       SCFindByteArrayItem
 0002:804CFCC4       SCReplaceByteArrayItem
 0002:804CFDE8       SCReplaceIntegerItem
 0002:804CFF00       SCFindS8Item
 0002:804D00A8       SCFindU32Item
 0002:804D017C       SCReplaceU8Item
 0002:804D01B4       SCFlushAsync
 0002:804D03D0       MyNandCallback
 0002:804D06F0       def_804D040C
 0002:804D0708       SCGetAspectRatio
 0002:804D075C       SCGetDisplayOffsetH
 0002:804D07D0       SCGetEuRgb60Mode
 0002:804D0824       SCGetIdleMode
 0002:804D0830       SCGetLanguage
 0002:804D089C       SCGetProgressiveMode
 0002:804D08F0       SCGetScreenSaverMode
 0002:804D0944       SCGetSoundMode
 0002:804D09A8       SCGetCounterBias
 0002:804D09E8       SCSetBtDeviceInfoArray
 0002:804D0A00       SCSetBtCmpDevInfoArray
 0002:804D0A18       SCGetBtDpdSensibility
 0002:804D0A80       SCGetWpadMotorMode
 0002:804D0ADC       SCGetWpadSensorBarPosition
 0002:804D0B30       SCGetWpadSpeakerVolume
 0002:804D0B8C       __SCF1
 0002:804D0CF8       SCGetProductArea
 0002:804D0D7C       SCGetProductGameRegion
 0002:804D0E00       ARCInitHandle
 0002:804D0EA0       ARCOpen
 0002:804D1144       ARCFastOpen
 0002:804D1194       ARCConvertPathToEntrynum
 0002:804D13F8       entryToPath_1
 0002:804D15C0       ARCGetStartAddrInMem
 0002:804D15E4       ARCChangeDir
 0002:804D163C       ARCOpenDir
 0002:804D16B8       ARCReadDir
 0002:804D1778       ESP_InitLib
 0002:804D17CC       ESP_CloseLib
 0002:804D1814       ESP_LaunchTitle
 0002:804D18A8       ESP_GetTicketViews
 0002:804D19C0       ESP_DiGetTicketView
 0002:804D1A64       ESP_DiGetTmd
 0002:804D1B54       ESP_GetTmdView
 0002:804D1C68       ESP_GetDataDir
 0002:804D1D00       ESP_GetTitleId
 0002:804D1D98       ESP_GetConsumption
 0002:804D1E6C       IPCInit
 0002:804D1EB8       IPCReInit
 0002:804D1F00       IPCReadReg
 0002:804D1F10       IPCWriteReg
 0002:804D1F38       strnlen
 0002:804D1F64       IpcReplyHandler
 0002:804D21BC       IPCInterruptHandler
 0002:804D2368       IPCCltInit
 0002:804D241C       IPCCltReInit
 0002:804D2490       __ios_Ipc2
 0002:804D26D0       IOS_OpenAsync
 0002:804D27E8       IOS_Open
 0002:804D2908       IOS_CloseAsync
 0002:804D29C8       IOS_Close
 0002:804D2A70       IOS_ReadAsync
 0002:804D2B70       IOS_Read
 0002:804D2C78       IOS_WriteAsync
 0002:804D2D78       IOS_Write
 0002:804D2E80       IOS_SeekAsync
 0002:804D2F60       IOS_Seek
 0002:804D3048       IOS_IoctlAsync
 0002:804D3180       IOS_Ioctl
 0002:804D32B0       __ios_Ioctlv
 0002:804D33EC       IOS_IoctlvAsync
 0002:804D34D0       IOS_Ioctlv
 0002:804D35AC       IOS_IoctlvReboot
 0002:804D38A8       iosCreateHeap
 0002:804D39D8       __iosAlloc
 0002:804D3BDC       j___iosAlloc
 0002:804D3BE0       iosFree
 0002:804D3DCC       IPCiProfInit
 0002:804D3E84       IPCiProfQueueReq
 0002:804D3F04       IPCiProfAck
 0002:804D3F14       IPCiProfReply
 0002:804D3F90       ISFS_OpenLib
 0002:804D40B8       _isfsFuncCb
 0002:804D4238       ISFS_CreateDir
 0002:804D432C       ISFS_CreateDirAsync
 0002:804D4420       ISFS_ReadDir
 0002:804D4574       ISFS_ReadDirAsync
 0002:804D46BC       ISFS_GetAttr
 0002:804D4814       ISFS_GetAttrAsync
 0002:804D4948       ISFS_Delete
 0002:804D4A20       ISFS_DeleteAsync
 0002:804D4AF0       ISFS_Rename
 0002:804D4BF4       ISFS_RenameAsync
 0002:804D4CF8       ISFS_GetUsage
 0002:804D4E30       ISFS_CreateFile
 0002:804D4F24       ISFS_CreateFileAsync
 0002:804D5018       ISFS_Open
 0002:804D50E0       ISFS_OpenAsync
 0002:804D5198       ISFS_GetFileStats
 0002:804D5268       ISFS_GetFileStatsAsync
 0002:804D5328       j_IOS_Seek
 0002:804D532C       ISFS_SeekAsync
 0002:804D53B8       ISFS_Write
 0002:804D53D8       ISFS_WriteAsync
 0002:804D5540       j_IOS_Close
 0002:804D5544       ISFS_CloseAsync
 0002:804D55C8       ISFS_ShutdownAsync
 0002:804D5658       __PADDisableRecalibration
 0002:804D56B4       noFree
 0002:804D5714       OnShutdown_2
 0002:804D5A60       WPADiSendData
 0002:804D5C3C       WPADiRadioSensitivity
 0002:804D5D40       IsControllerDataChanged
 0002:804D68EC       CheckButtonCombination
 0002:804D69F8       WPADiCheckContInputs
 0002:804D6B7C       WPADiManageHandler
 0002:804D72F8       ShutdownHandler0
 0002:804D7318       __ClearControlBlock
 0002:804D758C       WPADiInitSub
 0002:804D779C       WPADInit
 0002:804D780C       j_WUDStartFastSyncSimple
 0002:804D7810       j_WUDStopSyncSimple
 0002:804D7814       j_WUDSetSyncSimpleCallback
 0002:804D7818       j_WUDRegisterAllocator
 0002:804D7820       j_WUDGetStatus
 0002:804D7824       WPADGetSpeakerVolume
 0002:804D7858       setupCallback
 0002:804D792C       abortConnCallback
 0002:804D7A10       firmwareCheckCallback
 0002:804D82F8       WPADiRetrieveChannel
 0002:804D83F8       WPADiConnCallback
 0002:804D886C       WPADiRecvCallback
 0002:804D88D8       WPADGetAccGravityUnit
 0002:804D89B0       CloseCallback
 0002:804D89D4       WPADDisconnect
 0002:804D8A98       WPADSetAutoSleepTime
 0002:804D8ACC       WPADProbe
 0002:804D8B58       WPADSetSamplingCallback
 0002:804D8BC0       WPADSetConnectCallback
 0002:804D8C28       WPADSetExtensionCallback
 0002:804D8C90       WPADGetDataFormat
 0002:804D8CD8       WPADSetDataFormat
 0002:804D8D8C       __infoCallback
 0002:804D8DE0       WPADGetInfoAsync
 0002:804D9000       WPADControlMotor
 0002:804D9100       WPADIsMotorEnabled
 0002:804D9134       WPADControlLed
 0002:804D931C       WPADSaveConfig
 0002:804D93C8       WPADRead
 0002:804D9568       WPADSetAutoSamplingBuf
 0002:804D96E4       WPADiExcludeButton
 0002:804D97A8       WPADiCopyOut
 0002:804D9928       WPADIsSpeakerEnabled
 0002:804D996C       WPADControlSpeaker
 0002:804DAFBC       WPADSetSpeakerVolume
 0002:804DB00C       IsBusyStream
 0002:804DB144       WPADCanSendStreamData
 0002:804DB1C8       WPADSendStreamData
 0002:804DB3E0       WPADIsDpdEnabled
 0002:804DB424       __dpdCb
 0002:804DB454       WPADControlDpd
 0002:804DC4D0       __SendData
 0002:804DC704       WPADiSendSetReportType
 0002:804DC7E0       def_804DC768
 0002:804DC924       WPADiSendWriteDataCmd
 0002:804DCAD8       WPADiSendWriteData
 0002:804DCC90       WPADiSendReadData
 0002:804DCE3C       WPADiClearQueue
 0002:804DCE9C       abortInitExtension
 0002:804DCFEC       getDevConfig
 0002:804DDAD4       getExtConfig
 0002:804DDFC0       getExtType
 0002:804DE2B0       getGameInfo
 0002:804DE440       WPADiHIDParser
 0002:804DE4F0       __a1_20_status_report
 0002:804DE910       __a1_21_user_data
 0002:804DED18       __a1_22_ack
 0002:804DEF5C       __parse_dpd_data
 0002:804DF3C4       __a1_30_data_type
 0002:804DF57C       __a1_31_data_type
 0002:804DF7BC       __a1_32_data_type
 0002:804DFF98       __a1_33_data_type
 0002:804E020C       __a1_34_data_type
 0002:804E0418       __a1_35_data_type
 0002:804E0C98       __a1_36_data_type
 0002:804E0ED0       __a1_37_data_type
 0002:804E175C       nullsub_116
 0002:804E1760       __a1_3e_data_type
 0002:804E1D44       __a1_3f_data_type
 0002:804E2338       nullsub_115
 0002:804E233C       WPADiCreateKey
 0002:804E2A2C       WPADiCreateKeyFor3rd
 0002:804E3124       WPADiDecode
 0002:804E3434       EUARTInit
 0002:804E3530       InitializeUART
 0002:804E3578       WriteUARTN
 0002:804E37A4       USB_LOG
 0002:804E384C       USB_ERR
 0002:804E38F8       IUSB_OpenLib
 0002:804E39F8       _intrBlkCtrlIsoCb
 0002:804E3BA0       IUSB_OpenDeviceIds
 0002:804E3CE4       IUSB_CloseDeviceAsync
 0002:804E3E08       __IntrBlkMsgInt
 0002:804E4144       IUSB_ReadIntrMsgAsync
 0002:804E41B8       IUSB_WriteBlkMsgAsync
 0002:804E42A0       __CtrlMsgInt
 0002:804E4844       IUSB_WriteCtrlMsgAsync
 0002:804E48D0       App_MEMalloc
 0002:804E4920       App_MEMfree
 0002:804E4970       SyncFlushCallback
 0002:804E49E8       DeleteFlushCallback
 0002:804E4A40       ShutFlushCallback
 0002:804E4A8C       InitFlushCallback
 0002:804E4AD8       WUDiIsSyncDisabled
 0002:804E4C38       WUDiSaveDeviceToNand
 0002:804E4D44       WUDiSyncDone
 0002:804E4EB4       SyncHandler
 0002:804E5814       WUDiTerminateDevice
 0002:804E58AC       WUDiDeleteDevice
 0002:804E5960       DeleteAllHandler
 0002:804E5AA0       def_804E59AC
 0002:804E5ADC       WUDiClearUnregisteredDevice
 0002:804E5BF0       EnableStackHandler
 0002:804E5DE4       WUDiGetRegisteredDevice
 0002:804E61A0       InitHandler
 0002:804E62A4       ShutdownHandler
 0002:804E6388       InitCore
 0002:804E6714       WUDInit
 0002:804E680C       WUDRegisterAllocator
 0002:804E685C       WUDShutdown
 0002:804E6A7C       WUDGetStatus
 0002:804E6AB8       WUDGetBufferStatus
 0002:804E6B00       WUDSetSniffMode
 0002:804E6B6C       WUDSetSyncSimpleCallback
 0002:804E6BC8       StartSyncDevice
 0002:804E6D14       WUDStartFastSyncSimple
 0002:804E6D54       WUDCancelSyncDevice
 0002:804E6DF4       WUDStopSyncSimple
 0002:804E6E8C       WUDSetDisableChannel
 0002:804E6F78       WUDSetHidRecvCallback
 0002:804E6FD4       WUDSetHidConnCallback
 0002:804E7030       WUDSetVisibility
 0002:804E7088       j_WUDiInitSub
 0002:804E708C       remove_patch_cb
 0002:804E7204       write_patch_cb
 0002:804E7434       install_patch_cb
 0002:804E7508       WUDiInitSub
 0002:804E7698       WUDiRegisterDevice
 0002:804E77C8       WUDiRemoveDevice
 0002:804E7924       WUDiGetDevInfo
 0002:804E79FC       WUDiGetNewDevInfo
 0002:804E7ABC       WUDiMoveTopSmpDevInfoPtr
 0002:804E7BD4       WUDiMoveBottomSmpDevInfoPtr
 0002:804E7CEC       WUDiMoveTopOfDisconnectedSmpDevice
 0002:804E7E44       WUDiMoveTopStdDevInfoPtr
 0002:804E7F5C       WUDiMoveBottomStdDevInfoPtr
 0002:804E8074       WUDiMoveTopOfDisconnectedStdDevice
 0002:804E81CC       WUDIsBusy
 0002:804E8240       CleanupCallback
 0002:804E8260       bta_hh_co_close
 0002:804E8274       WUDSecurityCallback
 0002:804E87B0       def_804E82CC
 0002:804E87C8       WUDSearchCallback
 0002:804E89D4       WUDVendorSpecificCallback
 0002:804E8CC8       WUDDeviceStatusCallback
 0002:804E8D18       WUDStoredLinkKeyCallback
 0002:804E9004       WUDPowerManagerCallback
 0002:804E9140       _WUDGetDevAddr
 0002:804E9194       _WUDGetNotAckedSize
 0002:804E924C       _WUDGetLinkNumber
 0002:804E9288       WUDHidHostCallback
 0002:804E9804       def_804E92D0
 0002:804E9820       bta_hh_co_data
 0002:804E98D4       gki_init_free_queue
 0002:804E9AF4       gki_buffer_init
 0002:804E9DA0       GKI_init_q
 0002:804E9DB4       GKI_getbuf
 0002:804E9F54       GKI_getpoolbuf
 0002:804EA03C       GKI_freebuf
 0002:804EA1AC       GKI_get_buf_size
 0002:804EA1F0       GKI_send_msg
 0002:804EA3AC       GKI_read_mbox
 0002:804EA45C       GKI_enqueue
 0002:804EA598       GKI_enqueue_head
 0002:804EA6D8       GKI_dequeue
 0002:804EA778       GKI_remove_from_queue
 0002:804EA844       GKI_getnext
 0002:804EA860       GKI_queue_is_empty
 0002:804EA870       GKI_create_pool
 0002:804EABB8       GKI_delete_pool
 0002:804EAD18       gki_timers_init
 0002:804EADD4       GKI_get_tick_count
 0002:804EADE8       GKI_start_timer
 0002:804EAF38       GKI_stop_timer
 0002:804EAFD4       GKI_update_timer_list
 0002:804EB060       GKI_add_to_timer_list
 0002:804EB14C       GKI_remove_from_timer_list
 0002:804EB270       GKI_init
 0002:804EB300       GKI_shutdown
 0002:804EB3A8       nullsub_44
 0002:804EB3AC       nullsub_45
 0002:804EB3B0       nullsub_46
 0002:804EB3B4       nullsub_47
 0002:804EB3B8       GKI_send_event
 0002:804EB464       GKI_enable
 0002:804EB488       GKI_disable
 0002:804EB4CC       nullsub_48
 0002:804EB4D0       GKI_os_malloc
 0002:804EB4FC       j_App_MEMfree
 0002:804EB500       hcisu_h2_usb_cback
 0002:804EB524       hcisu_h2_receive_msg
 0002:804EB8BC       hcisu_h2_send_msg_now
 0002:804EBA68       hcisu_h2_init
 0002:804EBA94       hcisu_h2_open
 0002:804EBAFC       hcisu_h2_close
 0002:804EBB30       hcisu_h2_send
 0002:804EBB60       hcisu_h2_handle_event
 0002:804EBBA8       uusb_CloseDeviceCB
 0002:804EBC3C       uusb_ReadIntrDataCB
 0002:804EBD50       uusb_ReadBulkDataCB
 0002:804EBEEC       uusb_issue_intr_read
 0002:804EBFB8       uusb_WriteCtrlDataCB
 0002:804EC0A4       uusb_WriteBulkDataCB
 0002:804EC184       UUSB_Register
 0002:804EC38C       UUSB_Open
 0002:804EC49C       UUSB_Write
 0002:804EC6B0       UUSB_Close
 0002:804EC75C       UUSB_Unregister
 0002:804EC7A0       bte_hcisu_send
 0002:804EC7C0       bte_hcisu_task
 0002:804EC824       bte_hcisu_close
 0002:804EC848       bta_ci_hci_msg_handler
 0002:804EC884       LogMsg
 0002:804EC940       LogMsg_6
 0002:804EC9E8       BTUInterruptHandler
 0002:804ECA00       BTA_Init
 0002:804ECADC       BTA_CleanUp
 0002:804ECB10       bta_usb_close_evt
 0002:804ECB40       btu_task_init
 0002:804ECB80       btu_task_msg_handler
 0002:804ECF0C       btu_start_timer
 0002:804ECF7C       btu_stop_timer
 0002:804ECF90       bdcpy
 0002:804ECFC4       bdcmp
 0002:804ED064       bta_sys_rm_register
 0002:804ED074       bta_sys_compress_register
 0002:804ED084       bta_sys_pm_register
 0002:804ED094       bta_sys_conn_open
 0002:804ED158       bta_sys_conn_close
 0002:804ED21C       bta_sys_sco_close
 0002:804ED250       bta_sys_idle
 0002:804ED284       bta_sys_busy
 0002:804ED2B8       bta_sys_init
 0002:804ED31C       bta_sys_event
 0002:804ED408       bta_sys_timer_update
 0002:804ED428       bta_sys_register
 0002:804ED43C       bta_sys_sendmsg
 0002:804ED458       bta_sys_start_timer
 0002:804ED478       bta_sys_stop_timer
 0002:804ED48C       bta_sys_disable
 0002:804ED4FC       ptim_init
 0002:804ED548       ptim_timer_update
 0002:804ED5FC       ptim_start_timer
 0002:804ED69C       ptim_stop_timer
 0002:804ED720       bta_dm_enable
 0002:804ED830       bta_dm_disable
 0002:804ED8E0       bta_dm_disable_timer_cback
 0002:804ED9A4       bta_dm_set_visibility
 0002:804ED9EC       bta_dm_bond
 0002:804EDA5C       bta_dm_pin_reply
 0002:804EDAF8       bta_dm_auth_reply
 0002:804EDBCC       bta_dm_search_start
 0002:804EDC2C       bta_dm_search_cancel
 0002:804EDCB0       bta_dm_discover
 0002:804EDDC4       bta_dm_inq_cmpl
 0002:804EDFE8       bta_dm_rmt_name
 0002:804EE154       bta_dm_disc_rmt_name
 0002:804EE1B8       bta_dm_sdp_result
 0002:804EE420       bta_dm_search_cmpl
 0002:804EE438       bta_dm_disc_result
 0002:804EE488       bta_dm_search_result
 0002:804EE510       bta_dm_search_timer_cback
 0002:804EE55C       bta_dm_free_sdp_db
 0002:804EE5A0       bta_dm_queue_search
 0002:804EE5E8       bta_dm_queue_disc
 0002:804EE630       bta_dm_search_cancel_cmpl
 0002:804EE6B8       bta_dm_search_cancel_transac_cmpl
 0002:804EE714       bta_dm_search_cancel_notify
 0002:804EE72C       bta_dm_find_services
 0002:804EE8CC       bta_dm_discover_next_device
 0002:804EE9AC       bta_dm_sdp_callback
 0002:804EE9F4       bta_dm_inq_results_cb
 0002:804EEA84       bta_dm_inq_cmpl_cb
 0002:804EEAD0       bta_dm_service_search_remname_cback
 0002:804EEB10       bta_dm_remname_cback
 0002:804EEB9C       bta_dm_disc_remname_cback
 0002:804EEC24       j_BTM_CancelRemoteDeviceName
 0002:804EEC28       bta_dm_authorize_cback
 0002:804EECF0       bta_dm_pinname_cback
 0002:804EEDB0       bta_dm_pin_cback
 0002:804EEEE8       bta_dm_new_link_key_cback
 0002:804EEF84       bta_dm_authentication_complete_cback
 0002:804EF008       bta_dm_local_addr_cback
 0002:804EF030       bta_dm_signal_strength
 0002:804EF06C       bta_dm_signal_strength_timer_cback
 0002:804EF160       bta_dm_acl_change_cback
 0002:804EF1D0       bta_dm_acl_change
 0002:804EF450       bta_dm_immediate_disable
 0002:804EF46C       bta_dm_rssi_cback
 0002:804EF4D8       bta_dm_link_quality_cback
 0002:804EF544       bta_dm_l2cap_server_compress_cback
 0002:804EF628       bta_dm_compress_cback
 0002:804EF860       bta_dm_rm_cback
 0002:804EF968       bta_dm_keep_acl
 0002:804EFA08       nullsub_127
 0002:804EFA0C       bta_dm_send_hci_reset
 0002:804EFA5C       BTA_EnableBluetooth
 0002:804EFAE4       BTA_DisableBluetooth
 0002:804EFB1C       BTA_DmIsDeviceUp
 0002:804EFB54       BTA_DmSetDeviceName
 0002:804EFBB8       BTA_DmSetVisibility
 0002:804EFC10       BTA_DmSearch
 0002:804EFC94       BTA_DmSearchCancel
 0002:804EFCCC       BTA_DmPinReply
 0002:804EFD58       BTA_DmAddDevice
 0002:804EFE48       BTA_DmRemoveDevice
 0002:804EFE90       BTA_DmSendHciReset
 0002:804EFEC8       bta_dm_sm_execute
 0002:804EFF60       bta_dm_search_sm_execute
 0002:804F0028       bta_dm_init_pm
 0002:804F0090       bta_dm_disable_pm
 0002:804F00A8       bta_dm_pm_cback
 0002:804F0428       bta_dm_pm_set_mode
 0002:804F07A8       bta_dm_pm_btm_cback
 0002:804F0820       bta_dm_pm_timer_cback
 0002:804F0918       bta_dm_pm_btm_status
 0002:804F0A38       bta_dm_pm_timer
 0002:804F0A44       bta_hh_api_enable
 0002:804F0BB8       bta_hh_api_disable
 0002:804F0CBC       bta_hh_disc_cmpl
 0002:804F0D60       bta_hh_sdp_cback
 0002:804F0E94       bta_hh_start_sdp
 0002:804F1028       bta_hh_sdp_cmpl
 0002:804F1190       bta_hh_api_disc_act
 0002:804F11F8       bta_hh_open_cmpl_act
 0002:804F1320       bta_hh_open_act
 0002:804F13D8       bta_hh_data_act
 0002:804F1430       bta_hh_handsk_act
 0002:804F14C0       def_804F1484
 0002:804F1654       def_804F14F4
 0002:804F1698       bta_hh_ctrl_dat_act
 0002:804F1734       def_804F16F8
 0002:804F1818       def_804F17DC
 0002:804F1890       bta_hh_close_act
 0002:804F1A90       bta_hh_get_dscp_act
 0002:804F1AAC       bta_hh_maint_dev_act
 0002:804F1C10       bta_hh_get_acl_q_info
 0002:804F1D2C       bta_hh_write_dev_act
 0002:804F1EF4       bta_hh_cback
 0002:804F1FA0       def_804F1F54
 0002:804F213C       def_804F1FCC
 0002:804F218C       BTA_HhEnable
 0002:804F2214       BTA_HhDisable
 0002:804F224C       BTA_HhClose
 0002:804F22B0       BTA_HhOpen
 0002:804F2364       BTA_HhSendData
 0002:804F23F4       BTA_HhAddDev
 0002:804F249C       BTA_HhRemoveDev
 0002:804F2508       BTA_HhGetAclQueueInfo
 0002:804F255C       bta_hh_sm_execute
 0002:804F28B0       bta_hh_hdl_event
 0002:804F29FC       bta_hh_evt_code
 0002:804F2AA8       def_804F2A24
 0002:804F2AB0       bta_hh_find_cb
 0002:804F2BEC       bta_hh_clean_up_kdev
 0002:804F2C6C       bta_hh_add_device_to_list
 0002:804F2D28       bta_hh_tod_spt
 0002:804F2D7C       bta_hh_trace_dev_db
 0002:804F2E5C       btm_acl_init
 0002:804F2E78       btm_handle_to_acl_index
 0002:804F2EFC       btm_acl_created
 0002:804F3210       btm_acl_removed
 0002:804F32D4       btm_acl_device_down
 0002:804F3338       BTM_SwitchRole
 0002:804F3554       btm_acl_encrypt_change
 0002:804F36C4       BTM_SetLinkPolicy
 0002:804F38B4       BTM_SetDefaultLinkPolicy
 0002:804F38C4       btm_read_link_policy_complete
 0002:804F39C8       btm_read_remote_version_complete
 0002:804F3A54       btm_read_remote_features_complete
 0002:804F3C80       BTM_SetDefaultLinkSuperTout
 0002:804F3C90       BTM_IsAclConnectionUp
 0002:804F3D68       BTM_GetNumAclLinks
 0002:804F3DC4       btm_get_acl_disc_reason_code
 0002:804F3DD4       BTM_GetHCIConnHandle
 0002:804F3E70       btm_process_clk_off_comp_evt
 0002:804F3F0C       btm_acl_role_changed
 0002:804F4100       btm_acl_timeout
 0002:804F415C       btm_get_max_packet_size
 0002:804F42FC       BTM_AclRegisterForChanges
 0002:804F4340       btm_qos_setup_complete
 0002:804F4418       BTM_ReadRSSI
 0002:804F4554       BTM_ReadLinkQuality
 0002:804F4690       btm_read_rssi_complete
 0002:804F47AC       btm_read_link_quality_complete
 0002:804F48C4       btm_remove_acl
 0002:804F4980       btm_chg_all_acl_pkt_types
 0002:804F4BA0       BTM_SecAddDevice
 0002:804F4D28       BTM_SecDeleteDevice
 0002:804F4DD4       BTM_SecReadDevName
 0002:804F4E74       btm_sec_alloc_dev
 0002:804F4F94       btm_find_dev_by_handle
 0002:804F504C       btm_find_dev
 0002:804F50D4       btm_find_oldest_dev
 0002:804F526C       btm_dev_init
 0002:804F530C       btm_db_reset
 0002:804F53BC       BTM_DeviceReset
 0002:804F5458       BTM_SendHciReset
 0002:804F5500       BTM_IsDeviceUp
 0002:804F551C       BTM_SetAfhChannels
 0002:804F560C       btm_dev_timeout
 0002:804F58A4       btm_reset_complete
 0002:804F5A68       btm_read_hci_buf_size_complete
 0002:804F5B30       btm_read_local_version_complete
 0002:804F5BEC       btm_read_local_features_complete
 0002:804F60E8       BTM_SetLocalDeviceName
 0002:804F61A0       btm_read_local_name_complete
 0002:804F622C       BTM_ReadLocalDeviceAddr
 0002:804F626C       btm_read_local_addr_complete
 0002:804F62B4       BTM_ReadLocalVersion
 0002:804F6300       BTM_SetDeviceClass
 0002:804F6380       BTM_ReadDeviceClass
 0002:804F6390       BTM_ReadLocalFeatures
 0002:804F63A0       BTM_RegisterForDeviceStatusNotif
 0002:804F63B8       BTM_VendorSpecificCommand
 0002:804F64B4       btm_vsc_complete
 0002:804F6520       BTM_RegisterForVSEvents
 0002:804F6558       btm_vendor_specific_evt
 0002:804F65F0       BTM_WritePageTimeout
 0002:804F6690       BTM_ReadStoredLinkKey
 0002:804F6768       BTM_WriteStoredLinkKey
 0002:804F6838       BTM_DeleteStoredLinkKey
 0002:804F6908       btm_read_stored_link_key_complete
 0002:804F6984       btm_write_stored_link_key_complete
 0002:804F69E0       btm_delete_stored_link_key_complete
 0002:804F6A48       btm_return_link_keys_evt
 0002:804F6BD4       btm_report_device_status
 0002:804F6BF4       btm_discovery_db_init
 0002:804F6C6C       btm_discovery_db_reset
 0002:804F6D24       nullsub_49
 0002:804F6D28       BTM_SetDiscoverability
 0002:804F6FAC       BTM_SetInquiryScanType
 0002:804F705C       BTM_SetPageScanType
 0002:804F710C       BTM_SetInquiryMode
 0002:804F71A4       BTM_SetConnectability
 0002:804F732C       BTM_IsInquiryActive
 0002:804F733C       BTM_CancelInquiry
 0002:804F7444       BTM_StartInquiry
 0002:804F75F8       BTM_ReadRemoteDeviceName
 0002:804F76E0       BTM_CancelRemoteDeviceName
 0002:804F7758       BTM_InqDbRead
 0002:804F7818       BTM_InqDbFirst
 0002:804F78D0       BTM_InqDbNext
 0002:804F7A0C       BTM_ClearInqDb
 0002:804F7ADC       btm_inq_db_reset
 0002:804F7C74       nullsub_50
 0002:804F7C78       btm_inq_find_bdaddr
 0002:804F7D54       btm_inq_db_new
 0002:804F7E58       btm_set_inq_event_filter
 0002:804F7F3C       btm_event_filter_complete
 0002:804F815C       btm_process_inq_results
 0002:804F83D4       btm_process_inq_complete
 0002:804F84D8       btm_initiate_rem_name
 0002:804F8628       btm_process_remote_name
 0002:804F8780       btm_inq_rmt_name_failed
 0002:804F87C0       btm_init
 0002:804F881C       BTM_PmRegister
 0002:804F88D8       BTM_SetPowerMode
 0002:804F8AA8       BTM_ReadPowerMode
 0002:804F8B60       btm_pm_reset
 0002:804F8BD8       btm_pm_sm_alloc
 0002:804F8C28       btm_pm_compare_modes
 0002:804F8E44       btm_pm_get_set_mode
 0002:804F8FA4       btm_pm_snd_md_req
 0002:804F91D8       btm_pm_proc_cmd_status
 0002:804F9288       btm_pm_proc_mode_change
 0002:804F94B0       btm_sco_init
 0002:804F94F4       btm_esco_conn_rsp
 0002:804F96D0       btm_sco_chk_pend_unpark
 0002:804F985C       btm_sco_conn_req
 0002:804F9A3C       btm_sco_connected
 0002:804F9BDC       BTM_RemoveSco
 0002:804F9C94       btm_remove_sco_links
 0002:804F9D18       btm_sco_removed
 0002:804F9E2C       btm_sco_acl_removed
 0002:804F9EE0       j_GKI_freebuf
 0002:804F9EE4       BTM_ChangeEScoLinkParms
 0002:804FA08C       btm_esco_proc_conn_chg
 0002:804FA190       btm_is_sco_active
 0002:804FA200       btm_num_sco_links_active
 0002:804FA260       btm_is_sco_active_by_bdaddr
 0002:804FA2E8       BTM_SecRegister
 0002:804FA360       BTM_SecAddRmtNameNotifyCallback
 0002:804FA3B0       BTM_SecDeleteRmtNameNotifyCallback
 0002:804FA404       BTM_SetPinType
 0002:804FA4B4       BTM_SetSecurityLevel
 0002:804FA6DC       BTM_PINCodeReply
 0002:804FA7A0       BTM_DeviceAuthorized
 0002:804FA97C       BTM_SecBond
 0002:804FAD48       btm_sec_l2cap_access_req
 0002:804FB1AC       btm_sec_mx_access_request
 0002:804FB448       btm_sec_conn_req
 0002:804FB574       btm_sec_init
 0002:804FB590       btm_sec_dev_reset
 0002:804FB5D0       btm_sec_abort_access_req
 0002:804FB684       btm_sec_rmt_name_request_complete
 0002:804FB96C       btm_sec_auth_complete
 0002:804FBCB0       btm_sec_mkey_comp_event
 0002:804FBDAC       btm_sec_encrypt_change
 0002:804FBEE8       btm_sec_is_bonding
 0002:804FBF28       btm_sec_connected
 0002:804FC3A8       btm_sec_disconnect
 0002:804FC464       btm_sec_disconnected
 0002:804FC5A0       btm_sec_link_key_notification
 0002:804FC74C       btm_sec_link_key_request
 0002:804FC87C       btm_sec_pin_code_request_timeout
 0002:804FC8F0       btm_sec_pin_code_request
 0002:804FCC4C       btm_sec_update_clock_offset
 0002:804FCC9C       btm_sec_execute_procedure
 0002:804FD07C       btm_sec_start_authorization
 0002:804FD198       btm_sec_collision_timeout
 0002:804FD278       btm_read_trusted_mask
 0002:804FD2AC       btu_hcif_process_event
 0002:804FD864       btu_hcif_send_cmd
 0002:804FD9F0       btu_hcif_connection_comp_evt
 0002:804FDACC       btu_hcif_connection_request_evt
 0002:804FDB58       btu_hcif_qos_setup_comp_evt
 0002:804FDC58       btu_hcif_esco_connection_comp_evt
 0002:804FDD38       btu_hcif_hdl_command_complete
 0002:804FDE90       btu_hcif_command_complete_evt
 0002:804FDFA8       btu_hcif_hdl_command_status
 0002:804FE1A8       btu_hcif_command_status_evt
 0002:804FE2D0       btu_hcif_cmd_timeout
 0002:804FE428       btu_hcif_link_key_notification_evt
 0002:804FE534       BTE_Init
 0002:804FE580       WBT_ExtCreateRecord
 0002:804FE660       GAP_Init
 0002:804FE6C0       gap_conn_init
 0002:804FE730       gap_connect_ind
 0002:804FE8BC       gap_connect_cfm
 0002:804FEA98       gap_config_ind
 0002:804FEBD4       gap_config_cfm
 0002:804FEDC0       gap_disconnect_ind
 0002:804FEFB8       gap_data_ind
 0002:804FF0C8       gap_congestion_ind
 0002:804FF1FC       btm_cback
 0002:804FF360       def_804FF324
 0002:804FF3EC       gap_find_addr_name_cb
 0002:804FF520       def_804FF4E4
 0002:804FF5B8       def_804FF57C
 0002:804FF604       gap_find_addr_inq_cb
 0002:804FF6FC       def_804FF6C0
 0002:804FF76C       def_804FF730
 0002:804FF7B8       gap_convert_btm_status
 0002:804FF810       def_804FF7D4
 0002:804FF818       btsnd_hcic_inquiry
 0002:804FF8C0       btsnd_hcic_inq_cancel
 0002:804FF920       btsnd_hcic_per_inq_mode
 0002:804FF9E0       btsnd_hcic_create_conn
 0002:804FFAC0       btsnd_hcic_disconnect
 0002:804FFB48       btsnd_hcic_add_SCO_conn
 0002:804FFBD4       btsnd_hcic_accept_conn
 0002:804FFC34       btsnd_hcic_reject_conn
 0002:804FFC90       btsnd_hcic_link_key_req_reply
 0002:804FFE30       btsnd_hcic_link_key_neg_reply
 0002:804FFED0       btsnd_hcic_pin_code_req_reply
 0002:805000B4       btsnd_hcic_pin_code_neg_reply
 0002:80500154       btsnd_hcic_change_conn_type
 0002:805001E4       btsnd_hcic_auth_request
 0002:80500260       btsnd_hcic_set_conn_encrypt
 0002:805002EC       btsnd_hcic_rmt_name_req
 0002:805003C4       btsnd_hcic_rmt_name_req_cancel
 0002:80500464       btsnd_hcic_rmt_features_req
 0002:805004E0       btsnd_hcic_rmt_ver_req
 0002:8050055C       btsnd_hcic_read_rmt_clk_offset
 0002:805005D8       btsnd_hcic_setup_esco_conn
 0002:805006D4       btsnd_hcic_accept_esco_conn
 0002:805007BC       btsnd_hcic_reject_esco_conn
 0002:8050081C       btsnd_hcic_hold_mode
 0002:805008D0       btsnd_hcic_sniff_mode
 0002:8050099C       btsnd_hcic_exit_sniff_mode
 0002:80500A20       btsnd_hcic_park_mode
 0002:80500AD4       btsnd_hcic_exit_park_mode
 0002:80500B58       btsnd_hcic_switch_role
 0002:80500C08       btsnd_hcic_write_policy_set
 0002:80500C9C       btsnd_hcic_reset
 0002:80500CF8       btsnd_hcic_set_event_filter
 0002:80500EB4       btsnd_hcic_write_pin_type
 0002:80500F28       btsnd_hcic_read_stored_key
 0002:80500F88       btsnd_hcic_write_stored_key
 0002:80501148       btsnd_hcic_delete_stored_key
 0002:805011F8       btsnd_hcic_change_name
 0002:80501338       btsnd_hcic_write_page_tout
 0002:80501370       btsnd_hcic_write_scan_enable
 0002:805013A0       btsnd_hcic_write_pagescan_cfg
 0002:805013E4       btsnd_hcic_write_inqscan_cfg
 0002:80501428       btsnd_hcic_write_auth_enable
 0002:8050149C       btsnd_hcic_write_encr_mode
 0002:80501510       btsnd_hcic_write_dev_class
 0002:80501554       btsnd_hcic_write_auto_flush_tout
 0002:80501598       btsnd_hcic_set_host_buf_size
 0002:80501654       btsnd_hcic_write_link_super_tout
 0002:805016E8       btsnd_hcic_write_cur_iac_lap
 0002:80501758       btsnd_hcic_read_local_ver
 0002:805017B8       btsnd_hcic_read_local_features
 0002:80501814       btsnd_hcic_read_buffer_size
 0002:8050183C       btsnd_hcic_read_bd_addr
 0002:8050189C       btsnd_hcic_get_link_quality
 0002:80501918       btsnd_hcic_read_rssi
 0002:80501990       btsnd_hcic_set_afh_channels
 0002:80501DB0       btsnd_hcic_write_inqscan_type
 0002:80501DE0       btsnd_hcic_write_inquiry_mode
 0002:80501E10       btsnd_hcic_write_pagescan_type
 0002:80501E40       btsnd_hcic_vendor_spec_cmd
 0002:80501F34       HID_DevInit
 0002:80501F9C       hidd_conn_initiate
 0002:8050205C       hidd_proc_repage_timeout
 0002:80502124       hidd_pm_set_now
 0002:805022FC       hidd_pm_proc_mode_change
 0002:80502454       hidd_pm_inact_timeout
 0002:805024A0       HID_HostGetSDPRecord
 0002:80502568       hidh_search_callback
 0002:805029B8       HID_HostInit
 0002:805029FC       HID_HostRegister
 0002:80502A78       HID_HostDeregister
 0002:80502B5C       HID_HostAddDev
 0002:80502CEC       HID_HostRemoveDev
 0002:80502DB4       HID_HostOpenDev
 0002:80502E18       HID_HostWriteDev
 0002:80502F58       HID_HostCloseDev
 0002:80502FF8       HID_HostSetSecurityLevel
 0002:80503220       hidh_conn_reg
 0002:80503378       hidh_conn_disconnect
 0002:8050341C       hidh_sec_check_complete_term
 0002:8050354C       hidh_l2cif_connect_ind
 0002:805037A4       hidh_proc_repage_timeout
 0002:805038F0       hidh_sec_check_complete_orig
 0002:80503B04       hidh_l2cif_connect_cfm
 0002:80503E4C       hidh_l2cif_config_ind
 0002:805040F4       hidh_l2cif_config_cfm
 0002:80504400       hidh_l2cif_disconnect_ind
 0002:805046C4       hidh_l2cif_disconnect_cfm
 0002:8050490C       hidh_l2cif_cong_ind
 0002:80504B04       hidh_l2cif_data_ind
 0002:80504E9C       hidh_conn_snd_data
 0002:80505138       hidh_conn_initiate
 0002:80505234       hidh_conn_dereg
 0002:80505260       L2CA_Register
 0002:805053FC       L2CA_Deregister
 0002:8050548C       L2CA_ConnectReq
 0002:805056C0       L2CA_ConnectRsp
 0002:80505850       L2CA_ConfigReq
 0002:80505908       L2CA_ConfigRsp
 0002:805059D8       L2CA_DisconnectReq
 0002:80505A7C       L2CA_DisconnectRsp
 0002:80505B20       L2CA_DataWrite
 0002:80505C44       L2CA_SetIdleTimeout
 0002:80505D0C       L2CA_SetIdleTimeoutByBdAddr
 0002:80505E0C       L2CA_SetTraceLevel
 0002:80505E28       nullsub_51
 0002:80505E2C       l2c_csm_execute
 0002:80505E78       l2c_csm_closed
 0002:805060F4       def_80505EF0
 0002:8050610C       l2c_csm_orig_w4_sec_comp
 0002:80506264       def_80506188
 0002:8050627C       l2c_csm_term_w4_sec_comp
 0002:805063C8       def_805062E8
 0002:805063E4       l2c_csm_w4_l2cap_connect_rsp
 0002:80506610       def_80506460
 0002:80506628       l2c_csm_w4_l2ca_connect_rsp
 0002:805067E8       def_8050669C
 0002:80506800       l2c_csm_config
 0002:80506BB0       def_80506878
 0002:80506BC8       l2c_csm_open
 0002:80506E0C       def_80506C40
 0002:80506E24       l2c_csm_w4_l2cap_disconnect_rsp
 0002:80506FF0       def_80506EA0
 0002:80507008       l2c_csm_w4_l2ca_disconnect_rsp
 0002:8050714C       def_8050707C
 0002:80507164       forward_peer_data
 0002:80507308       l2c_link_hci_conn_req
 0002:8050745C       l2c_link_hci_conn_comp
 0002:80507694       l2c_link_sec_comp
 0002:80507748       l2c_link_hci_disc_comp
 0002:80507804       l2c_link_hci_qos_violation
 0002:80507874       l2c_link_timeout
 0002:805079E8       l2c_link_send_to_lower
 0002:80507AF0       l2c_link_check_send_pkts
 0002:80507DBC       l2c_link_adjust_allocation
 0002:80507F54       l2c_link_process_num_completed_pkts
 0002:80508038       l2c_link_processs_num_bufs
 0002:8050804C       l2cap_link_chk_pkt_start
 0002:8050821C       l2cap_link_chk_pkt_end
 0002:80508288       l2c_link_role_changed
 0002:80508308       l2c_link_role_change_failed
 0002:80508374       l2c_link_segments_xmitted
 0002:80508450       l2c_pin_code_request
 0002:80508494       l2c_init
 0002:805085A8       l2c_rcv_acl_data
 0002:805088D8       process_l2cap_cmd
 0002:805092F4       def_805089A0
 0002:80509348       l2c_process_timeout
 0002:80509398       l2c_process_held_packets
 0002:805094C4       l2cu_allocate_lcb
 0002:80509598       l2cu_release_lcb
 0002:80509698       l2cu_find_lcb_by_bd_addr
 0002:80509720       l2cu_find_lcb_by_handle
 0002:805097B0       l2cu_get_conn_role
 0002:805097C0       l2cu_build_header
 0002:80509884       l2cu_send_peer_cmd_reject
 0002:80509980       l2cu_send_peer_connect_req
 0002:80509A44       l2cu_send_peer_connect_rsp
 0002:80509B1C       l2cu_reject_connection
 0002:80509BDC       l2cu_send_peer_config_req
 0002:80509ED4       l2cu_send_peer_config_rsp
 0002:8050A1CC       l2cu_send_peer_config_rej
 0002:8050A380       l2cu_send_peer_disc_req
 0002:8050A454       l2cu_send_peer_disc_rsp
 0002:8050A514       l2cu_send_peer_echo_req
 0002:8050A684       l2cu_send_peer_echo_rsp
 0002:8050A820       l2cu_send_peer_info_rsp
 0002:8050A8C4       l2cu_allocate_ccb
 0002:8050A9D0       l2cu_release_ccb
 0002:8050AB74       l2cu_find_ccb_by_cid
 0002:8050ABD0       l2cu_allocate_rcb
 0002:8050AC2C       l2cu_find_rcb_by_psm
 0002:8050ACE4       l2cu_process_peer_cfg_req
 0002:8050AE2C       l2cu_process_peer_cfg_rsp
 0002:8050AE6C       l2cu_process_our_cfg_req
 0002:8050AF7C       l2cu_process_our_cfg_rsp
 0002:8050AFBC       l2cu_device_reset
 0002:8050B028       l2cu_create_conn
 0002:8050B140       l2cu_create_conn_after_switch
 0002:8050B210       l2cu_find_lcb_by_state
 0002:8050B2A0       l2cu_lcb_disconnecting
 0002:8050B388       RFCOMM_Init
 0002:8050B3D8       PORT_StartCnf
 0002:8050B538       PORT_StartInd
 0002:8050B5D4       PORT_ParNegInd
 0002:8050B784       PORT_ParNegCnf
 0002:8050B888       PORT_DlcEstablishInd
 0002:8050B9C8       PORT_DlcEstablishCnf
 0002:8050BB0C       PORT_PortNegInd
 0002:8050BC5C       PORT_PortNegCnf
 0002:8050BD74       PORT_ControlInd
 0002:8050BEEC       PORT_ControlCnf
 0002:8050BFB0       PORT_LineStatusInd
 0002:8050C078       PORT_DlcReleaseInd
 0002:8050C0E0       PORT_CloseInd
 0002:8050C180       Port_TimeOutCloseMux
 0002:8050C218       PORT_DataInd
 0002:8050C418       PORT_FlowInd
 0002:8050C548       port_rfc_send_tx_data
 0002:8050C640       port_rfc_closed
 0002:8050C7D4       port_select_mtu
 0002:8050C950       port_release_port
 0002:8050CA2C       port_find_mcb_dlci_port
 0002:8050CA80       port_find_dlci_port
 0002:8050CB08       port_flow_control_user
 0002:8050CB78       port_get_signal_changes
 0002:8050CBE0       port_flow_control_peer
 0002:8050CDAC       rfcomm_l2cap_if_init
 0002:8050CE28       RFCOMM_ConnectInd
 0002:8050CEB4       RFCOMM_ConnectCnf
 0002:8050CFB8       RFCOMM_ConfigInd
 0002:8050D0C0       RFCOMM_ConfigCnf
 0002:8050D1C8       nullsub_128
 0002:8050D1CC       RFCOMM_DisconnectInd
 0002:8050D2F0       RFCOMM_BufDataInd
 0002:8050D590       RFCOMM_CongestionStatusInd
 0002:8050D6C4       rfc_save_lcid_mcb
 0002:8050D6E0       rfc_mx_sm_execute
 0002:8050D724       rfc_mx_sm_state_idle
 0002:8050D8EC       def_8050D798
 0002:8050D938       rfc_mx_sm_state_wait_conn_cnf
 0002:8050DAF4       rfc_mx_sm_state_configure
 0002:8050DBD0       def_8050DB6C
 0002:8050DC1C       rfc_mx_sm_sabme_wait_ua
 0002:8050DD44       def_8050DC90
 0002:8050DD90       rfc_mx_sm_state_wait_sabme
 0002:8050DEB0       rfc_mx_sm_state_connected
 0002:8050DF80       def_8050DF18
 0002:8050DFC8       rfc_mx_sm_state_disc_wait_ua
 0002:8050E0F4       def_8050E034
 0002:8050E140       rfc_mx_conf_cnf
 0002:8050E234       rfc_mx_conf_ind
 0002:8050E324       rfc_port_sm_execute
 0002:8050E3B4       rfc_port_sm_state_closed
 0002:8050E4E4       def_8050E3EC
 0002:8050E528       rfc_port_sm_sabme_wait_ua
 0002:8050E680       def_8050E560
 0002:8050E6C4       rfc_port_sm_term_wait_sec_check
 0002:8050E840       def_8050E704
 0002:8050E880       rfc_port_sm_orig_wait_sec_check
 0002:8050E990       def_8050E8C0
 0002:8050E9D0       rfc_port_sm_opened
 0002:8050EB78       def_8050EA08
 0002:8050EBBC       rfc_port_sm_disc_wait_ua
 0002:8050EC98       def_8050EBF0
 0002:8050ECD8       rfc_process_pn
 0002:8050EDC0       rfc_process_rpn
 0002:8050F0CC       rfc_process_msc
 0002:8050F238       rfc_process_rls
 0002:8050F2C4       nullsub_52
 0002:8050F2D0       rfc_process_fcon
 0002:8050F334       rfc_process_fcoff
 0002:8050F398       rfc_process_l2cap_congestion
 0002:8050F420       rfc_set_port_state
 0002:8050F4C4       RFCOMM_StartRsp
 0002:8050F4F0       RFCOMM_DlcEstablishReq
 0002:8050F558       RFCOMM_DlcEstablishRsp
 0002:8050F5C8       RFCOMM_ParNegReq
 0002:8050F6A8       RFCOMM_ParNegRsp
 0002:8050F6D0       RFCOMM_PortNegReq
 0002:8050F78C       RFCOMM_PortNegRsp
 0002:8050F7AC       RFCOMM_ControlReq
 0002:8050F850       RFCOMM_FlowReq
 0002:8050F8F4       RFCOMM_LineStatusReq
 0002:8050F98C       RFCOMM_DlcReleaseReq
 0002:8050F9B8       RFCOMM_DataReq
 0002:8050F9F0       rfc_send_sabme
 0002:8050FAA0       rfc_send_ua
 0002:8050FB50       rfc_send_dm
 0002:8050FC14       rfc_send_disc
 0002:8050FCC4       rfc_send_buf_uih
 0002:8050FE5C       rfc_send_pn
 0002:8050FF44       rfc_send_fcon
 0002:8050FFC8       rfc_send_fcoff
 0002:8051004C       rfc_send_msc
 0002:8051016C       rfc_send_rls
 0002:8051021C       rfc_send_rpn
 0002:80510338       rfc_send_test
 0002:805103E0       rfc_send_credit
 0002:805104A0       rfc_parse_data
 0002:80510A14       rfc_process_mx_message
 0002:80511038       rfc_calc_fcs
 0002:80511070       rfc_check_fcs
 0002:805110BC       rfc_alloc_multiplexer_channel
 0002:80511214       rfc_release_multiplexer_channel
 0002:8051129C       rfc_timer_start
 0002:80511310       rfc_timer_stop
 0002:80511368       rfc_port_timer_start
 0002:805113E8       rfc_port_timer_stop
 0002:80511440       rfc_check_mcb_active
 0002:80511504       rfcomm_process_timeout
 0002:80511540       rfc_sec_check_complete
 0002:80511594       rfc_port_closed
 0002:805116EC       rfc_inc_credit
 0002:80511778       rfc_dec_credit
 0002:805117B4       rfc_check_send_cmd
 0002:80511818       SDP_InitDiscoveryDb
 0002:80511B90       SDP_ServiceSearchRequest
 0002:80511BEC       SDP_ServiceSearchAttributeRequest
 0002:80511C50       SDP_FindAttributeInRec
 0002:80511C78       SDP_FindServiceInDb
 0002:80511D44       SDP_FindServiceUUIDInDb
 0002:80511E4C       SDP_SetLocalDiRecord
 0002:805121AC       SDP_GetLocalDiRecord
 0002:8051265C       SDP_SetTraceLevel
 0002:80512680       sdp_db_service_search
 0002:805127BC       find_uuid_in_seq
 0002:80512894       sdp_db_find_record
 0002:805128F0       sdp_db_find_attr_in_rec
 0002:80512930       SDP_CreateRecord
 0002:80512A10       SDP_DeleteRecord
 0002:80512B24       SDP_AddAttribute
 0002:80512EBC       SDP_AddUuidSequence
 0002:80512F94       SDP_AddServiceClassIdList
 0002:80513110       SDP_DeleteAttribute
 0002:8051334C       sdpu_build_uuid_seq
 0002:80513438       sdp_snd_service_search_req
 0002:80513568       sdp_disc_connected
 0002:8051359C       sdp_disc_server_rsp
 0002:805136DC       process_service_search_rsp
 0002:80513824       process_service_attr_rsp
 0002:80513ACC       process_service_search_attr_rsp
 0002:80513DA0       save_attr_seq
 0002:80513F8C       add_record
 0002:8051402C       add_attr
 0002:8051452C       def_805140F4
 0002:805145C4       sdp_init
 0002:80514764       sdp_connect_ind
 0002:80514828       sdp_connect_cfm
 0002:805149B8       sdp_config_ind
 0002:80514AF4       sdp_config_cfm
 0002:80514C70       sdp_disconnect_ind
 0002:80514D68       sdp_data_ind
 0002:80514E3C       sdp_conn_originate
 0002:80514F50       sdp_disconnect
 0002:80514FEC       sdp_disconnect_cfm
 0002:805150A8       sdp_conn_timeout
 0002:80515130       sdp_server_handle_client_req
 0002:80515284       process_service_search
 0002:80515694       process_service_attr_req
 0002:80515A24       process_service_search_attr_req
 0002:80515E40       sdpu_find_ccb_by_cid
 0002:80515ED0       sdpu_allocate_ccb
 0002:80515F44       sdpu_release_ccb
 0002:80515F7C       sdpu_build_attrib_seq
 0002:8051614C       sdpu_build_attrib_entry
 0002:80516258       def_805161F4
 0002:805162A0       sdpu_build_n_send_error
 0002:805163DC       sdpu_extract_uid_seq
 0002:80516494       def_80516420
 0002:80516568       def_805164F4
 0002:8051672C       sdpu_extract_attr_seq
 0002:8051697C       sdpu_get_len_from_type
 0002:80516A44       def_805169A0
 0002:80516A4C       sdpu_is_base_uuid
 0002:80516B2C       sdpu_compare_uuid_arrays
 0002:80516DA0       sdpu_compare_uuid_with_attr
 0002:80516E30       sdpu_sort_attr_list
 0002:80516E80       strlen
 0002:80516E9C       __va_arg
 0002:80516F64       __register_global_object
 0002:80516F7C       __destroy_global_chain
 0002:80516FC4       __construct_new_array
 0002:805170C8       __partial_array_destructor::~__partial_array_destructor((void))
 0002:80517184       __construct_array
 0002:8051727C       __destroy_arr
 0002:805172F4       __destroy_new_array
 0002:80517374       __ptmf_test
 0002:805173A4       __ptmf_cmpr
 0002:805173E0       __ptmf_scall
 0002:80517408       __cvt_fp2unsigned
 0002:80517464       __save_fpr
 0002:805174B0       __restore_fpr
 0002:805174FC       __save_gpr
 0002:8051752C       _savegpr_26
 0002:80517530       _savegpr_27
 0002:80517534       _savegpr_28
 0002:80517538       _savegpr_29
 0002:80517548       __restore_gpr
 0002:80517578       _restgpr_26
 0002:8051757C       _restgpr_27
 0002:80517580       _restgpr_28
 0002:80517584       _restgpr_29
 0002:80517594       __div2u
 0002:80517680       __div2i
 0002:805177B8       __mod2u
 0002:8051789C       __mod2i
 0002:805179A8       __shl2i
 0002:805179CC       __shr2u
 0002:805179F0       __cvt_dbl_usll
 0002:80517ABC       __cvt_dbl_ull
 0002:80517B64       __init_cpp_exceptions
 0002:80517BA0       __fini_cpp_exceptions
 0002:80517BD4       __register_fragment
 0002:80517C08       __unregister_fragment
 0002:80517C38       __sys_free
 0002:80517CF0       Block_link
 0002:80517E40       SubBlock_merge_next
 0002:80517EE8       deallocate_from_fixed_pools
 0002:805180D4       free
 0002:80518204       __close_all
 0002:805182A8       __flush_all
 0002:80518314       __ull2dec
 0002:805183F0       __timesdec
 0002:80518678       __str2dec
 0002:80518764       __two_exp
 0002:80518998       def_805187A0
 0002:80518AD0       __equals_dec
 0002:80518BB4       __less_dec
 0002:80518CB4       __minus_dec
 0002:805191D0       __num2dec_internal
 0002:80519334       __num2dec
 0002:805194D4       __dec2num
 0002:80519C84       abs
 0002:80519C94       __prep_buffer
 0002:80519CBC       __flush_buffer
 0002:80519D74       tolower
 0002:80519DAC       __fwrite
 0002:8051A0B4       fclose
 0002:8051A170       fflush
 0002:8051A2A4       _ftell
 0002:8051A34C       j__ftell
 0002:8051A350       _fseek
 0002:8051A514       mbtowc
 0002:8051A52C       __mbtowc_noconv
 0002:8051A578       __wctomb_noconv
 0002:8051A594       mbstowcs
 0002:8051A654       wcstombs
 0002:8051A70C       memmove
 0002:8051A7D8       memchr
 0002:8051A804       __memrchr
 0002:8051A830       memcmp
 0002:8051A87C       __copy_longs_aligned
 0002:8051A938       __copy_longs_rev_aligned
 0002:8051A9E0       __copy_longs_unaligned
 0002:8051AAA0       __copy_longs_rev_unaligned
 0002:8051AB4C       __fpclassifyf
 0002:8051ABB0       __signbitd
 0002:8051ABC8       __fpclassifyd
 0002:8051AC58       parse_format
 0002:8051AD40       def_8051ACFC
 0002:8051B20C       def_8051B010
 0002:8051B254       long2str
 0002:8051B310       def_8051B2BC
 0002:8051B47C       longlong2str
 0002:8051B578       def_8051B504
 0002:8051B71C       double2hex
 0002:8051BAE4       round_decimal_1
 0002:8051BC0C       float2str
 0002:8051C3DC       __pformatter
 0002:8051CC14       def_8051CA18
 0002:8051CC38       __FileWrite
 0002:8051CC90       __StringWrite
 0002:8051CCFC       fprintf
 0002:8051CDC0       vprintf
 0002:8051CE38       vsnprintf
 0002:8051CEBC       vsprintf
 0002:8051CF3C       snprintf
 0002:8051D014       sprintf
 0002:8051D0E4       parse_format_1
 0002:8051D72C       def_8051D3E4
 0002:8051D798       __sformatter
 0002:8051DC74       def_8051DC1C
 0002:8051DE0C       def_8051DDB4
 0002:8051E4F8       __StringRead
 0002:8051E588       sscanf
 0002:8051E650       raise
 0002:8051E700       strcpy
 0002:8051E7C0       strncpy
 0002:8051E804       strcat
 0002:8051E830       strcmp
 0002:8051E94C       strncmp
 0002:8051E98C       strchr
 0002:8051E9BC       strrchr
 0002:8051EA04       strstr
 0002:8051EA70       __strtold
 0002:8051FE64       __strtoul
 0002:80520230       def_8051FF34
 0002:80520294       __strtoull
 0002:805206E0       def_80520380
 0002:80520758       strtoul
 0002:80520800       atoi
 0002:805208C4       wmemcpy
 0002:805208CC       wmemchr
 0002:805208F4       parse_format_2
 0002:805209D8       def_80520994
 0002:80520E68       def_80520C5C
 0002:80520EB4       long2str_1
 0002:80520F70       def_80520F1C
 0002:805210E8       longlong2str_1
 0002:805211E4       def_80521170
 0002:80521394       double2hex_1
 0002:80521884       float2str_1
 0002:80522024       __wpformatter
 0002:80522944       def_80522718
 0002:80522968       __wStringWrite
 0002:805229D4       swprintf
 0002:80522AB0       vswprintf
 0002:80522B38       wcslen
 0002:80522B54       wcscpy
 0002:80522B70       wcsncpy
 0002:80522BB4       wcscmp
 0002:80522BE8       wcschr
 0002:80522C14       fwide
 0002:80522C98       __write_console
 0002:80522D70       abort
 0002:80522DA4       scalbn
 0002:80522E8C       strcasecmp
 0002:80522F34       __ieee754_acos
 0002:805231F8       __ieee754_asin
 0002:80523490       __ieee754_atan2
 0002:80523700       __ieee754_fmod
 0002:80523A30       __ieee754_log
 0002:80523CE4       __ieee754_log10
 0002:80523DF8       __ieee754_pow
 0002:80524640       __ieee754_rem_pio2
 0002:805249D8       __kernel_cos
 0002:80524AE8       __kernel_rem_pio2
 0002:805261F4       __kernel_sin
 0002:805262B4       __kernel_tan
 0002:8052650C       atan
 0002:8052674C       ceil
 0002:8052688C       copysign
 0002:805268B8       cos
 0002:8052698C       floor
 0002:80526AD0       frexp
 0002:80526B58       ldexp
 0002:80526CC4       sin
 0002:80526D9C       tan
 0002:80526E14       j___ieee754_acos
 0002:80526E18       j___ieee754_asin
 0002:80526E1C       j___ieee754_atan2
 0002:80526E20       j___ieee754_fmod
 0002:80526E24       j___ieee754_log10
 0002:80526E28       j___ieee754_pow
 0002:80526E2C       __ieee754_sqrt
 0002:80527074       nullsub_53
 0002:80527078       j___ieee754_sqrt
 0002:8052707C       TRKNubMainLoop
 0002:80527174       TRKDestructEvent
 0002:80527198       TRKConstructEvent
 0002:805271B0       TRKPostEvent
 0002:80527290       TRKGetNextEvent
 0002:80527344       TRKInitializeEventQueue
 0002:8052739C       TRKNubWelcome
 0002:805273E8       TRKInitializeNub
 0002:80527520       TRKMessageSend
 0002:8052754C       TRKReadBuffer_ui32
 0002:8052763C       TRKReadBuffer_ui8
 0002:805276D4       TRKReadBuffer1_ui64
 0002:805277BC       TRKAppendBuffer_ui32
 0002:805278B8       TRKAppendBuffer_ui8
 0002:80527920       TRKAppendBuffer1_ui64
 0002:80527A1C       TRKReadBuffer
 0002:80527AA8       TRKAppendBuffer
 0002:80527B4C       TRKSetBufferPosition
 0002:80527B7C       TRKResetBuffer
 0002:80527BBC       TRKReleaseBuffer
 0002:80527C20       TRKGetBuffer
 0002:80527C4C       TRKGetFreeBuffer
 0002:80527D14       TRKInitializeMessageBuffers
 0002:80527D90       TRKInitializeSerialHandler
 0002:80527DB4       TRKProcessInput
 0002:80527E04       TRKGetInput
 0002:80527E64       TRKTestForPacket
 0002:80527F34       nullsub_54
 0002:80527F38       usr_puts_serial
 0002:80527FC0       TRKDispatchMessage
 0002:805280E4       def_80528004
 0002:80528108       TRKDoSetOption
 0002:805281D4       TRKDoStop
 0002:805282A0       TRKDoStep
 0002:80528574       TRKDoContinue
 0002:80528658       TRKDoWriteRegisters
 0002:80528914       TRKDoReadRegisters
 0002:80528B38       TRKDoWriteMemory
 0002:80528CCC       def_80528CA0
 0002:80528D54       TRKDoReadMemory
 0002:80528F10       def_80528EE4
 0002:80528FAC       TRKDoReset
 0002:805290A4       TRKDoDisconnect
 0002:80529140       TRKDoConnect
 0002:805291C8       SetTRKConnected
 0002:805291D4       GetTRKConnected
 0002:805291E4       HandlePositionFileSupportRequest
 0002:805292F4       HandleCloseFileSupportRequest
 0002:805293DC       HandleOpenFileSupportRequest
 0002:805294F8       TRKRequestSend
 0002:80529678       TRKSuppAccessFile
 0002:805298B0       TRKDoNotifyStopped
 0002:80529948       TRK_flush_cache
 0002:80529980       TRK_fill_mem
 0002:80529A38       TRK_strlen
 0002:80529A64       TRK_ppc_memcpy
 0002:80529AA0       TRKInterruptHandler
 0002:80529BE0       TRKInterruptHandlerEnableInterrupts
 0002:80529C34       TRKExceptionHandler
 0002:80529CD0       TRKSwapAndGo
 0002:80529DE8       ReadFPSCR
 0002:80529E0C       WriteFPSCR
 0002:80529E30       TRKTargetSetInputPendingPtr
 0002:80529E40       TRKTargetStop
 0002:80529E58       TRKTargetSetStopped
 0002:80529E68       TRKTargetStopped
 0002:80529E78       TRKTargetSupportRequest
 0002:8052A078       TRKTargetGetPC
 0002:8052A088       TRKTargetStepOutOfRange
 0002:8052A104       TRKTargetSingleStep
 0002:8052A170       TRKTargetAddExceptionInfo
 0002:8052A1F4       TRKTargetAddStopInfo
 0002:8052A280       TRKTargetInterrupt
 0002:8052A3DC       TRKPostInterruptEvent
 0002:8052A488       TRKTargetAccessExtended2
 0002:8052A8C0       TRKTargetAccessExtended1
 0002:8052AA30       TRKTargetAccessFP
 0002:8052AF3C       TRKTargetAccessDefault
 0002:8052B030       TRKTargetReadInstruction
 0002:8052B07C       TRKTargetAccessMemory
 0002:8052B1C8       TRKValidMemory32
 0002:8052B490       TRKSaveExtended1Block
 0002:8052B648       TRKRestoreExtended1Block
 0002:8052B800       __TRK_write_console
 0002:8052B8BC       __read_console
 0002:8052B978       InitMetroTRK
 0002:8052BA10       InitMetroTRK_BBA
 0002:8052BAA4       TRKInitializeTarget
 0002:8052BAF0       __TRK_copy_vectors
 0002:8052BC1C       TRKTargetTranslate
 0002:8052BC94       TRK_main
 0002:8052BCD8       TRKLoadContext
 0002:8052BD60       nullsub_55
 0002:8052BD64       InitializeProgramEndTrap
 0002:8052BDBC       TRK_board_display
 0002:8052BDEC       UnreserveEXI2Port
 0002:8052BE1C       ReserveEXI2Port
 0002:8052BE4C       TRKWriteUARTN
 0002:8052BE88       TRKReadUARTN
 0002:8052BEC4       TRKPollUART
 0002:8052BEF4       EnableEXI2Interrupts
 0002:8052BF3C       TRKInitializeIntDrivenUART
 0002:8052BF8C       InitMetroTRKCommTable
 0002:8052C160       TRKEXICallBack
 0002:8052C198       TRKTargetContinue
 0002:8052C1CC       GetUseSerialIO
 0002:8052C1DC       SetUseSerialIO
 0002:8052C254       gdev_cc_peek
 0002:8052C30C       gdev_cc_write
 0002:8052C380       gdev_cc_read
 0002:8052C43C       gdev_cc_open
 0002:8052C468       gdev_cc_initialize
 0002:8052C4A4       OutputData
 0002:8052C4F0       CircleBufferReadBytes
 0002:8052C5F8       CircleBufferWriteBytes
 0002:8052C700       CircleBufferInitialize
 0002:8052C758       MWExitCriticalSection
 0002:8052C77C       MWEnterCriticalSection
 0002:8052C7AC       nullsub_56
 0002:8052C7B0       __DBMtrHandler
 0002:8052C7D4       __DBIntrHandler
 0002:8052C7F8       DBInitComm
 0002:8052C854       DBInitInterrupts
 0002:8052C8A8       DBQueryData
 0002:8052C94C       DBRead
 0002:8052C9CC       DBWrite
 0002:8052CADC       nullsub_64
 0002:8052CAE0       nullsub_65
 0002:8052CAE4       __EXI2Imm
 0002:8052CDCC       __DBEXIInit
 0002:8052CE88       __DBEXIReadReg
 0002:8052CFAC       __DBEXIWriteReg
 0002:8052D0B0       __DBEXIReadRam
 0002:8052D190       __DBEXIWriteRam
 0006:8052D280       _ctors
 0007:8052DEE0       _dtors
 0008:8052DF30       @unnamed@AreaObjContainer_cpp@::cCreateTable(void)
 0008:8052F8B8       aAudioresSpkres
 0008:805338F0       @unnamed@ModelChangableObjFactory_cpp@::cModelChangableObjCreatorTable(void)
 0008:8053A020       aSystemResult00
 0008:8053A031       aSystemResult00_0
 0008:8053A042       aSystemResult00_1
 0008:8053A053       aSystemResult00_2
 0008:8053A064       aSystemResult00_3
 0008:8053A075       aSystemResult00_4
 0008:8053A086       aSystemResult00_5
 0008:8053A097       aSystemResult00_6
 0008:8053A0A8       aSystemResult00_7
 0008:8053A0B9       aShastarnum
 0008:8053A0C4       aShatpiecelnum
 0008:8053A0D2       aShatpiecernum
 0008:8053A0E0       aShacoinnum
 0008:8053A0EB       aCoin_0
 0008:8053AEB8       aSpecialstarfin
 0008:8053AED1       aSpecialstarfin_0
 0008:8053B310       aAbcdefghi
 0008:8053C290       aGamedataBin
 0008:8053C29D       aBannerBin
 0008:8053DFE0       aRarc
 0008:8054D2C8       aFinishD
 0008:8054D2D4       aTableSetup
 0008:8054D2E4       aDWaitEnd
 0008:8054D2F0       aDspInitcallbac
 0008:8054D420       aDspTaskBufferI
 0008:8054D444       aErrorNotFinish
 0008:8054D460       aAlreadyInitedP
 0008:8054D480       aGenReqHaltTask
 0008:8054D498       aAudioResumed
 0008:8054D4A8       aYieldHandler
 0008:8054D4B8       aDoneDspTaskX
 0008:8054D4CC       aAudioYieldStar
 0008:8054D4E0       aAudioYieldFini
 0008:8054D6E0       aShared2Sys
 0008:8054D6F0       aShared2SysSysc
 0008:8054D708       aTitle000000010_1
 0008:8054D8D8       funcs_804EFF2C
 0008:8054D938       funcs_804EFFF4
 0008:8054DA00       funcs_804F27C4
 0008:8054DC18       aGcnMemAllocCIn
 0008:8054DC4E       aMetrowerksCwRu
 0008:8054DCA0       a54210108624275
 0008:8054DCCE       a11102230246251
 0008:8054DCF5       a23283064365386
 0008:8054DD0D       a152587890625
 0008:8054DD1A       a390625
 0008:8054DD21       a78125
 0008:8054DD27       a15625
 0008:8054DD2D       a3125
 0008:8054DD32       a625
 0008:8054DD36       a125
 0008:8054DD3A       a25
 0008:8054DD3D       a5
 0008:8054DD3F       a1
 0008:8054DD41       a2
 0008:8054DD43       a4
 0008:8054DD45       a8
 0008:8054DD47       a16
 0008:8054DD4A       a32
 0008:8054DD4D       a64
 0008:8054DD50       a128
 0008:8054DD54       a256
 0008:8054DD58       a17976931348623
 0008:8054E288       a0x0p0
 0008:8054E28E       aInf
 0008:8054E293       aInf_0
 0008:8054E298       aInf_1
 0008:8054E29C       aInf_2
 0008:8054E2A0       aNan
 0008:8054E2A5       aNan_0
 0008:8054E2AA       aNan_1
 0008:8054E2AE       aNan_2
 0008:8054EC10       aMetrotrkForRev
 0008:8054EC30       aErrorNoBufferA
 0008:8054EC50       aMetrotrkOption
 0008:8054EC70       aEnable
 0008:8054EC78       aDisable
 0008:8054ED18       aDevkitSetToLd
 0008:8054ED30       aMetrotrkSizeof
 0008:8054ED58       aMetrotrkSetToB
 0008:8054ED70       aMetrotrkSetToN
 0008:8054ED94       aMetrotrkSetToU
 0008:8054EDC0       aMetrotrkInvali
 0008:8054EDF0       aMetrotrkDefaul
 0009:8054EE20       _Q34nw4r2ut19TagProcessorBase<w>::`vtbl'
 0009:8054EE34       _Q34nw4r2ut19TagProcessorBase<c>::`vtbl'
 0009:8054EFA0       aTrace_1
 0009:8054EFC8       aAddressBackcha_0
 0009:8054EFE8       a08x08x08x_0
 0009:8054F000       aSDPanic
 0009:8054F010       aSDWarning
 0009:80550030       aNw4rLytFinalBu
 0009:805500F0       _Q34nw4r3lyt6Layout::`vtbl'
 0009:805503E8       _21MaterialAnmPlayerBase::`vtbl'
 0009:80550400       _13AnmPlayerBase::`vtbl'
 0009:80550410       _12J3DFrameCtrl::`vtbl'
 0009:80550420       aDefault
 0009:80550429       aName
 0009:8055042E       aInterpole
 0009:80550438       aPlayFrame
 0009:80550443       aStartFrame
 0009:8055044F       aEndFrame
 0009:80550459       aAttribute
 0009:80550468       _9BpkPlayer::`vtbl'
 0009:80550480       _9BrkPlayer::`vtbl'
 0009:80550498       _9BtkPlayer::`vtbl'
 0009:805504B0       _9BtpPlayer::`vtbl'
 0009:805504C8       _9BvaPlayer::`vtbl'
 0009:805504D8       _15LayoutAnmPlayer::`vtbl'
 0009:805504F0       _11J3DTexNoAnm::`vtbl'
 0009:80550500       _10XanimeCore::`vtbl'
 0009:80550530       aNull
 0009:80550535       aDupNonGroup
 0009:80550544       _15XanimeFrameCtrl::`vtbl'
 0009:80550550       aNonGroup
 0009:8055055A       aNotInitialized
 0009:80550570       aScaleX
 0009:80550578       aScaleY
 0009:80550618       _7AreaObj::`vtbl'
 0009:80550648       aSwitcharea
 0009:80550653       aRacejudgecube
 0009:80550661       aNinforcewindcu
 0009:80550672       aNinabysscube
 0009:8055067F       aCubecamera
 0009:8055068A       aBindendcube
 0009:80550696       aEffectcylinder
 0009:805506A5       aDeatharea
 0009:805506AF       aWarpcube
 0009:805506B8       aTripodbossstep
 0009:805506CC       aWater
 0009:805506D2       aPlanemodecube
 0009:805506E0       aPlanecircularm
 0009:805506F6       aPipemodecube
 0009:80550703       aTowermodecylin
 0009:80550715       aShadecube
 0009:8055071F       aPullbackcube
 0009:8055072C       aPullbackcylind
 0009:8055073D       aRestartcube
 0009:80550749       aChangebgmcube
 0009:80550757       aBgmprohibitare
 0009:80550767       aSoundemittercu
 0009:80550778       aSoundemittersp
 0009:8055078B       aPlanecollision
 0009:8055079E       aForbidtriangle
 0009:805507B5       aForbidwatersea
 0009:805507CB       aQuakeeffectare
 0009:805507DB       aHazecube
 0009:805507E4       aAudioeffectare
 0009:805507F4       aBigbubblegoala
 0009:80550806       aSunlightarea
 0009:80550813       aGlaringlightar
 0009:80550824       aViewgroupctrlc
 0009:80550836       aLensflarearea
 0009:80550844       aCamerarepulsiv
 0009:80550858       aLightarea
 0009:80550862       aFallscube
 0009:8055086C       aMercatorcube
 0009:80550879       aAstrochangesta
 0009:8055088E       aImageeffectare
 0009:8055089E       aBluestarguidan
 0009:805508B3       aTicoseedguidan
 0009:805508C8       aMessagearea
 0009:805508D4       aSmokeeffectcol
 0009:805508E9       aBeewallshortdi
 0009:805508FE       aExtrawallcheck
 0009:80550911       aExtrawallcheck_0
 0009:80550928       aSpinguidancecu
 0009:80550939       aHipdropguidanc
 0009:8055094D       aTamakoromovegu
 0009:80550966       aTamakorojumpgu
 0009:8055097F       aBigbubbleguida
 0009:80550995       aHeavysteeringc
 0009:805509A7       aNonsleepcube
 0009:805509B4       aAreamovesphere
 0009:805509C3       aDodoryuclosedc
 0009:805509D9       aDashchargecyli
 0009:805509EC       aPlayersearea
 0009:805509F9       aRasterscrollcu
 0009:80550A0A       aOnimasucube
 0009:80550A16       aForbidjumpcube
 0009:80550A25       aCollisionarea
 0009:80550A33       aAstrooverlooka
 0009:80550A45       aCelestrialsphe
 0009:80550A56       aMirrorarea
 0009:80550A61       aDarkmattercube
 0009:80550A70       aDarkmattercyli
 0009:80550A84       _11WarpCubeMgr::`vtbl'
 0009:80550AA8       _16AreaObjContainer::`vtbl'
 0009:80550AD0       _15AreaObjFollower::`vtbl'
 0009:80550AE0       aSeDmAstroWipeO
 0009:80550AF5       aSeDmAstroWipeI
 0009:80550B09       aAstrogalaxy_4
 0009:80550B15       aHeavensdoorgal_5
 0009:80550B27       aLibraryroom_2
 0009:80550B34       _20AstroChangeStageCube::`vtbl'
 0009:80550B60       _15AudioEffectArea::`vtbl'
 0009:80550B8C       aAudioeffectare_0
 0009:80550BA0       aOceanphantomca
 0009:80550BB7       aSoundmapcodete
 0009:80550BC8       @unnamed@BgmProhibitArea_cpp@::sBgmMuteSet(void)
 0009:80550BE0       _15BgmProhibitArea::`vtbl'
 0009:80550C0C       aBgmprohibitare_0
 0009:80550C20       _19BigBubbleSwitchArea::`vtbl'
 0009:80550C4C       _19BigBubbleCameraArea::`vtbl'
 0009:80550C7C       aSwitcharea_0
 0009:80550C87       aCubecamera_0
 0009:80550C98       aBigbubblegoala_0
 0009:80550CAC       _17BigBubbleGoalArea::`vtbl'
 0009:80550CD8       aBigbubblegoala_1
 0009:80550CF0       _9BloomArea::`vtbl'
 0009:80550D20       aImageeffectare_0
 0009:80550D90       aCamerarepulsiv_0
 0009:80550DA8       aReversekingdom_4
 0009:80550DBD       aCannonfleetgal_4
 0009:80550DCF       aBattleshipgala_3
 0009:80550DE0       _13ChangeBgmCube::`vtbl'
 0009:80550E1F       aBody_67
 0009:80550E50       _11AreaPolygon::`vtbl'
 0009:80550EC8       aValidity
 0009:80550ED1       aInvalid
 0009:80550EDC       _13CubeCameraMgr::`vtbl'
 0009:80550F30       _9DeathArea::`vtbl'
 0009:80550F5C       aDeatharea_0
 0009:80550F68       _16DepthOfFieldArea::`vtbl'
 0009:80550F98       aImageeffectare_1
 0009:80550FE8       aSeOjRayStart
 0009:80550FF8       _19GlaringLightAreaMgr::`vtbl'
 0009:8055101C       _16GlaringLightArea::`vtbl'
 0009:80551048       aGlaringlightar_1
 0009:80551060       _8HazeCube::`vtbl'
 0009:8055108C       aHazecube_0
 0009:80551098       _18ImageEffectAreaMgr::`vtbl'
 0009:805510BC       _15ImageEffectArea::`vtbl'
 0009:805510F0       _9LightArea::`vtbl'
 0009:8055111C       aLightarea_0
 0009:80551128       _15LightAreaHolder::`vtbl'
 0009:80551150       aMercatorcube_1
 0009:80551160       _21MercatorTransformCube::`vtbl'
 0009:80551190       _11MessageArea::`vtbl'
 0009:805511C0       aSePmLvLongFall
 0009:805511D4       _12PlayerSeArea::`vtbl'
 0009:80551200       aPlayersearea_0
 0009:80551210       _15QuakeEffectArea::`vtbl'
 0009:80551240       aReversekingdom_5
 0009:80551255       aCannonfleetgal_5
 0009:80551267       aBattleshipgala_4
 0009:80551278       _11RestartCube::`vtbl'
 0009:805512A8       _14ScreenBlurArea::`vtbl'
 0009:805512D8       aImageeffectare_2
 0009:805512E8       _15SimpleBloomArea::`vtbl'
 0009:80551318       aImageeffectare_3
 0009:80551328       aSeAtLvGrave
 0009:80551337       aSeAtLvKoopaWin
 0009:8055134B       aSeAtLvWindDese
 0009:80551360       aSeAtLvWindIceM
 0009:8055138C       _16SoundEmitterCube::`vtbl'
 0009:805513B8       aSeAtLvMagmaAmb
 0009:805513CF       aSeOjLvFloating
 0009:805513E6       aSeAtLvWindDese_0
 0009:805513FB       aSeAtLvMagmaWin
 0009:80551417       aSeAtLvKoopaFlo
 0009:80551431       aSeAtLvWindRabb
 0009:8055144C       @unnamed@SoundEmitterSphere_cpp@::cSoundNameTable(void)
 0009:80551464       _18SoundEmitterSphere::`vtbl'
 0009:80551490       aSpinguidancecu_0
 0009:805514A1       aTamakoromovegu_0
 0009:805514BA       aTamakorojumpgu_0
 0009:805514D4       _16SpinGuidanceArea::`vtbl'
 0009:80551500       _12SunLightArea::`vtbl'
 0009:8055152C       aSunlightarea_0
 0009:80551540       aSwitcharea_1
 0009:8055154C       _10SwitchArea::`vtbl'
 0009:80551608       aAudioresSmrSzs
 0009:8055161A       aAudioresSeqsJa
 0009:80551634       aAudioresInfoJa
 0009:80551650       aAudioresInfoJa_0
 0009:80551669       aAudioresInfoJa_1
 0009:80551688       aAudioresSmrBaa
 0009:80551699       aAudioresJaiseq
 0009:805516B0       jpt_80027D68
 0009:80551908       aIndexOutOfRang_0
 0009:8055192B       aIndexOutOfRang_1
 0009:8055194D       aIndexOutOfRang
 0009:80551998       _14AudSoundObject::`vtbl'
 0009:80551AE8       _6AudBgm::`vtbl'
 0009:80551B48       _20AudBgmRhythmStrategy::`vtbl'
 0009:80551BD8       aSeRsRemixNoteG
 0009:80551BF2       aSeRsRemixNoteG_0
 0009:80551C0C       aSeRsRemixNoteG_1
 0009:80551C26       aSeRsRemixNoteG_2
 0009:80551C40       aSeRsRemixNoteG_3
 0009:80551C5A       aSeRsRemixNoteG_4
 0009:80551C74       aSeRsRemixNoteG_5
 0009:80551C8E       aSeRsRemixNoteG_6
 0009:80551CA8       aSeRsRemixNoteG_7
 0009:80551CC2       aSeRsRemixNoteG_8
 0009:80551CDC       aSeRsRemixNoteG_9
 0009:80551CF7       aSeRsRemixNoteG_10
 0009:80551D12       aSeRsRemixNoteG_11
 0009:80551D2D       aSeRsRemixNoteG_12
 0009:80551D48       aSeRsRemixNoteG_13
 0009:80551D63       aSeRsRemixNoteG_14
 0009:80551DC0       aDummy
 0009:80551DC6       aGame_2
 0009:80551DCB       aHellprominence_0
 0009:80551DE0       aOceanringgalax_1
 0009:80551DF0       aOceanfloaterla
 0009:80551E07       aOceanphantomca_0
 0009:80551E1E       aEggstargalaxy_1
 0009:80551E2C       aStardustgalaxy_0
 0009:80551E3B       aBattleshipgala
 0009:80551E4C       aCannonfleetgal_0
 0009:80551E5E       aPhantomgalaxy_0
 0009:80551E6C       aCosmosgardenga
 0009:80551E7F       aAstrodome
 0009:80551E89       aIcevolcanogala
 0009:80551E9A       aHeavenlybeachg_0
 0009:80551EAE       aKoopabattlevs1
 0009:80551EC3       aAstrogalaxy
 0009:80551ECF       aHoneybeekingdo_0
 0009:80551EE5       aReversekingdom
 0009:80551EFA       aFileselect
 0009:80551F05       aSurfinglv1gala
 0009:80551F16       aSandclockgalax_0
 0009:80551F26       aTrileglv1galax_0
 0009:80551F36       aTrileglv2galax
 0009:80551F46       aKoopajrshiplv1
 0009:80551F5B       aKoopajrdriverg
 0009:80551F6F       aFactorygalaxy
 0009:80551F7D       aHoneybeeexgala
 0009:80551F8E       aTamakoroexlv1g
 0009:80551FA2       aTamakoroexlv2g
 0009:80551FB6       aHeavensdoorgal
 0009:80551FC8       aFloaterotaking_1
 0009:80551FDD       aTransformation
 0009:80551FF4       aLibraryroom
 0009:80552000       aPeachcastlegar_0
 0009:80552018       aFishtunnelgala
 0009:80552029       aTeardropgalaxy
 0009:80552038       aEpiloguedemost
 0009:8055204A       aKoopabattlevs3
 0009:8055205F       aDarkroomgalaxy
 0009:8055206E       aPeachcastlefin
 0009:80552085       aSkullsharkgala
 0009:80552096       aKoopabattlevs2
 0009:805520AB       aSurfinglv2gala
 0009:805520BC       aBeltconveyerex
 0009:805520D1       aCocoonexgalaxy
 0009:805520E0       aTeresamario2dg
 0009:805520F4       aBreakdownplane
 0009:8055210A       aCubebubbleexlv
 0009:80552120       aCubebubbleexlv_0
 0009:80552136       aFlippanelexgal
 0009:80552148       aSnowcapsulegal
 0009:8055215A       aE3heavenlybeac
 0009:80552170       aGame_3
 0009:80552220       aBossbegoman
 0009:8055222C       aOffwait_0
 0009:80552234       aCenter_10
 0009:8055223B       aTrample_1
 0009:80552243       aEdgespark
 0009:80552261       aOpeningdemo_1
 0009:8055226D       aDeath_8
 0009:80552273       aEdge_0
 0009:80552278       aBody_68
 0009:8055227D       aPredemowait
 0009:80552289       aSeBmLvBbegoPre
 0009:805522A5       aAttack_7
 0009:805522AC       aSeBmBbegoPrePu
 0009:805522C3       aSeBmBbegoPursu
 0009:805522DC       aTurn_4
 0009:805522E1       aSeBmLvBbegoTur
 0009:805522F5       aShake_0
 0009:805522FB       aOnwait_0
 0009:80552302       aSignwait
 0009:8055230B       aSeBmLvBbegoAla
 0009:80552325       aSeBmLvBbegoAla_0
 0009:8055233A       aSeEmLvBegomanS_0
 0009:80552351       aTramplereactio
 0009:80552361       aSeBmBbegoNeedl
 0009:80552377       aHopend
 0009:8055237E       aSeBmBbegoStomp
 0009:80552392       aSeBmBbegoNeedl_0
 0009:805523A9       aSeEmBegomanRot_0
 0009:805523C0       aDamage_3
 0009:805523C7       aElectricshock
 0009:805523D5       aSeEmBegomanEle
 0009:805523EF       aSeOjStarPieceB_12
 0009:80552406       aSeBmBbegoDead
 0009:80552417       aRecover_0
 0009:8055241F       aCheck_0
 0009:80552425       aSeBmBbegoBigJu
 0009:8055243A       aSpark_1
 0009:80552440       aSeEmBegomanCol
 0009:80552454       aSeEmBegomanCol_0
 0009:80552470       aSeBmLvBbegoRot
 0009:80552488       aSeBmLvBbegoPur
 0009:8055249E       aSeBmLvBbegoRot_0
 0009:805524B6       aSeBmLvBbegoRot_1
 0009:805524D0       aSeBmLvBbegoRot_2
 0009:805524EC       _11BossBegoman::`vtbl'
 0009:805526FB       aBossbegomanhea
 0009:80552718       aEdge
 0009:8055271D       aDemowait
 0009:80552726       aOpeningdemo
 0009:80552732       aOnwait
 0009:80552739       aOffwait
 0009:80552741       aTurn
 0009:80552746       aTurnend
 0009:8055286C       aShadow
 0009:80552873       aBody_2
 0009:80552878       aAttack
 0009:8055287F       aStar_0
 0009:80552884       aChildkameck
 0009:805528A1       aBosskameckmove
 0009:805528C9       aSeOjStarPieceB_13
 0009:805528E0       aSuso1
 0009:805528E6       aCap1
 0009:805528EB       aSeBvKameckAtkS
 0009:80552904       aBosskameck
 0009:805529F0       aBody_69
 0009:805529F5       aWait_23
 0009:80552A95       aBosskameckbatt
 0009:80552AAA       aDemobosskameck
 0009:80552ABE       aDemobosskameck_0
 0009:80552AD4       aDemobosskameck_1
 0009:80552AE7       aDemobosskameck_2
 0009:80552AFC       aDemobosskameck_3
 0009:80552B13       aDemobosskameck_4
 0009:80552BB6       aBattlewait
 0009:80552BC1       aMbgmBoss04
 0009:80552BCE       aSeBmLvKameckDe
 0009:80552BEE       aSeBmKameckDemo
 0009:80552C06       aSeBvKameckAppe
 0009:80552C1A       aSeBmLvKameckDe_0
 0009:80552C36       aSeBmKameckDemo_0
 0009:80552C52       aSeBmLvKameckDe_1
 0009:80552C6C       aSeBvKameckDead
 0009:80552C7E       aSeBmKameckDead
 0009:80552C90       aSeBmKameckDemo_1
 0009:80552CAE       aSeSyPowStarApp
 0009:80552CC4       aMarioposition
 0009:80552CD2       aKameckposition
 0009:80552E20       _19BossKameckSequencer::`vtbl'
 0009:80552EF0       aVs1
 0009:80552F00       _13BossKameckVs1::`vtbl'
 0009:80552FB8       aVs2
 0009:80552FD7       aBosskameckbarr
 0009:80552FEC       _13BossKameckVs2::`vtbl'
 0009:8055309D       aHitmarknormal
 0009:805530AB       aPowerstarc
 0009:805530B6       aWait_24
 0009:805530BB       aSeBmLvKameckFl
 0009:805530D1       aHide_2
 0009:805530D6       aSeBmKameckHide
 0009:805530ED       aSeBmKameckHide_0
 0009:80553105       aMove_9
 0009:8055310A       aSeBmLvKameckHi
 0009:80553124       aAppear_11
 0009:8055312B       aSeBmKameckAppe
 0009:80553145       aSeBmKameckAppe_0
 0009:8055315E       aSummonwait
 0009:80553169       aSummon
 0009:80553170       aAttackwait
 0009:8055317B       aSeBmLvKameckSt
 0009:80553196       aAttack_8
 0009:8055319D       aSeBmKameckStaf
 0009:805531B6       aSeBvKameckStaf
 0009:805531CF       aSeBmKameckStaf_0
 0009:805531E9       aDown_0
 0009:805531EE       aSeBvKameckLast
 0009:80553207       aSeBmKameckLast
 0009:80553220       aDamage_4
 0009:80553227       aSeBvKameckDama
 0009:8055323B       aSeBmKameckDama
 0009:8055324F       aRecover_1
 0009:80553257       aSeBmKameckReco
 0009:8055326C       aGuard_0
 0009:80553274       _21BossKameckStateBattle::`vtbl'
 0009:80553380       aBody_1
 0009:80553385       aBodyhipdrop
 0009:8055339C       aBodyground
 0009:805533A7       aRightfoota3
 0009:805533B3       aLeftfoota3
 0009:805533BE       aRightfootb3
 0009:805533CA       aLeftfootb3
 0009:805533D5       aRightfootc3
 0009:805533E1       aLeftfootc3
 0009:80553420       aBossstinkbug
 0009:8055342D       aShadow_0
 0009:8055343D       aBossstinkbugwi
 0009:8055344E       aSwitch_1
 0009:80553460       aBossstinkbugbo
 0009:80553479       aBody_70
 0009:8055347E       aNormal_5
 0009:80553485       aFall_1
 0009:8055348A       aAttackLeft
 0009:80553496       aAttackRight
 0009:805534A3       aSeOjStarPieceB_14
 0009:805534BA       aBodyhipdrop_0
 0009:805534C6       aDischargeposit
 0009:805534D8       aSeBmBossBugBom
 0009:805534F1       aDischarge
 0009:805535B0       aGroundwalk
 0009:805535BB       aSeBvBossBugAtt
 0009:805535D3       aFind_0
 0009:805535D8       aGroundride
 0009:805535E3       aGroundrun
 0009:805535ED       aSeBmLvBossBugR
 0009:8055360D       aAttacksuccess
 0009:8055361B       aSeBvBossBugGla
 0009:8055362F       aCooldown
 0009:80553638       aSeBmLvBossBugB
 0009:80553650       aGroundturnleft
 0009:8055365F       aGroundturnrigh
 0009:8055366F       aSeBmBossBugPre
 0009:80553686       aGrounddamage
 0009:80553693       aFall_2
 0009:80553698       aSeBvBossBugDam
 0009:805536AE       aFlywait_0
 0009:805536B6       aFlyride
 0009:805536BE       aFlyrollright
 0009:805536CB       aFlyrollwaitrig
 0009:805536DC       aFlyrollendrigh
 0009:805536EC       aFlyrollsignrig
 0009:805536FD       aSeBvBossBugRol
 0009:80553711       aSeBvBossBugTur
 0009:80553725       aFlyturnsign
 0009:80553731       aFlyturn
 0009:80553739       aSeBmLvBossBugF
 0009:80553753       aFalldamage
 0009:8055375E       aSeBvBossBugAng
 0009:80553778       aGround
 0009:8055377F       aTurndown
 0009:80553788       aLand_1
 0009:8055378D       aSeBvBossBugAng_0
 0009:805537AA       aTakeoff
 0009:805537B2       aSeBmLvBossBugF_0
 0009:805537CE       aSeBmLvBossBugF_1
 0009:805537E9       aSeBmLvBossBugF_2
 0009:80553805       aSeBmLvBossBugF_3
 0009:80553822       aSeBmLvBossBugF_4
 0009:80553840       aSeBmLvBossBugF_5
 0009:8055385B       aSeBmLvBossBugF_6
 0009:80553878       aSeBmLvBossBugF_7
 0009:80553894       _22BossStinkBugActionBase::`vtbl'
 0009:805538FB       aOpen_1
 0009:80553900       aSeSyVsBossLast_0
 0009:80553918       _25BossStinkBugActionFlyHigh::`vtbl'
 0009:80553A83       aOpen_2
 0009:80553A88       aSeSyVsBossDama_0
 0009:80553AA0       _24BossStinkBugActionFlyLow::`vtbl'
 0009:80553B8B       aClose_0
 0009:80553B91       aGround_0
 0009:80553B98       aSeSyVsBossDama_1
 0009:80553BB0       _24BossStinkBugActionGround::`vtbl'
 0009:80553CA4       _27BossStinkBugActionSequencer::`vtbl'
 0009:80553D49       aBossstinkbugde
 0009:80553D5A       aAngrydemo
 0009:80553D79       aBattlewait_0
 0009:80553D84       aBattlewaitnoin
 0009:80553D96       aAngry
 0009:80553D9C       aSeBmLvBossBugF_8
 0009:80553DB6       aSeBmLvBossBugF_9
 0009:80553DD2       aSeBmLvBossBugF_10
 0009:80553DEE       aMarioposition_0
 0009:80553DFC       aBoss
 0009:80553E58       aBossstinkbugbo_0
 0009:80553E69       aBody_71
 0009:80553E6E       aBomb_0
 0009:80553E73       aExplosion_1
 0009:80553E7D       aSignal
 0009:80553E84       aSeBmBossBugBom_0
 0009:80553E9F       aSeBmBossBugBom_1
 0009:80553EC0       aSeBmBossBugBom_2
 0009:80553EDB       aSeBmBossBugBom_3
 0009:80553EF6       aSeBmBossBugBom_4
 0009:80553F0F       aSeBmBossBugBom_5
 0009:80553F30       _16BossStinkBugBomb::`vtbl'
 0009:80554021       aBossstinkbugde_0
 0009:80554032       aFinishdemo
 0009:80554052       aBattlewait_1
 0009:8055405D       aBattlewaitnoin_0
 0009:8055406F       aMarioposition_1
 0009:8055407D       aBoss_0
 0009:80554082       aDeath_9
 0009:80554088       aSeBmBossBugExp
 0009:80554111       aBossstinkbugde_1
 0009:80554122       aFlydemo
 0009:8055413F       aBattlewait_2
 0009:8055414A       aBattlewaitnoin_1
 0009:8055415C       aSeBmLvBossBugF_11
 0009:80554176       aSeBmLvBossBugF_12
 0009:80554191       aSeBmLvBossBugF_13
 0009:805541AD       aSeBmLvBossBugS
 0009:805541CA       aSeBmBossBugClo
 0009:805541E4       aSeBmLvBossBugF_14
 0009:80554200       aMarioposition_2
 0009:8055420E       aBoss_1
 0009:80554268       aAttackLeft_0
 0009:80554274       aAttackRight_0
 0009:80554299       aBossstinkbugde_2
 0009:805542AA       aOpeningdemo_2
 0009:805542D3       aBattlewait_3
 0009:805542DE       aMarioposition_3
 0009:805542EC       aBoss_2
 0009:80554351       aTail1
 0009:80554357       aTail2
 0009:8055435D       aTail3
 0009:80554363       aTail4
 0009:80554369       aTail5
 0009:8055436F       aTail6
 0009:80554375       aTail7
 0009:805543A4       aDinopackun
 0009:805543AF       aDinopackun2
 0009:805543BB       aHead_2
 0009:805543C0       aHead_3
 0009:805543C5       aBody_3
 0009:805543CA       aShadow_1
 0009:805543D1       aOpeningdemo_0
 0009:805543DD       aFlowerall
 0009:805543E7       aNormal
 0009:805543F9       aTailroot
 0009:8055441C       aTailball
 0009:8055442A       aDinopackunfoot
 0009:80554456       aEggshell
 0009:80554470       aDinopackuneggs
 0009:80554495       aDinopackuntail
 0009:805544A8       aCrydemo
 0009:805544B0       aAngrydemo_0
 0009:805544BA       aDowndemo
 0009:805544E8       aSpine1_2
 0009:805544EF       aSeOjStarPieceH
 0009:80554509       aFootl1
 0009:80554510       aFootr1
 0009:80554517       aSeOjStarPieceB
 0009:805545E0       aWait_25
 0009:805545E5       aFind_1
 0009:805545EA       aSeBvDPakkunFin
 0009:805545FE       aSeBmDPakkunSla
 0009:80554614       aSeBmDPakkunLan
 0009:80554628       aCooldown_0
 0009:80554631       aAttackhit_0
 0009:8055463B       aSeBvDPakkunGla
 0009:805546B0       aDinopackunball
 0009:805546BF       aTaildrag
 0009:805546C8       aTaildragblack
 0009:805546D6       aBody_72
 0009:805546DB       aSeBmLvDPakkunT_0
 0009:805546F7       aSeBmLvDPakkunT_1
 0009:80554720       aSeBmDPakkunTai
 0009:8055473B       aSeBmLvDPakkunT
 0009:80554756       aSeBmDPakkunTai_0
 0009:8055487E       aEggwalk
 0009:80554886       aSeBvDPakkunEgg
 0009:8055489E       aSeBmDPakkunSla_0
 0009:805548B4       _19DinoPackunBattleEgg::`vtbl'
 0009:80554936       aEggwalk_0
 0009:8055493E       aSeBvDPakkunEgg_0
 0009:80554956       aSeBmDPakkunSla_1
 0009:805549E0       a2_0
 0009:805549E7       aInvalidhitmark_0
 0009:805549F6       aFind_2
 0009:805549FB       aTurnright
 0009:80554A05       aTurnleft
 0009:80554A0E       aSeBvDPakkunEgg_1
 0009:80554A26       aSeBmDPakkunSla_2
 0009:80554A3C       aWalk_2
 0009:80554A41       aChase_0
 0009:80554A47       aSeBvDPakkunCha
 0009:80554A5C       _22DinoPackunBattleVs1Lv1::`vtbl'
 0009:80554B27       aInvalidhitmark_1
 0009:80554B36       aFind_3
 0009:80554B3B       aAngrywalk
 0009:80554B45       aSeBvDPakkunEgg_2
 0009:80554B5D       aSeBmDPakkunSla_3
 0009:80554B73       aAngrychase
 0009:80554B7E       aSeBvDPakkunCha_0
 0009:80554C5F       aInvalidhitmark_2
 0009:80554C6E       aAngrywalk_0
 0009:80554C78       aWalk_3
 0009:80554C7D       aTurnright_0
 0009:80554C87       aTurnleft_0
 0009:80554C90       aSeBvDPakkunEgg_3
 0009:80554CA8       aSeBmDPakkunSla_4
 0009:80554CBE       aFind_4
 0009:80554CC3       aSeBvDPakkunCha_1
 0009:80554CD8       aFirechase
 0009:80554CE2       aChase_1
 0009:80554CE8       aDownmouth1
 0009:80554E25       aOpeningdemo_3
 0009:80554E31       aBattlewait_4
 0009:80554E3C       aSeDmMeetBoss
 0009:80554E4C       aSeBvDPakkunEgg_4
 0009:80554E65       aSeBmDPakkunSla_5
 0009:80554E7B       aSeBmDPakkunEgg
 0009:80554E94       aSeBmDPakkunEgg_0
 0009:80554EAF       aSeBvDPakkunEgg_5
 0009:80554EC8       aSeBmDPakkunTai_1
 0009:80554EE3       aMbgmGalaxyInte
 0009:80554EF5       aCrydemo_0
 0009:80554EFD       aAngrydemo_1
 0009:80554F07       aSeBmLvDPakkunA
 0009:80554F1F       aDowndemo_0
 0009:80554F28       aSeBvDPakkunDie
 0009:80554F3B       aSeBmDPakkunFal
 0009:80554F54       aSeBmDPakkunExp
 0009:80555010       aDinopackundemo
 0009:80555027       aOpeningdemo_4
 0009:80555033       aCocoonfly
 0009:8055503D       aLandstiffen
 0009:80555049       aJumpback
 0009:80555052       aMarioposition_4
 0009:805550E8       aDinopackuneggs_0
 0009:805550FB       aNormal_6
 0009:805551B6       aDinopackunfire
 0009:805551C9       aAttack_9
 0009:805551D0       aBreak_4
 0009:805551D6       aSeBmDPakkunFir
 0009:805551F6       aMove_10
 0009:805551FB       aSeBmLvDPakkunF
 0009:80555218       aSeBmDPakkunFir_0
 0009:8055536D       aFind_5
 0009:80555372       aSeBvDPakkunFin_0
 0009:80555386       aSeBmDPakkunSla_6
 0009:8055540B       aSeBvDPakkunSpi
 0009:80555423       aSeBmDPakkunSla_7
 0009:80555450       aHead_13
 0009:80555455       aPunchedtailtop
 0009:80555464       aPunchedtailrig
 0009:80555475       aPunchedtaillef
 0009:80555485       aSeSyVsBossDama_2
 0009:8055549C       aSeBmDPakkunEgg_1
 0009:805554B7       aSeBvDPakkunEgg_6
 0009:805554D0       aEggbroken
 0009:805554DA       aBreak_5
 0009:805554E0       aEggdamagetop
 0009:805554ED       aSeBmDPakkunHea
 0009:80555509       aSeBmDPakkunDam
 0009:8055551F       aSeBvDPakkunDam
 0009:80555535       aDamagetop
 0009:8055553F       aDamageright
 0009:8055554B       aDamageleft
 0009:80555556       aSeSyVsBossLast_1
 0009:8055556D       aSeBmDPakkunLas
 0009:80555588       aSeBvDPakkunLas
 0009:805555A3       aLastdamagetop
 0009:805555B1       aLastdamagerigh
 0009:805555C1       aLastdamageleft
 0009:8055568B       aNormal_7
 0009:80555692       aTailfire
 0009:8055569B       aCool
 0009:805556A0       aHeadfire
 0009:805556A9       aBodyfire
 0009:805556B2       aTailfiremisfir
 0009:805556C2       aSeBmDPakkunTai_2
 0009:805556DF       aAwake
 0009:805556E5       aHeat
 0009:805556EA       aSeBmDPakkunTai_3
 0009:80555820       aBody_73
 0009:805559BA       aAttack_10
 0009:805559C1       aDinopackuntrac
 0009:805559D5       aSeBmDPakkunFir_1
 0009:805559F2       aTrackfire
 0009:80555BB8       aAwake_0
 0009:80555BBE       aTailfire_0
 0009:80555BC7       aHeat_0
 0009:80555CA0       aHead
 0009:80555CA5       aHead_0
 0009:80555CAA       aBody
 0009:80555CAF       aLegLeft
 0009:80555CB8       aLegRight
 0009:80555CC2       aArmLeft
 0009:80555CCB       aArmRight
 0009:80555CD5       aTail
 0009:80555CDA       aStar
 0009:8055632F       aDodoryu
 0009:80556337       aShadow_13
 0009:8055633E       aUndergroundwal
 0009:8055634E       aNormal_8
 0009:80556366       aDodoryuclosedc_0
 0009:8055637C       aSeOjStarPieceH_3
 0009:80556396       aLegl2
 0009:8055639C       aLegr2
 0009:805563A2       aHandl_0
 0009:805563A8       aHandr_3
 0009:805563AE       aTail_1
 0009:805563C0       aDodoryustatewa
 0009:805563D1       aDodoryudemoope
 0009:805563E4       aDodoryustatelv
 0009:805563F4       aDodoryudemoapp
 0009:80556406       aDodoryustatelv_0
 0009:80556416       aDodoryudemoang
 0009:80556427       aDodoryustatelv_1
 0009:80556437       aDodoryudemodow
 0009:80556456       aDodoryubank
 0009:80556462       aJump
 0009:80556482       aDodoryurabbit
 0009:80556490       aBody_74
 0009:80556495       aSpine_2
 0009:8055649B       aBlink
 0009:805564A1       aSeSmRabbitJump_1
 0009:805564B3       aWalk_4
 0009:805564B8       aBlink_0
 0009:805564BE       aTired_0
 0009:805564C4       aWait_26
 0009:805564C9       aStarjump
 0009:805564D2       aStarwait
 0009:805564EC       aDodoryuleadhil_0
 0009:80556508       aDodoryuleadhil
 0009:805567D3       aO
 0009:805567E2       aOpeningdemo_5
 0009:80556801       aSeDmMeetBoss_0
 0009:80556811       aBgmPinch3
 0009:8055681D       aEffectwalk
 0009:80556828       aNormal_9
 0009:8055682F       aSeBmLvDodoryuM
 0009:8055684F       aEffectwalkhide
 0009:8055685E       aOpeningappear
 0009:8055686C       aAppear_12
 0009:80556873       aSeBvDodoryuApp
 0009:8055688A       aSeBmDodoryuApp
 0009:805568A4       aSeBmLvDodoryuM_0
 0009:805568C1       aSeBvDodoryuFai
 0009:805568DB       aOpeningwalk
 0009:805568E7       aWalk_5
 0009:805568EC       aHide_3
 0009:805568F1       aEffectwalkappe
 0009:80556902       aAppeardemo
 0009:80556920       aNose
 0009:80556925       aSeOjStarPieceB_15
 0009:8055693C       aAngrydemo_2
 0009:80556959       aAngrystart
 0009:80556964       aAngry_0
 0009:8055696A       aDowndemo_1
 0009:80556986       aSeBmDodoryuDie
 0009:80556D60       aDodoryuhilla
 0009:80556D6D       aDodoryuhillb_0
 0009:80556D7A       aDodoryuhillc_0
 0009:80556DA1       aMogucchihill
 0009:80556DAE       aDodoryuhill
 0009:80556E98       aNormal_10
 0009:80556E9F       aSeBmLvDodoryuM_1
 0009:80556EBF       aSeBmLvDodoryuM_2
 0009:80556EDC       aSwoonstart
 0009:80556EE7       aSeBmDodoryuJum
 0009:80556EFE       aSeBvDodoryuHip
 0009:80556F1A       aSwoon_0
 0009:80556F20       aSeBmLvDodoryuS
 0009:80556F37       aSeBvLvDodoryuS
 0009:80556F4E       aSwoonend
 0009:80556F57       aSeBvDodoryuWak
 0009:80556F6C       aPunchdamage
 0009:80556F78       aSeBvDodoryuSpi
 0009:80556F91       aJump_0
 0009:80556F96       aSeBmDodoryuHip
 0009:80556FB4       aSmalllandsmoke
 0009:80556FC3       aOpeningappear_0
 0009:80556FD1       aAppear_13
 0009:80556FD8       aSeBmDodoryuApp_0
 0009:80556FF2       aSeBvDodoryuApp_0
 0009:80557009       aOpeningwalk_0
 0009:80557015       aWalk_6
 0009:8055701A       aHide_4
 0009:8055701F       aEffectwalkappe_0
 0009:80557030       aEffectwalk_0
 0009:8055703B       aEffectwalkhide_0
 0009:80557229       aAttacksign
 0009:80557234       aSeBmDodoryuSan
 0009:8055724E       aSeBmLvDodoryuM_3
 0009:8055726B       aSeBmLvDodoryuM_4
 0009:8055728B       aSeBmDodoryuApp_1
 0009:805572A5       aSeBvDodoryuApp_1
 0009:805572BC       aSeBmLvDodoryuM_5
 0009:805572D9       aSeBmDodoryuJum_0
 0009:805572F0       aSeBvDodoryuHip_0
 0009:8055730C       aSeBmLvDodoryuS_0
 0009:80557323       aSeBvLvDodoryuE
 0009:8055733B       aSeBvDodoryuWak_0
 0009:80557350       aSeBvDodoryuSpi_0
 0009:80557369       aSeBvDodoryuAtk
 0009:80557383       aSeBvLvDodoryuC
 0009:8055739C       aSeBmDodoryuHid
 0009:805573B4       aSeBmLvDodoryuA
 0009:805573CB       aSeBvLvDodoryuE_0
 0009:805573E6       aSeBvDodoryuHid
 0009:805573F9       aHipdropjump
 0009:80557405       aSeBmDodoryuHip_0
 0009:80557423       aArmLeft_0
 0009:8055742C       aArmRight_0
 0009:80557436       aLegLeft_0
 0009:8055743F       aLegRight_0
 0009:80557449       aTail_2
 0009:8055744E       aDodoryuclosedc_1
 0009:805576E8       aUndergroundwal_0
 0009:805576F8       aNormal_11
 0009:805576FF       aSeBmLvDodoryuM_6
 0009:80557860       aKoopa
 0009:80557866       aShadow_14
 0009:80557900       aWalk_7
 0009:80557905       aBody_75
 0009:8055790A       aSearch
 0009:80557911       aFind_6
 0009:80557916       aRecover_2
 0009:80557984       aGuard
 0009:8055798A       aAttackhipdrop
 0009:80557998       aAttackshockwav
 0009:805579A8       aAttackfireshor
 0009:805579B8       aDamageescape
 0009:805579C5       aJumpaway
 0009:805579CE       aAttackspin
 0009:805579D9       aAttackroll
 0009:805579E4       aAttackfirelong
 0009:80557B08       aTongue2_0
 0009:80557B6E       aDemobattlestai
 0009:80557B97       aTongue2_1
 0009:80557B9F       aSeOjKoopaBulle
 0009:80557BB8       aMbgmGalaxy15Hu
 0009:80557BCD       aWait_27
 0009:80557BD2       aAttackfire
 0009:80557BDD       aJumpstartfast
 0009:80557BEB       aSeBmKoopaJump
 0009:80557BFC       aJumpfast
 0009:80557C05       aLandfast
 0009:80557C0E       aSeBmKoopaLand
 0009:80557CB7       aDemokoopabattl
 0009:80557CF1       aDemokoopabattl_0
 0009:80557D11       aDemokoopabattl_1
 0009:80557D31       aDemokoopabattl_2
 0009:80557D51       aDemokoopavs3wa
 0009:80557D62       aWait_28
 0009:80557DC3       aChaseroll
 0009:80557DCD       aAttackfire_0
 0009:80557DD8       aAttackshockwav_0
 0009:80557DE8       aDamage_5
 0009:80557DEF       aJumpaway_0
 0009:80557DF8       aGuard_1
 0009:80557EAB       aAttackroll_0
 0009:80557EB6       aAttackfire_1
 0009:80557EC1       aDamage_6
 0009:80557EC8       aJumpaway_1
 0009:80557ED1       aGuard_2
 0009:80557FC7       aDemokoopapower
 0009:80557FDD       aDemokoopapower_0
 0009:80558030       aBattlewait_5
 0009:8055803B       aSeOjStarPieceB_16
 0009:805580D8       aDemoLv2
 0009:8055810C       aDemokoopafall
 0009:8055814C       aDeath_10
 0009:8055817C       aJumpsoon
 0009:80558185       aSeBmLvKoopaFal
 0009:805581A3       aLand_2
 0009:805581A8       aSeBmKoopaFlipR
 0009:805581C5       aSeBvKoopaLandH
 0009:805581DC       _27KoopaDemoFallToPlanetVs3Lv2::`vtbl'
 0009:80558290       aDemoLv3
 0009:805582BE       aDemokoopafalls
 0009:80558301       aDeath_11
 0009:80558307       aMbgmBossKoopaF
 0009:8055831D       aSeBmLvKoopaFal_0
 0009:80558337       aSeBmLvKoopaFal_1
 0009:80558351       aSeBmLvKoopaFal_2
 0009:8055836B       aSeBmKoopaFallS
 0009:805583B1       aJumpsoon_0
 0009:805583BA       aLand_3
 0009:805583BF       aSeBmKoopaFlipR_0
 0009:805583DC       aSeBvKoopaLandH_0
 0009:805584A8       aDemoN
 0009:80558538       aJumpsoon_1
 0009:8055856B       aSeBmLvKoopaFal_3
 0009:80558589       aLand_4
 0009:8055858E       aSeBmKoopaFlipR_1
 0009:805585AB       aSeBvKoopaLandH_1
 0009:805586D7       aKoopafire
 0009:805586E1       aAttack_11
 0009:805586E8       aTongue2_2
 0009:805586F0       aWait_29
 0009:805586F5       aSeOjKoopaBulle_0
 0009:8055870E       aDisappear_0
 0009:80558718       aSeOjKoopaBulle_1
 0009:80558733       aSeEmFireBubble
 0009:8055874D       aSeOjLvKoopaBul
 0009:80558810       aMeteorstrike
 0009:8055881D       aFire_3
 0009:80558837       aMeteorstrikebr
 0009:80558849       aSeBmKoopajrShi_1
 0009:80558869       aSeOjKoopaFireS
 0009:8055887F       aSeOjKoopaFireE
 0009:80558898       aSeBmLvKoopajrS_1
 0009:805588B5       aBreak_6
 0009:80558958       aDemokoopavs3wa_0
 0009:80558969       aBody_76
 0009:8055896E       aBreak_7
 0009:80558974       aAttackshell
 0009:80558980       aSeBmKoopaDamag
 0009:80558995       aSeBvKoopaTailR
 0009:805589B0       aSeSyVsBossDama_3
 0009:805589D1       aKoopabattlemap
 0009:805589F1       aKoopabattlemap_0
 0009:80558A12       aKoopabattlemap_1
 0009:80558A49       aKoopabattlemap_2
 0009:80558A80       aKoopabattlemap_3
 0009:80558AAC       aWait_30
 0009:80558AC4       aKoopavs3holesu
 0009:80558AED       aKoopavs3holesu_0
 0009:80558B10       aPeach
 0009:80558B21       aKoopajr_0
 0009:80558B38       aKoopajrship_2
 0009:80558B44       aMeteorstrike_0
 0009:80558B7B       aKooparock
 0009:80558B85       aRockfixpos
 0009:80558B9F       aKooparollball
 0009:80558BAD       aRollballfixpos
 0009:80558BCD       aKoopathorn
 0009:80558BD8       aTailthornbigfi
 0009:80558BFC       aTailthornsmall
 0009:80558C1A       aKoopaarmorbrea
 0009:80558C2A       aArmorbreakfixp
 0009:80558C44       aKoopathornbrea
 0009:80558C54       aThornbreakfixp
 0009:80558CA0       _18KoopaPowerUpSwitch::`vtbl'
 0009:80558D23       aKoopaplanetsha
 0009:80558D35       aHip1
 0009:80558DB8       _17KoopaRestarterVs3::`vtbl'
 0009:80558E3D       aKooparockbreak
 0009:80558E4C       aRockbreakfixpo
 0009:80558ED8       aBody_77
 0009:80558EDD       aSpine_3
 0009:80558EE3       aFace_1
 0009:80558EE8       aWristl
 0009:80558EEF       aWristr
 0009:80558EF6       aArml
 0009:80558EFB       aArml2_1
 0009:80558F01       aArmr
 0009:80558F06       aArmr2_1
 0009:80558F0C       aLegl
 0009:80558F11       aLegl2_0
 0009:80558F17       aLegr
 0009:80558F1C       aLegr2_0
 0009:80558F22       aFootl_0
 0009:80558F28       aFootl2
 0009:80558F2F       aFootr_0
 0009:80558F35       aFootr2
 0009:80558F3C       aTail_3
 0009:80558F41       aTail2_0
 0009:80558F47       aTailtop
 0009:80558F4F       aTail3_0
 0009:80558F55       aGuardbody
 0009:80558F5F       aAttackshell_0
 0009:80558F6B       aAttackfootl
 0009:80558F77       aAttackfootr
 0009:80558F83       aAttackhipdrop_0
 0009:80558F91       aChaserollattac
 0009:80558FA1       aChaserollface
 0009:80558FAF       aChaserollstarp
 0009:80558FC2       aAttackroll_1
 0009:80558FCD       aAttackrollrece
 0009:80558FE0       aAttackrollstar
 0009:80558FF4       aReceivertail
 0009:80559001       aReceivertailto
 0009:80559011       aDamageescapebo
 0009:80559022       aDamageescapepu
 0009:80559060       aSequence
 0009:80559123       aDemokoopavs1st
 0009:80559148       aDemokoopavs1do
 0009:80559187       aSeAtKoopaFalld
 0009:805591A0       aDeath_12
 0009:805591A6       aSeBvKoopaBattl
 0009:80559282       aDemokoopavs2st
 0009:805592D1       aDemokoopavs1do_0
 0009:805592E2       aDemokoopavs2do
 0009:805592F3       aSeAtKoopaFalld_0
 0009:8055930C       aDeath_13
 0009:80559312       aSeBvKoopaBattl_0
 0009:8055942B       aDemokoopameetp
 0009:8055943E       aDemokoopabattl_3
 0009:80559471       aDemokoopavs3st
 0009:80559483       aDemokoopavs3do
 0009:8055949D       aWait_31
 0009:805594A2       aSeAtKoopaFalld_1
 0009:805594BB       aSeBvKoopaBattl_1
 0009:805594F5       aDeath_14
 0009:805594FB       aSeBmKoopaDownL
 0009:80559518       aSeBmKoopaDownT
 0009:80559534       aSeBmLvKoopaDow
 0009:8055954F       aSeBmLvKoopaDow_0
 0009:80559568       aSeBmLvKoopaFal_4
 0009:80559581       aSeBmKoopaDownI
 0009:805596DB       aKoopashockwave
 0009:805596EA       aSpread
 0009:805596F1       aAttack_12
 0009:80559703       aKoopashockwave_0
 0009:80559718       aErase_0
 0009:8055971E       aSeBmKoopaSwave
 0009:80559736       aSeBmLvKoopaSwa
 0009:805597E8       aState
 0009:805597FE       aAttackfirestar
 0009:8055980E       aAttackfire_2
 0009:805598A2       aAttackfirestar_0
 0009:805598B2       aAttackfire_3
 0009:805599B1       aAttackhipdrop_1
 0009:805599BF       aBody_78
 0009:805599C4       aHipdropjumpsta
 0009:805599D5       aHipdropjump_0
 0009:805599E1       aSeBmKoopaJump_0
 0009:805599F2       aHipdropattackd
 0009:80559A04       aSeBvKoopaHipdr
 0009:80559A18       aSeBmKoopaLand_0
 0009:80559A29       aSeOjKoopaPlate
 0009:80559A43       aHipdropland
 0009:80559BA3       aAttackroll_2
 0009:80559BAE       aAttackrollrece_0
 0009:80559BC1       aAttackrollstar_0
 0009:80559BD5       aWait_32
 0009:80559BDA       aAttackrollstar_1
 0009:80559BEA       aSeBmLvKoopaAtt
 0009:80559C05       aSeBmLvKoopaCha
 0009:80559C1F       aAttackrollend
 0009:80559C2D       aAttackrollland
 0009:80559CF2       aAttackhipdrop_2
 0009:80559D00       aShockwavejumps
 0009:80559D13       aShockwavejump3
 0009:80559D24       aJumpfast_0
 0009:80559D2D       aShockwavejump
 0009:80559D3B       aSeBmKoopaJump_1
 0009:80559D4C       aBody_79
 0009:80559D51       aSeBmKoopaLand_1
 0009:80559D62       aShockwaveland
 0009:80559E62       aAttackspin_0
 0009:80559E6D       aSeBmKoopaSpinE
 0009:80559E83       aSeBvKoopaGuard
 0009:80559E95       aWait_33
 0009:80559E9A       aSpinstart
 0009:80559EA4       aSpin_4
 0009:80559EA9       aSpinend
 0009:80559EB1       aSpineven
 0009:80559FD0       aChaserollface_0
 0009:80559FDE       aChaserollattac_0
 0009:80559FEE       aChaserollstarp_0
 0009:8055A001       aRollingsmoke
 0009:8055A00E       aBreak_8
 0009:8055A014       aSeBmKoopaRockB
 0009:8055A02B       aWait_34
 0009:8055A030       aChaserollstart
 0009:8055A03F       aAttackrollstar_2
 0009:8055A04F       aSeBmLvKoopaRoc
 0009:8055A06A       aChaseroll_0
 0009:8055A074       aAttackroll_3
 0009:8055A07F       aSeBmLvKoopaCha_0
 0009:8055A099       aChaserollend
 0009:8055A0A6       aAttackrollend_0
 0009:8055A0B4       aChaserollland
 0009:8055A25E       aReceivertail_0
 0009:8055A26B       aReceivertailto_0
 0009:8055A27B       aDamageescapebo_0
 0009:8055A28C       aDamageescapepu_0
 0009:8055A29D       aSeBmKoopaDamag_0
 0009:8055A2B2       aSeSyVsBossDama_4
 0009:8055A2C9       aSeBvKoopaFlipD
 0009:8055A2E3       aSeSyVsBossLast_2
 0009:8055A2FA       aSeSyVsKoopaLas
 0009:8055A312       aSeBvKoopaFlipD_0
 0009:8055A32C       aSeSyVsBossDama_5
 0009:8055A343       aEscaperunstart
 0009:8055A352       aSeBmKoopaBurn
 0009:8055A363       aSeBvKoopaBurnS
 0009:8055A37A       aEscaperunstart_0
 0009:8055A38D       aSeBmKoopaLand_2
 0009:8055A39E       aEscaperunstart_1
 0009:8055A3B1       aEscaperun
 0009:8055A3BB       aEscapeturn
 0009:8055A3C6       aEscapeturnend
 0009:8055A3D4       aEscapeend
 0009:8055A3DE       aDamagetailruns
 0009:8055A3F1       aDamagetailrunf
 0009:8055A408       aSeBmLvKoopaSwo
 0009:8055A41D       aSeBmLvKoopaTai
 0009:8055A435       aSeBmLvKoopaTai_0
 0009:8055A452       aDamagetailrun
 0009:8055A460       aDamagetailrunf_0
 0009:8055A472       aDamagetailrune
 0009:8055A483       aDown_1
 0009:8055A488       aDownsmoke
 0009:8055A492       aBody_80
 0009:8055A497       aDownland
 0009:8055A4A0       aSeOjStarPieceB_17
 0009:8055A60A       aFace_2
 0009:8055A60F       aGuardbody_0
 0009:8055A619       aTail_4
 0009:8055A61E       aTailtop_0
 0009:8055A626       aGuardface
 0009:8055A630       aSeBvKoopaGuard_0
 0009:8055A642       aAttacktail
 0009:8055A6D8       aJumpawaystart
 0009:8055A6E6       aJumpaway_2
 0009:8055A6EF       aSeBmKoopaJump_2
 0009:8055A700       aSeBvKoopaJump
 0009:8055A711       aBody_81
 0009:8055A716       aSeBmKoopaLand_3
 0009:8055A727       aJumpawayland
 0009:8055A8A4       aOtaking
 0009:8055A8AC       aAppear_0
 0009:8055A8B3       aDown
 0009:8055A8B8       aCrown
 0009:8055A8BE       aWait_0
 0009:8055A8C8       aFireball
 0009:8055A8D1       aFirebubble
 0009:8055A8DC       aOtakingmagma
 0009:8055A8E9       aOtakingmagmabl
 0009:8055A8FB       aOtakingfoot
 0009:8055A907       aOtakinglongfoo
 0009:8055A917       aOtakinglv2
 0009:8055A922       aOtakingfootlv2
 0009:8055A931       aBody_82
 0009:8055A936       aFace_3
 0009:8055A93B       aMeRallyComboLa
 0009:8055A97D       aFace_4
 0009:8055A982       aSearch_0
 0009:8055A989       aSeBvOtakingDam
 0009:8055A99E       aSeBmOtakingDam
 0009:8055A9B3       aSeSyVsBossDama_6
 0009:8055A9CA       aSeSyVsBossDama_7
 0009:8055A9E1       aSeSyVsBossDama_8
 0009:8055A9F8       aWaitr
 0009:8055A9FE       aWaitl
 0009:8055AA04       aSeOjStarPieceB_18
 0009:8055AA22       aSeBmOtakingMag
 0009:8055AA3E       aSeBmOtakingMag_0
 0009:8055AA59       aAttack_13
 0009:8055AA60       aSeBvOtakingPre
 0009:8055AA7C       aOtakingcocoatt
 0009:8055AA8E       aFireattack
 0009:8055AA99       aSeBvOtakingPre_0
 0009:8055AAB4       aSeBmLvOtakingP
 0009:8055AACE       aOtakingfireatt
 0009:8055AAE0       aSeBmOtakingFir
 0009:8055AAF7       aDamage_7
 0009:8055AAFE       aCrowndamage
 0009:8055AB0A       aSeBmOtakingCro
 0009:8055AB23       aLambert141V
 0009:8055AB30       aDaiyaV
 0009:8055AB38       aSeBmOtakingLas
 0009:8055AB52       aSeBmOtakingDie
 0009:8055AB64       aSeBvOtakingDie
 0009:8055AB76       aSeSyVsBossLast_3
 0009:8055AB94       aSeBmLvOtakingS
 0009:8055ABAA       aHitbackstart
 0009:8055ABB7       aHitback
 0009:8055ABBF       aBubbleattack
 0009:8055ABCC       aSeBmOtakingMag_1
 0009:8055ADA0       aOtakinglongfoo_0
 0009:8055ADB0       aAppear_14
 0009:8055ADB7       aFoot14
 0009:8055ADBE       aFoot12
 0009:8055ADC5       aFoot10
 0009:8055ADCC       aFoot08
 0009:8055ADD3       aFoot06
 0009:8055ADDA       aFoot05
 0009:8055ADE1       aWait_35
 0009:8055ADE6       aDamage_8
 0009:8055ADED       aDown_2
 0009:8055AEC1       aOtakingmagma_0
 0009:8055AEE7       aOtakingmagmabl_0
 0009:8055AEF9       aWait_36
 0009:8055AEFE       aSteam_0
 0009:8055AF04       aBloommagma
 0009:8055AF0F       aSeAtLvMagmaWin_0
 0009:8055AF23       aSeBmOtakingMag_2
 0009:8055AF3E       aDown_3
 0009:8055AF43       aSeBmOtakingMag_3
 0009:8055AF5E       aAttack_14
 0009:8055AF65       aFireattack_0
 0009:8055AF70       aSeBmOtakingMag_4
 0009:8055AF8C       aHitback_0
 0009:8055AF94       aDamage_9
 0009:8055AF9B       aEndwait
 0009:8055B0D0       aPolta
 0009:8055B0D6       aBreaklevel
 0009:8055B0E1       aInner
 0009:8055B0EC       aPoltaleftarm
 0009:8055B0FE       aPoltarightarm
 0009:8055B117       aPoltabodybreak
 0009:8055B137       aPoltaformation
 0009:8055B14A       aOpeningdemo_6
 0009:8055B156       aPowerupdemo
 0009:8055B162       aDowndemo_2
 0009:8055B16B       aBreakfirst
 0009:8055B176       aBreaksecond
 0009:8055B182       aBreakthird
 0009:8055B18D       aHead3_0
 0009:8055B193       aSeOjStarPieceB_19
 0009:8055B290       aWait_37
 0009:8055B295       aSeBmLvPoltaInB
 0009:8055B2B3       aDamage_10
 0009:8055B2BA       aSeSyVsBossDama_9
 0009:8055B2D1       aSeBmPoltaRockD
 0009:8055B2E9       aSeBvPoltaDamag
 0009:8055B301       aBreakbody
 0009:8055B30B       aSeBmPoltaRockB
 0009:8055B322       aSeBvPoltaLoseS
 0009:8055B339       aSink_2
 0009:8055B33E       aPopsign
 0009:8055B346       aSeBvPoltaShout
 0009:8055B358       aScream_0
 0009:8055B35F       aRepair_0
 0009:8055B366       aDamagecore
 0009:8055B371       aSeBmPoltaCoreD
 0009:8055B460       aPoltaleftarm_0
 0009:8055B46D       aPoltarightarm_0
 0009:8055B47B       aInner_0
 0009:8055B481       aShadow_15
 0009:8055B488       aBreaklevel_0
 0009:8055B49E       aPoltaarmbreak
 0009:8055B4BD       aPoltaformation_0
 0009:8055B4D0       aDamage_11
 0009:8055B4D7       aSeBmPoltaRockD_0
 0009:8055B4EF       aDamagewait
 0009:8055B4FA       aBreak_9
 0009:8055B500       aSeBmPoltaRockB_0
 0009:8055B517       aBreakbody_0
 0009:8055B521       aRepair
 0009:8055B528       aRepairarml
 0009:8055B533       aRepairarmr
 0009:8055B53E       aRepairwait
 0009:8055B549       aWait_38
 0009:8055B54E       aHandl_1
 0009:8055B554       aHandr_4
 0009:8055B658       a1_0
 0009:8055B664       aSeBmLvPoltaInB_0
 0009:8055B682       aSeBmLvPoltaCor
 0009:8055B69D       aStaggerlv1
 0009:8055B6A8       aSeBvPoltaRunAw
 0009:8055B6BD       aSeSyVsBossDama_10
 0009:8055B6D4       aSeBvPoltaCoreD
 0009:8055B6EC       aSeBmPoltaCoreD_0
 0009:8055B7B8       aSeBmLvPoltaInB_1
 0009:8055B7D6       aSeBmLvPoltaCor_0
 0009:8055B7F1       aStaggerlv2
 0009:8055B7FC       aSeBvPoltaRunAw_0
 0009:8055B811       aSeSyVsBossLast_4
 0009:8055B828       aSeBvPoltaDamag_0
 0009:8055B840       aSeBmPoltaLastD
 0009:8055B95A       aOpeningdemo_7
 0009:8055B966       aBattlewait_6
 0009:8055B98E       aMbgmBoss09A
 0009:8055B99D       aPowerupdemo_0
 0009:8055B9C2       aPowerupdemoarm
 0009:8055B9D2       aPowerupdemoarm_0
 0009:8055B9E2       aMbgmBoss09B
 0009:8055B9F1       aDowndemo_3
 0009:8055BA70       aBreaklevel_1
 0009:8055BA7B       aDamagesmoke1
 0009:8055BA88       aDamagesmoke2
 0009:8055BA98       aPoltagroundroc
 0009:8055BAA8       aCollision_1
 0009:8055BAB2       aBody_83
 0009:8055BAB7       aShadow_16
 0009:8055BAC9       aPoltagroundroc_0
 0009:8055BADE       aSeOjLvPoltaGRo
 0009:8055BAF9       aSeOjPoltaGRock
 0009:8055BB10       aRock
 0009:8055BB15       aBreak_10
 0009:8055BB1B       aSeOjPoltaGRock_0
 0009:8055BC38       aPoltarock
 0009:8055BC42       aBody_84
 0009:8055BC47       aShadow_17
 0009:8055BC4E       aSeOjPoltaRockB
 0009:8055BC65       aBreakyellow
 0009:8055BC71       aBreakwhite
 0009:8055BC7C       aColor
 0009:8055BC82       aSeOjPoltaRockF
 0009:8055BC9C       aFroat
 0009:8055BCA2       aAppear_15
 0009:8055BCA9       aSeOjLvPoltaRoc
 0009:8055BCC3       aSign_0
 0009:8055BCC8       aSeOjPoltaRockF_0
 0009:8055BDC8       aCore
 0009:8055BDCD       aTongue3
 0009:8055BDD5       aBody1
 0009:8055BDDB       aHead1
 0009:8055BDE1       aBody2
 0009:8055BDE7       aHead2
 0009:8055BDED       aBody3
 0009:8055BDF3       aHead3
 0009:8055BDF9       aArml1
 0009:8055BDFF       aArml2
 0009:8055BE05       aHandl
 0009:8055BE0B       aFingerla1
 0009:8055BE15       aFingerla2
 0009:8055BE1F       aFingerlb1
 0009:8055BE29       aFingerlb2
 0009:8055BE33       aFingerlc1
 0009:8055BE3D       aFingerlc2
 0009:8055BE47       aFingerld1
 0009:8055BE51       aFingerld2
 0009:8055BE5B       aArmr1
 0009:8055BE61       aArmr2
 0009:8055BE67       aHandr
 0009:8055BE6D       aFingerra1
 0009:8055BE77       aFingerra2
 0009:8055BE81       aFingerrb1
 0009:8055BE8B       aFingerrb2
 0009:8055BE95       aFingerrc1
 0009:8055BE9F       aFingerrc2
 0009:8055BEA9       aFingerrd1
 0009:8055BEB3       aFingerrd2
 0009:8055BEBD       aScream
 0009:8055BEC4       aTongue3_0
 0009:8055BECC       aHead_4
 0009:8055BED1       aHead5
 0009:8055BEEC       aAttackfrontsta
 0009:8055BEFD       aAttackfront
 0009:8055BF09       aAttackfronttow
 0009:8055BF1B       aDamage_25
 0009:8055BF22       aSeBvPoltaPrepA
 0009:8055BF3C       aSeBmPoltaArmLi
 0009:8055BF54       aSeBvPoltaArmDo
 0009:8055BF69       aSeBmPoltaArmSw
 0009:8055BF84       aSeBmPoltaHitGr
 0009:8055C01D       aGeneraterockst
 0009:8055C02F       aSeBvPoltaGenRo
 0009:8055C044       aGeneraterock
 0009:8055C051       aGeneraterockto
 0009:8055C0D0       aGenerateground
 0009:8055C0E7       aSeBvPoltaPrepG
 0009:8055C101       aGenerateground_0
 0009:8055C119       aGenerateground_1
 0009:8055C12C       aSeBvPoltaGenGn
 0009:8055C145       aSeBmPoltaGenGn
 0009:8055C15E       aGenerateground_2
 0009:8055C203       aPunchleftstart
 0009:8055C212       aPunchrightstar
 0009:8055C222       aSeBvPoltaPrepP
 0009:8055C239       aPunchleft
 0009:8055C243       aPunchright
 0009:8055C24E       aSeBvPoltaPunch
 0009:8055C260       aSeBmPoltaPunch
 0009:8055C272       aPunchlefttowai
 0009:8055C282       aPunchrighttowa
 0009:8055C31E       aStagger
 0009:8055C326       aSeBmPoltaGenBo
 0009:8055C3B8       aJoint00
 0009:8055C3C0       aJoint01_0
 0009:8055C3C8       aJoint02_0
 0009:8055C3D0       aJoint03_0
 0009:8055C3E8       aSnakefish
 0009:8055C3F2       aShadow_2
 0009:8055C3F9       aStarpointertar
 0009:8055C410       aSwim
 0009:8055C415       aSeEmExplodeUnd
 0009:8055C42F       aSeEmLvSnakefis
 0009:8055C447       aStarpointerhol
 0009:8055C457       aDeath
 0009:8055C45D       aSeEvSnakeheadD
 0009:8055C474       aCenter
 0009:8055C47B       aSeOjStarPieceB_0
 0009:8055C4A4       aJoint02d
 0009:8055C4AE       aHead_5
 0009:8055C4B3       aJoint00_0
 0009:8055C4BB       aBust
 0009:8055C4C0       aJoint01_1
 0009:8055C4C8       aWaist
 0009:8055C4CE       aJoint02_1
 0009:8055C4D6       aTail_0
 0009:8055C4DB       aJoint03_1
 0009:8055C650       aJoint01
 0009:8055C658       aBackbone01
 0009:8055C663       aJoint02
 0009:8055C66B       aBackbone02
 0009:8055C676       aJoint03
 0009:8055C67E       aBackbone03
 0009:8055C689       aJoint04
 0009:8055C691       aBackbone04
 0009:8055C69C       aJoint05
 0009:8055C6A4       aBackbone05
 0009:8055C6AF       aJoint06
 0009:8055C6B7       aBackbone06
 0009:8055C6C2       aJoint07
 0009:8055C6CA       aBackbone07
 0009:8055C6D5       aJoint08
 0009:8055C6DD       aBackbone08
 0009:8055C6E8       aJoint09
 0009:8055C6F0       aBackbone09
 0009:8055C6FB       aJoint10
 0009:8055C703       aBackbone10
 0009:8055C70E       aJoint11
 0009:8055C716       aBackbone11
 0009:8055C721       aJoint12
 0009:8055C729       aBackfin
 0009:8055C731       aLeftfinjoint
 0009:8055C73E       aRightfinjoint
 0009:8055C74C       aShadow00
 0009:8055C755       aSkeletalfishbo
 0009:8055C76C       aWound0
 0009:8055C773       aHead_6
 0009:8055C778       aWound1
 0009:8055C77F       aWound10
 0009:8055C787       aWound11
 0009:8055C78F       aWound2
 0009:8055C796       aWound3
 0009:8055C79D       aWound4
 0009:8055C7A4       aWound5
 0009:8055C7AB       aWound8
 0009:8055C7B2       aWound9
 0009:8055C7B9       aWoundjow0
 0009:8055C7C3       aWoundjow1
 0009:8055C7CD       aWoundjow2
 0009:8055C7D7       aWoundjow3
 0009:8055C7E1       aWoundjow4
 0009:8055C7EB       aWoundjow5
 0009:8055C938       aSkeletalfishbo_0
 0009:8055C949       aSwim_2
 0009:8055C94E       aWait_39
 0009:8055C953       aBase
 0009:8055C958       aNormal_12
 0009:8055C970       aBody_85
 0009:8055C975       aSkeltaldamagel
 0009:8055C99A       aSeOjStarPieceB_20
 0009:8055C9B5       aSeBmLvSklBossS
 0009:8055C9D0       aSeBmLvSklBossS_0
 0009:8055C9EC       aOpen_3
 0009:8055C9F1       aSeBmSklBossMou
 0009:8055CA0B       aOpenwait
 0009:8055CA14       aClose_1
 0009:8055CA1A       aSeBmSklBossMou_0
 0009:8055CA35       aBite
 0009:8055CA3A       aSeBmSklBossDam_1
 0009:8055CA52       aSeSyVsBossDama_11
 0009:8055CA69       aDamage1color
 0009:8055CA76       aDamage2color
 0009:8055CA90       aSeBmSklBossDam
 0009:8055CAA8       aSeSyVsBossDama
 0009:8055CABF       aCrack
 0009:8055CAEC       aSeBmSklBossDam_0
 0009:8055CB07       aSeSyVsBossLast
 0009:8055CB67       aBattlestart
 0009:8055CB73       aMbgmBoss09A_0
 0009:8055CB82       aSeBmLvSklBossS_1
 0009:8055CBA0       aPowerup1
 0009:8055CBA9       aPowerup2
 0009:8055CBB2       aSeBmSklGuardCo
 0009:8055CBCD       aSeBmLvSklBossS_2
 0009:8055CBEB       aMbgmBoss09B_0
 0009:8055CBFA       aDown_4
 0009:8055CBFF       aSeBmSklBossBod
 0009:8055CC19       aSeBmLvSklBossS_3
 0009:8055CC34       aBreak_11
 0009:8055CC3A       aSeBmSklBossExp
 0009:8055CC51       aSeBmSklBossExp_0
 0009:8055CC88       aJoint02d_0
 0009:8055CC9D       aSkeletalfishbo_1
 0009:8055CCD9       aSkeletalfishbo_2
 0009:8055CCFA       aSkeletalfishbo_3
 0009:8055CD18       aSkeletalfishbo_4
 0009:8055CD53       aSkeletalfishbo_5
 0009:8055CD84       aHead_14
 0009:8055CD89       aDamage_12
 0009:8055CD90       aDamageDcolor
 0009:8055CDC3       aSkeletalfishbo_6
 0009:8055CDD9       aLightconeleft
 0009:8055CDE7       aLightconeright
 0009:8055CDFB       aSkeletalfishbo_7
 0009:8055CE1E       aSkeletalfishbo_8
 0009:8055CE5C       aSkeletalfishbo_9
 0009:8055D13C       aSkeletalfishgu
 0009:8055D180       aPowerup1_0
 0009:8055D189       aPowerup2_0
 0009:8055D192       aSC
 0009:8055D197       aSeBmSklGuardAp
 0009:8055D1EB       aSD_1
 0009:8055D1F0       aParam
 0009:8055D1F6       aLevelnum
 0009:8055D1FF       aEnergylv
 0009:8055D208       aSpeedlv
 0009:8055D210       aRailidlv
 0009:8055D219       aGuardoffsetlv
 0009:8055D227       aGuardappearnum
 0009:8055D238       aGuardposlv
 0009:8055D243       aGuardwaitlv
 0009:8055D24F       aSBcsv
 0009:8055D257       aSD
 0009:8055D25C       aSDSD
 0009:8055D330       aSkeletalfishgu_0
 0009:8055D342       aSkeletalfishgu_1
 0009:8055D35A       aPointertouchma_0
 0009:8055D36D       aHead_15
 0009:8055D372       aJoint00_1
 0009:8055D37A       aSwim_3
 0009:8055D37F       aBase_0
 0009:8055D384       aSeBmSklGuardAp_0
 0009:8055D39B       aSeBmLvSklGuard
 0009:8055D3BA       aTurn_5
 0009:8055D3BF       aAttack_15
 0009:8055D3C6       aSeBmLvSklGuard_0
 0009:8055D3DF       aSeBmSklGuardAt
 0009:8055D3FC       aSeBmLvSklGuard_1
 0009:8055D41B       aAttacknear
 0009:8055D426       aBreak_12
 0009:8055D42C       aSeBmSklGuardEx
 0009:8055D444       aSeOjStarPieceB_21
 0009:8055D45F       aHead_16
 0009:8055D464       aBody_86
 0009:8055D469       aJoint02_2
 0009:8055D5C0       aTombspider
 0009:8055D5CB       aWait_40
 0009:8055D5D0       aNoctiluca
 0009:8055D616       aNoctilucafast
 0009:8055D760       aAcidsplash
 0009:8055D78F       aSwoon_1
 0009:8055D8A0       a2UI
 0009:8055D8BF       aSwoon_2
 0009:8055D8C8       _19TombSpiderAction2nd::`vtbl'
 0009:8055D9D0       aWait_41
 0009:8055D9D5       aEyedamage
 0009:8055D9DF       aSeBmTspiderDam
 0009:8055D9F8       aHipdamage
 0009:8055DA02       aSeBmTspiderDam_0
 0009:8055DA1B       aGlanddamage
 0009:8055DA27       aSeBmTspiderDam_1
 0009:8055DA42       aAttackstart
 0009:8055DA4E       aSeBmTspiderPre
 0009:8055DA65       aSeBmLvTspiderP
 0009:8055DA7F       aAttackloopl
 0009:8055DA8B       aAttackloopr
 0009:8055DA97       aAttackloop
 0009:8055DAA2       aSeBmLvTspiderA
 0009:8055DAB8       aAttackend_0
 0009:8055DAC2       aSeBmTspiderAci
 0009:8055DAD9       aChancestart
 0009:8055DAE5       aBody_87
 0009:8055DB18       aChancewait
 0009:8055DB23       aChancewaitends
 0009:8055DB35       aChancedamage
 0009:8055DB42       aChanceend
 0009:8055DBBD       aSeOjTspiderCoc
 0009:8055DBD8       aCocoon
 0009:8055DBDF       aWait_42
 0009:8055DBE4       aSeOjTspiderCoc_0
 0009:8055DC48       aONUI
 0009:8055DC6F       aOUI
 0009:8055DC92       aNUI
 0009:8055DCB3       aAppear_16
 0009:8055DCBA       aBattle2ndstart
 0009:8055DCC9       aDeath_15
 0009:8055DCCF       aCocoonfly_0
 0009:8055DCD9       aSpacecocoonblu
 0009:8055DCE9       aAirrotation
 0009:8055DCF5       aBattlestart_0
 0009:8055DD01       aSeOjTspiderPla
 0009:8055DD1D       aSePmLandHeavy
 0009:8055DD2E       aSePvLand
 0009:8055DD3E       aOpen_4
 0009:8055DD43       aBattle1st
 0009:8055DD4D       aSeBvTspiderApp
 0009:8055DD6D       aChancedamagela
 0009:8055DD7E       aBattledamage
 0009:8055DD8B       aSeOjTspiPlanet
 0009:8055DDA5       aBattle2nd
 0009:8055DDAF       aSeOjStarPieceB_22
 0009:8055DDCB       aSeBvTspiderDea
 0009:8055DDDF       aBattleend
 0009:8055DDE9       aSeOjTspiderPla_0
 0009:8055DE05       aBody_88
 0009:8055DE0A       aSeBmTspiderExp
 0009:8055DE22       aJump_1
 0009:8055DE27       aSeBmTspiderJum
 0009:8055DE40       aNoctiluca_0
 0009:8055DE63       aTombspiderplan
 0009:8055DE8D       aTombspidercoco
 0009:8055DEA0       aAcid
 0009:8055DEA5       aAcidfrontl
 0009:8055DEB0       aAcidfrontr
 0009:8055DEBB       aAcidrearl
 0009:8055DEC5       aAcidrearr
 0009:8055DECF       aFrontLAttacker
 0009:8055DEE0       aFrontRAttacker
 0009:8055DEF1       aRearLAttacker
 0009:8055DF01       aRearRAttacker
 0009:8055DF11       aBody_89
 0009:8055DF16       aMouth_1
 0009:8055DF1C       aGlandFrontL
 0009:8055DF2A       aGlandFrontR
 0009:8055DF38       aGlandRearL
 0009:8055DF45       aGlandRearR
 0009:8055DF52       aVitalSpotC
 0009:8055DF5F       aVitalSpotL
 0009:8055DF6C       aVitalSpotR
 0009:8055DF79       aAttacker
 0009:8055DF88       aTombspiderglan
 0009:8055DF98       aBattle1st_0
 0009:8055DFA2       aBattle2nd_0
 0009:8055DFAC       aWait_43
 0009:8055DFB1       aDamagestart
 0009:8055DFBD       aDamagewait_0
 0009:8055E080       aBattle1st_1
 0009:8055E08A       aFrontl
 0009:8055E09C       aFrontr
 0009:8055E0AE       aRearl
 0009:8055E0BF       aRearr
 0009:8055E0D0       aBody5_1
 0009:8055E0DF       aBody1_2
 0009:8055E0F7       aWingl
 0009:8055E0FD       aFronthandl3
 0009:8055E109       aCenterhandl3
 0009:8055E116       aRearhandl3
 0009:8055E121       aFronthandr3
 0009:8055E12D       aCenterhandr3
 0009:8055E13A       aRearhandr3
 0009:8055E145       aMouth_2
 0009:8055E150       aBody_90
 0009:8055E155       aMouth_3
 0009:8055E15B       aGlandFrontL_0
 0009:8055E169       aGlandFrontR_0
 0009:8055E177       aGlandRearL_0
 0009:8055E184       aGlandRearR_0
 0009:8055E191       aAttacker_0
 0009:8055E19A       aFrontLAttacker_0
 0009:8055E1AB       aFrontRAttacker_0
 0009:8055E1BC       aRearLAttacker_0
 0009:8055E1CC       aRearRAttacker_0
 0009:8055E1DC       aVitalSpotC_0
 0009:8055E1E9       aVitalSpotL_0
 0009:8055E1F6       aVitalSpotR_0
 0009:8055E203       aCocoon_0
 0009:8055E210       aState_0
 0009:8055E21C       aSwoonstart_0
 0009:8055E227       aSwoon_3
 0009:8055E22D       aSwoonend_0
 0009:8055E330       aTombspidervita
 0009:8055E344       aWait_44
 0009:8055E349       aChancewait_0
 0009:8055E354       aDamagestart_0
 0009:8055E360       aSeBmTspiderDam_2
 0009:8055E37B       aDamagewait_1
 0009:8055E386       aDamageend
 0009:8055E458       aLeftleg
 0009:8055E460       aRightleg
 0009:8055E469       aBackleg
 0009:8055E48C       aSlow
 0009:8055E4A4       aTripodboss
 0009:8055E4AF       aBreaklight
 0009:8055E4BA       aRecover_3
 0009:8055E4C2       aStartdemo
 0009:8055E4CC       aEnddemo
 0009:8055E4D4       aSlegshadow
 0009:8055E50B       aSeOjStarPieceB_23
 0009:8055E524       aSeBmLvTripodBo
 0009:8055E540       aBattlewait_7
 0009:8055E54B       aSeBmLvTripodSi
 0009:8055E561       aSeBmLvTripodSt
 0009:8055E57C       aSeBmLvTripodMi
 0009:8055E595       aSeBmTripodCann
 0009:8055E5B0       aSeBmTripodHalt
 0009:8055E5C2       aWait_45
 0009:8055E5C7       aSeBmLvTripodEn
 0009:8055E5E0       aSeBmLvTripodBr
 0009:8055E5FC       aSeBmTripodAllB
 0009:8055E613       aSeBmTripodKill
 0009:8055E62A       aBody_91
 0009:8055E630       jpt_80088A08
 0009:8055E7B8       @unnamed@TripodBossAccesser_cpp@::cJMapBoneIDToBoneIndexTable(void)
 0009:8055EA18       aTripodbosscore
 0009:8055EA27       aBody_92
 0009:8055EA37       aTripodbosscore_0
 0009:8055EA5A       aTripodbosscore_1
 0009:8055EA6E       aBlacksmoke
 0009:8055EA79       aWait_46
 0009:8055EA7E       a2nddemo_0
 0009:8055EA86       aSeBmTripodCore
 0009:8055EA9E       aBreak_13
 0009:8055EB78       aTripodbossbody
 0009:8055EB8D       aTripodbossfoot
 0009:8055EBA1       aTripodbossleg2
 0009:8055EBB6       aTripodbosseyel
 0009:8055EBC9       aTripodbosseyel_0
 0009:8055EC0C       aTripodbossbody_0
 0009:8055EC1C       aBody_93
 0009:8055EC21       aTripodboss_0
 0009:8055EC2C       aExplosions
 0009:8055EC37       aSeBmTripodKill_0
 0009:8055EC4B       aExplosionm
 0009:8055EC56       aSeBmTripodKill_1
 0009:8055EC6A       aExplosionl
 0009:8055EC75       aSeBmTripodKill_2
 0009:8055EC89       aStartdemo_0
 0009:8055EC93       aWait_47
 0009:8055EC98       aWarning
 0009:8055ECA0       aSeBmTripodMark
 0009:8055EE74       aTripodbossguar
 0009:8055EE88       a2nddemo
 0009:8055EEA7       aSeBmLvTripodWa
 0009:8055EEBF       aSeBmLvTripodCW
 0009:8055EFB8       aTripodbossguar_0
 0009:8055EFCC       aCollision_2
 0009:8055EFD6       aTripodboss_1
 0009:8055EFE1       a2nddemo_1
 0009:8055EFE9       aExplosionm_0
 0009:8055EFF4       aSeBmTripodCCov
 0009:8055F00F       aSeBmTripodWall
 0009:8055F0F8       aTripodbosskill
 0009:8055F120       aBody_94
 0009:8055F125       aTripodboss_2
 0009:8055F130       a2nddemo_2
 0009:8055F138       aShoot
 0009:8055F13E       aExplosionm_1
 0009:8055F149       aExplosions_0
 0009:8055F154       aSeBmTripodCann_0
 0009:8055F16E       aSeBmTripodCann_1
 0009:8055F2F0       aTripodbossuppe
 0009:8055F30C       aTripodbossunde
 0009:8055F328       aTripodbossbott
 0009:8055F528       aKinokooneup_0
 0009:8055F538       aBody_95
 0009:8055F53D       aTripodboss_3
 0009:8055F548       aLegsmoke
 0009:8055F551       aSeBmTripodLand
 0009:8055F563       aSeBmTripodLegU
 0009:8055F577       aSeBmLvTripodLe
 0009:8055F590       aSeBmLvTripodLe_0
 0009:8055F5AC       aSeBmTripodFall
 0009:8055F788       aSeBmLvTripodPa
 0009:8055F828       aTripodbossshel
 0009:8055F838       aBody_96
 0009:8055F83D       aKillerTerget
 0009:8055F856       aTripodbossshel_0
 0009:8055F86B       aSeBmTripodCore_0
 0009:8055F883       aBreak_14
 0009:8055F9B8       aTripodbossstep_0
 0009:805600A0       aCamera_0
 0009:805600A7       aIgnorepausenam
 0009:80560217       aOnlycamera
 0009:80560261       aCameracover
 0009:805602C8       aCamTypeTalk
 0009:805602D6       aSeSyCameraNg
 0009:805602E6       aSeSyCameraMove
 0009:805602F8       aSeSyCameraRese
 0009:8056030B       aFileselect_1
 0009:80560316       aEpiloguedemost_1
 0009:80560328       aCamTypeSubject
 0009:805606E8       aCameraheightar
 0009:80560720       aCamTypeXzPara
 0009:80560E74       aCamerainnercyl
 0009:80560F17       aCameracharmedv
 0009:80560F3B       aCameraracefoll
 0009:805611A8       aCamTypeAnim
 0009:8056128C       aGame_4
 0009:80561291       aCamTypeWaterFo
 0009:805612A7       aCamTypeFollow
 0009:805612B7       aCamTypeFooFigh
 0009:805612CC       aCamTypeAnim_0
 0009:805612DA       aCamTypeEyeposF_0
 0009:805612F4       aCubecamera_1
 0009:80561358       aBase_1
 0009:805615D8       aFlagNoreset
 0009:805615E5       aFlagNofovy
 0009:805615F1       aFlagLofserpoff
 0009:80561601       aFlagAntiblurof
 0009:80561612       aFlagCollisiono
 0009:80561624       aFlagSubjective
 0009:80561650       aCamtype
 0009:80561658       aCamTypePlanet
 0009:80561668       aWoffset
 0009:80561670       aLoffset
 0009:80561678       aLoffsetv
 0009:80561681       aRoll
 0009:80561686       aFovy
 0009:8056168B       aCamint
 0009:80561692       aUpper
 0009:80561698       aLower
 0009:8056169E       aGndint
 0009:805616A5       aUplay
 0009:805616AB       aLplay
 0009:805616B1       aPushdelay
 0009:805616BB       aPushdelaylow
 0009:805616C8       aUdown
 0009:805616CE       aVpanuse
 0009:805616D6       aVpanaxis
 0009:805616DF       aDist
 0009:805616E4       aAxis
 0009:805616E9       aWpoint
 0009:805616F0       aAnglea
 0009:805616F7       aAngleb
 0009:805616FE       aNum1
 0009:80561703       aNum2
 0009:80561708       aString
 0009:8056170F       aCamTypeDonkets
 0009:80561726       aCamTypeBossDon
 0009:8056173D       aCamTypeBehindD
 0009:80561753       aCamTypeSlider
 0009:80561763       aCamTypeInwardT
 0009:8056177E       aCamTypeInwardT_0
 0009:80561794       aCamTypeEyeFixe
 0009:805617B2       aCamTypeEyeposF
 0009:805617CC       aCamTypeIcecube
 0009:805617E4       aCamTypeCubePla
 0009:805617F9       aGflagThru
 0009:80561804       aGflagEnableend
 0009:8056181C       aGflagCamendint
 0009:8056182C       aEflagEnableerp
 0009:80561841       aEflagEnableend
 0009:80561859       aCamendint
 0009:80561863       aEvfrm
 0009:80561869       aEvpriority
 0009:805618BC       aEvent
 0009:805618C2       aGame_5
 0009:805618C7       aBase_2
 0009:805618D0       aCamTypeFollow_0
 0009:805618E0       aGame_6
 0009:805618E5       aCamTypeRailFol
 0009:805618FA       aCamTypeCubePla_0
 0009:8056190F       aCamTypeWaterFo_0
 0009:80561925       aCamTypeCharmed
 0009:8056193D       aCamTypeMedianT
 0009:80561953       aCamTypeEyeposF_1
 0009:8056196D       aCamTypeMedianP
 0009:80561984       aCamTypeDpd
 0009:80561991       aCamTypeXzPara_0
 0009:805619D0       aC04x
 0009:805619D7       aGSDD
 0009:805619E2       aOS
 0009:805619E7       aES
 0009:805619EC       aS04x
 0009:80561B08       aLId_1
 0009:80561DD0       aCubecamera_2
 0009:80561E70       aCubecamera_3
 0009:805623B0       aCamerarepulsiv_1
 0009:80562528       aVersion
 0009:80562530       aSX
 0009:80562535       aSY
 0009:8056253A       aSZ
 0009:80562590       aCubecamera_4
 0009:805625E0       aSuperspindrive
 0009:805625F0       aAstrodomedemoc
 0009:80562608       aAstrodomedemoc_0
 0009:8056261C       aYellow_0
 0009:8056263F       aSePmLvSpinDrvF
 0009:80562655       aAppear_17
 0009:8056265C       aSpindriverwait
 0009:8056266B       aSeOjSSpinDrvAp
 0009:80562683       aSeOjLvSSpinDrv
 0009:8056269D       aSeOjLvSpinDrvC
 0009:805626CA       aStart_1
 0009:805626D0       aSuperspindrive_3
 0009:805626E5       aCsSpinDriveLon
 0009:805626F8       aSeSyCsSSpinDrv
 0009:80562712       aSePmSpinAttack
 0009:80562724       aSpaceflystart
 0009:80562732       aSuperspindrive_4
 0009:80562749       aSeSyAstroDeper
 0009:80562765       aSeSyAstroDeper_0
 0009:8056277E       aSeOjSSpinDrvJu
 0009:80562794       aSePvJumpJoy_0
 0009:805627A3       aSpaceflyloop
 0009:805627B0       aBgmSenarioSel
 0009:805627C0       aSeDmSenarioSel
 0009:80562AD6       aAstrogalaxy_5
 0009:80562AE8       aAction
 0009:80562AEF       aPartname_0
 0009:80562AF8       aCastname
 0009:80562B01       aCastid
 0009:80562B08       aActiontype
 0009:80562B13       aPosname_0
 0009:80562B1B       aAnimname
 0009:80562B28       aPartname_1
 0009:80562B31       aCameratargetna
 0009:80562B42       aCameratargetca
 0009:80562B55       aAnimcameraname
 0009:80562B64       aAnimcamerastar
 0009:80562B79       aAnimcameraendf
 0009:80562B8C       aIscontinuous
 0009:80562B99       aSS_7
 0009:80562BA0       aCamera_1
 0009:80562C58       aSeSyReadRiddle_6
 0009:80562D48       aDemosheetArc
 0009:80562D56       aDemoSSBcsv
 0009:80562D81       aKoopajrentrytr
 0009:80562D98       aKoopajrleavetr
 0009:80562DAF       aKoopajrentryot
 0009:80562DC7       aKoopajrleaveot
 0009:80562DDF       aKoopajrship_0
 0009:80562DEB       aSeBmKoopajrShi
 0009:80562E04       aBgmKoopaJrAppe
 0009:80562E18       aSeBmLvKoopajrS
 0009:80562E33       aWait_1
 0009:80562E38       aSeBvKoopajrLau
 0009:80562E5B       aArrival
 0009:80562F10       aMoviepadrumble
 0009:80562F25       aPadrumbledataB
 0009:80562F38       aPadrumblename_0
 0009:80562F46       aStartframe_0
 0009:80562F58       aSeabottombigdo
 0009:80562F6A       aSeabottombigdo_0
 0009:80562F7C       aSeabottombigdo_1
 0009:80562F8E       aOpen
 0009:80562F98       aPlayer
 0009:80562F9F       aPartname
 0009:80562FA8       aPosname
 0009:80562FB0       aBckname
 0009:80563048       aPartname_2
 0009:80563051       aSystemse
 0009:8056305A       aReturnbgm
 0009:80563064       aBgmwipeoutfram
 0009:805630D9       aSound
 0009:805630E8       aSubpart
 0009:805630F0       aSubpartname
 0009:805630FC       aSubparttotalst
 0009:8056310D       aMainpartname
 0009:8056311A       aMainpartstep
 0009:80563128       aSCanm
 0009:80563130       aSS_8
 0009:80563158       aTime
 0009:8056315D       aPartname_3
 0009:80563166       aTotalstep
 0009:80563170       aSuspendflag
 0009:8056318F       aPartname_4
 0009:80563198       aWipename
 0009:805631A1       aWipetype
 0009:805631AA       aWipeframe
 0009:80563217       aWipe
 0009:80563249       aGrandstar_1
 0009:8056326A       aDemoastroretur
 0009:8056327C       aDemoastroretur_0
 0009:80563290       aPowerstar_1
 0009:805632A3       aBlur_0
 0009:805632A8       aBlur1
 0009:805632AE       aBlur2
 0009:805632B4       aBlur3
 0009:805632BA       aBlur4
 0009:805632C0       aBlur5
 0009:805632C6       aStmFirstAstro
 0009:805632D6       aStmSecondAstro
 0009:805632E7       aSePmLvSpinDrvF_0
 0009:805632FD       aSeOjLvRetPowSt
 0009:80563317       aResultflygrand
 0009:8056332E       aSeOjGndStarRus
 0009:80563342       aSeOjLvGndStarR
 0009:80563359       aSeOjGndStarEnt
 0009:80563373       aDemokoopagrand_1
 0009:805633A1       aMbgmGalaxy24
 0009:805633B0       aStmAstroOut
 0009:805633BE       aStmAstroOut2
 0009:805633CE       aStmAstroOut3
 0009:805634EC       aDemoletter
 0009:805634F7       aStmPrologue01
 0009:80563507       aStmPrologue02
 0009:80563517       aSeSyLetterAppe_0
 0009:8056352B       aSeSvPeachOpeni
 0009:80563546       aDemopeachcastl
 0009:8056355A       aMarioposition_5
 0009:80563568       aSeDmArriveCast
 0009:805636F0       aResultflygrand_0
 0009:80563703       aResultfly
 0009:8056370D       aResultflygrand_1
 0009:80563723       aResultflyend
 0009:80563730       aSePmSSpinDrvCo
 0009:8056374B       aSeOjLvRetPowSt_0
 0009:80563768       aBody_97
 0009:80563779       aWelcome
 0009:80563781       aGame_7
 0009:80563786       aSpaceflystart_0
 0009:80563794       aEggstargalaxy_5
 0009:805637A2       aHoneybeekingdo_4
 0009:805637B8       aFactorygalaxy_5
 0009:805637C6       aAppear_18
 0009:805637CD       aSpaceflyloop_0
 0009:805637DA       aSePmLvSSpinDrv
 0009:805637F2       aSpaceflyend
 0009:805637FE       aSePmSSpinDrvCo_0
 0009:80563819       aSePvJumpS
 0009:80563826       aFall_3
 0009:80563923       aGrandstar_2
 0009:8056392D       aPowerstar_2
 0009:80563942       aSpintico
 0009:80563958       aMariohair
 0009:805639A7       aSpindriverpath
 0009:805639B6       aResultwait
 0009:805639C1       aCap0
 0009:805639C6       aLuigiresultwai
 0009:805639DB       aResultwaitstar
 0009:805639EB       aAstrogalaxy_6
 0009:805639F7       aMbgmGalaxy24_0
 0009:80563A06       aDemoflylightde
 0009:80563A17       aSePmDemoReturn
 0009:80563A2F       aSePmLvSpinDrvF_1
 0009:80563A45       aSeOjLvRetPowSt_1
 0009:80563A5F       aSeOjRetPowStar
 0009:80563A78       aResultflygrand_2
 0009:80563A8E       aResultflygrand_3
 0009:80563AA8       aSePvDmAstroRet
 0009:80563AC3       aFall_4
 0009:80563AC8       aLand_5
 0009:80563C78       aGroupname_2
 0009:80563C88       aPauseIgnore
 0009:80563C95       aIndirect_4
 0009:80563C9E       aAfterIndirect
 0009:80563CAD       aBloomEffect
 0009:80563CBA       aAfterImageEffe
 0009:80563CCD       a2dPauseIgnore
 0009:80563CDD       aFor2dModel
 0009:80563CEA       aGroupname_3
 0009:80563CF4       aUniquename_0
 0009:80563CFF       aAnimname_0
 0009:80563D08       aContinueanimen
 0009:80563D18       aJointname_2
 0009:80563D22       aEffectname
 0009:80563D2D       aParentname
 0009:80563D38       aOffsetx
 0009:80563D40       aOffsety
 0009:80563D48       aOffsetz
 0009:80563D50       aStartframe_1
 0009:80563D5B       aEndframe_0
 0009:80563D64       aAffect
 0009:80563D6B       aFollow
 0009:80563D72       aScalevalue
 0009:80563D7D       aRatevalue
 0009:80563D87       aPrmcolor
 0009:80563D90       aEnvcolor
 0009:80563D99       aLightaffectval
 0009:80563DAA       aDraworder
 0009:80563E48       aInddummy_0
 0009:80563E78       aS02d_0
 0009:80563E7F       aWater_3
 0009:80563E85       aSand
 0009:80563E8A       aDamagefire
 0009:80563E95       aDefault_1
 0009:80563EA0       jpt_800C5F18
 0009:80563F10       aUniquename
 0009:80563F1B       aGroupname
 0009:80563FC8       _28MultiEmitterParticleCallBack::`vtbl'
 0009:8056405C       _Q22MR67FunctorV0M<P20ParticleCalcExecutor,M20ParticleCalcExecutorFPCvPv_v>::`vtbl'
 0009:8056418C       _Q22MR10FunctorV0F::`vtbl'
 0009:805641C0       aParticlesJpc
 0009:805641CE       aParticlenamesB
 0009:805641E1       aAutoeffectlist
 0009:805641F5       aName_0
 0009:805641FA       aGroupname_0
 0009:80564208       aFireworksa
 0009:80564213       aSeOjFireworkSe
 0009:8056422E       aSeOjFireworkSe_0
 0009:805642D8       aIcelayerbreak
 0009:805642E6       aSeOjIceLayerBr
 0009:805646B0       aJumpbeamerbeam
 0009:805646BF       aJumpbeamerbeam_0
 0009:805646D3       aJumpbeamerbeam_1
 0009:8056470C       aBallbeamer
 0009:80564717       aBody_4
 0009:80564729       aHead_17
 0009:8056472E       aCharge
 0009:80564735       aVanish
 0009:8056473C       aWait_48
 0009:80564741       aSeEmLvRingbeam
 0009:8056475A       aSign_1
 0009:8056475F       aSeEmBallbeamer
 0009:80564854       aBalloonfish
 0009:80564860       aBody_5
 0009:80564865       aAppearfrombox
 0009:80564873       aSeEmBlnfishApp
 0009:80564888       aDeath_0
 0009:8056488E       aSeEmBlnfishExp
 0009:805648A6       aAppearance
 0009:805648B1       aSeEmBlnfishPre
 0009:805648C8       aAttack_0
 0009:805648CF       aSwimbubble
 0009:805648DA       aAttackend
 0009:805648E4       aSeEmLvBlnfishD
 0009:805648FA       aTouch
 0009:805649D8       aBasabasaice
 0009:805649E4       aBody_98
 0009:805649E9       aJointroot_1
 0009:805649F3       aAttack_16
 0009:805649FA       aWait_49
 0009:805649FF       aFlystart_0
 0009:80564A08       aSeEvBasabasaFi
 0009:80564A1C       aSeEvBasabasaDa
 0009:80564A32       aSeEmStompedS_2
 0009:80564A42       aBlow
 0009:80564A47       aAttackstart_0
 0009:80564A53       aAttack_17
 0009:80564A5A       aSeEvBasabasaAt
 0009:80564A70       aSeEmLvBasabasa
 0009:80564A89       aAttackend_1
 0009:80564A93       aReaction
 0009:80564A9C       aSeEmIcebasaSpi
 0009:80564AB4       aReturn_0
 0009:80564ABB       aTouch_1
 0009:80564AC1       aSwoon_4
 0009:80564AC7       aDeath_16
 0009:80564ACD       aSeEmExplodeS_5
 0009:80564ADD       aSeEmLvIcebasaC
 0009:80564AF4       aBasabasaicehan
 0009:80564B04       aBasabasahang
 0009:80564CCC       aBegomanbaby
 0009:80564CD8       aLocator1
 0009:80564CE1       aBabybegomanfac
 0009:80564CF1       aWatercolumn
 0009:80564CFD       aDeath_1
 0009:80564D03       aSeEmBegomanApp
 0009:80564D18       aSeEmExplodeS
 0009:80564D28       aSeOjStarPieceB_1
 0009:80564D3F       aFall
 0009:80564D44       aSeEmLvBabybego
 0009:80564D5F       aSignattack
 0009:80564D6A       aSeEmBabybegoPr
 0009:80564D84       aSeEmLvBabybego_0
 0009:80564DA1       aSeEmBabybegoPu
 0009:80564DBD       aSeEmLvBegomanP
 0009:80564DD5       aSeEmLvBabybego_1
 0009:80564DEC       aSeEmLvBegomanS
 0009:80564E03       aTrample
 0009:80564E0B       aSeEmBabybegoSt
 0009:80564E22       aSeEmLvBegomanT
 0009:80564E38       aSeEmBegomanRot
 0009:80564E4F       aStop
 0009:80564E54       aBound_0
 0009:80564E5A       aTurn_0
 0009:80564E5F       aSeEmFallIntoWa
 0009:80564E77       aDeathwater
 0009:80564E82       aSeEmBegomanDea
 0009:80564E9E       aBody_6
 0009:80564EA3       aSpark
 0009:80564EA9       aSeEmBabybegoCo
 0009:80564EBE       aSeEmBabybegoCo_0
 0009:805650C8       aSeEmLvBabybego_2
 0009:805650DF       aSeEmLvBegomanD
 0009:805650F5       aSeBmLvBbegoDas
 0009:80565118       aLocator1_0
 0009:80565121       aWait_2
 0009:80565126       aBegomanspark
 0009:80565133       aBegomanhit
 0009:8056513E       aBegomanfailure
 0009:80565150       aSpark_0
 0009:80565156       aFailurehit
 0009:80565161       aCheck
 0009:80565167       aBody_7
 0009:8056516C       aPushedRail
 0009:80565178       aAttack_1
 0009:8056517F       aTurn_1
 0009:80565184       aBrake
 0009:8056518A       aProvoke
 0009:80565192       aHitreaction
 0009:8056519E       aTired
 0009:805651A4       aOngroundspark
 0009:805651B2       aSeEmLvBegomanC
 0009:805651CE       aWatercolumn_0
 0009:805651DA       aSeEmBegomanKno
 0009:805651F6       aCenter_0
 0009:80565368       aTogebegomanlau
 0009:805653A4       aBegomanbabylau
 0009:805653F3       aBegomanlaunche
 0009:80565403       aLauncher
 0009:8056540C       aSeEmBegomanlau
 0009:80565425       aSeEmLvBegomanl
 0009:8056554C       aBegomanspike
 0009:80565559       aCenter_1
 0009:80565560       aWatercolumn_1
 0009:8056556C       aBegomanspikehe
 0009:80565599       aBegomanbrokenp
 0009:805655AC       aHandblur1
 0009:805655B6       aHandblur2
 0009:805655C0       aHandblur3
 0009:805655CA       aDeath_17
 0009:805655D0       aSeEmBegomanApp_0
 0009:805655E5       aFall_5
 0009:805655EA       aSeEmLvBegomanR_0
 0009:80565604       aSignattack_0
 0009:8056560F       aSeEmBegomanPre
 0009:80565628       aSeEmLvBegomanR
 0009:80565644       aAttackblur
 0009:8056564F       aSeEmBegomanPur
 0009:8056566A       aSeEmLvBegomanP_0
 0009:80565682       aSeEmLvBegomanT_0
 0009:80565698       aSeEmLvBegomanS_1
 0009:805656AF       aElectricshock_0
 0009:805656BD       aTramplereactio_0
 0009:805656CD       aSeEmBegomanRot_1
 0009:805656E4       aDamage_13
 0009:805656EB       aTurn_6
 0009:805656F0       aBody_99
 0009:805656F5       aSeEmBegomanEle_0
 0009:8056570F       aSeEmExplodeS_6
 0009:8056571F       aWait_50
 0009:80565724       aBroken01
 0009:8056572D       aSeEmFallIntoWa_0
 0009:80565745       aDeathwater_0
 0009:80565750       aSeEmBegomanDea_0
 0009:8056576C       aSpark_2
 0009:80565772       aSeEmBegomanCol_1
 0009:80565786       aSeEmBegomanCol_2
 0009:805657A2       aSeEmTogegomanS
 0009:805657B8       aSeEmBegomanKno_0
 0009:805659C4       aBegomanspring
 0009:805659D2       aBegomanspringh
 0009:80565A10       aWatercolumn_2
 0009:80565A1C       aCenter_11
 0009:80565A23       aTrample_2
 0009:80565A2B       aSpringjoint5
 0009:80565A38       aLocator1_1
 0009:80565A41       aDeath_18
 0009:80565A47       aSeEmBegomanApp_1
 0009:80565A5C       aSeEmExplodeS_7
 0009:80565A6C       aCheck_1
 0009:80565A72       aBody_100
 0009:80565A77       aFall_6
 0009:80565A7C       aSeEmLvBegomanR_2
 0009:80565A96       aSignattack_1
 0009:80565AA1       aSeEmBegomanPre_0
 0009:80565ABA       aSeEmLvBegomanR_1
 0009:80565AD6       aAttackblur_0
 0009:80565AE1       aSeEmBegomanPur_0
 0009:80565AFC       aSeEmLvBegomanP_1
 0009:80565B14       aSeEmLvBegomanT_1
 0009:80565B2A       aSeEmLvBegomanS_3
 0009:80565B41       aElectricshock_1
 0009:80565B4F       aShake_1
 0009:80565B55       aSeEmBegomanLau
 0009:80565B6F       aSeEmLvBegomanS_2
 0009:80565B86       aHopend_0
 0009:80565B8D       aSeEmBegomanTra
 0009:80565BA3       aSeEmBegomanRot_2
 0009:80565BBA       aDamage_14
 0009:80565BC1       aTurn_7
 0009:80565BC6       aSeEmBegomanEle_1
 0009:80565BE0       aHide_5
 0009:80565BE5       aOngroundspark_0
 0009:80565BF3       aAppear_19
 0009:80565BFA       aSeEmBegomanFly
 0009:80565C0F       aSeEmFallIntoWa_1
 0009:80565C27       aDeathwater_1
 0009:80565C32       aSeEmBegomanDea_1
 0009:80565C4E       aSpark_3
 0009:80565C54       aSeEmBegomanCol_3
 0009:80565C68       aSeEmBegomanCol_4
 0009:80565C84       aSeEmBegomanKno_1
 0009:80565E98       aBegomanspringh_0
 0009:80565EB1       aHead_18
 0009:80565EB6       aSpringjoint5_0
 0009:80565EC3       aHopend_1
 0009:80565ECA       aWait_51
 0009:80565ECF       aGreen_0
 0009:80565ED5       aHopstart
 0009:80565EDE       aOnandoff
 0009:80565EE7       aHopwait
 0009:80565EEF       aSeEmBegomanClo
 0009:80565F0A       aHopjump
 0009:80566058       aRoot_0
 0009:8056605D       aBody_101
 0009:80566062       aSeOjLvBirikyuM_0
 0009:80566078       aClash
 0009:8056607E       aTouch_2
 0009:80566084       aCenter_12
 0009:805661F0       aBombbird
 0009:805661F9       aBody_102
 0009:805661FE       aBombpos
 0009:80566217       aWait_52
 0009:8056621C       aBorn
 0009:80566221       aAttack_18
 0009:80566228       aSeEmBombbirdDr
 0009:80566241       aDownspin
 0009:8056624A       aSeEvBombbirdDe
 0009:8056625E       aSeEmBombbirdDa
 0009:80566274       aSeEmExplodeS_8
 0009:80566284       aDeath_19
 0009:8056628A       aDamage_15
 0009:80566291       aSeEvBombbirdDa
 0009:805662A7       aFall_7
 0009:805662AC       aSwoonstart_1
 0009:805662B7       aSeEmLvSwoonS_1
 0009:805662C8       aSwoon_5
 0009:805662CE       aSwoonend_1
 0009:805662D7       aSeEvBombbirdRe
 0009:805662EE       aDownstep
 0009:805662F7       aSeEmStompedS_3
 0009:80566307       aSinkdown
 0009:80566310       aSeEmLvSink
 0009:8056631E       aSeEvLvBombbird
 0009:80566335       aSinkdeath
 0009:80566488       aBombbirdbomb
 0009:80566495       aBody_103
 0009:8056649A       aBomb_1
 0009:8056649F       aLocussmoke
 0009:805664AA       aExplosion_2
 0009:805664B4       aSeEmBombExplos_0
 0009:805664C9       aNormal_13
 0009:805664D0       aSignal_0
 0009:805664D7       aSeEmBombbirdbo
 0009:805664F4       aSeEmBombbirdbo_0
 0009:805665C4       aBomb
 0009:805665C9       aBombhei
 0009:805665D1       aBody_8
 0009:805665D6       aExplode
 0009:805665DE       aBody_9
 0009:805665E3       aIgnite
 0009:805665EA       aWait_3
 0009:805665EF       aStop_0
 0009:805665F4       aStarting
 0009:805665FD       aWalk
 0009:80566602       aCountdown
 0009:8056660C       aSeEmBombheiHit
 0009:8056661E       aSpin_0
 0009:80566623       aPressed
 0009:8056662B       aSeEmBombheiTra
 0009:80566641       aSePvThrow
 0009:8056664D       aSeEmBombThrow
 0009:8056665E       aBound_1
 0009:80566664       aCarry
 0009:8056666A       aSePvLiftUp
 0009:80566678       aSeEmBombLift
 0009:80566688       aExplosion
 0009:80566692       aSeEmBombExplos
 0009:805666A7       aSeEmLvBombFuse
 0009:805666BA       aSeEmLvBombAlar
 0009:805666D3       aSeEmLvBombAlar_0
 0009:805666EE       aSeEmLvBombAlar_1
 0009:80566707       aSeEmBombBound
 0009:805668B0       aBomblauncher
 0009:805668BD       aBombheilaunche
 0009:805668CD       aBody_10
 0009:805668DE       aOpen_5
 0009:805668E3       aSeEmBomblaunLa
 0009:805669B8       aBombteresa
 0009:805669DC       aTongue1
 0009:805669E4       aTongue2
 0009:805669EC       aTungue
 0009:805669F3       aBody_11
 0009:805669F8       aNormal_0
 0009:805669FF       aSeEmLvBombtere
 0009:80566A16       aSpinblur
 0009:80566A1F       aAppear_1
 0009:80566A26       aSeEmBombtereAp
 0009:80566A3C       aShadow_3
 0009:80566A43       aShadowappear
 0009:80566A50       aBall
 0009:80566A55       aBallappear
 0009:80566A60       aSeEmBombtereBo
 0009:80566A75       aWait_4
 0009:80566A7A       aSeEvBombtereLa
 0009:80566A8F       aReturn
 0009:80566A96       aSeEmLvBombtere_0
 0009:80566AB4       aSeEvBombtereTa
 0009:80566ACA       aTacklesign
 0009:80566AD5       aTackle
 0009:80566ADC       aSeEmLvBombtere_1
 0009:80566AF5       aSpin_1
 0009:80566AFA       aSeEmBombtereTo
 0009:80566B16       aSeEmLvBombtere_2
 0009:80566B2E       aHandr_0
 0009:80566B34       aCountdown_0
 0009:80566B3E       aDrift
 0009:80566B44       aSeEmBombtereTh
 0009:80566B59       aExplosion_0
 0009:80566B63       aSeEmBombtereEx
 0009:80566B7C       aMisfire
 0009:80566B84       aSeEmBombtereHi
 0009:80566B98       aHide
 0009:80566D30       aBody_104
 0009:80566D35       aBind_1
 0009:80566D3A       aCoconut
 0009:80566D42       aCoconutblur
 0009:80566D4E       aCoconutlight
 0009:80566D5B       aSeOjCoconutBal
 0009:80566D74       aSpinx
 0009:80566D7A       aSeBmOtakingSpi
 0009:80566D98       aSeOjCoconutBal_0
 0009:80566DB4       aTouch_3
 0009:80566DBA       aSpinhitmark
 0009:80566DC6       aSeOjCoconutBal_1
 0009:80566DE0       aMeRallyComboFi
 0009:80566DF5       aMeRallyComboSe
 0009:80566EE8       aSpine1_0
 0009:80566EEF       aSpine2
 0009:80566EF6       aSpine3
 0009:80566EFD       aHead_1
 0009:80566F02       aN
 0009:80566F11       aCocosambohead
 0009:80566F1F       aBody_105
 0009:80566F24       aHead_19
 0009:80566F29       aTrample_3
 0009:80566F31       aSeEmExplodeS_9
 0009:80566F41       aDeathsmokehead
 0009:80566F50       aFall_8
 0009:80566F55       aLand_6
 0009:80566F5A       aSeEmSfsamboHea
 0009:80566F72       aSwoon_6
 0009:80566F78       aSwoonend_2
 0009:80566F81       aBlow_0
 0009:80566F86       aCocosambobody
 0009:80566F94       aShadow_18
 0009:80566FB4       aSpine1_6
 0009:80566FBB       aSpine1_5
 0009:80566FC2       aSpine2_3
 0009:80566FC9       aSpine2_2
 0009:80566FD0       aSpine3_2
 0009:80566FD7       aSpine3_1
 0009:80566FDE       aHidewait
 0009:80566FE7       aAppear_20
 0009:80566FEE       aSanboneedlemat
 0009:80566FFF       aCocosambosmoke
 0009:8056700E       aSeEmSfsamboApp
 0009:80567023       aWait_53
 0009:80567028       aHide_6
 0009:8056702D       aSeEmSfsamboHid
 0009:80567040       aAttack_19
 0009:80567047       aCocosamboattac
 0009:80567057       aSeEmSfsamboDam
 0009:8056706C       aSeEmSfsamboBlo
 0009:80567084       aDeathsmokespin
 0009:80567095       aDeathsmokespin_0
 0009:805670A6       aDeathsmokespin_1
 0009:805670B7       aRecover_4
 0009:805670BF       aPressy
 0009:805670C6       aSeEmStompedS_4
 0009:805670D6       aTouch1
 0009:805670DD       aTouch2
 0009:805670E4       aTouch3
 0009:805670EB       aTouch_4
 0009:80567318       aSpine1_1
 0009:8056731F       aSpine2_0
 0009:80567326       aSpine3_0
 0009:8056732D       aSpine4
 0009:80567344       aDharmasambo
 0009:80567363       aDharmasambopar
 0009:80567374       aBody_106
 0009:80567379       aHidewait_0
 0009:80567382       aSeEmLvDharmasa
 0009:805673A2       aAppear_21
 0009:805673A9       aSeEmSfsamboApp_0
 0009:805673BE       aWait_54
 0009:805673C3       aSeEmLvDharmasa_0
 0009:805673DD       aWaitsmoke
 0009:805673E7       aAttack_20
 0009:805673EE       aSeEmSfsamboAtt
 0009:80567403       aBindafter
 0009:8056740D       aSpinreaction
 0009:8056741A       aPress_1
 0009:80567420       aLand_7
 0009:80567425       aSeEmSamboheadH
 0009:80567439       aDown_5
 0009:8056743E       aSeEmStompedS_5
 0009:8056744E       aHide_7
 0009:80567453       aSeEmDharmasamb
 0009:8056746E       aSeEmSfsamboHid_0
 0009:80567481       aHideappear
 0009:8056748C       aSeEmSamboheadA
 0009:805674A3       aDeath_20
 0009:805674A9       aSeEmExplodeS_10
 0009:805674B9       aSeOjStarPieceB_24
 0009:805674D0       aBlow_1
 0009:805674D5       aSeEmDharmasamb_0
 0009:805674EC       aTouch_5
 0009:805674F2       aSambomatbodyV
 0009:80567501       aSambomatfaceV
 0009:80567510       aSambomateyeV
 0009:8056751E       aFlowermatV
 0009:8056752A       aSeEmDharmasamb_1
 0009:80567768       aDossun
 0009:8056776F       aWait_55
 0009:80567774       aFallstart
 0009:8056777E       aBody_107
 0009:80567783       aShadow2d
 0009:8056778C       aShadow_19
 0009:80567793       aAttack_21
 0009:8056779A       aSeOjDossunFall
 0009:805677B1       aSeOjLvDossunFa
 0009:805677C6       aSeOjDossunLand
 0009:805677D8       aLand_8
 0009:805677DD       aSeOjLvDossunUp
 0009:805677F3       aSeOjDossunStop
 0009:805678E0       aElectricbullet
 0009:805678EF       aBody_108
 0009:805678F4       aBreak_15
 0009:805678FA       aSeEmElecbublle
 0009:80567912       aShot
 0009:80567917       aMove_11
 0009:8056791C       aSeEmLvElecbubl
 0009:805679CC       aMercatorcube_0
 0009:805679D9       aBody_12
 0009:805679DE       aBeam
 0009:805679E3       aEyebeamer
 0009:805679ED       aBeamsurface
 0009:80567A2C       aEyebeamerbeamv
 0009:80567A4F       aEyebeamerbeamb
 0009:80567A69       aEyebeamerbeam
 0009:80567A77       aSeOjLvEyeBeame
 0009:80567A90       aBeam_1
 0009:80567A95       aSeOjEyeBeamerT
 0009:80567BC8       aFireball_0
 0009:80567BD1       aBody_109
 0009:80567BD6       aFireballbreak
 0009:80567BE4       aSeOjFireBallBr
 0009:80567BFA       aSpin_5
 0009:80567BFF       aSeEmFireBubble_0
 0009:80567CB8       aFirebubble_0
 0009:80567CC3       aBody_110
 0009:80567CC8       aBody_111
 0009:80567CCD       aDown_6
 0009:80567CD2       aAppear_22
 0009:80567CD9       aWait_56
 0009:80567CDE       aSeEmFireBubble_1
 0009:80567CF7       aSeEmFireBubble_2
 0009:80567D0E       aDpdhit
 0009:80567D15       aWaits
 0009:80567D1B       aSeEmFireBubble_3
 0009:80567D35       aDpdhitdown
 0009:80567D40       aDpdhitdownwait
 0009:80567D4F       aSeEmFireBubble_4
 0009:80567E60       aGesso
 0009:80567E66       aBody_112
 0009:80567E6B       aDeath_21
 0009:80567E71       aFrombox
 0009:80567E79       aSeEmGessoSwimL
 0009:80567E8C       aWait_57
 0009:80567E91       aSearch_1
 0009:80567E98       aSeEmGessoFind
 0009:80567EA9       aWalkfast
 0009:80567EB2       aWalk_8
 0009:80567EB7       aSinkfast
 0009:80567EC0       aSink
 0009:80567EC5       aCooldown_1
 0009:80567ECE       aAttack_22
 0009:80567ED5       aSeEmGessoInk
 0009:80567EE5       aPunchdown
 0009:80567EEF       aSeEmGessoHitPu
 0009:80567F05       aSeEmGessoDead
 0009:80567F16       aStarpiece_0
 0009:80567F20       aSeEmLvGessoSta
 0009:80568078       aPackunflower
 0009:80568085       aPointertouchma_1
 0009:80568098       aMouthup
 0009:805680A0       aHead_20
 0009:805680A5       aAllroot_0
 0009:805680AD       aSeEmHhpackunDe
 0009:805680C1       aSeOjStarPieceB_25
 0009:805680D8       aWait_58
 0009:805680DD       aAttack_23
 0009:805680E4       aChance
 0009:805680EB       aRecovery
 0009:805680F4       aSeEmLvHhpackun
 0009:8056810F       aSwoonstart_2
 0009:8056811A       aSwoon_7
 0009:80568120       aSeEmLvSwoonS_2
 0009:80568131       aSwoonend_3
 0009:8056813A       aCrow
 0009:8056813F       aDown_7
 0009:80568144       aSeEmHhpackunSt
 0009:8056815B       aSeEmStompedS_6
 0009:8056816B       aBlowdown_0
 0009:80568174       aSeEmHhpackunHi
 0009:8056818D       aSeEvHhpackunDe
 0009:805681A1       aBlow_2
 0009:805681B7       aBody_113
 0009:805681BC       aPush1
 0009:805681C2       aPush2
 0009:805681C8       aPush3
 0009:805681CE       aPush4
 0009:805681D4       aSeEmStarpieceR
 0009:805681F4       aSpin1
 0009:805681FA       aSpin2
 0009:80568200       aSpin3
 0009:80568206       aShadow_20
 0009:8056821A       aPackunleaf
 0009:80568360       aHanachanbody
 0009:8056836D       aHanachanbodys
 0009:8056837B       aHanachanhead
 0009:80568388       aBody_114
 0009:8056838D       aPointertouch
 0009:8056839A       aNormal_14
 0009:805683A1       aNormal_15
 0009:805683A8       aHeaddeath
 0009:805683B2       aBodydeath
 0009:805683BC       aSeOjStarPieceB_26
 0009:805683D3       aSeEmHanachanTr
 0009:805683EA       aWalk_9
 0009:805683EF       aAngrystart_0
 0009:805683FA       aAnger
 0009:80568400       aAngryend
 0009:80568409       aOverturn
 0009:80568412       aOverturnbound
 0009:80568420       aOverturnland
 0009:8056842D       aOverturnwait
 0009:8056843A       aRecover_5
 0009:80568442       aRecoverland
 0009:8056844E       aOverturnpress
 0009:8056845C       aPress_2
 0009:80568462       aRotate_0
 0009:80568469       aAngrysmoke
 0009:80568486       aSeEmExplodeS_11
 0009:80568496       aSeEvHanachanTr
 0009:805684AD       aSeEmLvHanachan
 0009:805684C5       aSeEmLvHanachan_0
 0009:805684E1       aSeEmLvHanachan_1
 0009:805684FB       aSeEmLvHanachan_2
 0009:80568518       aSeEvHanachanCo
 0009:80568530       aSeEmLvHanachan_3
 0009:80568548       aWallhit_0
 0009:80568550       aSeEvHanachanOv
 0009:80568568       aSeEmHanachanBo
 0009:8056857D       aSeEmLvHanachan_4
 0009:80568595       aSeEmHanachanGe
 0009:805685AA       aSeEvHanachanAn
 0009:805685BF       aSeEmStompedS_7
 0009:805685CF       aSeEvHanachanDe
 0009:805688C8       aHomingkiller
 0009:805688D5       aTorpedo
 0009:805688E8       aMagnumkiller
 0009:80568917       aTorpedopropell
 0009:80568939       aTorpedolight
 0009:80568946       aBody_115
 0009:8056894B       aSandcolumn
 0009:80568956       aShadow_21
 0009:8056895D       aSmoke
 0009:80568963       aSmokechase
 0009:8056896E       aBubble
 0009:80568975       aBubblechase
 0009:80568981       aSeEmLvTorpedoM
 0009:80568997       aSeEmLvTorpedoA
 0009:805689AE       aSeEmLvMagkille
 0009:805689C5       aSeEmLvKillerFl
 0009:805689D9       aStart_2
 0009:805689DF       aMove_12
 0009:805689E4       aRotatetorpedo
 0009:805689F2       aAppear_23
 0009:805689F9       aSeEmLvKillerSt
 0009:80568A11       aSeEmKillerStan
 0009:80568A2A       aShoot_0
 0009:80568A30       aSeEmMagkillerF
 0009:80568A47       aSeEmKillerFiri
 0009:80568A5B       aChasestart
 0009:80568A66       aChase_2
 0009:80568A6C       aSeEmKillerJet
 0009:80568A7D       aTouch_6
 0009:80568A83       aExplosion_3
 0009:80568A8D       aSeEmTorpedoExp
 0009:80568AA5       aSeEmKillerExpl
 0009:80568C84       aIcemeramerakin
 0009:80568C94       aBody_13
 0009:80568C99       aJointroot
 0009:80568CB9       aIcemeramerakin_0
 0009:80568CD7       aBodyice
 0009:80568D03       aCenter_13
 0009:80568D0A       aSeBmLvIcemerak
 0009:80568D39       aSeDmLvMuteBgm
 0009:80568D56       aWait_59
 0009:80568D5B       aAttackthrow
 0009:80568D67       aSeBmIcemerakin
 0009:80568D7F       aGoout
 0009:80568D85       aSeBmIcemerakin_0
 0009:80568D9C       aSeBmIcemerakin_1
 0009:80568DB4       aBodyiceoff
 0009:80568DBF       aSeBmIcemerakin_2
 0009:80568DD6       aRolling
 0009:80568DDE       aSeBmLvIcemerak_0
 0009:80568DF8       aSeBmIcemerakin_3
 0009:80568E0F       aLand_9
 0009:80568E14       aDamage_16
 0009:80568E1B       aSeBmIcemerakin_4
 0009:80568E3D       aPrerecover
 0009:80568E48       aRecover_6
 0009:80568E50       aSeBmIcemerakin_5
 0009:80568E6E       aSeBmIcemerakin_6
 0009:80568E88       aAttack_24
 0009:80568E8F       aSeBmIcemerakin_7
 0009:80568EAC       aAttackend_2
 0009:80568EB6       aSeBmIcemerakin_8
 0009:80568ED1       aSummon_0
 0009:80568ED8       aSeBmIcemerakin_9
 0009:80568EF5       aSeBmIcemerakin_10
 0009:80568F12       aSeBmIcemerakin_11
 0009:80568F2B       aSeBmIcemerakin_12
 0009:80568F44       aSeOjStarPieceB_27
 0009:80568F5B       aDeath_22
 0009:80568F61       aSeBmIcemerakin_13
 0009:80568F78       aBreak_16
 0009:80568F87       aWideinside
 0009:80568F92       aWideoutside
 0009:80568F9E       aHirgh1
 0009:80568FB9       aIcemeramerakin_1
 0009:80568FCE       aCircle
 0009:80568FD5       aCircleEnd
 0009:80568FE0       aShock
 0009:80569200       aSeOjStarPieceB_28
 0009:80569219       aSeOjStarPieceB_29
 0009:80569230       aKoopabattlevs2_2
 0009:80569248       aJellyfish
 0009:80569252       aBody_116
 0009:80569257       aDeath_23
 0009:8056925D       aWait_60
 0009:80569262       aSeEmLvJellyfis
 0009:8056927A       aSearchon
 0009:80569283       aSeEmJellyfishF
 0009:80569298       aSearchwait
 0009:805692A3       aSeEmJellyfishH
 0009:805692BD       aSeEmJellyfishD
 0009:805692D2       aAttack_25
 0009:805692D9       aSeEmJellyfishA
 0009:805692F0       aSearchrotate
 0009:80569428       aJellyfishelect
 0009:8056943A       aBody_117
 0009:8056943F       aWait_61
 0009:80569444       aDangerwait
 0009:8056944F       aDangerbrk
 0009:80569459       aSeEmJellyelecD
 0009:80569470       aDamage_17
 0009:80569477       aDeath_24
 0009:8056947D       aSeEmLvJellyele
 0009:80569499       aSeEmJellyelecD_0
 0009:805694AE       aAttack_26
 0009:805694B5       aSeEmLvJellyele_0
 0009:805695C8       aJiraira
 0009:805695D0       aBody_118
 0009:805695D5       aExplode_0
 0009:805695DD       aButton
 0009:805695E4       aWait_62
 0009:805695E9       aStepped
 0009:805695F1       aSeOjJirairaSte
 0009:80569607       aSeOjLvJirairaC
 0009:8056961F       aExplosion_4
 0009:80569629       aSeOjJirairaExp
 0009:8056963F       aDown_8
 0009:80569644       aRecoveryloop
 0009:80569651       aSeOjLvJirairaR
 0009:8056966D       aRecovery_0
 0009:80569676       aSeOjJirairaRec
 0009:80569774       aJumpbeamerbody
 0009:80569796       aJumpbeamerhead
 0009:805697A5       aJump_2
 0009:805697AA       aSpringjoint3
 0009:805697B7       aBody_119
 0009:805697BC       aDown_9
 0009:805697CE       aWait_63
 0009:805697D3       aGreen_1
 0009:805697D9       aSeEmJguarderAp
 0009:805697EF       aSeEmJguarderHi
 0009:80569803       aHopstart_0
 0009:8056980C       aOnandoff_0
 0009:80569815       aDamage_18
 0009:8056981C       aCharge_0
 0009:80569823       aSeEmJguarderHi_0
 0009:80569836       aSeEmLvJguarder
 0009:8056984E       aHopwait_0
 0009:80569856       aHopjump_0
 0009:8056985E       aSeEmJguarderTr
 0009:80569875       aHopend_2
 0009:8056987C       aSeEmJguarderCl
 0009:80569898       aOpen_6
 0009:8056989D       aSeEmLvJguarder_0
 0009:80569A18       aWait_64
 0009:80569A1D       aGreen_2
 0009:80569A23       aBody_120
 0009:80569A28       aSeEmJguarderAp_0
 0009:80569A3E       aDown_10
 0009:80569A43       aSeEmJguarderHi_1
 0009:80569A57       aHopstart_1
 0009:80569A60       aOnandoff_1
 0009:80569A69       aDamage_19
 0009:80569A70       aSeEmJguarderHi_2
 0009:80569A83       aSeEmLvJguarder_1
 0009:80569A9B       aHopwait_1
 0009:80569AA3       aJump_3
 0009:80569AA8       aHopjump_1
 0009:80569AB0       aSeEmJguarderTr_0
 0009:80569AC7       aHopend_3
 0009:80569ACE       aSeEmJguarderCl_0
 0009:80569AEA       aOpen_7
 0009:80569AEF       aSeEmJguarderSh
 0009:80569B0B       aSeEmJguarderLa
 0009:80569B26       aClose_2
 0009:80569B2C       aSeEmLvJguarder_2
 0009:80569B4C       aJumpguarder
 0009:80569B6B       aJumpguarderhea
 0009:80569B7B       aSpringjoint3_0
 0009:80569DE0       aJumpspider
 0009:80569DEB       aBody_121
 0009:80569DF0       aShadow_22
 0009:80569DF7       aEyelight
 0009:80569E00       aDeath_25
 0009:80569E06       aWait_65
 0009:80569E0B       aSeEvJumpspider
 0009:80569E21       aJumpstart_0
 0009:80569E2B       aJump_4
 0009:80569E30       aSeEmJumpspider
 0009:80569E46       aSeEmJumpspider_0
 0009:80569E5C       aJumpend_0
 0009:80569E64       aPress_3
 0009:80569E6A       aSeEmExplodeS_12
 0009:80569E7A       aBlow_3
 0009:80569E7F       aSeEvJumpspider_0
 0009:80569E95       aTouch_7
 0009:80569E9B       aNopowerstart
 0009:80569EA8       aNopowerland
 0009:80569EB4       aNopowerwait
 0009:80569EC0       aSeEmLvSwoonS_3
 0009:80569ED1       aNopowerend
 0009:80569EDC       aSeEmJumpspider_1
 0009:80569EF2       aSeEmStompedS_8
 0009:8056A070       aKabokuri
 0009:8056A095       aKabokuribreak
 0009:8056A0A3       aBody_122
 0009:8056A0A8       aAttack_27
 0009:8056A0AF       aWait_66
 0009:8056A0B4       aWalk_10
 0009:8056A0B9       aDropfire
 0009:8056A0C2       aAttacksuccess_0
 0009:8056A0D0       aTrampled_0
 0009:8056A0D9       aSeEmKabokuriTr
 0009:8056A0F0       aStarpiecehit
 0009:8056A0FD       aSeEmStompedS_9
 0009:8056A10D       aBreak_17
 0009:8056A113       aSeEmKabokuriBr
 0009:8056A248       aKabokurifire
 0009:8056A255       aBody_123
 0009:8056A25A       aSeOjPhantomToa_1
 0009:8056A272       aSeOjLvPhantomT_1
 0009:8056A358       aKameck
 0009:8056A35F       aBody_124
 0009:8056A364       aAttack_28
 0009:8056A3AA       aDeath_26
 0009:8056A3B0       aSeEvKameckAtkS
 0009:8056A3C9       aWand
 0009:8056A3CE       aWait_67
 0009:8056A3D3       aAppear_24
 0009:8056A3DA       aSeEmKameckSmok
 0009:8056A3ED       aSeEmKameckAppe
 0009:8056A401       aAttackwait_0
 0009:8056A40C       aSeEmLvKameckSt
 0009:8056A427       aGuard_3
 0009:8056A42D       aAttack_29
 0009:8056A434       aSeEmKameckStaf
 0009:8056A44D       aSeEvKameckStaf
 0009:8056A466       aHide_8
 0009:8056A46B       aSeEmKameckHide
 0009:8056A47D       aMove_13
 0009:8056A482       aSeEmLvKameckWa
 0009:8056A497       aDown_11
 0009:8056A49C       aSeEvKameckDead
 0009:8056A4B3       aSeEmExplodeS_13
 0009:8056A4C3       aPress_4
 0009:8056A4C9       aSeEmStompedS_10
 0009:8056A4D9       aSeEvKameckDead_0
 0009:8056A69C       aBosskameckbeam
 0009:8056A6AB       aBeamturtleread
 0009:8056A6BB       aBeamfireready
 0009:8056A6C9       aBeamturtle
 0009:8056A6D4       aBeamfire
 0009:8056A6DD       aAttack_30
 0009:8056A6E4       aSeBmKameckFire
 0009:8056A6FC       aBeamturtlebrea
 0009:8056A70C       aBeamfirebreak
 0009:8056A71A       aSeBmLvKameckMa
 0009:8056A735       aSeBmKameckFire_0
 0009:8056A751       aSeSyAppearTurt
 0009:8056A769       aBeamfireburn
 0009:8056A776       aSeBmLvKameckMa_0
 0009:8056A791       aSeBmLvKameckMa_1
 0009:8056A7AC       _25KameckBeamCollisionFilter::`vtbl'
 0009:8056A7C4       _23KameckBeamEventListener::`vtbl'
 0009:8056A980       aBosskameckfire
 0009:8056A993       aAttack_31
 0009:8056A99A       aSeBmKameckDisa
 0009:8056A9B6       aBeamfirevanish
 0009:8056A9C5       aSeBmLvKameckFi
 0009:8056A9DF       aSeBmKameckFire_1
 0009:8056AAC8       aKoura
 0009:8056AACE       aAttack_32
 0009:8056AAD5       aBosskameckbeam_0
 0009:8056AAFF       aWait_68
 0009:8056AB04       aSeEmLvTurtleSl
 0009:8056AB1A       aSeEmTurtleRebo
 0009:8056AB2F       aBeamturtlevani
 0009:8056AB40       aSeBmKameckDisa_0
 0009:8056ABF8       aBlink_1
 0009:8056ABFE       aNormal_16
 0009:8056AC05       aBody_126
 0009:8056AC0A       aBody_125
 0009:8056AC0F       aAttack_33
 0009:8056AC16       aKanina
 0009:8056AC1D       aRoot_1
 0009:8056AC22       aKaninared
 0009:8056AC2C       aDeath_27
 0009:8056AC32       aSeEmExplodeS_14
 0009:8056AC42       aSeOjStarPieceB_30
 0009:8056AC59       aChaserun
 0009:8056AC62       aAngry_1
 0009:8056AC68       aSeEmLvKaninaAw
 0009:8056AC7D       aAppear_25
 0009:8056AC84       aSeEmLvKaninaPr
 0009:8056AC9F       aWait_69
 0009:8056ACA4       aWalk_11
 0009:8056ACA9       aAttack_34
 0009:8056ACB0       aSeEmKaninaAtta
 0009:8056ACCA       aVaunt
 0009:8056ACD0       aGuard_4
 0009:8056ACD6       aSeEmKaninaGuar
 0009:8056ACE9       aGuardreturn
 0009:8056ACF5       aHipdropdown
 0009:8056AD01       aSwoon_8
 0009:8056AD07       aSeEmStompedS_11
 0009:8056AD17       aPunchdown_0
 0009:8056AD21       aSeEmLvKaninaDi
 0009:8056AD35       aSearch_2
 0009:8056AD3C       aSeEvKaninaFind
 0009:8056AD4E       aTurn_8
 0009:8056AD53       aTouch_8
 0009:8056AF4D       aKaripon
 0009:8056AF55       aBody_127
 0009:8056AF5A       aKarikaricrysta
 0009:8056AF6F       aKarikaricrysta_0
 0009:8056AF84       aSeEmKarikariBl
 0009:8056AF98       aSeEmKarikariCr
 0009:8056AFB7       aWait_70
 0009:8056AFBC       aBite_0
 0009:8056AFC1       aSmokeland
 0009:8056AFCB       aLand_10
 0009:8056AFD0       aSeEmKarikariFi
 0009:8056AFE4       aSearch_3
 0009:8056AFEB       aJump_5
 0009:8056AFF0       aSeEmKarikariJu
 0009:8056B005       aGlad
 0009:8056B00A       aSeEmLvKarikari
 0009:8056B022       aSeEmKarikariTo
 0009:8056B037       aSpinx_0
 0009:8056B03D       aMeMagic
 0009:8056B046       aSeEmKarikariRe
 0009:8056B05D       aTouch_9
 0009:8056B063       aSeEmKarikariFr
 0009:8056B081       aSeEmKarikariCr_0
 0009:8056B0A0       aKarikarismokel
 0009:8056B0B2       aSeEmLvKarikari_0
 0009:8056B0CC       aPress_5
 0009:8056B0D2       aSeEmKarikariSt
 0009:8056B0E9       aElectricdeath
 0009:8056B0F7       aDeath_28
 0009:8056B0FD       aSeEmExplodeS_15
 0009:8056B10D       aSeOjStarPieceB_31
 0009:8056B2C0       aFaceposition
 0009:8056B2CD       aArml2_0
 0009:8056B2D3       aSpine1_3
 0009:8056B2DA       aShoulderr
 0009:8056B308       aKaron
 0009:8056B30E       aBody_128
 0009:8056B313       aDeath_29
 0009:8056B319       aSeEmExplodeS_16
 0009:8056B329       aWait_71
 0009:8056B32E       aWalk_12
 0009:8056B333       aSearch_4
 0009:8056B33A       aSeEvKaronFind
 0009:8056B34B       aPursue_0
 0009:8056B352       aSpinbreak
 0009:8056B35C       aSeEmKaronBroke
 0009:8056B36F       aSeEvKaronDamag
 0009:8056B382       aStepbreak
 0009:8056B38C       aRecovery_1
 0009:8056B395       aSeEmKaronRecov
 0009:8056B3A9       aStarpiece_1
 0009:8056B3B3       aAttackhit_1
 0009:8056B3BD       aSeEvLvKaronAtk
 0009:8056B3D8       aDown_12
 0009:8056B3DD       aSinkdown_0
 0009:8056B3E6       aSeEvLvKaronSin
 0009:8056B3FA       aSeEmLvKaronSin
 0009:8056B40E       aSeOjStarPieceB_32
 0009:8056B5A0       aKiraira
 0009:8056B5A8       aBody_129
 0009:8056B5AD       aMindEye
 0009:8056B5B6       aKirairarail
 0009:8056B5CF       aWait_72
 0009:8056B5D4       aStop_3
 0009:8056B5D9       aRaildown
 0009:8056B5E2       aDown_13
 0009:8056B5E7       aRailrevivalsta
 0009:8056B5F8       aRevivalstart
 0009:8056B605       aRevival_1
 0009:8056B60D       aRailrevival
 0009:8056B619       aSeOjKirairaRec
 0009:8056B62F       aEyeopen
 0009:8056B637       aSearchlight
 0009:8056B643       aSeOjKirairaSta
 0009:8056B657       aEyeclose
 0009:8056B660       aSeOjLvKirairaC
 0009:8056B677       aExplosion_5
 0009:8056B681       aSeOjKirairaExp
 0009:8056B7AE       aKirairachain
 0009:8056B7D1       aKirairafixpoin
 0009:8056B7FD       aKirairafixpoin_0
 0009:8056B890       aScrew00
 0009:8056B898       aScrew01
 0009:8056B8A0       aPropeller00
 0009:8056B8AC       aFirepoint3
 0009:8056B8B7       aKoopajrship
 0009:8056B8C3       aKoopajrshippod
 0009:8056B8D2       aFirepoint0
 0009:8056B8DD       aFirepoint1
 0009:8056B8E8       aFirepoint2
 0009:8056B8F3       aFirepoint4
 0009:8056B8FE       aFirepoint5
 0009:8056B909       aFirepoint6
 0009:8056B914       aShootj0
 0009:8056B91C       aShootj1
 0009:8056B924       aShootj2
 0009:8056B92C       aShootj4
 0009:8056B934       aShootj5
 0009:8056B93C       aShootj6
 0009:8056B950       aKoopajrship_1
 0009:8056B975       aKoopajrshipbre
 0009:8056B9A1       aKoopajrshippod_0
 0009:8056B9BA       aSeBmLvKoopajrS_2
 0009:8056B9D6       aSeBmLvKoopajrS_3
 0009:8056B9F2       aSeBmLvKoopajrS_4
 0009:8056BA42       aSeBmKoopajrShi_2
 0009:8056BA5E       aSeBvKoopajrDam
 0009:8056BA75       aSeSyVsBossLast_5
 0009:8056BA8C       aSeBmKoopajrShi_3
 0009:8056BAA6       aSeBvKoopajrDam_0
 0009:8056BABD       aSeSyVsBossDama_12
 0009:8056BAD4       aSeBmLvKoopajrS_5
 0009:8056BAF0       aDamagesmoke1_0
 0009:8056BAFD       aDamagesmoke2_0
 0009:8056BB0A       aDamagefire_0
 0009:8056BB15       aSeBmKoopajrShi_4
 0009:8056BB2E       aSeBmKoopajrShi_5
 0009:8056BB47       aArrival_0
 0009:8056BB5C       aMbgmBoss06A
 0009:8056BB6B       aHeadshootsign
 0009:8056BB79       aSeBmLvKoopajrS_6
 0009:8056BB99       aHeadshoot
 0009:8056BBA3       aSeBmKoopajrShi_6
 0009:8056BBC1       aDamage_20
 0009:8056BBCD       aBreak_18
 0009:8056BBD3       aEscape_0
 0009:8056BBDA       aEyelight_0
 0009:8056BBE3       aSeBmKoopajrShi_7
 0009:8056BBFE       aSeBmKoopajrShi_8
 0009:8056BC28       aSeBmLvKoopajrS_0
 0009:8056BC47       aSeBmKoopajrShi_0
 0009:8056BC64       aMbgmBoss06B
 0009:8056BDE0       aKoopajrshipcan
 0009:8056BDFB       aKoopajrshipcan_0
 0009:8056BE12       aAttack_35
 0009:8056BE19       aLocussmoke_0
 0009:8056BE24       aLocusfire
 0009:8056BE2E       aExplosion_6
 0009:8056BE38       aSeBmKoopajrShi_9
 0009:8056BE56       aSeBmLvKoopajrS_7
 0009:8056BFA8       aKoopajrshipcan_1
 0009:8056BFBF       aBody_130
 0009:8056BFC4       aAttack_36
 0009:8056BFCB       aLocussmoke_1
 0009:8056BFD6       aSeBmKoopajrShi_10
 0009:8056BFF6       aExplosion_7
 0009:8056C000       aSeEmKillerExpl_0
 0009:8056C017       aMisfire_0
 0009:8056C01F       aSeEmKillerMiss
 0009:8056C036       aSeEmLvKillerFl_0
 0009:8056C04A       aSeEmStompedS_12
 0009:8056C1C4       aKotebug
 0009:8056C1CC       aBody_14
 0009:8056C1D1       aCenter_2
 0009:8056C1D8       aAppear_2
 0009:8056C1DF       aDeath_2
 0009:8056C1E5       aWait_5
 0009:8056C1EA       aSyaka
 0009:8056C1F0       aPreescape
 0009:8056C1FA       aSeEmKotebugFin
 0009:8056C20D       aSeEmLvKotebugF
 0009:8056C222       aJitabata
 0009:8056C22B       aSeEmLvKotebugP
 0009:8056C248       aPote
 0009:8056C24D       aSeEmKotebugOve
 0009:8056C269       aPotesmoke
 0009:8056C273       aSeEmKotebugFal
 0009:8056C28B       aJitabata2
 0009:8056C295       aSeEmLvKotebugO
 0009:8056C2AF       aSeEmKotebugRec
 0009:8056C2C5       aSeEmKotebugLan
 0009:8056C2D8       aSeEmExplodeS_0
 0009:8056C2E8       aSeEmStompedS
 0009:8056C2F8       aSeEmKotebugTra
 0009:8056C4B0       aKuribo_0
 0009:8056C4B7       aKoopabattlevs2_3
 0009:8056C4CC       aBody_131
 0009:8056C4D1       aAttack_37
 0009:8056C4D8       aDeathsmokekuri
 0009:8056C4E9       aSeEmExplodeS_17
 0009:8056C4F9       aSeEmStompedS_13
 0009:8056C509       aFlatdownrevers
 0009:8056C519       aFlatdown_0
 0009:8056C522       aHipdropdownrev
 0009:8056C535       aHipdropdown_0
 0009:8056C541       aBlow_4
 0009:8056C546       aLand_11
 0009:8056C54B       aSeEmKuriboFind
 0009:8056C55D       aSeEmLvKuriboDa
 0009:8056C573       aSeEmCrashS_0
 0009:8056C581       aSeEmLvSwoonS_4
 0009:8056C592       aSeEmKuriboSwoo_0
 0009:8056C5AD       aAppearfrombox_0
 0009:8056C718       aKuribochief
 0009:8056C724       aShadow_23
 0009:8056C72B       aBody_132
 0009:8056C730       aHead1_1
 0009:8056C736       aHead_21
 0009:8056C73B       aHead2_0
 0009:8056C741       aLegl_0
 0009:8056C746       aLegr_0
 0009:8056C74B       aPunch
 0009:8056C75C       aKeyswitch_0
 0009:8056C766       aHead_36
 0009:8056C76B       aSeEmKuribochie
 0009:8056C782       aSeEmKuribochie_0
 0009:8056C799       aSeEmKuribochie_1
 0009:8056C7B0       aSeEmKuribochie_2
 0009:8056C7C8       aSeEmLvSwoonS_5
 0009:8056C7D9       aSeEmLvKuriboch
 0009:8056C7F6       aSeEmKuribochie_3
 0009:8056C810       aSeEmKuribochie_4
 0009:8056C82A       aBlowdown_1
 0009:8056C833       aSeSyVsBossLast_6
 0009:8056C84A       aBlowdownland
 0009:8056C857       aSeEmKuribochie_5
 0009:8056C874       aDeath_30
 0009:8056C87A       aSeEmKuribochie_6
 0009:8056C9A4       aKuribomini
 0009:8056C9AF       aBody_15
 0009:8056C9B4       aAttack_2
 0009:8056C9BB       aDeath_3
 0009:8056C9C1       aSeEmExplodeS_1
 0009:8056C9D1       aSeEmStompedS_0
 0009:8056C9E1       aFlatdown
 0009:8056C9EA       aSeEmKuribomini
 0009:8056CA00       aSeEmLvKuribomi
 0009:8056CA19       aSeEmCrashS
 0009:8056CA27       aSeEmLvSwoonS
 0009:8056CA38       aSeEmKuriboSwoo
 0009:8056CA53       aBlowdown
 0009:8056CBA4       aMechanickoopam
 0009:8056CBB6       aBody_16
 0009:8056CBBB       aJointroot_0
 0009:8056CBC5       aFire
 0009:8056CBCA       aShadow_4
 0009:8056CBD1       aDeath_4
 0009:8056CBD7       aSeEmExplodeS_2
 0009:8056CBE7       aWait_6
 0009:8056CBEC       aWalk_0
 0009:8056CBF1       aTurn_2
 0009:8056CBF6       aJumpstart
 0009:8056CC00       aSeEmMkoopamini
 0009:8056CC16       aJumpend
 0009:8056CC1E       aFind
 0009:8056CC23       aPursue
 0009:8056CC2A       aPrefire
 0009:8056CC32       aSeEmLvMkoopami
 0009:8056CC4F       aFire_0
 0009:8056CC54       aSeEmLvMkoopami_0
 0009:8056CC6D       aFireend
 0009:8056CC75       aAttackhit
 0009:8056CC7F       aSpinhit
 0009:8056CC87       aSeEmMkoopamini_0
 0009:8056CCA1       aTrample_0
 0009:8056CCA9       aBreak_1
 0009:8056CCAF       aSeEmMkoopamini_1
 0009:8056CCC6       aSeEmMkoopamini_2
 0009:8056CE68       aMeramera
 0009:8056CE71       aIcemeramera
 0009:8056CE7D       aChildmeramera_0
 0009:8056CE8B       aChildicemerame
 0009:8056CEBC       aExtinguishside
 0009:8056CECB       aExtinguishside_0
 0009:8056CEDF       aWait_73
 0009:8056CEE4       aEscape_1
 0009:8056CEEB       aExtinguishsmok
 0009:8056CEFB       aChasestart_0
 0009:8056CF06       aChase_3
 0009:8056CF0C       aAttack_38
 0009:8056CF13       aFall_9
 0009:8056CF18       aBody_133
 0009:8056CF1D       aBreak_19
 0009:8056CF23       aAttack_39
 0009:8056CF2A       aJointroot_2
 0009:8056CF42       aBreak_20
 0009:8056CF48       aDamage_21
 0009:8056CF4F       aHitmark
 0009:8056CF57       aSeEmMerameraFi
 0009:8056CF6B       aSeEmIcemeraPow
 0009:8056CF82       aSeEmMerameraFi_0
 0009:8056CF9E       aChasedash
 0009:8056CFA8       aSeEmMerameraDa
 0009:8056CFBC       aChaseturn
 0009:8056CFC6       aSeEmIcemeraBlo
 0009:8056CFDE       aSeEmMerameraBl
 0009:8056CFF7       aSeEmMerameraSm
 0009:8056D00C       aEscaperock
 0009:8056D017       aSeEmMerameraBo
 0009:8056D02C       aSeEmMerameraJu
 0009:8056D040       aRevival_2
 0009:8056D048       aSeEmMerameraLa
 0009:8056D05F       aFloat
 0009:8056D065       aSeEmMerameraLa_0
 0009:8056D07D       aFloatignition
 0009:8056D08B       aSeEmIcemeraIgn
 0009:8056D0A2       aSeEmMerameraIg
 0009:8056D0BA       aDown_14
 0009:8056D0BF       aSeEmMerameraSt
 0009:8056D0D6       aSeEmMerameraEx
 0009:8056D0ED       aFlatdown_1
 0009:8056D0F6       aSeEmExplodeS_18
 0009:8056D106       aOnfire
 0009:8056D10D       aRedtoblack
 0009:8056D118       aOfffire
 0009:8056D120       aSeEmLvIcemeraW
 0009:8056D136       aSeEmLvMeramera
 0009:8056D14D       aSeEmLvIcemeraC
 0009:8056D164       aSeEmLvMeramera_0
 0009:8056D338       aMetbo
 0009:8056D33E       aBody_134
 0009:8056D343       aAttack_40
 0009:8056D34A       aKoopabattlevs2_4
 0009:8056D35F       aWait_74
 0009:8056D364       aWalk_13
 0009:8056D369       aSearch_5
 0009:8056D370       aSeEmMetboFind
 0009:8056D381       aRunstart
 0009:8056D38A       aSeEmLvKuriboDa_0
 0009:8056D3A0       aGuard_5
 0009:8056D3A6       aSeEmStompedS_14
 0009:8056D3B6       aPress_6
 0009:8056D3BC       aBlow_5
 0009:8056D3C1       aAttack_41
 0009:8056D3C8       aSwoonstart_3
 0009:8056D3D3       aSeEmCrashS_1
 0009:8056D3E1       aSwoonland
 0009:8056D3EB       aSeEmLvMetboSta
 0009:8056D402       aSwoonspin
 0009:8056D40C       aSwoonwait
 0009:8056D416       aSeEmLvMetboSwo
 0009:8056D42B       aRecover_7
 0009:8056D433       aSeEmMetboSwoon
 0009:8056D44D       aSeEmExplodeS_19
 0009:8056D45D       aDeath_31
 0009:8056D463       aSeEmMetboTramp
 0009:8056D477       aSeEmMetboSpinH
 0009:8056D618       aMogu
 0009:8056D61D       aBody_135
 0009:8056D622       aHead_22
 0009:8056D627       aArmr2_2
 0009:8056D638       aMogustone
 0009:8056D64D       aMoguhole
 0009:8056D656       aCannonfleetgal_6
 0009:8056D668       aDeath_32
 0009:8056D66E       aHide_9
 0009:8056D673       aSeEmMoguHide
 0009:8056D683       aSeEmMoguholeCl
 0009:8056D698       aAppear_26
 0009:8056D69F       aOpen_8
 0009:8056D6A4       aSeEmMoguholeOp
 0009:8056D6B8       aSeEmMoguAppear
 0009:8056D6CA       aTurn_9
 0009:8056D6CF       aWait_75
 0009:8056D6D4       aThrow
 0009:8056D6DA       aRotate_1
 0009:8056D6E1       aSeEmMoguTakeIt
 0009:8056D6F6       aSeEmMoguThrow
 0009:8056D707       aSeEmMoguTurnov
 0009:8056D71B       aSeEvMoguTurnov
 0009:8056D72F       aSwoonstart_4
 0009:8056D73A       aBreak_21
 0009:8056D740       aSeEmLvSwoonS_6
 0009:8056D751       aSwoon_9
 0009:8056D757       aHipdropreactio
 0009:8056D767       aSwoonend_4
 0009:8056D770       aSeEmLvMoguSwoo
 0009:8056D78C       aClose_3
 0009:8056D792       aDown_15
 0009:8056D797       aSeEmStompedS_15
 0009:8056D7A7       aSeEmExplodeS_20
 0009:8056D7B7       aSeOjStarPieceB_33
 0009:8056D7CE       aPunchdown_1
 0009:8056D910       aMogucchi
 0009:8056D919       aPointertouchma_2
 0009:8056D92C       aNose_0
 0009:8056D931       aHead_23
 0009:8056D936       aWalk_14
 0009:8056D93B       aEyeopen_0
 0009:8056D943       aSeEmLvMoghillM
 0009:8056D959       aSwoonstart_5
 0009:8056D964       aEyeclose_0
 0009:8056D96D       aSeEmMogucchiAp
 0009:8056D983       aSeEvMogucchiSw
 0009:8056D998       aBody_136
 0009:8056D99D       aSpin_6
 0009:8056D9A2       aSeEmLvSwoonS_7
 0009:8056D9B3       aSwoon_10
 0009:8056D9B9       aHide_10
 0009:8056D9BE       aSeEmMogucchiHi
 0009:8056D9D2       aPunchdown_2
 0009:8056D9DC       aSeEmExplodeS_21
 0009:8056D9EC       aDeath_33
 0009:8056D9F2       aHead_24
 0009:8056D9F7       aSpine_4
 0009:8056DA13       aMogucchihole
 0009:8056DA20       aSeEmMogucchiRe
 0009:8056DA37       aBounce
 0009:8056DB18       aMogucchihilla
 0009:8056DB26       aMogucchihillb_0
 0009:8056DB34       aMogucchihillc_0
 0009:8056DB50       aBody_137
 0009:8056DB55       aBreak_22
 0009:8056DB5B       aLead
 0009:8056DB60       aNormal_17
 0009:8056DB67       aSeEmMoghillApp
 0009:8056DB7C       aFade
 0009:8056DB81       aSeEmMoghillBre
 0009:8056DB95       aSeEmMoghillBre_0
 0009:8056DBAE       aMogucchihill_0
 0009:8056DD18       aBody_138
 0009:8056DD98       aMogucchishoote
 0009:8056DDA8       aNormal_18
 0009:8056DDAF       aWaitpinch
 0009:8056DDB9       aWait_76
 0009:8056DDBE       aShot_0
 0009:8056DDC3       aTire
 0009:8056DDC8       aPanic
 0009:8056DDCE       aCooldown_2
 0009:8056DDD7       aDown_16
 0009:8056DDDC       aLaugh_0
 0009:8056DDE2       aShock_0
 0009:8056DDE8       aSeEmLvWaterbaz
 0009:8056DE00       aAngry_2
 0009:8056DE06       aSpinattackstar
 0009:8056DE16       aSpinattack
 0009:8056DE21       aCockpit
 0009:8056DF78       aBody_139
 0009:8056DF7D       aBreak_23
 0009:8056DF83       aSeEmMoguSpanaB
 0009:8056DF9A       aSeEmLvMoguSpan
 0009:8056DFB2       aSeBmIcemerakin_14
 0009:8056DFD0       aIcemanice
 0009:8056DFDA       aSmoke_0
 0009:8056E138       aNokonokoland
 0009:8056E145       aAppear_3
 0009:8056E14C       aBody_17
 0009:8056E151       aCenter_3
 0009:8056E158       aAttack_3
 0009:8056E15F       aShell
 0009:8056E165       aTurtle
 0009:8056E16C       aDeath_5
 0009:8056E172       aSeEmTurtleShel
 0009:8056E18D       aSeEmLvNokoland
 0009:8056E1AD       aSeEmNokolandRe
 0009:8056E1CA       aSeEvNokonokoAp
 0009:8056E1E0       aRotate
 0009:8056E1E7       aSeEmTurtleHit
 0009:8056E1F8       aSeEvNokonokoDa
 0009:8056E20E       aSeEmExplodeS_3
 0009:8056E21E       aWalkfastwait
 0009:8056E22B       aWalkwait
 0009:8056E234       aLookaround
 0009:8056E23F       aTurnstart
 0009:8056E249       aTurnloopstart
 0009:8056E257       aTurnloop
 0009:8056E260       aTurnend_0
 0009:8056E268       aAttack_4
 0009:8056E26F       aRattle
 0009:8056E276       aSeEmLvNokoland_0
 0009:8056E28F       aShellstart
 0009:8056E29A       aSeEvNokonokoTr
 0009:8056E2B1       aShellstartface
 0009:8056E2C0       aShellstartpunc
 0009:8056E2D0       aSeEmNokolandSh
 0009:8056E2EB       aSeEvNokonokoPu
 0009:8056E304       aShellwait
 0009:8056E30E       aShellend
 0009:8056E317       aSeEmNokolandRe_0
 0009:8056E333       aSeEvNokonokoRe
 0009:8056E538       aOnimasu
 0009:8056E540       aMove_14
 0009:8056E545       aBody_140
 0009:8056E54A       aFactorygalaxy_6
 0009:8056E558       aSeOjOnimasuLan
 0009:8056E56B       aSeOjOnimasuJum
 0009:8056E7B0       aOtarockdeath
 0009:8056E7BD       aSeEmOtarockDie
 0009:8056E7CF       aOtarock
 0009:8056E7D7       aMouth_4
 0009:8056E7F9       aBody_141
 0009:8056E7FE       aWait_77
 0009:8056E803       aAttack_42
 0009:8056E80A       aSeEvOtarockPre
 0009:8056E826       aSeEvOtarockPre_0
 0009:8056E840       aSeEmOtarockFir
 0009:8056E857       aDeath_34
 0009:8056E85D       aSeEmOtarockLas
 0009:8056E877       aSeEvOtarockDie
 0009:8056E889       aHide_11
 0009:8056E88E       aSeEmOtarockHid
 0009:8056E8A1       aHidewait_1
 0009:8056E8AA       aShow
 0009:8056E8AF       aSeEmOtarockApp
 0009:8056E9B0       aPackunpetit
 0009:8056E9BC       aBody_142
 0009:8056E9C1       aHead_25
 0009:8056E9C6       aAttack_43
 0009:8056E9CD       aStalk
 0009:8056E9D3       aShadow_24
 0009:8056E9DA       aJawa
 0009:8056E9DF       aWait_78
 0009:8056E9E4       aSuspect
 0009:8056E9EC       aThreat
 0009:8056E9F3       aSeEmLvPackunpe
 0009:8056EA0F       aTurnleft_1
 0009:8056EA18       aTurnright_1
 0009:8056EA22       aAttack_44
 0009:8056EA29       aImpact
 0009:8056EA30       aPress_7
 0009:8056EA36       aSeEmStompedS_16
 0009:8056EA46       aBlowhead
 0009:8056EA4F       aBlow_6
 0009:8056EA54       aDeath_35
 0009:8056EA5A       aSeOjStarPieceB_34
 0009:8056EA71       aSwoonstart_6
 0009:8056EA7C       aSwoon_11
 0009:8056EA82       aSeEmLvSwoonS_8
 0009:8056EA93       aSwoontothreat
 0009:8056EAA1       aSeEmExplodeS_22
 0009:8056EAC0       aPackunpetithea
 0009:8056EC58       aBody_0
 0009:8056EC5D       aSpin
 0009:8056EC62       aPetari
 0009:8056EC69       aPointertouchma
 0009:8056EC7C       aShadow_5
 0009:8056EC83       aSeEmExplodeS_4
 0009:8056EC93       aInnerlight
 0009:8056EC9E       aHead1_0
 0009:8056ECA4       aLeaveappearanc
 0009:8056ECB9       aWait_7
 0009:8056ECBE       aSeEmPetariWait
 0009:8056ECD7       aLeaveappearanc_0
 0009:8056ECF1       aSeEmPetariWait_0
 0009:8056ED08       aStartsmoke
 0009:8056ED13       aWalksmoke
 0009:8056ED1D       aSeEmLvPetariRu
 0009:8056ED31       aRunsmoke
 0009:8056ED3A       aAppearance_0
 0009:8056ED45       aSeEmPetariAppe
 0009:8056ED59       aSwoon
 0009:8056ED5F       aSeEmLvSwoonS_0
 0009:8056ED70       aHide_0
 0009:8056ED75       aSeEmPetariWake
 0009:8056ED8A       aSeEmPetariJump
 0009:8056ED9C       aSeEmChangeSmok
 0009:8056EDAF       aPress
 0009:8056EDB5       aSeEmStompedS_1
 0009:8056EDC5       aSeOjStarPieceB_2
 0009:8056EDDC       aDamage
 0009:8056EDF0       aFootprintBti
 0009:8056EDFE       aHead3_1
 0009:8056EF50       aPoihana
 0009:8056EF58       aBinder_0
 0009:8056EF5F       aBody_143
 0009:8056EF64       aBody_144
 0009:8056EF78       aWatercolumn_3
 0009:8056EF84       aWait_79
 0009:8056EF89       aWalk_15
 0009:8056EF8E       aSleepstart
 0009:8056EF99       aSeEvPoihanaSle
 0009:8056EFB3       aSleep_0
 0009:8056EFB9       aGetup_0
 0009:8056EFBF       aSeEvPoihanaWak
 0009:8056EFD4       aSeEmPoihanaWak
 0009:8056EFE9       aSearch_6
 0009:8056EFF0       aSeEvPoihanaFin
 0009:8056F003       aThrowstart
 0009:8056F00E       aThrow_0
 0009:8056F014       aSeEvPoihanaSho
 0009:8056F02B       aPunchdamage_0
 0009:8056F037       aSwoonland_0
 0009:8056F041       aSeEvPoihanaSwo
 0009:8056F055       aSwoon_12
 0009:8056F05B       aSeEmLvSwoonS_9
 0009:8056F06C       aRecover_8
 0009:8056F074       aSeEmPoihanaRec
 0009:8056F08A       aSeEvPoihanaRec
 0009:8056F0A0       aDrown
 0009:8056F0A6       aSeEmFallIntoWa_2
 0009:8056F0BE       aSeEmExplodeSWa
 0009:8056F0D4       aDeathwater_2
 0009:8056F0DF       aAppear_27
 0009:8056F0E6       aSeEmLvPoihanaR
 0009:8056F105       aSeEmPoihanaRev
 0009:8056F121       aSeEvPoihanaTra
 0009:8056F137       aRise
 0009:8056F13C       aSePmHeliJump
 0009:8056F308       aBound
 0009:8056F30E       aCloseeye
 0009:8056F317       aFlystart
 0009:8056F320       aOpeneye
 0009:8056F328       aFlyend
 0009:8056F32F       aSwimstart
 0009:8056F346       aCloseeye_0
 0009:8056F34F       aBound_2
 0009:8056F355       aOpeneye_0
 0009:8056F35D       aFlystart_1
 0009:8056F366       aSeEmPukupukuWa
 0009:8056F37F       aFlyend_0
 0009:8056F386       aSeEmPukupukuWi
 0009:8056F39A       aCenter_14
 0009:8056F3A1       aWatercolumn_4
 0009:8056F3AD       aLand_12
 0009:8056F3B2       aSeEmPukupukuLa
 0009:8056F3C6       aPukupuku
 0009:8056F3CF       aBody_145
 0009:8056F3D4       aDeathwater_3
 0009:8056F3DF       aSeEmExplodeUnd_1
 0009:8056F3F9       aDeath_36
 0009:8056F3FF       aSeEmExplodeS_23
 0009:8056F40F       aSeOjStarPieceB_35
 0009:8056F428       aSeOjStarPieceB_36
 0009:8056F43F       aSwim_4
 0009:8056F444       aSeEmLvPukupuku
 0009:8056F45B       aBodyattack
 0009:8056F466       aSwimstart_0
 0009:8056F470       aSeEmPukupukuWa_0
 0009:8056F488       aFlat
 0009:8056F48D       aSeEmStompedS_17
 0009:8056F49D       aRotate_2
 0009:8056F4A4       aSpindamagewate
 0009:8056F4B4       aSpindamage
 0009:8056F63D       aJumpbeamerbeam_2
 0009:8056F64C       aBeam_2
 0009:8056F65A       aJumpbeamerbeam_3
 0009:8056F684       aJumpbeamerbeam_4
 0009:8056F698       aSpread_0
 0009:8056F69F       aSeEmJumpringAp
 0009:8056F6B5       aErase_1
 0009:8056F6BB       aSeEmLvRingbeam_0
 0009:8056F79C       aRingbeamer
 0009:8056F7A7       aBody_18
 0009:8056F7AC       aHead_7
 0009:8056F7BE       aOpen_9
 0009:8056F7C3       aSeEmLvRingbeam_1
 0009:8056F7DC       aCharge_1
 0009:8056F7F4       _10RingBeamer::`vtbl'
 0009:8056F8B0       aSambohead
 0009:8056F8BA       aBody_146
 0009:8056F8BF       aDeath_37
 0009:8056F8C5       aSeEmExplodeS_24
 0009:8056F8D5       aAppearmini
 0009:8056F8E0       aHide_12
 0009:8056F8E5       aAppear_28
 0009:8056F8EC       aWait_80
 0009:8056F8F1       aFind_7
 0009:8056F8F6       aSeEmSamboheadH_0
 0009:8056F90F       aLand_13
 0009:8056F914       aSeEmSamboheadA_0
 0009:8056F92B       aStarpiecehit_0
 0009:8056F938       aSeEmLvSwoonS_10
 0009:8056F949       aPress_8
 0009:8056F94F       aBlow_7
 0009:8056F954       aSink_0
 0009:8056F959       aSeEmStompedS_18
 0009:8056FB0C       aSearchbeamer
 0009:8056FB19       aBody_19
 0009:8056FB1E       aBeam_0
 0009:8056FB23       aFace
 0009:8056FB28       aBeamstart
 0009:8056FB32       aPropeller
 0009:8056FB3C       aBeamend
 0009:8056FB44       aWait_8
 0009:8056FB49       aOpen_0
 0009:8056FB4E       aSeEmSearchbeam
 0009:8056FB6A       aAttack_5
 0009:8056FB71       aLambert5V
 0009:8056FB7C       aSeEmLvSearchbe
 0009:8056FB97       aCore_0
 0009:8056FB9C       aClose
 0009:8056FBA2       aStop_1
 0009:8056FBA7       aBeamendair
 0009:8056FD20       aStraightappear
 0009:8056FD2F       aStraightwait
 0009:8056FD3C       aStraightforwar
 0009:8056FD4C       aStraightforwar_0
 0009:8056FD61       aStraightback
 0009:8056FD6E       aWait
 0009:8056FD73       aForward
 0009:8056FD7B       aForwardsmoke
 0009:8056FD88       aBack
 0009:8056FD8D       aSnakeheadsmall
 0009:8056FD9C       aHead_8
 0009:8056FDA1       aHead_9
 0009:8056FDA6       aBody_20
 0009:8056FDAB       aBody03
 0009:8056FDB2       aUpperJaw
 0009:8056FDBC       aUpperjaw
 0009:8056FDC5       aLowerJaw
 0009:8056FDCF       aLowerjaw
 0009:8056FDD8       aBody04
 0009:8056FDDF       aSnakehead
 0009:8056FDE9       aSnakeheadshado
 0009:8056FDF9       aBody_21
 0009:8056FDFE       aSnakeheadsmall_0
 0009:8056FE13       aSeEmExplodeUnd_0
 0009:8056FE2D       aDeath_6
 0009:8056FE33       aSeOjStarPieceB_3
 0009:8056FE4C       aAntenna
 0009:8056FE54       aBody01
 0009:8056FE5B       aWaylay
 0009:8056FE62       aWait_9
 0009:8056FE67       aForward_0
 0009:8056FE6F       aSeEmSnakeheadF
 0009:8056FE87       aBack_0
 0009:8056FE8C       aSeEmSnakeheadB
 0009:8056FEA5       aDamage_0
 0009:8056FEAC       aSeEvSnakeheadD_0
 0009:8056FFB0       aSeOjStarPieceB_37
 0009:8056FFC8       aShadow_25
 0009:80570048       aBody_147
 0009:8057004D       aHead_26
 0009:80570052       aFace_5
 0009:80570057       aSwitchchildj
 0009:80570064       aSwitch_2
 0009:80570076       aAnger_0
 0009:8057007C       aWait_81
 0009:80570081       aSearch_7
 0009:80570088       aAngersearch
 0009:80570094       aRushstart
 0009:8057009E       aSeEvStinkbugLF
 0009:805700B4       aSeEmLvStinkbug
 0009:805700D2       aRush
 0009:805700D7       aSeEmLvStinkbug_0
 0009:805700F0       aSeEmStinkbugLD
 0009:8057010A       aRushstop
 0009:80570113       aBack_1
 0009:80570118       aSeEmLvStinkbug_1
 0009:80570131       aDeath_38
 0009:80570137       aSeEmStinkbugSt
 0009:80570150       aSeEvStinkbugLS
 0009:80570169       aAttack_45
 0009:80570170       aSpinaction
 0009:8057017B       aSeEmGuardS
 0009:80570189       aLoss
 0009:8057018E       aSeEvStinkbugLP
 0009:805701A5       aSeEmLvStinkbug_2
 0009:805701BF       aRepel
 0009:805701C5       aChilddeath
 0009:805701D0       aSeEvStinkbugSS
 0009:805701E9       aSeEmExplodeS_25
 0009:805701F9       aSeEvStinkbugLS_0
 0009:80570230       aSeEvLvStinkbug
 0009:8057024A       aSeEmLvStinkbug_3
 0009:80570264       aSeOjStarPieceB_38
 0009:8057027D       aSeEmStinkbugLA
 0009:80570298       aChildcenter
 0009:80570430       aBody_148
 0009:80570435       aHead_27
 0009:8057043A       aFace_6
 0009:8057043F       aSwitch_3
 0009:80570446       aDeath_39
 0009:8057044C       aSearch_8
 0009:80570453       aRushstart_0
 0009:8057045D       aSeEvStinkbugSF
 0009:80570473       aSeEmLvStinkbug_4
 0009:80570491       aRush_0
 0009:80570496       aSeEmLvStinkbug_5
 0009:805704AF       aSeEmStinkbugSD
 0009:805704C9       aRushstop_0
 0009:805704D2       aBack_2
 0009:805704D7       aSeEmLvStinkbug_6
 0009:805704F0       aSeEmStompedS_19
 0009:80570500       aSeEvStinkbugSS_0
 0009:80570519       aAttack_46
 0009:80570520       aSpinaction_0
 0009:8057052B       aSeEmGuardS_0
 0009:80570539       aRepel_0
 0009:8057053F       aLoss_0
 0009:80570544       aSeEvLvStinkbug_0
 0009:8057055E       aSeEmLvStinkbug_7
 0009:80570578       aRushsmoke
 0009:80570582       aSeOjStarPieceB_39
 0009:80570599       aSeEmExplodeS_26
 0009:80570728       aStringspider
 0009:80570735       aBody_149
 0009:80570753       aEyelight_1
 0009:8057075C       aDeath_40
 0009:80570762       aSeEmExplodeS_27
 0009:80570772       aPreattack
 0009:8057077C       aAttack_47
 0009:80570783       aWait_82
 0009:80570788       aDownstart
 0009:80570792       aDownend
 0009:8057079A       aDown_17
 0009:8057079F       aSeEmLvStrspide
 0009:805707B7       aPredownend
 0009:805707C2       aSeEmLvStrspide_0
 0009:805707D8       aSeEvStrspiderH
 0009:805707EC       aSpin_7
 0009:805707F1       aSeEmLvStrspide_1
 0009:80570809       aPress_9
 0009:8057080F       aSeEmStompedS_20
 0009:8057081F       aSeEvStrspiderD
 0009:80570834       aBlow_8
 0009:80570839       aSeOjStarPieceB_40
 0009:80570850       aRoot_2
 0009:80570855       aSeEmStrspiderC
 0009:8057086F       aSeEmLvStrspide_2
 0009:80570889       aSeEmLvStrspide_3
 0009:805708A3       aStringspiderst
 0009:80570A88       aTakobo
 0009:80570A8F       aAttack_48
 0009:80570AA9       aBody_150
 0009:80570AAE       aHear
 0009:80570AB3       aTakobodeath
 0009:80570ABF       aSeEmExplodeS_28
 0009:80570ACF       aSeEmTakoboStom
 0009:80570AE4       aWait_83
 0009:80570AE9       aPress_10
 0009:80570AEF       aHitpunch
 0009:80570AF8       aSeEmTakoboHitp
 0009:80570B0E       aStunend
 0009:80570B16       aHitreaction_0
 0009:80570B22       aAttack_49
 0009:80570B29       aStunstart
 0009:80570B33       aSeEmTakoboStar
 0009:80570B4E       aStun
 0009:80570B53       aSeEmLvSwoonS_11
 0009:80570B64       aTouch_10
 0009:80570C98       aTakohei
 0009:80570CA0       aAttack_50
 0009:80570CA7       aBody_151
 0009:80570CAC       aDeath_41
 0009:80570CB2       aSeEmExplodeS_29
 0009:80570CC2       aSeOjStarPieceB_41
 0009:80570CD9       aBlinktwice
 0009:80570CE4       aOpen_10
 0009:80570CE9       aWait_84
 0009:80570CEE       aBlink_2
 0009:80570CF4       aWalk_16
 0009:80570CF9       aTurn_10
 0009:80570CFE       aSeEmTakoheiFin
 0009:80570D11       aSearch_9
 0009:80570D18       aCooldown_3
 0009:80570D21       aShotstart_0
 0009:80570D2B       aAngry_3
 0009:80570D31       aSeEmTakoheiLvP
 0009:80570D4F       aMouth_5
 0009:80570D55       aShot_1
 0009:80570D5A       aSeEmTakoheiSpi
 0009:80570D71       aAttack_51
 0009:80570D78       aStunstart_0
 0009:80570D82       aStun_0
 0009:80570D87       aSeEmLvSwoonS_12
 0009:80570D98       aStunend_0
 0009:80570DA0       aSeEvTakoheiRec
 0009:80570DB6       aHipdropdown_1
 0009:80570DC2       aSeEmTakoheiSto
 0009:80570DDA       aFlatdown_2
 0009:80570DE3       aSeEmTakoheiSto_0
 0009:80570DF9       aPunchdown_3
 0009:80570E03       aSeEmTakoheiHit
 0009:80570FA8       aTakoheiink
 0009:80570FB3       aBody_152
 0009:80570FB8       aBreak_24
 0009:80570FBE       aSeEmTakoheiInk
 0009:80570FD6       aWait_85
 0009:805710A8       aTeresa
 0009:805710AF       aTeresachief
 0009:805710BB       aSklroot
 0009:805710CE       aInteresa
 0009:805710D7       aAttack_52
 0009:805710DE       aBody_153
 0009:805710F0       aDeath_7
 0009:805710F6       aWait_10
 0009:805710FB       aHidewall
 0009:80571104       aGlaringlightar_0
 0009:80571115       aErase
 0009:8057111B       aSpinblur_0
 0009:80571124       aAppearwall
 0009:8057112F       aAppear_4
 0009:80571136       aSeEmTeresaAppe
 0009:8057114A       aAppearground
 0009:80571157       aSeEmLvTeresaMo
 0009:8057116C       aNormal_1
 0009:80571173       aLovefind
 0009:8057117C       aSeEmTeresaLove
 0009:80571193       aSeEvTeresaLaug
 0009:805711A6       aLovechase
 0009:805711B0       aLovehit
 0009:805711B8       aSeEmTeresaLove_0
 0009:805711CE       aSeEvTeresaLove
 0009:805711E4       aLoveend
 0009:805711EC       aChase
 0009:805711F2       aShay
 0009:805711F7       aSeEmTeresaStop
 0009:80571209       aSeOjLvPowStarE
 0009:80571221       aAggressive
 0009:8057122C       aLaugh
 0009:80571232       aSeEvTeresaAtta
 0009:8057124E       aDrift_0
 0009:80571254       aSeEmTeresaTorn
 0009:80571269       aHide_1
 0009:8057126E       aSeEmTeresaDead
 0009:80571280       aSeEvTeresaDead
 0009:80571458       aTeresawater
 0009:80571464       aBody_154
 0009:80571469       aSklroot_0
 0009:80571471       aWait_86
 0009:80571476       aSeEvTeresaAtta_0
 0009:80571492       aReaction_0
 0009:8057149B       aDeathwater_4
 0009:805714A6       aSeEmTeresaDead_0
 0009:805714B8       aSeEvTeresaDead_0
 0009:805714CA       aSeEmLvTeresaMo_0
 0009:805715B9       aUnizo
 0009:805715D2       aUnizobreak
 0009:805715DD       aUnizoland
 0009:805715FC       aUnizolandbreak
 0009:8057160B       aUnizoshoal
 0009:8057162D       aUnizoshoalbrea
 0009:8057163D       aBody_155
 0009:80571642       aRipple_3
 0009:80571649       aBlink_3
 0009:8057164F       aNormal_19
 0009:80571656       aSearch_10
 0009:8057165D       aAngry_4
 0009:80571663       aSeEmUnizoNeedl
 0009:80571676       aSearchsmoke
 0009:80571682       aAttack_53
 0009:80571689       aSeEmUnizoStick
 0009:8057169B       aSeOjStarPieceB_42
 0009:805716B2       aSeEmUnizoBreak
 0009:805716C4       aShock_1
 0009:805716CA       aSeEmLvUnizoLan
 0009:805716E4       aSeEmLvUnizoLan_0
 0009:805716F8       aSeEmLvUnizoRol
 0009:80571712       aSeEmLvUnizoRol_0
 0009:8057172D       aFiredown
 0009:80571736       aBreak_25
 0009:8057173C       aFiredown_0
 0009:80571745       aDeath_42
 0009:8057174B       aSeEmLvUnizoCol
 0009:8057176A       aSeEmLvUnizoCol_0
 0009:805718A0       aBody_156
 0009:80571961       aTouch_11
 0009:80571967       aPointertouch_0
 0009:805719DD       aDamage_22
 0009:805719E4       aDamageland
 0009:80571A45       aWait_87
 0009:80571AA9       aTurn_11
 0009:80571AAE       aJumpstart_1
 0009:80571AB8       aJump_6
 0009:80571ABD       aLand_14
 0009:80571B28       aFollowme
 0009:80571B31       aJump_7
 0009:80571BB3       aStaggerstart
 0009:80571BC0       aStagger_0
 0009:80571BC8       aStaggerend
 0009:80571C2F       aWait_88
 0009:80571C34       aWalk_17
 0009:80571CAC       aElectricbazook
 0009:80571CBC       aCannon
 0009:80571CC3       aCannon1
 0009:80571CCB       aAllroot
 0009:80571CD3       aBody_22
 0009:80571CD8       aDamage_1
 0009:80571CDF       aOceanphantomca_1
 0009:80571D0B       aWait_89
 0009:80571D10       aPowerup
 0009:80571D18       aShotstart_1
 0009:80571D22       aSeEmLvWaterbaz_0
 0009:80571D39       aSeEmLvElecbazP
 0009:80571D54       aSwingstop
 0009:80571D5E       aSeEmWaterbazTu
 0009:80571D76       aShot_2
 0009:80571D7B       aSeEmWaterbazSh
 0009:80571D8F       aShortshot
 0009:80571D99       aTire_0
 0009:80571D9E       a1stdamage
 0009:80571DA8       aSeEvMogubazAng
 0009:80571DBD       aSeOjStarPieceB_43
 0009:80571DD4       a2nddamage
 0009:80571DDE       aSeEvMogubazAng_0
 0009:80571DF3       aAngrysign
 0009:80571DFD       aAngry_5
 0009:80571E03       aSeEmLvElecbazP_0
 0009:80571E22       aSeEmLvElecbazE
 0009:80571E3D       aDown_18
 0009:80571E42       aSeEmLvWaterbaz_1
 0009:80571E60       aSeEmLvWaterbaz_2
 0009:80571E7E       aDamagesmokes1
 0009:80571E8C       aDamagesmokes2
 0009:80571E9A       aDamagesmokel1
 0009:80571EA8       aDamagesmokel2
 0009:80571EB6       aBreak_26
 0009:80571EBC       aSeEmWaterbazEx
 0009:80571ED3       aSeEvMogubazDea
 0009:80571EE6       aCockpit_0
 0009:80571EEE       aSeSyReadRiddle_7
 0009:80571F02       aSpin_8
 0009:80571F07       aSeEvMogubazPre
 0009:80571F1F       aSeEmLvWaterbaz_3
 0009:80571F3B       aSeEmLvWaterbaz_4
 0009:80571F53       aSeEmLvWaterbaz_5
 0009:80571FEB       aElectricbazook_0
 0009:8057201D       aWaterbazookabr
 0009:805721F0       aWaterbazookaca
 0009:80572204       aBody_157
 0009:80572209       aDamage_23
 0009:80572210       aNormal_20
 0009:80572217       aCrack_0
 0009:8057221D       aSeEmWaterbazCa
 0009:8057223B       aBreak_27
 0009:80572241       aSeEmWaterbazCa_0
 0009:80572308       aAudcamerawatch
 0009:80572319       aSeAtLvUnderWat
 0009:80572358       aGame_0
 0009:8057235D       aHellprominence
 0009:80572372       aOceanringgalax_2
 0009:80572382       aOceanfloaterla_0
 0009:80572399       aEggstargalaxy_2
 0009:805723A7       aPhantomgalaxy_1
 0009:805723B5       aAstrodome_0
 0009:805723BF       aHeavenlybeachg_1
 0009:805723D3       aAstrogalaxy_0
 0009:805723DF       aCosmosgardenga_0
 0009:805723F2       aHoneybeekingdo_1
 0009:80572408       aBeltconveyerex_0
 0009:8057241D       aKoopabattlevs1_0
 0009:80572432       aSurfinglv1gala_0
 0009:80572443       aSurfinglv2gala_0
 0009:80572454       aCubebubbleexlv_1
 0009:8057246A       aCubebubbleexlv_2
 0009:80572480       aFlippanelexgal_0
 0009:80572492       aTamakoroexlv1g_0
 0009:805724A6       aTamakoroexlv2g_0
 0009:805724BA       aBreakdownplane_0
 0009:805724D0       aSandclockgalax_1
 0009:805724E0       aKoopabattlevs2_0
 0009:805724F5       aKoopajrshiplv1_0
 0009:8057250A       aHoneybeeexgala_0
 0009:8057251B       aTrileglv1galax_1
 0009:8057252B       aTrileglv2galax_0
 0009:8057253B       aCocoonexgalaxy_0
 0009:8057254A       aReversekingdom_0
 0009:8057255F       aDarkroomgalaxy_0
 0009:8057256E       aFactorygalaxy_0
 0009:8057257C       aSkullsharkgala_0
 0009:8057258D       aKoopajrdriverg_0
 0009:805725A1       aFloaterotaking_2
 0009:805725B6       aTransformation_0
 0009:805725CD       aLibraryroom_0
 0009:805725D9       aTeardropgalaxy_0
 0009:805725E8       aSnowcapsulegal_0
 0009:805725FA       aFishtunnelgala_0
 0009:8057260B       aHeavensdoorgal_0
 0009:8057261D       aTeresamario2dg_0
 0009:80572631       aOceanphantomca_2
 0009:80572648       aKoopabattlevs3_0
 0009:8057265D       aPeachcastlegar_1
 0009:80572675       aBattleshipgala_0
 0009:80572686       aCannonfleetgal_1
 0009:80572698       aPeachcastlefin_0
 0009:805726AF       aE3heavenlybeac_0
 0009:805726C5       aAstrogalaxy_1
 0009:805726D1       aAstrodome_1
 0009:80572711       aSeAtLvWaterfal
 0009:80572729       aSeAtLvPhncvTer
 0009:80572768       aAudbgmconducto
 0009:80572778       aIcevolcanogala_2
 0009:80572789       aOceanringgalax_4
 0009:80572799       aBgmPinch2
 0009:805727A5       aBgmPinch1
 0009:805727D8       aOceanringgalax
 0009:805727E8       aOceanphantomca_3
 0009:805727FF       aEggstargalaxy_3
 0009:8057280D       aStardustgalaxy_1
 0009:8057281C       aPhantomgalaxy_2
 0009:8057282A       aBattleshipgala_1
 0009:8057283B       aHeavenlybeachg_2
 0009:8057284F       aIcevolcanogala_0
 0009:80572860       aCannonfleetgal_2
 0009:80572872       aFactorygalaxy_1
 0009:80572880       aSandclockgalax_2
 0009:80572890       aHeavensdoorgal_1
 0009:805728A2       aHoneybeekingdo_2
 0009:805728B8       aReversekingdom_1
 0009:805728CD       aCosmosgardenga_1
 0009:805728E0       aHellprominence_1
 0009:805728F5       aKoopabattlevs3_1
 0009:8057290A       aSurfinglv1gala_1
 0009:8057291B       aSurfinglv2gala_1
 0009:80572DB0       jpt_80156F94
 0009:80572DFC       jpt_80157134
 0009:80572E64       jpt_801574E4
 0009:80573138       aActoranimctrl
 0009:80573146       aO_0
 0009:80573151       aSBcsv_5
 0009:80573159       aSname
 0009:80573160       aSstartframe
 0009:8057316D       aSiskeepanim
 0009:8057317A       aActoranimname
 0009:80573188       aPadandcameract
 0009:80573199       aSBcsv_0
 0009:805731A1       aDistanceinvali
 0009:805731B1       aBckname_0
 0009:805731B9       aStartframe
 0009:805731C4       aEndframe
 0009:805731CD       aPadrumblename
 0009:805731DB       aCamerashakenam
 0009:805731EB       aDistancenear
 0009:805731F8       aDistancefar
 0009:80573204       aPadrumblenamem
 0009:80573218       aPadrumblenamef
 0009:80573229       aCamerashakenam_0
 0009:8057323F       aCamerashakenam_1
 0009:80573268       aAllliveactorgr
 0009:805733F4       aInddummy
 0009:805733FD       aShadowprojdumm
 0009:8057340D       aShadowdummy
 0009:80573434       aDynamicjointct
 0009:80573454       aSBcsv_1
 0009:8057345C       aJointname
 0009:80573466       aCtrljointnumma
 0009:80573476       aGravity
 0009:8057347E       aFriction
 0009:80573487       aAccelratetobck
 0009:80573499       aBendmaxdegree
 0009:805734C0       aAttr
 0009:805734E0       aSSS
 0009:805734E7       aDefault_0
 0009:8057352C       aSS_2
 0009:80573538       aFacejointctrl
 0009:80573554       aSBcsv_2
 0009:8057355C       aJointname_0
 0009:80573566       aDegreemax
 0009:805735B8       aIkjointctrl
 0009:80573618       aSBcsv_3
 0009:80573620       aJointname_1
 0009:8057362A       aNearlimitrate
 0009:80573638       aFarlimitrate
 0009:80573645       aEndlocaldirx
 0009:80573652       aEndlocaldiry
 0009:8057365F       aEndlocaldirz
 0009:8057366C       aEnddirmaxdegre
 0009:80573730       aGroup02d
 0009:80573788       aMiddle_0
 0009:8057378F       aObjectdataSSAr
 0009:805737A4       aSS_9
 0009:805737A9       aObjectdataSlow
 0009:805737BF       aObjectdataSmid
 0009:805737D8       aMirrortex
 0009:80573958       aMirrorarea_1
 0009:80573A00       aSArc_1
 0009:80573A08       aShadow_26
 0009:80573B78       aPlayer_0
 0009:80573B7F       aRide
 0009:80573B84       aSimple
 0009:80573B8B       aMapobj
 0009:80573B92       aCharacter
 0009:80573BC7       aAstrogalaxy_7
 0009:80573BD3       aPeachcastlegar_3
 0009:80573BEB       aPeachcastlefin_2
 0009:80573C28       _12ShadowDrawer::`vtbl'
 0009:80573CEC       _21ShadowSurfaceDrawInit::`vtbl'
 0009:80573D23       aShadowvolumesp
 0009:80573DC7       aShadowvolumecy
 0009:80573E10       aU
 0009:80573E60       _20ShadowVolumeDrawInit::`vtbl'
 0009:80573E88       aU_0
 0009:80573F6F       aShadowvolumesp_0
 0009:80573F84       _16ShadowVolumeOval::`vtbl'
 0009:80573FD1       aShadowvolumecy_0
 0009:8057402D       aShadowvolumesp_1
 0009:80574113       aSpotmarklight
 0009:80574121       aAppear_29
 0009:80574128       aDisappear_1
 0009:805741B0       aViewgroupctrlc_0
 0009:805741E3       aSArc_2
 0009:8057426D       aAppear_30
 0009:80574274       aDisappear_2
 0009:8057427E       aChange_2
 0009:805744F8       aClosed
 0009:805744FF       aClose_4
 0009:80574508       aButterfly
 0009:80574512       aBody_158
 0009:80574517       aButtbody
 0009:80574520       aHeavensdoorgal_6
 0009:80574532       aSeOjStarPieceB_44
 0009:80574549       aCapposition
 0009:80574555       aWait_90
 0009:80574690       aNormal_21
 0009:80574697       aDeath_43
 0009:8057469D       aSlip
 0009:805746A2       aNoslip
 0009:805746A9       aDamagenormal
 0009:805746B6       aJumplow
 0009:805746BE       aJumpmiddle
 0009:805746C9       aJumphigh
 0009:805746D2       aSlider
 0009:805746D9       aDamagefire_1
 0009:805746E4       aJumpnormal
 0009:805746EF       aFiredance
 0009:805746F9       aSand_0
 0009:805746FE       aGlass
 0009:80574704       aDamageelectric
 0009:80574713       aPullback_0
 0009:8057471C       aSink_1
 0009:80574721       aSinkpoison
 0009:8057472C       aSlide
 0009:80574732       aWaterbottomh
 0009:8057473F       aWaterbottomm
 0009:8057474C       aWaterbottoml
 0009:80574759       aNeedle
 0009:80574760       aSinkdeath_0
 0009:8057476A       aSnow
 0009:8057476F       aRailmove
 0009:80574778       aAreamove
 0009:80574781       aPress_11
 0009:80574787       aNostampsand
 0009:80574793       aSinkdeathmud
 0009:805747A0       aBrake_0
 0009:805747A6       aGlassice
 0009:805747AF       aJumpparasol
 0009:805747BB       aNotwalljump
 0009:805747C7       aNotwallslip
 0009:805747D3       aNotgrab
 0009:805747DB       aGhostthroughco
 0009:805747EC       aNotsidestep_0
 0009:805747F8       aRebound
 0009:80574800       aNoaction_0
 0009:80574809       aNull_0
 0009:8057480E       aSoil
 0009:80574813       aLawn
 0009:80574818       aStone
 0009:8057481E       aMarble
 0009:80574825       aWoodthick
 0009:8057482F       aWoodthin
 0009:80574838       aMetal
 0009:8057483E       aShallow_0
 0009:80574846       aBeach
 0009:8057484C       aCarpet
 0009:80574853       aHoney
 0009:80574859       aNothrough
 0009:80574863       aThrough
 0009:8057486B       aFloorCode
 0009:80574876       aWallCode
 0009:80574880       aSoundCode
 0009:8057488B       aCameraThrough
 0009:8057489A       aCameraId_0
 0009:805748A4       aNoiter
 0009:805748E8       jpt_80176978
 0009:805749D0       aMiniaturegalax
 0009:805749E6       aAppear_31
 0009:805749ED       aDisappear_3
 0009:805749F8       _16FileSelectEffect::`vtbl'
 0009:80574AA0       aSystemFilesele_1
 0009:80574ABA       aSystemFilesele_2
 0009:80574AD4       aSystemFilesele_3
 0009:80574AEE       aSystemFilesele_4
 0009:80574B08       aSystemFilesele_5
 0009:80574B38       aFileselectdata
 0009:80574B4C       aFileselectdata_0
 0009:80574B60       aFileselectdata_1
 0009:80574B74       aFileselectdata_2
 0009:80574B8A       aFileselectdata_3
 0009:80574BB4       aSeSyLvFileSelM
 0009:80574BD0       aSeSyFileSelMor
 0009:80574BEB       aSeSyFileSelMor_0
 0009:80574C15       aFileselectdata_4
 0009:80574C45       aFileselectdata_5
 0009:80574C64       aMeAstroDomeHit
 0009:80574C7E       aMeAstroDomeHit_0
 0009:80574C98       aMeAstroDomeHit_1
 0009:80574CB2       aMeAstroDomeHit_2
 0009:80574CCC       aMeAstroDomeHit_3
 0009:80574CE6       aMeAstroDomeHit_4
 0009:80574D02       aMeAstroDomeHit_5
 0009:80574D1E       aMeAstroDomeHit_6
 0009:80574D3A       aMeAstroDomeHit_7
 0009:80574D56       aMeAstroDomeHit_8
 0009:80574D72       aOpen_11
 0009:80574D77       aVanish_0
 0009:80574D7E       aCopy
 0009:80574D83       aComplete_0
 0009:80574F30       aOpen_12
 0009:80574F35       aVanish_1
 0009:80574F3C       aCopy_0
 0009:80574F41       aComplete_1
 0009:80574F4A       aNormal_22
 0009:80574F51       aBlink_4
 0009:80574F57       aClose_5
 0009:80574F5D       aOpen_13
 0009:80575020       aSystemFilesele
 0009:8057503A       aSystemFilesele_0
 0009:80575054       aBody_23
 0009:80575059       aSeSyFileSelTip
 0009:80575120       aFileselectbutt
 0009:80575160       aMiiselect
 0009:8057519C       aSeSyGalaxySele
 0009:805751B2       aSeSyGalaxyDeci_0
 0009:805751CD       aMeAstroDomeSel
 0009:805751E3       aMeAstroDomeSel_0
 0009:805751F9       aMeAstroDomeSel_1
 0009:8057520F       aMeAstroDomeSel_2
 0009:80575225       aMeAstroDomeCal_4
 0009:8057523B       aMeAstroDomeCal_5
 0009:80575251       aMeAstroDomeCal_6
 0009:80575267       aMeAstroDomeCal_7
 0009:8057527D       aMeAstroDomeCal_8
 0009:80575293       aMbgmFileSelect
 0009:805752A4       aRfl02
 0009:805752AB       aRfl01
 0009:805752B2       aSystemFilesele_8
 0009:805752C7       aSeSyFileSelect
 0009:805752DB       aSystemFilesele_9
 0009:805752F0       aSeSyButtonCurs
 0009:80575307       aSeSyFileSelNew
 0009:8057531F       aSeSyTalkSelect_1
 0009:80575334       aSeSyFileSelUpp_0
 0009:80575350       aSystemFilesele_10
 0009:80575365       aSystemFilesele_11
 0009:8057537A       aSeSyFileSelCop
 0009:8057538E       aSystemFilesele_12
 0009:805753A3       aSeSyFileSelNg
 0009:805753B5       aSystemFilesele_13
 0009:805753CA       aSeSyFileSelMii_0
 0009:805753E6       aSystemFilesele_14
 0009:805753FB       aSystemFilesele_15
 0009:80575410       aSeSyFileSelMii_1
 0009:8057542A       aSystemFilesele_16
 0009:8057543F       aSystemFilesele_17
 0009:80575454       aSeSyFileSelDel
 0009:8057546A       aSystemFilesele_18
 0009:8057547F       aSystemFilesele_19
 0009:80575858       aCometnearorbit
 0009:805758F8       aFisha
 0009:805758FE       aFishb
 0009:80575904       aFishc
 0009:8057590A       aFishd
 0009:80575910       aFishe
 0009:80575916       aFishf
 0009:8057591C       aSwim_0
 0009:80575921       aFishgroupa
 0009:8057592C       aFishgroupb
 0009:80575937       aFishgroupc
 0009:80575942       aFishgroupd
 0009:8057594D       aFishgroupe
 0009:80575958       aFishgroupf
 0009:80575A98       aFlagkoopacastl
 0009:80575AA8       aFlagkoopaa
 0009:80575AB3       aFlagkoopab
 0009:80575ABE       aFlagpeachcastl
 0009:80575ACF       aFlagpeachcastl_0
 0009:80575AE0       aFlagpeachcastl_1
 0009:80575AF1       aFlagracea
 0009:80575AFB       aFlagsurfing
 0009:80575B07       aFlagArc
 0009:80575B10       aFlagBti
 0009:80575B19       aSeOjFlagAppear
 0009:80575B2B       aSeOjFlag
 0009:80575CB8       aZonehalo
 0009:80575CC1       aPowerstarhalo
 0009:80575CD4       aDisappear_4
 0009:80575CDE       aAppear_32
 0009:80575E40       aKoopaplatecoin
 0009:80575E4F       aAttack_54
 0009:80575E56       aSeOjKoopaPlate_0
 0009:80575E71       aBreak_28
 0009:80575EF0       aKoopaplatedama
 0009:80575F01       aRevival_3
 0009:80575F09       aAttack_55
 0009:80575F10       aBreak_29
 0009:80575F16       aLavabubble_0
 0009:80575F21       aRecover_9
 0009:80575F29       aSeOjKoopaPlate_1
 0009:80575FF0       aWait_91
 0009:80575FF5       aPowerstarappea
 0009:80576005       aGrandstarappea
 0009:80576118       aKoopaplate
 0009:80576123       aAttack_56
 0009:8057612A       aSeOjKoopaPlate_2
 0009:80576144       aSeOjStarPieceB_45
 0009:8057615D       aBreak_30
 0009:805761E0       aKoopabattlemap_4
 0009:805761F7       aKoopabattlemap_5
 0009:8057620F       aBody_159
 0009:80576214       aWait_92
 0009:80576219       aSeOjStairBreak
 0009:80576231       aWaitfall
 0009:8057623A       aSeOjLvStairBre
 0009:8057624F       aFall_10
 0009:80576254       aSeOjStairBreak_0
 0009:8057626A       aDisappear_5
 0009:80576352       aSeDmLvShellTow
 0009:80576428       aLavarotateplan_1
 0009:80576510       aLightdataArc
 0009:8057651E       aLightdataBcsv
 0009:8057652D       aLightSBcsv
 0009:8057653A       aScolor
 0009:80576542       aSpos
 0009:80576548       aSfollowcamera
 0009:80576557       aSlightD
 0009:80576561       aSalpha2
 0009:8057656A       aSambient
 0009:80576574       aArealightname
 0009:80576582       aInterpolate
 0009:8057658E       aPlayer_1
 0009:80576595       aStrong
 0009:8057659C       aWeak
 0009:805765A1       aPlanet
 0009:805765A8       aLightid
 0009:805765B0       aArealightname_0
 0009:805765F8       aWaterwaveArc
 0009:80576606       aWaterBti
 0009:80576610       aWaterindirectB
 0009:80576622       aMaskBti
 0009:805766A8       aONU
 0009:805766F0       aON
 0009:80576727       aOceanringplane_1
 0009:80576790       aOceanringArc
 0009:8057679E       aWaterpipeinsid
 0009:805767B2       aSeAtLvOceanRin
 0009:805767C6       aSeAtLvOceanRin_0
 0009:80576858       aONN
 0009:805768A0       aWaterwaveArc_0
 0009:805768AE       aWaterBti_0
 0009:805768B8       aWaterindirectB_0
 0009:805768FE       aFlagsurfing_0
 0009:8057699F       aOceanringArc_0
 0009:805769AD       aWaterpipeinsid_0
 0009:80576A57       aOceanringArc_1
 0009:80576A65       aWaterpipeindir
 0009:80576A7B       aWaterpipehighl
 0009:80576B64       aWaterwaveArc_1
 0009:80576B72       aOceansphereBti
 0009:80576B82       aOceansphereenv
 0009:80576B98       aSkullsharkgala_2
 0009:80576BA9       aTeardropgalaxy_2
 0009:80576C60       aMove
 0009:80576C65       aBody_24
 0009:80576C6A       aPhantomshipa
 0009:80576C77       aBloom
 0009:80576C7D       aSbloom
 0009:80576E88       aPlanetmapdatat
 0009:80576E9F       aPlanetmapdatat_0
 0009:80576EB7       aPlanetname
 0009:80576EC2       aSS_3
 0009:80576EC7       aBeamgoroundpla
 0009:80576ED9       aBumpappearplan
 0009:80576EEA       aChoconveyorpla
 0009:80576EFD       aChoconveyorpla_0
 0009:80576F10       aDinopackunbatt
 0009:80576F27       aDarkhopperplan
 0009:80576F39       aDarkhopperplan_0
 0009:80576F4B       aDarkhopperplan_1
 0009:80576F5D       aDarkhopperplan_2
 0009:80576F6F       aDarknessroompl
 0009:80576F82       aFlagdiscplanet
 0009:80576F92       aFlagdiscplanet_0
 0009:80576FA2       aFlagdiscplanet_1
 0009:80576FB2       aFlagdiscplanet_2
 0009:80576FC2       aHatchwaterplan
 0009:80576FD3       aHeavensdoorins
 0009:80576FEB       aHoneyqueenplan
 0009:80576FFC       aLavajambosunpl
 0009:8057700F       aLavarotateplan
 0009:80577020       aLavadomedplane
 0009:80577030       aMarbleplanet
 0009:8057703D       aPeachcastlegar
 0009:80577055       aSandcapsuleins
 0009:8057706D       aScaledownrelay
 0009:80577082       aSnowcapsulepla
 0009:80577094       aTeresaroomplan
 0009:805770A5       aTridentplanet
 0009:805770B3       aQuestionboxpla
 0009:805770C6       aQuestionboxpla_0
 0009:805770D9       aQuestionboxpla_1
 0009:805770EC       aQuestionboxpla_2
 0009:805770FF       aQuestionboxpla_3
 0009:80577112       aQuicksand2dpla
 0009:80577124       aReversegravity
 0009:8057713D       aSandstreamhigh
 0009:80577157       aSandstreamjoin
 0009:8057716E       aSandstreamjoin_0
 0009:80577185       aStarduststartp
 0009:80577199       aWormeatenplane
 0009:805771A9       aBeamgoroundbea
 0009:805771B9       aBeamgoroundbea_0
 0009:805771CF       aBeamgoroundbea_1
 0009:805771E4       aMarbleplanetco
 0009:805771F5       aMarbleplanetel
 0009:8057720A       aMarbleplanetel_0
 0009:80577225       aOceanringplane
 0009:80577235       aOceanringplane_0
 0009:8057724F       aGreencaterpill
 0009:80577267       aGreencaterpill_0
 0009:80577282       aGreencaterpill_1
 0009:8057729A       aGreencaterpill_2
 0009:805772B5       aWormeatenhill
 0009:805772C3       aWormeatenplane_0
 0009:805772D6       aLowflag
 0009:805772DE       aMiddleflag
 0009:805772E9       aMiddle
 0009:805772F0       aBloomflag
 0009:805772FA       aBloom_0
 0009:80577300       aWaterflag
 0009:8057730A       aWater_0
 0009:80577310       aIndirectflag
 0009:8057731D       aIndirect
 0009:80577326       aForcelowscenar
 0009:8057733D       aSD_0
 0009:80577405       aSlow_0
 0009:805774AD       aQuakeeffectare_0
 0009:805774BD       aSeAtLvEarthqua
 0009:805776D1       aRace
 0009:805776D6       aGoal
 0009:805776DB       aLose
 0009:805776E0       aTimeup
 0009:805776E7       aRank
 0009:805776EC       aScoretime
 0009:805776F6       aBestrecord
 0009:80577701       aCount
 0009:80577707       aRacestart
 0009:80577711       aRecord
 0009:80577718       aRacegoal
 0009:80577721       aTimecounter
 0009:8057772D       aBesttimecounte
 0009:80577778       aBgmMinigameSta
 0009:80577792       aSeSyRaceCountD
 0009:805777A8       aSeSyRaceStart
 0009:805777B9       aBgmRaceLose
 0009:805777C7       aBgmRaceWin
 0009:805779B3       aWatch
 0009:805779B9       aSwimdrift
 0009:805779C3       aBattlewait_8
 0009:805779CE       aWait_93
 0009:80577AF0       aPointArg0_0
 0009:80577AFB       aPointArg1_0
 0009:80577B06       aPointArg2_0
 0009:80577B11       aPointArg3_0
 0009:80577B1C       aPointArg4_0
 0009:80577B27       aPointArg5_0
 0009:80577B32       aPointArg6_0
 0009:80577B3D       aPointArg7_0
 0009:80577B5D       aPowerstar_3
 0009:80577B67       aScenariostar
 0009:80577B74       aScenarioappear
 0009:80577B83       aSeOjScenSelSta
 0009:80577B9E       aClearstarlight
 0009:80577BAD       aLight_4
 0009:80577BB3       aSeSyCursor1
 0009:80577BC2       aSelect
 0009:80577BC9       aSeDmSenarioSel_0
 0009:80577BE1       aScenariohide
 0009:80577C97       aSeagull
 0009:80577C9F       aSeOjSeagullChi
 0009:80577DD8       aChange
 0009:80577DF8       aSummersky
 0009:80577F50       aSwSleep
 0009:80577F60       aOE
 0009:80577FF8       aSpaceinner
 0009:80578003       aAppear_33
 0009:8057800A       aDisappear_6
 0009:805780E6       aMeAstroDomeSel_3
 0009:805780FC       aMeAstroDomeSel_4
 0009:80578112       aMeAstroDomeSel_5
 0009:80578128       aMeAstroDomeSel_6
 0009:8057813E       aMeAstroDomeCal
 0009:80578154       aMeAstroDomeCal_0
 0009:8057816A       aMeAstroDomeCal_1
 0009:80578180       aMeAstroDomeCal_2
 0009:80578196       aMeAstroDomeCal_3
 0009:805781AC       aSeSyGalaxyDeci_1
 0009:805781C7       aSeSyGalaxySele_0
 0009:805782C8       aSeAtLvAstroDom
 0009:805782E3       aSeAtLvAstroDom_0
 0009:805782FE       aSeDmAstroHandl
 0009:80578451       aSwA
 0009:80578456       aSwB
 0009:8057845B       aSwAppear
 0009:80578465       aSwDead
 0009:805784AD       aSunlightarea_1
 0009:805784E0       aBody_160
 0009:805785C8       aSwitchwatcherh
 0009:80578695       aHeavenlybeachg_5
 0009:805786A9       aOceanringgalax_5
 0009:8057874D       aWaterplantArc
 0009:8057875C       aWaterplantaBti
 0009:8057876C       aWaterplantbBti
 0009:8057877C       aWaterplantcBti
 0009:8057878C       aWaterplantdBti
 0009:805788C0       aBinder_1
 0009:805788C7       aWaterroad
 0009:805788D1       aWaterwaveArc_2
 0009:805788DF       aWaterBti_1
 0009:805788E9       aWaterindirectB_1
 0009:805788FB       aEnvmapBti
 0009:80578926       aWaterroadin
 0009:80578932       aSeOjWaterRoadB
 0009:8057894B       aSwimflutter
 0009:80578957       aSwimspin
 0009:80578960       aSePmTornadeInW
 0009:8057897A       aSePmLvTornadeI
 0009:80578994       aSeOjLvWaterRoa
 0009:805789AF       aSeAtLvEarthqua_0
 0009:805789D8       aSeOjWaterRoadG
 0009:805789F4       aSeOjLvWaterRoa_0
 0009:80578A0D       aSeAtLvWaterRoa
 0009:80578A21       aSeOjLvWaterRoa_1
 0009:80578A3A       aSeOjWaterRoadB_0
 0009:80578A54       aSePvJumpM
 0009:80578B70       aWhirlpoolArc
 0009:80578B7E       aWhirlpoolBti
 0009:80578B8C       aSeAtLvWhirlPoo
 0009:80578C18       aAirbubble
 0009:80578C22       aBody_161
 0009:80578C27       aMove_15
 0009:80578C2C       aSeOjAirBubbleB
 0009:80578C43       aRecoverybubble
 0009:80578D10       aAirbubblegener
 0009:80578D23       aSeOjAirBubbleA
 0009:80578D3B       aGenerate_0
 0009:80578E18       aMove_0
 0009:80578E1D       aEndloop
 0009:80578E25       aSeSyReadRiddle
 0009:80578E39       aHeavenlybeachu
 0009:80578E50       aBody_25
 0009:80579200       aArrowswitch
 0009:8057920C       aShadow_6
 0009:80579213       aPlanemodecube_0
 0009:80579221       aBody_26
 0009:80579226       aCollision
 0009:80579230       aSeOjArrowSwitc
 0009:80579246       aSeOjLvArrowSwi
 0009:80579261       aSeSyGravitySwi
 0009:80579278       aSeOjArrowSwitc_0
 0009:80579358       aArrowswitch_0
 0009:80579364       aPlanemodecube_1
 0009:80579372       aBody_162
 0009:80579377       aCollision_3
 0009:80579381       aSeOjArrowSwitc_1
 0009:80579397       aSeOjLvArrowSwi_0
 0009:805793B2       aSeSyGravitySwi_0
 0009:805793C9       aSeOjArrowSwitc_2
 0009:805794F3       aAssemblyblockp
 0009:8057950C       aPartsice
 0009:80579515       aAssemblyblock_0
 0009:80579523       aWait_94
 0009:80579528       aBlur_1
 0009:8057952D       aSeOjAssembleBl
 0009:80579547       aSeOjAssembleBl_0
 0009:80579562       aSeOjAssembleBl_1
 0009:8057957C       aSeOjAssembleBl_2
 0009:80579595       aSeOjAssembleBl_3
 0009:805795B0       aSeOjAssembleBl_4
 0009:805795CC       aDisappear_7
 0009:805795D6       aSeOjAssembleBl_5
 0009:805795F1       aSeOjAssembleBl_6
 0009:805796E4       aShockwave
 0009:805796EE       aSeOjAstroCoreG
 0009:80579704       aRevivalD
 0009:805797D0       aStarnumber01VX
 0009:805797E1       aStarnumber01VX_0
 0009:80579844       aAstrocountdown
 0009:80579858       aLight
 0009:8057985E       aSeOjLvCdnPlate
 0009:80579877       aRevival
 0009:8057987F       aSeOjCdnPlateOn
 0009:8057989B       aGreen
 0009:80579980       aAstrodome_5
 0009:8057998A       aAppear_34
 0009:80579991       aDisappear_8
 0009:8057999B       aAstrodomeobser_0
 0009:805799B0       aZSpotlightV
 0009:80579A80       aAstrodomeaster
 0009:80579B35       aGcapture
 0009:80579B3E       aLightsplash
 0009:80579B4A       aRibbonpoint
 0009:80579B56       aRibbonbreak
 0009:80579B62       aLight_5
 0009:80579B68       aLightbreak
 0009:80579B98       aGcapturetarget
 0009:80579BA7       aSwitch_0
 0009:80579BAE       aBind
 0009:80579C26       aAppear_35
 0009:80579C2D       aTargetlight_0
 0009:80579C39       aSeSyGcaptureAp
 0009:80579C4F       aSeOjGcaptureAp
 0009:80579C65       aWait_95
 0009:80579C6A       aTarget
 0009:80579C71       aActive_0
 0009:80579C78       aCsStarPower_0
 0009:80579C86       aSeOjLvMagicPnt_1
 0009:80579CA1       aReact_0
 0009:80579CA7       aSeOjMagicPntGO_0
 0009:80579CBC       aSeOjLvMagicPnt_2
 0009:80579CD6       aLightgrow
 0009:80579CE0       aSpacestruggle
 0009:80579CEE       aSpacewait
 0009:80579F80       aBlue
 0009:80579F85       aWhite
 0009:80579F8B       aYellow
 0009:80579F92       aPurple
 0009:80579F99       aAstrodomecomet
 0009:80579FC1       aCometicon
 0009:80579FCB       aAstrodomecomet_0
 0009:8057A13F       aSeSyGalaxyDeci_2
 0009:8057A15A       aSeSyButtonCurs_0
 0009:8057A358       aAstrodomeskya_0
 0009:8057A366       aAstrodomeskyb_0
 0009:8057A374       aAstrodomeskyc_0
 0009:8057A3BB       aDisappear_9
 0009:8057A3C5       aAppear_36
 0009:8057A3CC       aSeDmAstroHandl_0
 0009:8057A3E7       aSeDmAstroHandl_1
 0009:8057A500       aMapdummy
 0009:8057A605       aAstrorotateste_1
 0009:8057A616       aAstrorotateste_2
 0009:8057A627       aAstrodecoratep_2
 0009:8057A63B       aAstrodomeentra_12
 0009:8057A64D       aAstrolibrary_0
 0009:8057A65A       aAstrochildroom_0
 0009:8057A669       aAstroparking_0
 0009:8057A676       aClose_6
 0009:8057A67C       aBody_163
 0009:8057A681       aOpen_14
 0009:8057A686       aSeOjLvAstroEng
 0009:8057A69E       aSeOjLvAstroEng_0
 0009:8057A6B6       aRevival_4
 0009:8057A6BE       aAstrostarplate_6
 0009:8057A6CD       aSeOjAstroPlate
 0009:8057A6E7       aSeOjAstroStepR
 0009:8057A700       aSeAtLvAstroPat
 0009:8057A71B       aSeOjAstroEntra
 0009:8057A735       aAlivewait
 0009:8057A73F       aAstrodomeentra_13
 0009:8057A758       aKitchensmoke
 0009:8057A950       aAstronameplate
 0009:8057A963       aAstronameplate_0
 0009:8057A97B       aAstrodomeobser
 0009:8057A990       aAstrodomewell
 0009:8057A99E       aAstrodomekitch
 0009:8057A9AF       aAstrodomebedro
 0009:8057A9C0       aAstrodomemachi
 0009:8057A9D1       aAstrodometower
 0009:8057A9F8       aAstrodomeskya
 0009:8057AA06       aAstrodomeskyb
 0009:8057AA14       aAstrodomeskyc
 0009:8057AA3C       aAstrodomeentra_2
 0009:8057AA59       aAstrodomeentra
 0009:8057AA6F       aAstrodomeentra_3
 0009:8057AA88       aAstrodomeentra_0
 0009:8057AAA1       aAstrodomeentra_4
 0009:8057AABA       aAstrodomeentra_1
 0009:8057AAEC       aAstrostarplate
 0009:8057AB06       aAstrostarplate_0
 0009:8057AB19       aAstrostarplate_1
 0009:8057AB2F       aAstrostarplate_2
 0009:8057AB45       aAstrostarplate_3
 0009:8057AB5B       aAstrostarplate_4
 0009:8057AB88       aAstrodomeentra_5
 0009:8057ABA5       aAstrodomeentra_6
 0009:8057ABBB       aAstrobasea
 0009:8057ABC6       aAstrobasecente
 0009:8057ABD7       aAstrorotateste
 0009:8057ABE8       aAstrodecoratep
 0009:8057ABFC       aAstrodecoratep_0
 0009:8057AC14       aAstroparking
 0009:8057AC21       aAstrodomeentra_7
 0009:8057AC3A       aAstrodomeentra_8
 0009:8057AC53       aAstrobaseb
 0009:8057AC5E       aAstrobasekitch
 0009:8057AC6F       aAstrolibrary
 0009:8057AC7C       aAstrocountdown_0
 0009:8057AC90       aAstrodomeentra_9
 0009:8057ACA9       aAstrodomeentra_10
 0009:8057ACC0       aAstrobasec
 0009:8057ACCB       aAstrobasecente_0
 0009:8057ACDC       aAstrobasecente_1
 0009:8057ACEF       aAstrorotateste_0
 0009:8057AD00       aAstrodomeentra_11
 0009:8057AD12       aGalaxynameplat
 0009:8057AD22       aAstrochildroom
 0009:8057AD31       aTridentplanet_0
 0009:8057AD3F       aAstrodome_2
 0009:8057AD49       aAstrodomesky
 0009:8057AD56       aAstrostarplate_5
 0009:8057AD65       aSArc
 0009:8057AD6C       aOffsetyD
 0009:8057AD76       aUpperflagD
 0009:8057AD82       aModelname
 0009:8057AD8C       aAstronameLibra
 0009:8057ADA2       aAstronameChild
 0009:8057ADB6       aAstronameParki
 0009:8057ADCB       aAstronameTride
 0009:8057AE98       aBallopener
 0009:8057AEA3       aBody_164
 0009:8057AEA8       aSeOjLvBallOpnS
 0009:8057AEC2       aSeOjBallOpnOpe
 0009:8057AED6       aSeSyTamakoroGo
 0009:8057AF98       aBind_2
 0009:8057B058       aBanekiti
 0009:8057B061       aBody_165
 0009:8057B066       aRight_0
 0009:8057B06C       aLeft_0
 0009:8057B071       aWait_96
 0009:8057B076       aSeOjLvBanekiti
 0009:8057B08D       aRepel_1
 0009:8057B093       aSeOjBanekitiRe
 0009:8057B15D       aSeOjBShipElevS
 0009:8057B175       aSeOjLvBShipEle
 0009:8057B18F       aSeOjBShipElevS_0
 0009:8057B1A6       aBody_166
 0009:8057B299       aBeamgoroundbea_2
 0009:8057B2A9       aBeam_3
 0009:8057B2BF       aBeamgoroundbea_3
 0009:8057B2E4       aBeamgoroundbea_4
 0009:8057B2FE       aMove_16
 0009:8057B303       aBody_167
 0009:8057B308       aMove1
 0009:8057B30E       aMove2
 0009:8057B314       aSeOjLvBeamGoRo
 0009:8057B32B       aBeamD
 0009:8057B450       aBeeflowerhover
 0009:8057B45F       aWait_97
 0009:8057B464       aOnbee
 0009:8057B46A       aSeOjBeeFlowerB
 0009:8057B482       aThroughmario
 0009:8057B48F       aSeOjBeeFlowerD
 0009:8057B4AA       aAppear_37
 0009:8057B4B1       aSeOjBeeFlowerR
 0009:8057B598       aPowerupinvinci
 0009:8057B5AA       aSeSyPowerUp2
 0009:8057B5BB       aBenefititemobj
 0009:8057B5CA       aBody_168
 0009:8057B5CF       aSeSyItemAppear_0
 0009:8057B5E1       aSeOjPowInvinci
 0009:8057B5FC       aGlow_1
 0009:8057B601       aPowerupinvinci_0
 0009:8057B718       aKinokolifeup_0
 0009:8057B725       aBenefititemobj_0
 0009:8057B734       aBody_169
 0009:8057B739       aLifeup
 0009:8057B7F7       aBody_170
 0009:8057B808       aGlow
 0009:8057B80D       aAppearpicture
 0009:8057B81B       aSeSyItemAppear
 0009:8057B82D       aAppear_5
 0009:8057B839       aVanish_2
 0009:8057B840       aLand_15
 0009:8057B845       aSeOjKinoko1upG
 0009:8057B85B       aSeOjKinoko1upR
 0009:8057B876       aSeOjLvKinoko1u
 0009:8057B88E       aMove_17
 0009:8057BA30       aBigbubbleArc
 0009:8057BA3E       aBubbleBti
 0009:8057BA49       aRainbowBti
 0009:8057BA58       aAirbubblegener_0
 0009:8057BA84       aGenerate
 0009:8057BBA4       aTeresamario2dg_1
 0009:8057BBC1       aBigfanwind
 0009:8057BBCC       aAppear_38
 0009:8057BBD3       aSeOjBigFanStar
 0009:8057BBEB       aSeOjBigFanStar_0
 0009:8057BBFF       aWait_98
 0009:8057BC04       aSeOjLvBigFanFa
 0009:8057BC19       aSeOjLvBigFan
 0009:8057BD30       aBody_171
 0009:8057BD35       aBlackholesucti
 0009:8057BD46       aBlackholecube
 0009:8057BD71       aBlackholerange
 0009:8057BD8B       aBlackhole
 0009:8057BD95       aSeOjLvBlackHol
 0009:8057BDA9       aSeOjBlackHoleD
 0009:8057BE70       aBluechip_0
 0009:8057BEF8       aBluestarcupsul
 0009:8057BF0E       aUfobluestarcup
 0009:8057BF3C       aBody_27
 0009:8057BF41       aRoot
 0009:8057BF46       aWait_11
 0009:8057BF4B       aUfobluestarcup_0
 0009:8057BF5E       aSeOjLvUfoBlueS
 0009:8057BF7A       aCsStarPower
 0009:8057BF88       aSeOjLvMagicPnt
 0009:8057BFA3       aReact
 0009:8057BFA9       aSeOjMagicPntGO
 0009:8057BFBE       aSeOjLvMagicPnt_0
 0009:8057BFD8       aTargetlight
 0009:8057BFE4       aTouch_0
 0009:8057BFEA       aActive
 0009:8057BFF1       aTouchable
 0009:8057C130       aBreakablecager
 0009:8057C144       aBreakablecage
 0009:8057C152       aBreakablecagel
 0009:8057C161       aBreakablefixat
 0009:8057C173       aBreakabletrash
 0009:8057C18B       aBody_172
 0009:8057C1A3       aBreakablecageb
 0009:8057C1B6       aRotation
 0009:8057C1C4       aSeOjBreakFixat
 0009:8057C1DF       aSeOjIronCageBr
 0009:8057C1F5       aBreak_31
 0009:8057C420       aBumpappearplan_0
 0009:8057C432       aBody_173
 0009:8057C437       aBumpappearplan_1
 0009:8057C449       aBumpappearplan_2
 0009:8057C45E       aSeOjBumpAppear
 0009:8057C478       aBumpappearplan_3
 0009:8057C48D       aSeOjBumpAppear_0
 0009:8057C5A0       aPhantomcandles
 0009:8057C5B3       aTeresamansionc
 0009:8057C5CC       aCandlestandice
 0009:8057C5E2       aTeresamansionc_0
 0009:8057C5FB       aFire01
 0009:8057C602       aFire02
 0009:8057C609       aFire_1
 0009:8057C60E       aExtinguish01
 0009:8057C61B       aExtinguish02
 0009:8057C628       aExtinguish
 0009:8057C633       aSeOjStarPieceB_4
 0009:8057C64A       aSeOjFireStandI
 0009:8057C661       aSeOjLvPhantomT
 0009:8057C67D       aSeOjPhantomToa
 0009:8057C795       aCannonfortress_0
 0009:8057C7AD       aSeOjLvCnfortBk
 0009:8057C7C8       aSeOjCnfortBkst_0
 0009:8057C7E4       aSeOjLvCnfortBk_0
 0009:8057C800       aSeOjCnfortBkst
 0009:8057C913       aMove_18
 0009:8057C918       aSeOjCapsuleCag
 0009:8057CA25       aAirbubble_0
 0009:8057CA2F       aMove_19
 0009:8057CA34       aBody_174
 0009:8057CA39       aWait_99
 0009:8057CA3E       aRecoverybubble_0
 0009:8057CA52       aSeSyBluechipGe
 0009:8057CA65       aSeSyYellowchip
 0009:8057CB58       aChip1
 0009:8057CB5E       aChip2
 0009:8057CB64       aChip3
 0009:8057CB6A       aChip4
 0009:8057CB70       aChip5
 0009:8057CB8C       aBluechipcounte
 0009:8057CB9C       aYellowchipcoun
 0009:8057CBAE       aChipget
 0009:8057CBB6       aShowhide
 0009:8057CBDB       aAppear_39
 0009:8057CBE2       aWait_100
 0009:8057CBE7       aComplete_2
 0009:8057CCAB       aSeOjBluechipCo
 0009:8057CCC3       aSeOjYellowchip
 0009:8057CCDD       aSeOjBluechipAp
 0009:8057CCF3       aSeOjYellowchip_0
 0009:8057CDE0       aChoochootrain
 0009:8057CDEE       aBody_175
 0009:8057CE02       aChoochootrainb
 0009:8057CE14       aSeOjLvToySlMov
 0009:8057CE29       aSeOjToySlWhist
 0009:8057D0D0       aClipareadropla
 0009:8057D0E2       aSplash
 0009:8057D0E9       aSeOjDropLaserS
 0009:8057D1D0       aBody_176
 0009:8057D258       aClipvolumesphe
 0009:8057D269       aClipvolumebox
 0009:8057D2E0       aBody_177
 0009:8057D368       aBody_178
 0009:8057D3E8       aWatermelon_0
 0009:8057D3F3       aCoconut_0
 0009:8057D3FB       aBreakwatermelo
 0009:8057D40B       aCoconutbreak
 0009:8057D418       aSeOjCoconutHit
 0009:8057D42A       aSePmSpinHit
 0009:8057D439       aSeOjCoconutLau
 0009:8057D44E       aSeOjCoconutFli
 0009:8057D463       aSeOjCoconutFli_0
 0009:8057D478       aBody_179
 0009:8057D47D       aRollingsmoke_0
 0009:8057D48A       aRollingsmokeat
 0009:8057D4A0       aRollingsmokeat_0
 0009:8057D4B5       aLand_16
 0009:8057D4BA       aLandattrwater
 0009:8057D4C8       aWatercolumn_5
 0009:8057D4D4       aSpinhitmark_0
 0009:8057D4E0       aSeOjCoconutBou
 0009:8057D4FA       aSeOjCoconutBou_0
 0009:8057D50E       aSeOjLvCoconutR
 0009:8057D52A       aSeOjLvCoconutR_0
 0009:8057D540       aSeOjFallInWate
 0009:8057D630       aCoconuttree
 0009:8057D63C       aBody_180
 0009:8057D6CD       aCoconuttreelea
 0009:8057D6DD       aBody_181
 0009:8057D7E4       aPurplecoin
 0009:8057D7EF       aCoin_1
 0009:8057D7F4       aCoin_2
 0009:8057D7FE       aAirbubble_1
 0009:8057D808       aMove_20
 0009:8057D80D       aCoinget
 0009:8057D815       aLavafall
 0009:8057D81E       aSeOjFallInMagm
 0009:8057D834       aCoinspinblur
 0009:8057D841       aRecoverybubble_1
 0009:8057D855       aSeSyPurpleCoin
 0009:8057D867       aSeSyCoin
 0009:8057D872       aSeOjCoinBound
 0009:8057D9A0       aBody_182
 0009:8057D9A5       aCoin_3
 0009:8057D9AA       aCoinget_0
 0009:8057DA78       aSeSyPurpleCoin_0
 0009:8057DA91       aSeSyCoinAppear
 0009:8057DAB4       _9CoinGroup::`vtbl'
 0009:8057DBAD       aMeCoinAppearS
 0009:8057DBBE       aSeSyCoinAppear_0
 0009:8057DCB8       aBody_183
 0009:8057DD71       aPlane
 0009:8057DD77       aMove_21
 0009:8057DD7C       aSeOjCollapsePl
 0009:8057DD98       aPlanematV
 0009:8057DDA3       aVanish_3
 0009:8057DDAA       aSeOjCollapsePl_0
 0009:8057DEB0       aCollectcounter
 0009:8057DEBF       aAppear_40
 0009:8057DFB0       aBody_184
 0009:8057DFB5       aFreeze_0
 0009:8057DFBC       aCsSpinHit
 0009:8057DFC8       aSeOjCrystalCag
 0009:8057DFE4       aSeOjCrystalCag_0
 0009:8057E00C       aCrystalcages
 0009:8057E019       aCrystalcagem
 0009:8057E045       aCrystalcagelbr
 0009:8057E076       aCrystalcagesbr
 0009:8057E088       aBreak_32
 0009:8057E08E       aSeOjCrystalCag_1
 0009:8057E0A9       aSeOjCrystalCag_2
 0009:8057E0C4       aSeSyReadRiddle_8
 0009:8057E0D8       aSeOjCryCageMvT
 0009:8057E0F3       aSeSvKinopioPuh_0
 0009:8057E1DD       aWait_101
 0009:8057E1F3       aCorewait
 0009:8057E1FC       aBody_185
 0009:8057E201       aBreakoutside
 0009:8057E20E       aSeOjCryCageMvB
 0009:8057E22A       aBreakinside
 0009:8057E236       aSeOjCryCageMvB_0
 0009:8057E252       aSeOjCryCageMvB_1
 0009:8057E26E       aSeSmTicoSpin
 0009:8057E27E       aMetamorphosis_1
 0009:8057E28C       aSeSmTicoMetamo
 0009:8057E2BD       aTico_0
 0009:8057E2C2       aColorchange_4
 0009:8057E2CE       aSeOjCryCageMvT_0
 0009:8057E408       aWait_102
 0009:8057E40D       aCrystalswitch
 0009:8057E41B       aBody_186
 0009:8057E420       aSeOjCrystalSwi
 0009:8057E568       aBody_187
 0009:8057E56D       aLoop_0
 0009:8057E572       aSeSyGetDashRin
 0009:8057E586       aStart_3
 0009:8057E58C       aRevival_5
 0009:8057E60C       aDashring
 0009:8057E618       aSpin_9
 0009:8057E61D       aSeOjLeavesSwin
 0009:8057E630       aSeOjStarPieceB_46
 0009:8057E6F8       aMove_22
 0009:8057E6FD       aBody_188
 0009:8057E702       aMove_23
 0009:8057E707       aSeOjHipdropSwi_0
 0009:8057E71F       aDesertlanddown
 0009:8057E734       aSandclockgalax_4
 0009:8057E744       aSeSyTimerA0_0
 0009:8057E754       aSeSyTimerA2_0
 0009:8057E764       aSeSyTimerA1_0
 0009:8057E774       aSeSyTimerAQuas_0
 0009:8057E78A       aWait_103
 0009:8057E78F       aReturn_1
 0009:8057E85F       aMove_24
 0009:8057E864       aSeAtLvWindMovi
 0009:8057E880       aSeOjDesertLand
 0009:8057E89A       aSeOjLvDesertLa
 0009:8057E8B4       aSeOjDesertLand_0
 0009:8057E8CE       aVibration
 0009:8057E8E5       aSeOjLvDesertLa_0
 0009:8057EA00       aDragonheadflow
 0009:8057EA11       aBody_189
 0009:8057EA16       aPush_0
 0009:8057EA1B       aWait_104
 0009:8057EA20       aBreathe
 0009:8057EA28       aPoint
 0009:8057EA2E       aLaunch
 0009:8057EA35       aSePvJumpJoy_1
 0009:8057EB0D       aRipple_4
 0009:8057EB14       aSeOjDriftWoodW
 0009:8057EB2A       aSeOjDriftWoodP
 0009:8057EB45       aSeOjDriftWoodA
 0009:8057EC30       aCoin
 0009:8057EC35       aKinopio
 0009:8057EC3D       aFreeze
 0009:8057EC44       aSpindriver
 0009:8057EC4F       aSuperspindrive_0
 0009:8057EC5F       aStarpiecedummy
 0009:8057EC6E       aTico
 0009:8057EC73       aKeyswitch
 0009:8057EC7D       aInrotation
 0009:8057EC88       aPowerstar
 0009:8057EC92       aKinokooneup
 0009:8057EC9E       aKuribo
 0009:8057ECA5       aBluechip
 0009:8057ECAE       aYellowchip
 0009:8057ECB9       aStraytico
 0009:8057ECC3       aGrandstar
 0009:8057ECCD       aKinokolifeup
 0009:8057ECDA       aColorchange_0
 0009:8057ECE6       aShadow_7
 0009:8057ECED       aLight_0
 0009:8057ECF4       jpt_801D056C
 0009:8057EDA8       aBody_190
 0009:8057EE28       aEarthenpipeinw
 0009:8057EE3B       aEarthenpipe
 0009:8057EE47       aBottom
 0009:8057EE4E       aBinder_2
 0009:8057EE55       aBinderwaterupp
 0009:8057EE66       aBinderwaterlow
 0009:8057EE77       aEarthenpipes
 0009:8057EE84       aLavaappear
 0009:8057EE8F       aLavavanish
 0009:8057EEA8       aEarthenpipestr
 0009:8057EEBA       aHeavensdoorgal_7
 0009:8057EECC       aAppear_41
 0009:8057EED3       aEarthenpiperea
 0009:8057EEE4       aEarthenpipein
 0009:8057EEF2       aSeDmDokanWarp
 0009:8057EF03       aEarthenpipeout
 0009:8057EF12       aSePmJumpM
 0009:8057EF1F       aSePvJumpJoy_2
 0009:8057EF2E       aEarthenpipejum
 0009:8057EF3E       aSeSyItemAppear_1
 0009:8057EF50       aSeOjLvPipeAppe
 0009:8057EF6B       aSeOjLvPipeVani
 0009:8057EF86       aSeOjLvPipeInWa
 0009:8057F117       aElectricball
 0009:8057F124       aElectrichit
 0009:8057F130       aElectric
 0009:8057F148       aBody_28
 0009:8057F168       aSeOjLvBirikyuM
 0009:8057F250       aBody0
 0009:8057F256       aBody1_0
 0009:8057F25C       aBody2_0
 0009:8057F262       aBody3_0
 0009:8057F268       aBody4
 0009:8057F26E       aBody5
 0009:8057F274       aBody6
 0009:8057F27A       aBody7
 0009:8057F2A0       aElectricrailpo
 0009:8057F2B2       aBody_29
 0009:8057F2ED       aStart_4
 0009:8057F2F3       aLine
 0009:8057F2F8       aSeOjLvElecRail
 0009:8057F30F       aSeOjElecRailVa
 0009:8057F4AB       aSparkmat
 0009:8057F4B4       aElectricrail
 0009:8057F4EB       aElectricrailmo
 0009:8057F5C8       aBody0_0
 0009:8057F5CE       aBody1_1
 0009:8057F5D4       aBody2_1
 0009:8057F5DA       aBody3_1
 0009:8057F5E0       aBody4_0
 0009:8057F5E6       aBody5_0
 0009:8057F5EC       aBody6_0
 0009:8057F5F2       aBody7_0
 0009:8057F618       aElectricrailpo_0
 0009:8057F62A       aBody_30
 0009:8057F64D       aSeOjLvElecRail_0
 0009:8057F664       aSeOjElecRailVa_0
 0009:8057F7B0       aChildkuribo
 0009:8057F7BC       aChildskeletalf
 0009:8057F7D2       aChildmeramera
 0009:8057F80F       aSeSyTotalCompl_0
 0009:8057F8E0       aBody_191
 0009:8057F8E5       aSeOjLvChalFdBr
 0009:8057F900       aSeOjChalFdBrid
 0009:8057F919       aSeOjChalFdBrid_0
 0009:8057F9D0       aFallingsmallro
 0009:8057F9E1       aSeAtLvFallingR
 0009:8057FAEF       aFirebarball
 0009:8057FAFB       aFirebarcore
 0009:8057FB07       aFire_4
 0009:8057FB0C       aBody_192
 0009:8057FB11       aSeOjLvFireBarC
 0009:8057FC30       aCannon1_2
 0009:8057FCB8       aFirebullet
 0009:8057FCC3       aBody_193
 0009:8057FCC8       aSeOjFPressureF
 0009:8057FCE4       aShot_3
 0009:8057FCE9       aMove_25
 0009:8057FCEE       aSeOjLvFPressur
 0009:8057FE08       aFirepressure
 0009:8057FE15       aBody_31
 0009:8057FE1A       aCannon_0
 0009:8057FE21       aCannon1_0
 0009:8057FE29       aRadiate
 0009:8057FE31       aFire_2
 0009:8057FE36       aFireind
 0009:8057FE5F       aFireshotstart
 0009:8057FE6D       aSeOjLvFPressur_0
 0009:8057FE89       aFireshot
 0009:8057FE92       aFireshotend
 0009:8057FE9E       aCannon3
 0009:8057FFB8       aFlamegun
 0009:8057FFC1       aAttack_57
 0009:8057FFC8       aBody_194
 0009:8057FFCD       aWait_105
 0009:8057FFD2       aShootingbefore
 0009:8057FFE1       aShooting
 0009:8057FFEA       aSeEmLvFlamegun
 0009:805800E0       aBody_195
 0009:805800E5       aVanish_4
 0009:805800EC       aSeAtLvEarthqua_1
 0009:80580100       aWind
 0009:80580105       aSeOjLvFlexSphe
 0009:8058011F       aSeSyTimerAQuas_1
 0009:80580135       aSeSyTimerA1_1
 0009:80580145       aSeSyTimerA2_1
 0009:80580155       aSeSyTimerA0_1
 0009:80580165       aSeOjFlexSphere
 0009:80580221       aFlippanel
 0009:8058022B       aFlippanelrever
 0009:8058023C       aPanel
 0009:80580242       aPanelb
 0009:80580249       aSeOjFlipPanelC
 0009:80580261       aBody_196
 0009:80580266       aPanela
 0009:8058026D       aSeOjFlipPanelC_0
 0009:80580287       aPanelend
 0009:80580290       aFlippanelgold
 0009:8058029E       aHeavensdoorgal_8
 0009:805802B0       aSeOjFlipPanelA
 0009:805802C8       aFlippanelcompl
 0009:805802DA       aMeFlipPanelInv
 0009:805802F6       aMeFlipPanelOnF
 0009:8058030D       aMeFlipPanelInv_0
 0009:80580323       aMeFlipPanelOn
 0009:80580334       aMeFlipPanelInv_1
 0009:80580349       aMeFlipPanelOff
 0009:80580508       aBody_197
 0009:8058050D       aSeOjLvFountain
 0009:805805B8       aFountainbig
 0009:805805C4       aBody_198
 0009:805805C9       aFountainbigsig
 0009:805805D9       aSeOjLvFountain_0
 0009:805805F4       aSeOjFountainBi
 0009:8058060D       aSeOjLvFountain_1
 0009:80580723       aBody_199
 0009:80580728       aBind_3
 0009:8058072D       aGcapture_0
 0009:80580736       aLightgrow_0
 0009:80580740       aLight_6
 0009:80580746       aLightbreak_0
 0009:80580751       aLightsplash_0
 0009:8058075D       aRibbonpoint_0
 0009:80580769       aRibbonbreak_0
 0009:80580775       aSeOjGcaptureRe
 0009:8058078C       aSpin2nd
 0009:80580794       aGcapturecancel
 0009:805807A3       aGcapturebreak
 0009:805807B1       aFall_11
 0009:805807B6       aGcapturefall
 0009:805807C3       aSpacestruggle_0
 0009:805807D1       aGcapturetracti
 0009:805807E2       aSpacewait_0
 0009:805807EC       aGcapturehold
 0009:805807F9       aSeOjLvGcapture
 0009:80580900       aGcaptureribbon
 0009:80580913       aGcaptureribbon_0
 0009:805809AC       aGcapturetarget_0
 0009:805809BB       aBody_32
 0009:805809D9       aWait_106
 0009:805809DE       aSwitch_4
 0009:805809E5       aSeSyGcaptureAp_0
 0009:80580A00       aTargetlight_1
 0009:80580A0C       aAppear_42
 0009:80580A13       aSeOjGcaptureAp_0
 0009:80580A29       aCsStarPower_1
 0009:80580A37       aSeOjLvMagicPnt_3
 0009:80580A52       aReact_1
 0009:80580A58       aSeOjMagicPntGO_1
 0009:80580A6D       aSeOjLvMagicPnt_4
 0009:80580A87       aTouch_12
 0009:80580A8D       aActive_1
 0009:80580A94       aTouchable_0
 0009:80580C8C       aGravitylightro
 0009:80580C9D       aBody_33
 0009:80580CA2       aWait_12
 0009:80580CA7       aSePmGravLightD
 0009:80580CC1       aDisappear
 0009:80580CCB       aFall_0
 0009:80580DA7       aGreencaterpill_3
 0009:80580DBF       aWait_107
 0009:80580DC4       aFollowpoint
 0009:80580DD0       aGreencaterpill_4
 0009:80580DE8       aSeOjLvGrnCater_0
 0009:80580E00       aSeOjLvGrnCater
 0009:80580E19       aSeOjGrnCaterpI
 0009:80580E2D       aSeOjGrnCaterpD
 0009:80580E45       aSeOjGrnCaterpO
 0009:80580FA0       aHatchwaterplan_0
 0009:80580FB1       aHatchwaterplan_1
 0009:80580FC8       aHatchwaterplan_2
 0009:80580FDE       aHatchwaterplan_3
 0009:80580FF2       aSeOjHatchWater
 0009:8058100B       aSeOjLvHatchWat
 0009:80581027       aSeOjHatchWater_0
 0009:80581040       aSeSyReadRiddle_9
 0009:8058110C       aHeavensdoorins_3
 0009:80581122       aHeavensdoorapp_1
 0009:80581139       aHeavensdoorins_4
 0009:80581164       aAppear_43
 0009:8058116B       aMbgmGalaxy24_1
 0009:8058117A       aBgmAppearHdTow
 0009:8058118E       aSeOjLvHdInside_0
 0009:805811AA       aMove_26
 0009:805811AF       aBreak_33
 0009:805811B5       aStmStarExist2
 0009:805812A8       aMove_1
 0009:805812AD       aSwitch
 0009:805812B4       aBody_34
 0009:805812B9       aSeSyReadRiddle_0
 0009:805812CD       aWait_13
 0009:80581418       aHipdroprock
 0009:80581424       aSeOjRockBreak
 0009:80581435       aBreaklevel_2
 0009:80581440       aHipdroprockbre
 0009:80581462       aSeOjStarPieceB_47
 0009:80581528       aHipdropswitch
 0009:80581536       aBody_200
 0009:8058153B       aMove_27
 0009:80581540       aWait_108
 0009:80581545       aSeOjPncKinokoB_1
 0009:8058155C       aSeOjHipdropSwi_1
 0009:80581620       aSeSyTimerA2
 0009:80581630       aSeSyTimerA1
 0009:80581640       aSeSyTimerAQuas
 0009:80581656       aSeSyTimerA0
 0009:80581666       aSeSyTimerB2
 0009:80581676       aSeSyTimerB1
 0009:80581686       aSeSyTimerBQuas
 0009:8058169C       aSeSyTimerB0
 0009:805816AC       aHipdroptimersw
 0009:805816BF       aBody_35
 0009:805816C4       aMove_6
 0009:805816C9       aWait_14
 0009:805816CE       aSeOjPncKinokoB
 0009:805816E5       aSeOjHipdropSwi
 0009:805817B8       aHitwalltimersw
 0009:805817CB       aBody_201
 0009:805817D0       aMove_28
 0009:805817D5       aWait_109
 0009:805817DA       aSeSyTimerA0_2
 0009:805817EA       aSeSyTimerA2_2
 0009:805817FA       aSeSyTimerA1_2
 0009:8058180A       aSeOjSwitch1
 0009:805818D8       aIcestep
 0009:805818E0       aBody_202
 0009:805818E5       aTimeoutlong
 0009:805818F1       aTimeoutshort
 0009:805818FE       aStart_5
 0009:80581904       aSeOjIceFloorFr
 0009:8058191B       aSeOjIceFloorMe
 0009:80581930       aBreak_34
 0009:80581936       aSeOjIceFloorBr
 0009:80581A98       aSArc_3
 0009:80581B90       aIroncannonlaun
 0009:80581BBB       aShoot_1
 0009:80581BC1       aShot_4
 0009:80581BC6       aIroncannonlaun_0
 0009:80581DA8       aMove_29
 0009:80581DAD       aSeOjLvItemAprS
 0009:80581DC8       aSeOjItemAprSto
 0009:80581E70       aCoinblock
 0009:80581E7A       aGlow_2
 0009:80581E7F       aItemblockswitc
 0009:80581E8F       aTimercoinblock
 0009:80581E9E       aSplashcoinbloc
 0009:80581EAE       aTimerpiecebloc
 0009:80581EBE       aSplashpieceblo
 0009:80581ECF       aBody_203
 0009:80581ED4       aSeEmExplodeS_30
 0009:80581EE4       aBreak_35
 0009:80581EEA       aAppear_44
 0009:80581EF1       aWait_110
 0009:80581EF6       aBomb_2
 0009:80581EFB       aSeOjStarPieceB_48
 0009:80581F12       aSeSyItemAppear_2
 0009:80581FE0       aItembubble_0
 0009:80581FEB       aBody_204
 0009:80581FF0       aCoin_4
 0009:80582017       aStarpiece_2
 0009:8058202E       aStarpiece1V_0
 0009:8058203B       aSeOjStarPieceB_49
 0009:80582052       aSeOjItemBubble
 0009:8058206A       aBubblebreak
 0009:80582188       aKoura_0
 0009:8058218E       aKourashine
 0009:80582199       aBody_205
 0009:8058219E       aSeOjTurtleJetL
 0009:805821B8       aSeOjTurtleJetL_0
 0009:805821D2       aBrakelamp
 0009:805821DC       aVanish_5
 0009:805821E3       aVanishred
 0009:805821ED       aVanishgold
 0009:805821F8       aSpinblur_1
 0009:80582201       aSpinblurred
 0009:8058220D       aSpinblurgold
 0009:8058221A       aGlow_3
 0009:8058221F       aWait_111
 0009:80582224       aHandyglow
 0009:8058222E       aSwimflutterboa
 0009:8058223F       aSwimbubble_0
 0009:8058224A       aSwimbubblered
 0009:80582258       aSeOjLvJetTurtl
 0009:80582274       aCarrywait
 0009:8058227E       aWaterexplosion
 0009:8058228D       aStar_3
 0009:80582292       aExplosion_8
 0009:8058229C       aExplosionred
 0009:805822A9       aExplosiongold
 0009:805822B7       aSeOjTurtleJetB
 0009:805822D0       aSeOjTurtleJetB_0
 0009:805822E9       aIgnition
 0009:805822F2       aBulletwater
 0009:805822FE       aWaterblur
 0009:80582308       aSePvThrow_0
 0009:80582314       aBullet
 0009:8058231B       aBlur_2
 0009:80582320       aBlurred
 0009:80582328       aBlurgold
 0009:80582331       aSeSyGetTurtleJ
 0009:80582346       aSePvCatch_0
 0009:80582352       aAppearlight
 0009:8058235E       aSeEmLvNokoland_1
 0009:8058237E       aKourarevival
 0009:8058238B       aSeEmNokolandRe_1
 0009:805823A8       aBulletsearch
 0009:805823B5       aDrop
 0009:805823BA       aYrotation
 0009:805823C4       aSeEmTurtleShel_0
 0009:80582578       aJumphole
 0009:80582581       aBody_206
 0009:80582586       aSeOjLvJumpHole
 0009:805825A1       aSeOjJumpHoleFl
 0009:805825B6       aSePvJumpJoy_3
 0009:805825C5       aSePmJumpLong
 0009:80582690       aJumpstand
 0009:8058269A       aBinder_3
 0009:805826A1       aJumpstandjoint
 0009:805826B2       aBody_207
 0009:805826B7       aShadow_27
 0009:805826BE       aWait_112
 0009:805826C3       aBound_3
 0009:805826C9       aSeOjJumpStandL
 0009:805826E1       aBoundjump
 0009:805826EB       aSeOjJumpStandB
 0009:80582704       aSePvJumpL
 0009:80582711       aSeOjJumpStandB_0
 0009:8058272A       aSePvJumpM_0
 0009:80582737       aBoundhipdrop
 0009:80582744       aSePmHipdrop
 0009:80582752       aSeOjJumpStandL_0
 0009:8058276A       aSeOjJumpStandB_1
 0009:80582783       aSePvJumpJoy_4
 0009:80582792       aTrampolinejump
 0009:805827A4       aTrampolinejump_0
 0009:805827B9       aTrampolinejump_1
 0009:80582891       aKeyswitch_1
 0009:8058289B       aBody_208
 0009:805828A0       aRotation_0
 0009:805828A9       aSeOjKeySwitchA
 0009:805828C1       aSeOjKeySwitchB
 0009:805828D8       aSeSyReadRiddle_10
 0009:805828EC       aSeOjKeySwitchG
 0009:805829B0       aKillergunnersi
 0009:805829C3       aBody_209
 0009:805829C8       aShell_0
 0009:805829CE       aKillergunnersi_0
 0009:805829E7       aSeOjLvKGunnerC
 0009:80582A00       aKillergunnersi_1
 0009:80582A18       aKillergunnersi_2
 0009:80582A30       aSeOjKGunnerFir
 0009:80582BC0       aLargechainfixp
 0009:80582BD3       aLargechain
 0009:80582BDE       aBody_210
 0009:80582BE3       aBreak_36
 0009:80582BE9       aSeOjLargeChain
 0009:80582C8D       aSeAtLvMagmaWin_1
 0009:80582CA8       aSeOjLvLavaMove
 0009:80582D98       aLavacolumn
 0009:80582DA3       aMove_30
 0009:80582DA8       aSeOjLavaColumn_2
 0009:80582F20       aLavahomefloate_0
 0009:80582F31       aLavafloatingst
 0009:80582F43       aLavafloatingst_0
 0009:80582F55       aLavafloatingst_1
 0009:80582F67       aLavafloatingst_2
 0009:80582F79       aFloaterotaking
 0009:80582F90       aLavabubble
 0009:80582F9B       aLavafloatingst_7
 0009:80583048       aLavastepa
 0009:80583052       aLavastepb
 0009:8058305C       aLavastepc
 0009:80583066       aLavanonfloatin
 0009:805830F8       aLavageyser
 0009:80583103       aAttack_58
 0009:8058310A       aSign_2
 0009:8058310F       aSeOjLvLavaGeys
 0009:80583129       aSeOjLavaGeyser
 0009:80583141       aLavageyserappe
 0009:80583152       aSeOjLvLavaGeys_0
 0009:8058316C       aLavageyserwait
 0009:8058317B       aLavageyserdisa
 0009:80583268       aSeOjLvLavaSees
 0009:80583300       aLavahomevolcan_0
 0009:80583314       aLoop_1
 0009:80583319       aSeOjLvVolcanoE
 0009:80583333       aSeOjLvVolcanoE_0
 0009:8058334E       aActive_2
 0009:80583355       aSeOjVolcanoExp
 0009:80583418       aLavajambosunpl_0
 0009:8058342B       aSeAtLvJumboSun
 0009:805834F0       aLavaprominence
 0009:805834FF       aLavaprominence_0
 0009:8058351B       aBody_211
 0009:80583520       aSign_3
 0009:80583525       aStart_6
 0009:8058352B       aDrop_0
 0009:80583530       aDropeffect
 0009:8058353B       aLavaprominence_1
 0009:8058354F       aSeOjLvProminen
 0009:80583568       aSeOjProminence
 0009:8058357F       aSeOjLvProminen_0
 0009:80583598       aSeOjLvProminen_1
 0009:805836A8       aLavaprominence_2
 0009:805836C2       aLavaprominence_3
 0009:805836E1       aLavaprominence_4
 0009:805836F6       aAttack_59
 0009:805836FD       aDrop1
 0009:80583703       aDrop2
 0009:80583709       aDrop3
 0009:8058370F       aSeOjLvProminen_2
 0009:8058372A       aHead1_2
 0009:80583730       aHead2_1
 0009:80583736       aHead3_2
 0009:805837D0       aLavasteam
 0009:805837DA       aSign
 0009:805837DF       aBody_36
 0009:805837E4       aSteam
 0009:805837EA       aSeOjLvLavaStea
 0009:805838E0       aLavastrangeroc
 0009:80583902       aLavastrangeroc_0
 0009:8058391E       aLavastrangeroc_1
 0009:8058392E       aBreak_37
 0009:80583934       aSeOjStrangeroc_1
 0009:8058394E       aSeOjStrangeroc_2
 0009:80583968       aSeOjStrangeroc_3
 0009:80583A10       aLotusleaf
 0009:80583A1A       aLotusleafrippl
 0009:80583A2A       aSeOjLotusLeafW
 0009:80583AF8       aBell
 0009:80583AFD       aPolysurface2
 0009:80583B0A       aPolysurface1
 0009:80583B17       aBody_212
 0009:80583B1C       aStarwandhitmar
 0009:80583B2C       aSeOjHappyBellS
 0009:80583B47       aSeOjHappyBellR
 0009:80583B5D       aRing_0
 0009:80583C0D       aRotation_1
 0009:80583C16       aVibration_0
 0009:80583C20       aSeOjManholeRat
 0009:80583CF8       aColorchange
 0009:80583D04       aTexchange
 0009:80583D0E       aAppear
 0009:80583D15       aMove_2
 0009:80583D1A       aDarkhopperrota_0
 0009:80583D30       aSeSyReadRiddle_1
 0009:80583D44       aShadow_8
 0009:80583D4B       aBody_37
 0009:80583D50       aRailpoint
 0009:80583D5A       aBloom_1
 0009:80583D60       aSbloom_0
 0009:80583D80       aOceanringruins_0
 0009:80583D93       aSbreak
 0009:80583D9B       aSandupdowntowe
 0009:80583DC4       aBreak
 0009:80583EC2       aAsteroidmovea
 0009:80583ED0       aHeavensdoorapp
 0009:80583EE7       aHeavensdoorapp_0
 0009:80583F03       aHeavensdoorins_0
 0009:80583F21       aHeavensdoorins_1
 0009:80583F3F       aHeavensdoorins_2
 0009:80583F5D       aPeachcastletow
 0009:80583F78       aPeachcastletow_0
 0009:80583F94       aPhantomshippro
 0009:80583FAC       aPhantomshippro_0
 0009:80583FC6       aStarpiececlust
 0009:80583FD7       aRosettachair
 0009:80583FE4       aAstrodomedemoa
 0009:80583FFD       aChallengeballm
 0009:80584016       aChallengeballv
 0009:80584032       aDarkhopperrota
 0009:80584048       aDarkhopperplan_3
 0009:8058405A       aPeachcastletow_1
 0009:8058406E       aKoopashipe
 0009:80584079       aBattleshipelev
 0009:80584091       aStrongblock
 0009:8058409D       aUfosandobstacl
 0009:805840AE       aUfosandobstacl_0
 0009:805840BF       aUfosandobstacl_1
 0009:805840D0       aKoopavs2partsj
 0009:805840EC       aKoopavs2partss
 0009:80584109       aKoopavs2partss_0
 0009:80584126       aKoopavs2partsn
 0009:8058413E       aKoopavs2partsc
 0009:8058415C       aHeavensdoorins_5
 0009:80584174       aShadow_9
 0009:8058417B       aSandupdowntowe_0
 0009:80584199       aSandupdowntowe_1
 0009:805841B7       aSandupdowntowe_2
 0009:805841D9       aKoopajrnormals
 0009:805841EC       aKoopastatue
 0009:805841F8       aDangersignboar
 0009:80584208       aMarbleplanet_0
 0009:80584215       aCore_1
 0009:8058421A       aWatermelon
 0009:80584225       aBreak_2
 0009:8058422B       aSeOjMarbleHitC
 0009:80584243       aSeSyMarbleHitC
 0009:8058425B       aSmoke6f
 0009:80584263       aSeOjMarbleHitC_0
 0009:8058427B       aSeSyMarbleHitC_0
 0009:80584293       aSmoke3f
 0009:8058429B       aSeOjMarbleHitC_1
 0009:805842B3       aSeSyMarbleHitC_1
 0009:805842DA       aMarbleplanetco_0
 0009:805842FA       aMarbleplanetel_1
 0009:8058430F       aBody_213
 0009:8058431B       aSeOjLvMarbleRo
 0009:80584332       aSeOjMarbleFlip
 0009:80584344       aHitmarknormal_0
 0009:80584352       aSeOjMarbleHitE
 0009:80584368       aMarbleplanetel_2
 0009:8058457C       aMariolauncher
 0009:80584595       aBind_4
 0009:8058459A       aShell_1
 0009:805845A0       aWait_113
 0009:805845A5       aEarthenpiperea_0
 0009:805845B6       aSePmMarioLaunc
 0009:805845D0       aEarthenpipein_0
 0009:805845DE       aSePvCatch_1
 0009:805845EA       aLookup
 0009:805845F1       aActive_3
 0009:805845F8       aSeOjMarioLaunc
 0009:80584610       aSeOjMarioLaunc_0
 0009:8058462A       aSeSyLvMarioLau
 0009:80584646       aSePmMarioLaunc_0
 0009:80584662       aSePvShootUp
 0009:80584671       aSePmLvMarioLau
 0009:8058468D       aSePvJumpJoy_5
 0009:8058469C       aCannonflyloop
 0009:805846AA       aDiecannonfly
 0009:805846B7       aCenter_15
 0009:805846BE       aSeSyMarioLaunc
 0009:805846D7       aSePvJumpS_0
 0009:805846E4       aSeSyMarioLaunc_0
 0009:805846FC       aCannonflystart
 0009:8058470B       aLocussmoke_2
 0009:80584716       aGravity_1
 0009:8058471E       aWallhit_1
 0009:8058492B       aSight
 0009:80584940       aTelescope
 0009:80584950       aMariolaunchera
 0009:805849F0       aMechakoopapart_4
 0009:80584A15       aFront
 0009:80584A1B       aRear
 0009:80584A20       aSeOjMKoopaArmS
 0009:80584A38       aSeOjLvMKoopaAr
 0009:80584A52       aSeOjMKoopaArmE
 0009:80584A68       aBreakstart
 0009:80584A73       aSeOjMKoopaArmF
 0009:80584A8D       aSpark_4
 0009:80584A93       aBlacksmoke_0
 0009:80584A9E       aSeOjLvMKoopaAr_0
 0009:80584AB8       aSeOjMKoopaArmB
 0009:80584C49       aSeBmMechaKoopa
 0009:80584C60       aSeBmLvMechaKoo
 0009:80584C7F       aExplosion1
 0009:80584C8A       aExplosion2
 0009:80584C95       aExplosioneye1
 0009:80584CA3       aExplosioneye2
 0009:80584CB1       aSeOjMKoopaEyeB
 0009:80584CC9       aExplosion_9
 0009:80584CD3       aSeBmMechaKoopa_0
 0009:80584CF3       aSeBmLvMechaKoo_0
 0009:80584D13       aSeBmMechaKoopa_1
 0009:80584E30       aBody_214
 0009:80584EC8       aBody_38
 0009:80584F68       aBody_215
 0009:80584FE8       aMeteocontainer
 0009:80584FF7       aBody_216
 0009:80584FFC       aSeOjMtoContain
 0009:80585016       aSeSyReadRiddle_11
 0009:805850C8       aBody_217
 0009:805850CD       aLavacolumnattr
 0009:805850E3       aLavacolumnattr_0
 0009:805850FC       aSeOjCannonShel
 0009:80585115       aMeteorstrikeen
 0009:8058512D       aMeteorcannon
 0009:8058513A       aMeteorstrike_1
 0009:80585160       aMeteorcannonbr
 0009:8058518D       aMeteorstrikebr_0
 0009:8058519F       aLavacolumn_0
 0009:805851AA       aSeOjMeteorFall
 0009:805851BC       aSeOjLvMeteorEn
 0009:805851D4       aSeOjMeteorFall_0
 0009:805851EC       aSeOjMeteorBrea
 0009:805851FF       aBreak_38
 0009:805852BB       aMeteorstrike_2
 0009:80585373       aMini
 0009:80585378       aMinikoopagalax
 0009:80585388       aMiniaturegalax_0
 0009:8058539E       aMiniaturegalax_1
 0009:805853B4       aUnknown_0
 0009:805853BC       aEyelight_2
 0009:805853C5       aMiniaturegalax_2
 0009:805853DC       aMinihatenagala
 0009:805853ED       aKoopabattlevs
 0009:805853FB       aMiniaturegalax_3
 0009:80585417       aMiniaturegalax_4
 0009:80585431       aGalaxynameplat_0
 0009:80585474       aStarnumber1
 0009:80585480       aStarnumber01
 0009:8058548D       aStarnumber10
 0009:8058549A       aDisappear_10
 0009:805854A4       aAppear_45
 0009:805854AB       aMeAstroDomeHit_9
 0009:805854C5       aMeAstroDomeHit_10
 0009:805854DF       aMeAstroDomeHit_11
 0009:805854F9       aMeAstroDomeHit_12
 0009:80585513       aMeAstroDomeHit_13
 0009:8058552D       aMeAstroDomeHit_14
 0009:80585549       aMeAstroDomeHit_15
 0009:80585565       aMeAstroDomeHit_16
 0009:80585581       aMeAstroDomeHit_17
 0009:8058559D       aMeAstroDomeHit_18
 0009:805855B9       aSelect_0
 0009:805855C0       aMiniaturegalax_5
 0009:805855DB       aSeSyNewGalaxyO
 0009:805855F6       aSeSyLvNewGalax
 0009:80585612       aSeSyNewGalaxyO_0
 0009:80585628       aMiniaturegalax_6
 0009:8058563F       aBgmKoopaAppear
 0009:80585650       aMbgmAstroDome2
 0009:80585662       aSeSyKoopaLaugh
 0009:80585826       aPoweruphopper
 0009:80585834       aPowerupbee
 0009:8058583F       aPowerupteresa
 0009:8058584D       aPowerupice
 0009:80585858       aPowerupfire
 0009:80585864       aPowerupfoo
 0009:80585890       aMorphitemneoho
 0009:805858A3       aHopper_0
 0009:805858AA       aHopperluigi
 0009:805858B6       aHoppermario
 0009:805858C2       aMorphitemneobe
 0009:805858D2       aBeemariowing
 0009:805858DF       aBeeluigi
 0009:805858E8       aBeemario
 0009:805858F1       aMorphitemneote
 0009:80585904       aTeresaluigi
 0009:80585910       aTeresamario
 0009:8058591C       aMorphitemneoic
 0009:8058592C       aIcemariohandl
 0009:8058593A       aIcemariohandr
 0009:80585948       aIceluigi
 0009:80585951       aIcemario
 0009:8058595A       aBenefititeminv
 0009:80585970       aInvinciblemari
 0009:80585985       aInvinciblemari_0
 0009:8058599A       aInvincibleluig
 0009:805859AA       aInvinciblemari_1
 0009:805859BA       aItembubble
 0009:805859C5       aCrystalbox
 0009:805859D0       aCrystalboxbrea
 0009:805859E0       aBody_39
 0009:80585A12       aMove_31
 0009:80585A17       aMorphitemobj
 0009:80585A47       aAppeariceflowe
 0009:80585A57       aSeOjMorphFlowe
 0009:80585A71       aAppearfireflow
 0009:80585A82       aAppearhopper
 0009:80585A8F       aSeOjMorphItemA
 0009:80585AA7       aAppearfoo
 0009:80585AB1       aAppear_46
 0009:80585ABD       aBreak_39
 0009:80585AC3       aSeOjCrystalCag_3
 0009:80585ADE       aSeOjItemBubble_0
 0009:80585AF6       aSeSyPowerUp2_0
 0009:80585B07       aSeSyMorph
 0009:80585B13       aSeSyPowerUp
 0009:80585B22       aSeOjMorphItemI
 0009:80585B3B       aItemrevival
 0009:80585B47       aSeOjMorphItemR
 0009:80585B60       aGlowhopper
 0009:80585B6B       aGlowbee
 0009:80585B73       aGlowteresa
 0009:80585B7E       aGlowice
 0009:80585B86       aGlowfire
 0009:80585B8F       aGlowfoo
 0009:80585B97       aAppearteresa
 0009:80585BA4       aAppearbee
 0009:80585C9D       aNeedleplant
 0009:80585CA9       aShake_2
 0009:80585CAF       aSeOjLeavesSwin_0
 0009:80585CC2       aBreak_40
 0009:80585CC8       aSeOjNeedlePlan
 0009:80585CE1       aSeOjStarPieceB_50
 0009:80585DA8       aNrmTxt
 0009:80585DB1       aNswap
 0009:80585DB8       aBti
 0009:80585DBD       aOrmal
 0009:80585DC3       aZormal
 0009:80585DCA       aNormal_23
 0009:80585DD4       jpt_80204918
 0009:80585DF4       aMlightinghighl
 0009:80585E07       aMlightinglowle
 0009:80585E19       aMlightamode
 0009:80585E25       aMlightbmode
 0009:80585E31       aMusemodellight
 0009:80585E43       aMusemodeltevre
 0009:80585E53       aMhardlightcolo
 0009:80585E67       aMhardlightalph
 0009:80585E7B       aMbacklightmode
 0009:80585E8A       aMgradtexmode
 0009:80585E97       aMambcolor
 0009:80585EA1       aMmatcolor
 0009:80585EAB       aMambalpha
 0009:80585EB5       aMmatalpha
 0009:80585EBF       aMtevcolor0
 0009:80585ECA       aMtevcolor1
 0009:80585F68       aNormalmaptesto
 0009:80586008       aNote
 0009:8058600D       aBody_218
 0009:80586012       aVanish_6
 0009:80586019       aSeOjMusicalNot
 0009:80586110       aNote_0
 0009:80586115       aNotefairy
 0009:80586124       jpt_80206D1C
 0009:80586144       aSeSyReadRiddle_2
 0009:80586158       aBlur
 0009:8058615D       aSeOjLvFlowerFa
 0009:8058617D       aSeSyNoSoundFan
 0009:80586194       aSeRsLvNoteTime
 0009:805861AD       aSeRsLvNoteTime_0
 0009:805861C8       aSeRsLvNoteTime_1
 0009:805861E1       aSeSyTotalCompl_1
 0009:80586300       aOceanfloaterch
 0009:80586313       aRise_0
 0009:80586318       aOceanfloaterty
 0009:80586339       aSeOjHugeFloate
 0009:80586354       aRisebubble
 0009:8058635F       aSeOjLvHugeFloa
 0009:8058637A       aSeOjHugeFloate_0
 0009:80586395       aSeSyReadRiddle_12
 0009:80586464       aOceansmallturt
 0009:80586475       aBody_40
 0009:8058647A       aSeOjLvOSmlTurt
 0009:80586495       aSeOjOSmlTurtle
 0009:805864B1       aSeOjLvOSmlTurt_0
 0009:805864CD       aSeOjOSmlTurtle_0
 0009:805864E9       aSeOjLvOSmlTurt_1
 0009:80586504       aSeOjOSmlTurtle_1
 0009:8058651E       aRipple_1
 0009:80586610       aOceanpierfloat
 0009:80586622       aOceanhexagonfl_0
 0009:80586643       aRipple_5
 0009:8058664A       aSeOjPierFloate
 0009:805866F8       aPalmisland
 0009:80586703       aBody_219
 0009:80586708       aRipple_6
 0009:8058670F       aSeOjPalmIsland
 0009:805867C0       aBefore
 0009:805867C7       aAfter
 0009:805868A0       aRipple
 0009:805868A7       aSeOjBoxFloater
 0009:805868BF       aPhantomshipbox_2
 0009:805868D6       aPhantomshipbox_3
 0009:805868ED       aPhantomshipbox_4
 0009:80586904       aSeOjBoxFloater_0
 0009:805869E0       aNutshipfleetbr
 0009:805869F3       aBody_41
 0009:805869F8       aMove_7
 0009:805869FD       aMove_8
 0009:80586A02       aMovea
 0009:80586A08       aSeSyReadRiddle_3
 0009:80586A1C       aSeOjLvNutShipB
 0009:80586A38       aSeOjLvFallBrid
 0009:80586A52       aSeOjNutShipBri
 0009:80586A6B       aSeOjFallBridge
 0009:80586A82       aSeOjNutShipBri_0
 0009:80586A9B       aSeOjPtmShipBri
 0009:80586AB6       aMoveb
 0009:80586B88       aPhantomshiphan
 0009:80586B9A       aSeOjLvPShipHan
 0009:80586C48       aBody_42
 0009:80586C4D       aSeOjStarPieceB_5
 0009:80586C64       aSeSyCandleComb
 0009:80586C79       aSeSyCandleComb_0
 0009:80586C8E       aSeSyCandleComb_1
 0009:80586CA3       aSeSyCandleComb_2
 0009:80586CB8       aSeSyCandleComb_3
 0009:80586CCD       aPhantombonfire
 0009:80586CDC       aSeOjLvBonfireB
 0009:80586CF2       aSeOjLvPhantomT_0
 0009:80586D0E       aExtinguish_0
 0009:80586D19       aSeOjPhantomToa_0
 0009:80586E00       aPicket
 0009:80586E07       aSecond_0
 0009:80586E0E       aFirst_0
 0009:80586E14       aSeOjPicketSwit
 0009:80586E2D       aSeOjPicketSwit_0
 0009:80586EF0       aFlowergroup
 0009:80586EFC       aFlowerbluegrou
 0009:80586F0C       aBush
 0009:80586F11       aHintshakeleaf
 0009:80586F1F       aFlower
 0009:80586F26       aFlowerblue
 0009:80586F38       aCutbush
 0009:80586F47       aWait_114
 0009:80586F4C       aHintshake
 0009:80586F56       aShake_3
 0009:80586F5C       aSeOjLeavesSwin_1
 0009:80586F6F       aSeOjStarPieceB_51
 0009:805870D8       aBody_220
 0009:805870DD       aSeOjStarPieceB_52
 0009:805870F4       aSeOjPomponPlan
 0009:8058710F       aDpdhit_0
 0009:80587116       aSeOjPomponPlan_0
 0009:805871E9       aGrandstargetko
 0009:805871FE       aPowerstar_0
 0009:80587208       aGrandstarempty
 0009:80587217       aFoomat
 0009:8058721E       aRecover
 0009:80587226       aGrandstar_0
 0009:80587230       aBody_43
 0009:80587235       aGrandstarget
 0009:80587242       aPowerstarget
 0009:8058724F       aDemokoopagrand
 0009:80587265       aDemokoopagrand_0
 0009:80587298       aShadow_28
 0009:805872A9       aLuiginpc
 0009:805872B2       aSeSyStarGet
 0009:805872C1       aSePvBurnRun
 0009:805872D0       aSePvNeedleDama
 0009:8058734C       aBody1_3
 0009:80587352       aBody2_2
 0009:80587358       aBody3_2
 0009:8058735E       aBody4_1
 0009:80587364       aBody5_2
 0009:8058736A       aBody6_1
 0009:80587370       aLight_7
 0009:80587376       aSeOjLvPowStarE_1
 0009:80587390       aSeOjLvPowStarE_2
 0009:805873A8       aSeSyPowStarApp_0
 0009:805873BE       aSeOjPowStarMov
 0009:805873D8       aSeOjPowStarMov_0
 0009:805873F0       aBgmKoopaGrandS
 0009:80587407       aBgmKoopaGrandS_0
 0009:8058741E       aMbgmStarExist2
 0009:80587600       aBody_221
 0009:8058762C       aCannon_1
 0009:80587633       aCannon1_1
 0009:8058763B       aShotstart
 0009:80587675       aSwitchoff
 0009:8058767F       aSwitchon
 0009:80587688       aShortshot_0
 0009:80587692       aShot_5
 0009:80587697       aSeOjWPressHead
 0009:80587870       aSeSyGetPrizeRi
 0009:80587887       aSeSyGetPrizeRi_0
 0009:8058789E       aSeSyGetPrizeRi_1
 0009:805878B5       aSeSyGetPrizeRi_2
 0009:805878CC       aPrizering
 0009:805878D6       aBody_44
 0009:805878DB       aNumber
 0009:805878E2       aSeOjPrizeRingA
 0009:805878FA       aStart
 0009:80587900       aLoop
 0009:80587905       aTimeout
 0009:8058790D       aSeOjPrizeRingB
 0009:80587924       aSeOjPrizeRingD
 0009:8058793F       aSeSyGetPrizeRi_3
 0009:80587956       aSeSyTotalCompl
 0009:80587A48       aWait_115
 0009:80587A4D       aPtimerswitch
 0009:80587A5A       aBody_222
 0009:80587A5F       aMove_32
 0009:80587A64       aDelete
 0009:80587A6B       aSeOjSwitch1_0
 0009:80587B34       aPunchbox
 0009:80587B3D       aBody_45
 0009:80587B42       aSeOjStarPieceB_6
 0009:80587B59       aBreakwater
 0009:80587B64       aSeOjPunchBoxBr
 0009:80587B7C       aBreak_3
 0009:80587B82       aSeOjPunchBoxBr_0
 0009:80587C5C       aPunchingkinoko
 0009:80587C78       aHead_28
 0009:80587C7D       aBall_0
 0009:80587C82       aBody_223
 0009:80587C98       aSePmWallHitBod
 0009:80587CAC       aSeOjPncKinokoB_0
 0009:80587CC3       aSeOjPncKinokoH
 0009:80587CDD       aNormal_2
 0009:80587CE4       aSeOjLvPncKinok
 0009:80587D00       aSeOjPncKinokoR
 0009:80587D18       aPress_0
 0009:80587D1E       aSeOjPncKinokoC
 0009:80587D35       aRevival_0
 0009:80587D3D       aSeOjPncKinokoR_0
 0009:80587F00       aRollgravitya
 0009:80587F0D       aRollgravityare
 0009:80587F21       aRollgravityb
 0009:80587F2E       aRollgravitybre
 0009:80588068       aPlanet_0
 0009:80588081       aPlaneta
 0009:805880A4       aSeOjQBoxLightO
 0009:805880B9       aSeOjQBoxLightO_0
 0009:805881CC       aQuestioncoin
 0009:805881D9       aBinder
 0009:805881E0       aAppear_6
 0009:805881E7       aLight_1
 0009:805881ED       aSeSyQuestionCo
 0009:80588201       aQuestioncoinju
 0009:80588217       aSePvJumpJoy
 0009:80588226       aQuestioncoinju_0
 0009:80588318       aBody_46
 0009:8058831D       aRailblockbig
 0009:8058832A       aTsukidashikunb
 0009:8058833B       aSeOjLvTsukidas
 0009:80588354       aSeOjTsukidashi
 0009:8058836A       aSeOjLvTsukidas_0
 0009:80588382       aSeOjTsukidashi_0
 0009:80588468       aMercatorcube_2
 0009:80588538       aMove_3
 0009:8058854A       aBreak_41
 0009:80588A70       aRaincloud
 0009:80588A85       aRaincloudcylin
 0009:80588A97       aDropWater
 0009:80588AA2       aBody_224
 0009:80588AA7       aSplash_0
 0009:80588AAE       aRaincloudvolum
 0009:80588ABE       aShadow_29
 0009:80588ACC       aWait_116
 0009:80588AD1       aRain
 0009:80588AD6       aFine
 0009:80588ADB       aRaincloudlow
 0009:80588AE8       aAppear_47
 0009:80588AEF       aSeOjRainCloudA
 0009:80588B07       aSeOjRainCloudT
 0009:80588B20       aDisappear_11
 0009:80588B2A       aSeOjRainCloudD
 0009:80588B45       aOnbee_0
 0009:80588B4B       aLine20
 0009:80588B52       aLine10
 0009:80588B59       aSeOjLvForestRa
 0009:80588C4D       aChangered
 0009:80588C57       aChangeblue
 0009:80588D60       aRevolvingway
 0009:80588D6D       aBody_225
 0009:80588E27       aSize_0
 0009:80588E2C       aWanwanrolling
 0009:80588E3A       aMinibreak
 0009:80588E44       aSeEmWanwanroll
 0009:80588E63       aSeOjStarPieceB_53
 0009:80588E7A       aWanwanrollingm
 0009:80588E8C       aWanwanrollingg
 0009:80588E9E       aSmoke_1
 0009:80588EA4       aLight_8
 0009:80588EAA       aBody_226
 0009:80588EAF       aRock_0
 0009:80588EC9       aRockbreak
 0009:80588EE6       aWanwanrollingb
 0009:80588F14       aWanwanrollingg_0
 0009:80588F2B       aWeak_0
 0009:80588F30       aLand_17
 0009:80588F35       aSeEvWanwanroll
 0009:80588F51       aSeEvWanwanroll_0
 0009:80588F69       aSeOjLvRockMove
 0009:80588F7C       aSeEmLvWanwanro
 0009:80588F99       aSeEmLvWanwanro_0
 0009:80588FB2       aSeOjLvRockMove_0
 0009:80588FC9       aSeEmLvWanwanro_1
 0009:80588FE9       aMinitouch
 0009:80588FF3       aTouch_13
 0009:80588FF9       aSeEmLvWanwanro_2
 0009:80589015       aSeEmWanwanroll_0
 0009:80589032       aSeOjRockBound
 0009:80589043       aSeEmWanwanroll_1
 0009:8058905A       aBreak_42
 0009:80589060       aSeOjRockBreak_0
 0009:80589071       aSeEmWanwanroll_2
 0009:80589240       aRosettachair_0
 0009:8058924D       aBody_47
 0009:8058926C       aDemorosettarea
 0009:80589318       aRosettapicture
 0009:8058932B       aBody_227
 0009:80589330       aSeSyTalkButton
 0009:8058935A       aSeSyTalkStart_0
 0009:8058936B       aWait_117
 0009:8058945C       aAppear_7
 0009:80589463       aOceanringruins_1
 0009:80589479       aOceanringruins_2
 0009:80589640       aFallsand
 0009:80589649       aSeOjLvDesertLa_1
 0009:80589663       aSeOjDesertLand_1
 0009:8058967D       aSeOjLvDesertLa_2
 0009:80589697       aSeOjDesertLand_2
 0009:805896B1       aMoveaway
 0009:805897F0       aSandstormparam
 0009:80589817       aSunakazekuntra
 0009:80589827       aAttack_60
 0009:8058982E       aTwistersan
 0009:80589839       aSunakazekun
 0009:80589845       aTwistersanslim
 0009:80589854       aBinder_4
 0009:8058985B       aStarPiece
 0009:80589866       aWait_118
 0009:8058986B       aSpin_10
 0009:80589870       aStormwait
 0009:8058987A       aSeOjLvSandstor
 0009:80589896       aSeOjLvSandstor_0
 0009:805898BC       aSeOjSandstormS
 0009:805898D7       aSeOjSandstormB
 0009:805898F0       aSeOjLvSandstor_1
 0009:8058990A       aSeOjLvSandstor_2
 0009:80589926       aSeOjLvSandstor_3
 0009:8058993E       aSeOjSandstormB_0
 0009:80589958       aSeOjSandstormB_1
 0009:80589970       aTwistersanArc
 0009:8058997F       aSunakazekunArc
 0009:8058998F       aTwistersanslim_0
 0009:805899A2       aSensorheight
 0009:805899AF       aSizeuprate
 0009:805899BA       aSensormin
 0009:805899C4       aStepstorm
 0009:805899CE       aStepadjust
 0009:805899D9       aStepfix
 0009:805899E1       aStepend
 0009:805899E9       aBindheight
 0009:805899F4       aSpiralrot
 0009:805899FE       aSpiralradius
 0009:80589A0B       aSeOjSandstormS_0
 0009:80589A25       aSeOjSandstormB_2
 0009:80589A3D       aStormin
 0009:80589A45       aSePvUpset_0
 0009:80589BB8       aSandupdowncolu
 0009:80589BD0       aSandupdownkgba
 0009:80589BE7       aSandupdowntowe_3
 0009:80589C00       aUfosandobstacl_2
 0009:80589C17       aUfosandobstacl_3
 0009:80589C2E       aUfosandobstacl_4
 0009:80589C60       aBurysmoke
 0009:80589C6A       aFallingrock
 0009:80589D7D       aMove0D
 0009:80589D85       aBody_228
 0009:80589D8A       aReturn_2
 0009:80589EA0       aScrewswitch
 0009:80589EAC       aBinder_5
 0009:80589EB3       aScrew
 0009:80589EB9       aScrewcol
 0009:80589EC2       aScrewreceiveco
 0009:80589ED2       aBody_229
 0009:80589ED7       aScrewreceive
 0009:80589EE4       aScrewswitchon
 0009:80589EF2       aSeOjLvScrewSwi
 0009:80589F0D       aSeOjScrewSwitc
 0009:80589F23       aSePvTwistStart
 0009:80589F35       aSePmSpinAttack_0
 0009:8058A000       aScrewswitchrev
 0009:8058A013       aBinder_6
 0009:8058A01A       aScrew_0
 0009:8058A020       aScrewreverseco
 0009:8058A030       aScrewswitchrev_0
 0009:8058A045       aSeOjLvScrSwitc
 0009:8058A060       aSeOjScrSwitchR
 0009:8058A076       aSeEmExplodeS_31
 0009:8058A086       aSePvTwistStart_0
 0009:8058A098       aSePmSpinAttack_1
 0009:8058A158       aSeabottomtripl
 0009:8058A171       aBody_230
 0009:8058A176       aPropellercap
 0009:8058A183       aPropeller_0
 0009:8058A18D       aPropeller1
 0009:8058A198       aPropeller2
 0009:8058A1A3       aPropeller3
 0009:8058A1AE       aSeOjLvOTripleP
 0009:8058A275       aSeOjSeesawNutS
 0009:8058A28C       aSeOjLvSeesawNu
 0009:8058A2A6       aSeOjLvSeesawNu_0
 0009:8058A2C0       aSeOjLvSeesawNu_1
 0009:8058A2DA       aSeOjSeesawNutS_0
 0009:8058A3A0       aShellfish
 0009:8058A3AA       aBody_231
 0009:8058A3AF       aCore_2
 0009:8058A3B4       aWait_119
 0009:8058A3B9       aOpen_15
 0009:8058A3BE       aSeOjShellfishO
 0009:8058A3D3       aClosesignal
 0009:8058A3DF       aSeOjLvShellfis
 0009:8058A3F9       aClose_7
 0009:8058A3FF       aSeOjShellfishC
 0009:8058A415       aClosedamage
 0009:8058A421       aOpendamage
 0009:8058A42C       aShellfishcoin
 0009:8058A43A       aShellfishyello
 0009:8058A44E       aShellfishbluec
 0009:8058A460       aShellfishkinok
 0009:8058A6AD       aShockwavegener
 0009:8058A6C0       aSpin_11
 0009:8058A6C5       aShock_2
 0009:8058A6CB       aBody_232
 0009:8058A6D0       aSpinhit_1
 0009:8058A6D8       aShockwave_0
 0009:8058A6E2       aSeOjShockWaveG
 0009:8058A7C0       aShootingstar
 0009:8058A7CD       aMessage
 0009:8058A7D5       aShootingstarap
 0009:8058A7E8       aShootingstarbl
 0009:8058A7F9       aSeOjLvStarPiec
 0009:8058A812       aSeOjStarPieceB_7
 0009:8058A829       aSeOjStarPieceN
 0009:8058A844       aShootingstarbr
 0009:8058A93D       aSeOjLvSideSpik_0
 0009:8058A959       aSeOjSideSpikeS_1
 0009:8058A972       aBody_233
 0009:8058AA38       aBreak_0
 0009:8058AA58       aTeresamansionh
 0009:8058AA6F       aKoopastatue_0
 0009:8058AA7B       aIciclerock
 0009:8058AA86       aSandupdowntowe_4
 0009:8058AAA4       aSandupdowntowe_5
 0009:8058AAC2       aConcreteblock
 0009:8058AAD0       aSnowblocka
 0009:8058AAE8       aSeSyReadRiddle_4
 0009:8058AAFC       aSeOjStarPieceB_8
 0009:8058AC88       aBody_234
 0009:8058AD48       aRipple_0
 0009:8058ADEC       aTexchange_0
 0009:8058AE03       aKoopashipseesa
 0009:8058AE17       aSeOjLvKoopaShi
 0009:8058AE32       aIcevolcanobala
 0009:8058AE49       aSeOjLvVolBalSt
 0009:8058AE63       aIcevolcanobala_0
 0009:8058AE7A       aIcemountainsee
 0009:8058AE91       aSeOjLvIceMSees
 0009:8058AEA9       aIcemountainsee_0
 0009:8058AEC0       aSeOjLvIceMSees_0
 0009:8058AED8       aIcemountainsee_1
 0009:8058AEEF       aSeOjLvIceMSees_1
 0009:8058AF07       aIcemountainsee_2
 0009:8058AF1E       aIcemountainsee_3
 0009:8058AF37       aUfokinokounder
 0009:8058AF52       aUfokinokolandi
 0009:8058B640       aAppear_48
 0009:8058B6E8       aCircleshell
 0009:8058B6F4       aCirclestrawber
 0009:8058B705       aSmallstone
 0009:8058B710       aKind
 0009:8058B715       aBreak2
 0009:8058B71C       aBreak1
 0009:8058B723       aBreak3
 0009:8058B72A       aBreak_43
 0009:8058B730       aRange
 0009:8058B736       aSmallstonememb
 0009:8058B747       aWindloop
 0009:8058B750       aWindend
 0009:8058B758       aSeOjStrawberry
 0009:8058B76F       aSeOjSmallStone
 0009:8058B787       aSeOjStarPieceB_54
 0009:8058B890       aOpen_16
 0009:8058B895       aBody_235
 0009:8058B89A       aClose_8
 0009:8058B8A0       aSeSyReadRiddle_13
 0009:8058B978       aSeOjLvSnowDig
 0009:8058B98A       aSeOjLvSnowEras
 0009:8058BA28       aSeOjLvSnowDig_0
 0009:8058BA3A       aSeOjLvSnowEras_0
 0009:8058BAD8       aSnowman
 0009:8058BAE0       aHead_29
 0009:8058BAE5       aBody_236
 0009:8058BAEA       aHeadcol
 0009:8058BAF2       aHead_30
 0009:8058BAF7       aBodycol
 0009:8058BAFF       aBody_237
 0009:8058BB04       aMelthead
 0009:8058BB0D       aSeOjSnowManMel_0
 0009:8058BB21       aSnowmanbucketm
 0009:8058BB34       aMeltbody
 0009:8058BB3D       aDownhead
 0009:8058BB46       aDownbody
 0009:8058BC38       aBody_238
 0009:8058BCCD       aSeSyReadRiddle_14
 0009:8058BCE4       jpt_8022DB5C
 0009:8058BDE5       aExplosion_10
 0009:8058BDEF       aSeOjSpacemineE
 0009:8058BE09       aAppear_49
 0009:8058BE10       aSeOjLvSpacemin
 0009:8058BE2A       aSeOjSpacemineA
 0009:8058BF05       aWait_120
 0009:8058BF0A       aOnmario
 0009:8058BF12       aSeOjSpaceShipS
 0009:8058BF2B       aSeOjLvSpaceShi
 0009:8058BF47       aBreak_44
 0009:8058BF4D       aSeOjSpaceShipS_0
 0009:8058BF69       aSeOjSpaceShipS_1
 0009:8058BF82       aAppear_50
 0009:8058BF89       aSeOjSpaceShipS_2
 0009:8058C078       aBody_239
 0009:8058C118       aCoin_5
 0009:8058C11D       aBody_240
 0009:8058C127       aSpacecocoon
 0009:8058C133       aStick
 0009:8058C1E8       aSpidermapblock
 0009:8058C1F7       aBody_241
 0009:8058C1FC       aSeOjRockBreak_1
 0009:8058C20D       aBreak_45
 0009:8058C290       aSpiderthreadAr
 0009:8058C2A1       aSpiderthreadBt
 0009:8058C2B2       aIndirectBti_0
 0009:8058C338       aSeOjLvSpiderTh
 0009:8058C358       aSpindriver_0
 0009:8058C363       aBody_242
 0009:8058C368       aSpindrivershad
 0009:8058C37E       aSePmSpinAttack_2
 0009:8058C390       aWater_4
 0009:8058C396       aSePmSpinDrvInW
 0009:8058C3B0       aWait_121
 0009:8058C3B5       aSeSySpinDriver
 0009:8058C3CE       aSeOjSpinDrvApp
 0009:8058C3E4       aAppear_51
 0009:8058C3EB       aSeOjLvSpinDrvS
 0009:8058C403       aSpindriverligh
 0009:8058C413       aCsSpinBind
 0009:8058C420       aSpindriverwait_0
 0009:8058C42F       aSpindrivercapt
 0009:8058C441       aActive_4
 0009:8058C448       aSeOjLvSpinDrvC_0
 0009:8058C462       aSpindriverstar
 0009:8058C472       aSpin_12
 0009:8058C477       aSpindrivershoo
 0009:8058C487       aCsSpinDriveSho
 0009:8058C49B       aSeSyCsSpinDrvS
 0009:8058C4B3       aMeMagic_0
 0009:8058C4BC       aSeSySSpinDrvMe
 0009:8058C4D4       aSeOjSpinDrvJum
 0009:8058C4E8       aSePvJumpJoy_6
 0009:8058C4F7       aSePmSpinDivInW
 0009:8058C511       aSpaceflyshorts
 0009:8058C524       aSpindriverflys
 0009:8058C537       aSpaceflyshort
 0009:8058C545       aSpindriverflyl
 0009:8058C557       aSpaceflyend_0
 0009:8058C563       aSpindriverflye
 0009:8058C574       aSePmLvSpinDrvF_2
 0009:8058C58A       aFall_12
 0009:8058C58F       aSpindriverfall
 0009:8058C59E       aSpaceflystart_1
 0009:8058C785       aSpindriverpath_0
 0009:8058C798       aNormalcolorBti
 0009:8058C7A8       aGreenBti
 0009:8058C7B2       aPinkBti
 0009:8058C7BB       aMaskBti_0
 0009:8058C890       aSpinleverswitc
 0009:8058C8A0       aSpin_13
 0009:8058C8A5       aSpin_14
 0009:8058C8AA       aBody_243
 0009:8058C8AF       aWait_122
 0009:8058C8B4       aSeOjSpinLeverS
 0009:8058C8CE       aSeOjSpinLeverS_0
 0009:8058C8E6       aSeOjSpinLeverS_1
 0009:8058C8FF       aSeOjSpinLeverS_2
 0009:8058C9C0       aIcebox
 0009:8058C9C7       aSpinningbox
 0009:8058C9D3       aBody_244
 0009:8058C9E7       aSeOjSpinBoxBre
 0009:8058C9FC       aSeOjStarPieceB_55
 0009:8058CA13       aBreak_46
 0009:8058CA19       aSeOjLvSpinBoxS
 0009:8058CA31       aSeOjSpinBoxBou
 0009:8058CA46       aBlur_3
 0009:8058CA4B       aSeOjSpinBoxSpi
 0009:8058CA5F       aTouch_14
 0009:8058CB30       aBody_245
 0009:8058CB35       aWait_123
 0009:8058CB45       aSeOjLvSprJetWa
 0009:8058CB61       aSeOjSprJetWate
 0009:8058CB7C       aSeOjLvSprJetWa_0
 0009:8058CC4C       aBody_48
 0009:8058CC51       aSeOjLvSprFloat
 0009:8058CC6B       aSeOjSprFloater
 0009:8058CC86       aSeOjLvSprFloat_0
 0009:8058CCA1       aSeOjSprFloater_0
 0009:8058CCBC       aSeOjSprFloater_1
 0009:8058CCD5       aSeOjSprFloater_2
 0009:8058CCED       aRipple_2
 0009:8058CDC0       aLavahomevolcan
 0009:8058CDD9       aLavarotateplan_0
 0009:8058CDF3       aOceanringruins
 0009:8058CE06       aOceanringruins_3
 0009:8058CE1C       aOceanringruins_4
 0009:8058CE34       aOceanrotatebri
 0009:8058CE46       aShutterdoora
 0009:8058CE53       aShutterdoord
 0009:8058CE60       aOceanswingboar
 0009:8058CE70       aRotatenutstep
 0009:8058CE7E       aOnimasuplanetr
 0009:8058CE9A       aGhostshipcavem
 0009:8058CEB3       aGhostshipcavem_0
 0009:8058CECC       aWaterroadcaves
 0009:8058CEDF       aTeresaroomdoor
 0009:8058CEEE       aLavaobstaclero
 0009:8058CF04       aLavaobstaclero_0
 0009:8058CF1A       aForestobstacle
 0009:8058CF2E       aMinimechakoopa
 0009:8058CF4B       aMinimechakoopa_0
 0009:8058CF63       aRaygunplanetpa
 0009:8058CF7A       aKoopavs1partsm
 0009:8058CF91       aKoopavs1partsm_0
 0009:8058CFA8       aKoopavs1partsr
 0009:8058CFC5       aKoopavs1partsr_0
 0009:8058CFE2       aBeewallclimbpa
 0009:8058CFF5       aKoopajrsmallsh
 0009:8058D007       aIcevolcanoappe
 0009:8058D01D       aIcevolcanoclim
 0009:8058D034       aBroadbeanmoves
 0009:8058D047       aBroadbeanmoves_0
 0009:8058D05A       aHeavensdoorins_6
 0009:8058D075       aSeOjLvLavaIncr
 0009:8058D091       aSeOjLavaBrRock
 0009:8058D0A9       aSeOjLvLavaBrRo
 0009:8058D0C4       aSeOjOcnRuinMov
 0009:8058D0DE       aSeOjLvOcnRuinM
 0009:8058D0F5       aSeOjOcnRuinSto
 0009:8058D109       aSeOjOcnRuinGea
 0009:8058D122       aSeOjOcnRuinGea_0
 0009:8058D13C       aSeOjLvOcnRuinG
 0009:8058D158       aSeOjORotateBri
 0009:8058D171       aSeOjLvORotateB
 0009:8058D18D       aSeOjORotateBri_0
 0009:8058D1A7       aSeOjLvShutterD
 0009:8058D1C2       aSeOjShutterDoo
 0009:8058D1DA       aSeOjOSwgBoardM
 0009:8058D1F4       aSeOjLvOSwgBoar
 0009:8058D20E       aSeOjLvRotateNu
 0009:8058D227       aOceanfloaterto
 0009:8058D244       aSeOjOTowerRota
 0009:8058D25F       aSeOjLvOTowerRo
 0009:8058D27A       aOceanfloaterto_0
 0009:8058D297       aOceanfloaterto_1
 0009:8058D2B4       aOceanfloaterto_2
 0009:8058D2D1       aOceanappearbri
 0009:8058D2E3       aSeOjOAppearBrd
 0009:8058D2FE       aOnimasuplanetr_0
 0009:8058D318       aSeOjLvStoneRot
 0009:8058D334       aOnimasuplanetr_1
 0009:8058D34E       aSeOjStoneFloor
 0009:8058D366       aSeOjLvStoneFlo
 0009:8058D380       aSeOjStoneFloor_0
 0009:8058D396       aSeOjPtmGroundS
 0009:8058D3AD       aSeOjLvPtmGroun
 0009:8058D3C6       aSeOjPtmGroundS_0
 0009:8058D3DC       aSeOjWRdCaveSte
 0009:8058D3F4       aSeOjLvWRdCaveS
 0009:8058D40F       aSeOjWRdCaveSte_0
 0009:8058D427       aLavabreakcolum
 0009:8058D437       aSeOjLavaColumn
 0009:8058D451       aSeOjLvLavaColu
 0009:8058D46B       aLavabreakrocka
 0009:8058D47A       aSeOjLavaBrRock_0
 0009:8058D492       aSeOjLvLavaBrRo_0
 0009:8058D4AD       aLavabreakrockb
 0009:8058D4BC       aSeOjLavaBrRock_1
 0009:8058D4D4       aSeOjLvLavaBrRo_1
 0009:8058D4EF       aLavabreakrockc
 0009:8058D4FE       aLavabreakrockd
 0009:8058D50D       aLavafalldownco
 0009:8058D521       aSeOjLavaColumn_0
 0009:8058D53A       aLavafalldownco_0
 0009:8058D54E       aSeOjLavaColumn_1
 0009:8058D567       aOceanhometopro
 0009:8058D578       aWaterwheelgear
 0009:8058D587       aSeOjLvWWheelGe
 0009:8058D5A2       aSeOjTeresaRoom
 0009:8058D5BE       aWaterpowerstre
 0009:8058D5CF       aSeOjWPowerStre
 0009:8058D5E7       aSeOjLvWPowerSt
 0009:8058D602       aSeOjLavaObRock
 0009:8058D61A       aSeOjLvLavaObRo
 0009:8058D635       aSeOjLavaObRock_0
 0009:8058D64F       aSeOjLavaObRock_1
 0009:8058D667       aSeOjLvLavaObRo_0
 0009:8058D682       aSeOjLavaObRock_2
 0009:8058D69C       aLavaobstaclero_1
 0009:8058D6B2       aSeOjLvLavaObRo_1
 0009:8058D6CD       aSeOjLavaObRock_3
 0009:8058D6E7       aUfokinoko
 0009:8058D6F1       aSeOjLvUfoKinok
 0009:8058D70C       aPhantomshippro_1
 0009:8058D726       aSeOjLvPShipPro
 0009:8058D742       aPhantomshippro_2
 0009:8058D75A       aSeOjLvPShipPro_0
 0009:8058D776       aForestappearst
 0009:8058D788       aSeOjForestStep
 0009:8058D7A1       aSeOjForestObsW
 0009:8058D7BA       aSeOjLvForestOb
 0009:8058D7D6       aSeOjForestObsW_0
 0009:8058D7F1       aRgtowerpressgr
 0009:8058D805       aSeOjStoneFloor_1
 0009:8058D81F       aSeOjLvStoneFlo_0
 0009:8058D83B       aSeOjStoneFloor_2
 0009:8058D853       aTeresamansione
 0009:8058D86D       aSeOjPRoomDoorL
 0009:8058D887       aBattleshipmove
 0009:8058D89C       aSeOjLvMetalRot
 0009:8058D8B8       aReversegravity_0
 0009:8058D8D7       aSeOjMetalFloor
 0009:8058D8F1       aSeOjLvMetalFlo
 0009:8058D90D       aSeOjMetalFloor_0
 0009:8058D926       aReversegravity_1
 0009:8058D945       aSeOjMetalFloor_1
 0009:8058D95F       aSeOjLvMetalFlo_0
 0009:8058D97B       aSeOjMetalFloor_2
 0009:8058D994       aShutterdoorb
 0009:8058D9A1       aTeresamansionh_0
 0009:8058D9B8       aSeOjStrangeroc
 0009:8058D9D2       aKoopastatue_1
 0009:8058D9DE       aTeresaracepart
 0009:8058D9EF       aSeOjLvTrRaceRo
 0009:8058DA08       aTeresaracepart_0
 0009:8058DA19       aSeOjTrRacePart
 0009:8058DA33       aSeOjLvBeeWallM
 0009:8058DA4A       aSeOjBeeWallSto
 0009:8058DA5E       aShutterdoorc
 0009:8058DA6B       aSeOjFenceShutt
 0009:8058DA85       aSeOjLvFenceShu
 0009:8058DAA1       aSeOjFenceShutt_0
 0009:8058DABA       aSeOjFenceShutt_1
 0009:8058DAD3       aSeOjLvFenceShu_0
 0009:8058DAEF       aSeOjFenceShutt_2
 0009:8058DB08       aIciclerock_0
 0009:8058DB13       aQuestionboxmov
 0009:8058DB28       aSeOjLvQBoxRota
 0009:8058DB3E       aQuestionboxmov_0
 0009:8058DB53       aSeOjLvQBoxRail
 0009:8058DB6C       aQuestionboxmov_1
 0009:8058DB81       aSeOjLvQBoxRail_0
 0009:8058DB98       aSeOjQBoxRailUd
 0009:8058DBB1       aSeOjKoopaFLift
 0009:8058DBC7       aSeOjLvKoopaFLi
 0009:8058DBE0       aSeOjKoopaFLift_0
 0009:8058DBF6       aSeOjKoopaFRLif
 0009:8058DC0E       aSeOjLvKoopaFRL
 0009:8058DC29       aSeOjKoopaFRLif_0
 0009:8058DC41       aSidespikemoves
 0009:8058DC54       aSeOjSideSpikeS
 0009:8058DC6D       aSeOjLvSideSpik
 0009:8058DC89       aSeOjSideSpikeS_0
 0009:8058DCA2       aPhantomtowermo
 0009:8058DCB8       aSeOjVolAppearS
 0009:8058DCD1       aSeOjLvVolAppea
 0009:8058DCED       aSeOjVolAppearS_0
 0009:8058DD06       aSeOjVolClimbWa
 0009:8058DD1E       aSeOjLvVolClimb
 0009:8058DD39       aSeOjVolClimbWa_0
 0009:8058DD51       aIceupdownshutt
 0009:8058DD67       aSeOjMtlShutter
 0009:8058DD7E       aSeOjLvMtlShutt
 0009:8058DD98       aSeOjMtlShutter_0
 0009:8058DDAF       aIcevolcanomove
 0009:8058DDC3       aSeOjLvVolMoveS
 0009:8058DDDF       aHopperbeltconv
 0009:8058DDFE       aSeOjLvHopperCo
 0009:8058DE1A       aHopperbeltconv_0
 0009:8058DE37       aMechakoopapart
 0009:8058DE52       aSeOjLvMKoopaCa
 0009:8058DE6E       aRaygunplanetpa_0
 0009:8058DE84       aSeOjLvRaygunGe
 0009:8058DE9D       aSeOjLvRaygunSc
 0009:8058DEB7       aSeOjRaygunScre
 0009:8058DECF       aSandstreamhigh_0
 0009:8058DEEC       aMechakoopapart_0
 0009:8058DF03       aSeOjLvMKoopaCa_0
 0009:8058DF1F       aMinimechakoopa_1
 0009:8058DF37       aSeOjLvMmKoopaG
 0009:8058DF52       aSeOjMmKoopaCag
 0009:8058DF6C       aSeOjLvMmKoopaC
 0009:8058DF87       aSeOjMmKoopaCag_0
 0009:8058DFA0       aSeOjMmKoopaSte
 0009:8058DFBA       aSeOjLvMmKoopaS
 0009:8058DFD6       aSeOjMmKoopaSte_0
 0009:8058DFEF       aAsteroidblockr
 0009:8058E008       aSeOjLvAstBlock
 0009:8058E022       aSandupdowntowe_6
 0009:8058E040       aSeOjWoodWallBr
 0009:8058E056       aSandupdowntowe_7
 0009:8058E074       aHoledeathsandm
 0009:8058E08B       aSeOjSandMoveSt
 0009:8058E0A3       aSeOjLvSandMove
 0009:8058E0BE       aSeOjSandMoveSt_0
 0009:8058E0D6       aCannonfortress
 0009:8058E0ED       aSeOjCnfortMove
 0009:8058E106       aSeOjLvCnfortMo
 0009:8058E122       aSeOjCnfortMove_0
 0009:8058E13B       aMechakoopapart_1
 0009:8058E151       aSeOjMKoopaBrea
 0009:8058E16C       aSeOjLvMKoopaBr
 0009:8058E187       aSeOjMKoopaBrea_0
 0009:8058E1A2       aChoconveyormov
 0009:8058E1B8       aSeOjLvChoconve
 0009:8058E1D2       aMechakoopapart_2
 0009:8058E1E8       aSeOjLvMKoopaCo
 0009:8058E204       aMechakoopapart_3
 0009:8058E21D       aSeOjMKoopaMvSt
 0009:8058E236       aSeOjLvMKoopaMv
 0009:8058E252       aSeOjMKoopaMvSt_0
 0009:8058E26B       aChoconveyorpla_1
 0009:8058E27E       aSeOjLvChoConve
 0009:8058E29A       aSeabottombigdo_2
 0009:8058E2AC       aSeOjSeabtmBDoo
 0009:8058E2C6       aSeOjLvSeabtmBD
 0009:8058E2E2       aSeOjSeabtmBDoo_0
 0009:8058E2FB       aSeabottombigdo_3
 0009:8058E30D       aSeabottombigdo_4
 0009:8058E31F       aSeOjSeabtmDoor
 0009:8058E339       aSeOjLvSeabtmDo
 0009:8058E355       aSeOjSeabtmDoor_0
 0009:8058E36E       aWaterbazookato
 0009:8058E389       aSeOjLvWBzkTwSt
 0009:8058E3A5       aSeOjWBzkTwStep
 0009:8058E3BE       aWaterbazookato_0
 0009:8058E3D9       aSeOjWBzkTwStep_0
 0009:8058E3F2       aSeOjLvWBzkTwSt_0
 0009:8058E40E       aSeOjWBzkTwStep_1
 0009:8058E427       aWaterbazookato_1
 0009:8058E442       aSeOjWBzkTwStep_2
 0009:8058E45B       aSeOjLvWBzkTwSt_1
 0009:8058E477       aSeOjWBzkTwStep_3
 0009:8058E490       aSeOjKoopaJrSSh
 0009:8058E4A9       aSeOjLvKoopaJrS
 0009:8058E4C5       aSeOjKoopaJrSSh_0
 0009:8058E4DE       aHeavensdoorins_7
 0009:8058E4FC       aSeOjLvHdInside
 0009:8058E517       aHeavensdoorins_8
 0009:8058E535       aHeavensdoorins_9
 0009:8058E553       aHeavensdoormid
 0009:8058E571       aSeOjLvHdMidRot
 0009:8058E58B       aHeavensdoormid_0
 0009:8058E5A9       aSeOjLvHdMidRot_0
 0009:8058E5C3       aSeOjHdInsideCa
 0009:8058E5DE       aHeavensdoorins_10
 0009:8058E5FC       aSeOjHdInsideSu
 0009:8058E614       aHeavensdoorapp_2
 0009:8058E62B       aSeOjHdStepAppe
 0009:8058E640       aReversegravity_2
 0009:8058E65F       aReversegravity_3
 0009:8058E67E       aBattleshipmove_0
 0009:8058E693       aSeOjBsMovePart
 0009:8058E6AC       aSeOjLvBsMovePa
 0009:8058E6C8       aSeOjBsMovePart_0
 0009:8058E6E1       aIcewaterupdown
 0009:8058E6F5       aSeAtLvIceWater
 0009:8058E710       aLavaupdownpart
 0009:8058E720       aSeAtLvLavaUpDo
 0009:8058E736       aKoopavs2partss_1
 0009:8058E752       aSeOjKp2StartSt
 0009:8058E76A       aSeOjLvKp2Start
 0009:8058E785       aSeOjKp2StartSt_0
 0009:8058E79D       aKoopavs2partss_2
 0009:8058E7B9       aKoopavs2partss_3
 0009:8058E7D5       aKoopavs2partsr
 0009:8058E7EE       aSeOjLvKp2RollS
 0009:8058E808       aKoopavs2partss_4
 0009:8058E825       aSeOjKp2SSqrSte
 0009:8058E83D       aSeOjLvKp2SSqrS
 0009:8058E858       aSeOjKp2SSqrSte_0
 0009:8058E870       aKoopavs2parts2
 0009:8058E88C       aSeOjKp2StartSt_1
 0009:8058E8A6       aSeOjLvKp2Start_0
 0009:8058E8C2       aSeOjKp2StartSt_2
 0009:8058E8DC       aKoopavs2parts2_0
 0009:8058E8F8       aKoopavs2parts2_1
 0009:8058E915       aKoopavs2parts2_2
 0009:8058E933       aKoopavs2parts2_3
 0009:8058E951       aKoopavs2parts2_4
 0009:8058E96E       aKoopavs2partss_5
 0009:8058E98B       aKoopavs2partss_6
 0009:8058E9A8       aKoopavs2partsj_0
 0009:8058E9C4       aSeOjKp2JntStep
 0009:8058E9DA       aSeOjLvKp2JntSt
 0009:8058E9F3       aSeOjKp2JntStep_0
 0009:8058EA09       aHeavenlybeacht
 0009:8058EA21       aHeavenlybeacht_0
 0009:8058EA39       aIcelavaislandl
 0009:8058EA57       aSeAtLvIceLavaL
 0009:8058EA73       aConcreteblock_0
 0009:8058EA81       aSeOjStrangeroc_0
 0009:8058EA9B       aWindmillpropel
 0009:8058EAAD       aSeOjLvWindmill
 0009:8058EAC9       aBiribiribegoma
 0009:8058EAE5       aHeavenlybeachu_0
 0009:8058EAFC       aSeOjHbUnderroc
 0009:8058EB15       aSeOjLvHbUnderr
 0009:8058EB31       aHeavenlybeacht_1
 0009:8058EB46       aFlagdiscplanet_3
 0009:8058EB56       aSeOjLvFlyDiskR
 0009:8058EB6F       aIcevolcanoappe_0
 0009:8058EB85       aSeOjIvStepBSta
 0009:8058EB9B       aSeOjLvIvStepBM
 0009:8058EBB3       aSeOjIvStepBEnd
 0009:8058EBC7       aShutterdoore
 0009:8058EBD4       aSnowblocka_0
 0009:8058EBDF       aSeOjSnowManMel
 0009:8058EBF3       aChallengeballr
 0009:8058EC0E       aSeOjChalRtBrid
 0009:8058EC26       aSeOjLvChalRtBr
 0009:8058EC42       aSeOjChalRtBrid_0
 0009:8058EC5A       aChallengeballm_0
 0009:8058EC73       aSeOjChalMvGndL
 0009:8058EC8A       aSeOjLvChalMvGn
 0009:8058ECA4       aSeOjChalMvGndL_0
 0009:8058ECBB       aChallengeballm_1
 0009:8058ECD4       aSeOjLvChalMvGn_0
 0009:8058ECEE       aChallengeballg
 0009:8058ED01       aSeOjLvChalGear
 0009:8058ED1B       aChallengeballa
 0009:8058ED37       aSeOjLvChalAccC
 0009:8058ED52       aAstrodecoratep_1
 0009:8058ED6A       aSeOjLvAstroDec
 0009:8058ED86       aDarkhopperrota_1
 0009:8058ED9C       aSeOjMystCircle
 0009:8058EDB7       aTrialbubblerev
 0009:8058EDD2       aSeOjLvTribblRe
 0009:8058EDED       aTrialbubblerot
 0009:8058EE04       aSeOjLvTribblRo
 0009:8058EE1D       aTrialbubblemov
 0009:8058EE32       aSeOjTribblMove
 0009:8058EE4B       aSeOjLvTribblMo
 0009:8058EE67       aSeOjTribblMove_0
 0009:8058EE80       aCubebubbleexro
 0009:8058EE98       aSeOjLvCubebblR
 0009:8058EEB4       aPowerstarkeepe
 0009:8058EEC5       aSeOjLvPowStarK
 0009:8058EEE0       aPowerstarkeepe_0
 0009:8058EEF1       aSeOjLvPowStarK_0
 0009:8058EF0C       aPowerstarkeepe_1
 0009:8058EF1D       aSeOjLvPowStarK_1
 0009:8058EF38       aKoopavs3rotate
 0009:8058EF4D       aSeOjLvKpVs3Rot
 0009:8058EF68       aDeathpromenade
 0009:8058EF87       aSeOjDpMoveStep
 0009:8058EFA0       aSeOjLvDpMoveSt
 0009:8058EFBB       aDeathpromenade_0
 0009:8058EFD7       aSeOjLvDpRotCir
 0009:8058EFF0       aDeathpromenade_1
 0009:8058F00C       aSeOjLvDpRotCir_0
 0009:8058F025       aMinimechakoopa_2
 0009:8058F03C       aSeOjLvMmKoopaF
 0009:8058F052       aClockworkhandl
 0009:8058F062       aSeOjLvClockwor
 0009:8058F07C       aSunkenship
 0009:8058F087       aSeOjSunkenShip
 0009:8058F09F       aStart_0
 0009:8058F0A5       aSeSyReadRiddle_5
 0009:8058F0B9       aStop_2
 0009:8058F0CC       aStarpiece
 0009:8058F0D6       aStarpiece1V
 0009:8058F0E3       aAttack_6
 0009:8058F0EA       aBody_49
 0009:8058F0EF       aGift
 0009:8058F0F4       aStarpieceflyin
 0009:8058F108       aStarpiecebreak
 0009:8058F118       aStarpiecebreak_0
 0009:8058F127       aSeOjStarPieceB_9
 0009:8058F140       aSeOjStarPieceB_10
 0009:8058F157       aSandcolumns
 0009:8058F163       aStarpiecelight
 0009:8058F173       aStarpiecelight_0
 0009:8058F182       aLand
 0009:8058F187       aSeOjStarPieceH_0
 0009:8058F19E       aSeOjStarPieceH_1
 0009:8058F1B3       aSeOjStarPieceF
 0009:8058F1CA       aSeOjStarPieceF_0
 0009:8058F1DF       aStarpiecegetbl
 0009:8058F1F0       aInvalidhitmark
 0009:8058F1FF       aSeOjStarPieceH_2
 0009:8058F21A       aStarpiecetouch
 0009:8058F22E       aGetable
 0009:8058F236       aSeOjStarPieceR
 0009:8058F251       aSeOjStarPieceR_0
 0009:8058F26A       aStarpiecegets
 0009:8058F278       aStarpieceget
 0009:8058F3D8       aAstrogalaxy_8
 0009:8058F412       aSeSyStarPieceG
 0009:8058F427       aCsStardustGet
 0009:8058F437       aCsFeedSpiece
 0009:8058F446       aSeSyCsFeedPiec
 0009:8058F45A       aStardust
 0009:8058F463       aCharge_2
 0009:8058F46A       aSearch_11
 0009:8058F471       aCsNoSpiece
 0009:8058F47E       aSeSyCsNoPiece
 0009:8058F490       aCsStardustChar
 0009:8058F4A3       aCsStardustShoo
 0009:8058F4B5       aSeSyCsStarPiec
 0009:8058F660       aAppear_52
 0009:8058F667       aSeOjStarPieceB_56
 0009:8058F67E       aSeOjStarPieceB_57
 0009:8058F6BC       aStarpieceflow
 0009:8058F7B0       aStarpiecemothe
 0009:8058F7D9       aBody_246
 0009:8058F7DE       aSeOjStarPieceM
 0009:8058F7F5       aSeOjStarPieceM_0
 0009:8058F80C       aSeOjLvStarPiec_0
 0009:8058F826       aSeOjStarPieceB_58
 0009:8058F904       aBody_50
 0009:8058F909       aSeOjStarPieceB_11
 0009:8058F9A8       aBody_247
 0009:8058F9AD       aSteam_1
 0009:8058F9B3       aSkullsharkgala_3
 0009:8058F9C4       aSeOjLvMarineSt
 0009:8058F9E0       aSeOjLvMarineSt_0
 0009:8058FA98       aSubmarinevolca
 0009:8058FAB4       aBody_248
 0009:8058FAB9       aBreak_47
 0009:8058FABF       aSeOjSmnVolcCol
 0009:8058FADA       aSeOjSmnVolcCol_0
 0009:8058FAF5       aSbreak_0
 0009:8058FC4C       aSuperspindrive_1
 0009:8058FC5C       aSuperspindrive_2
 0009:8058FC72       aOutside
 0009:8058FC7A       aBind_0
 0009:8058FC7F       aBody_51
 0009:8058FC8F       aSuperspindrive_5
 0009:8058FCA4       aYellow_1
 0009:8058FCAB       aGreen_3
 0009:8058FCB1       aPink
 0009:8058FCDB       aSpaceflystart_2
 0009:8058FCE9       aSpaceflyloop_1
 0009:8058FCF6       aSpaceflyend_1
 0009:8058FD02       aSuperspindrive_6
 0009:8058FD1C       aSeSySpinDriver_0
 0009:8058FD35       aSeOjSSpinDrvAp_0
 0009:8058FD4D       aNonactive
 0009:8058FD57       aAppear_53
 0009:8058FD5E       aWait_124
 0009:8058FD63       aSeOjLvSSpinDrv_0
 0009:8058FD7D       aCsSpinBind_0
 0009:8058FD8A       aSpindriverwait_1
 0009:8058FD99       aSuperspindrive_7
 0009:8058FDB0       aSeOjLvSpinDrvC_1
 0009:8058FDCA       aSePmSpinAttack_3
 0009:8058FDDC       aCsSpinDriveLon_0
 0009:8058FDEF       aSeSyCsSSpinDrv_0
 0009:8058FE09       aSeOjSSpinDrvPr
 0009:8058FE24       aWater_5
 0009:8058FE2A       aSePmSpinDrvInW_0
 0009:8058FE44       aSuperspindrive_8
 0009:8058FE59       aStart_7
 0009:8058FE5F       aSuperspindrive_9
 0009:8058FE74       aMeMagicL
 0009:8058FE7F       aSeSySSpinDrvMe_0
 0009:8058FE97       aSeOjSSpinDrvJu_0
 0009:8058FEAD       aSePvJumpJoy_7
 0009:8058FEBC       aSePmSpinDivInW_0
 0009:8058FED6       aSuperspindrive_10
 0009:8058FEEE       aSuperspindrive_11
 0009:8058FF05       aSePmLvSSpinDrv_0
 0009:8058FF1D       aSuperspindrive_12
 0009:8058FF33       aSePmSSpinDrvCo_1
 0009:8058FF4E       aSePvJumpS_1
 0009:8058FF5B       aFall_13
 0009:8058FF60       aSuperspindrive_13
 0009:8058FF74       aEndglow
 0009:805900C8       aSurprisedgalax
 0009:805900D8       aSurfinglv1gala_4
 0009:805900E9       aSurp
 0009:805900EE       aMinisurprisedg
 0009:80590102       aBody_249
 0009:805901B0       aTeresamansionl
 0009:805901C4       aTeresamansiong
 0009:805901DF       aTeresamansionl_0
 0009:805901F3       aTeresamansiong_0
 0009:8059020E       aSandriverlight
 0009:8059021E       aSandriverglari
 0009:80590235       aGravitylighta
 0009:80590243       aSlightvolume
 0009:805903A0       aSwitchbox
 0009:805903AA       aBody_250
 0009:805903AF       aSeOjSBlockBrea
 0009:805903C5       aBreakwater_0
 0009:805903D0       aSeOjSBlockBrea_0
 0009:805903E4       aBreak_48
 0009:80590488       aKoopabattlemap_6
 0009:805904A0       aAppear_54
 0009:805904A7       aSeOjKpBtlStTur
 0009:80590578       aSeOjTribblTMvw
 0009:80590591       aSeOjLvTribblTM
 0009:805905AD       aSeOjTribblTMvw_0
 0009:805906B8       aTramplestarsha
 0009:805906C9       aTramplestarArc
 0009:805906D9       aTramplestarBti
 0009:805906E9       aBody_251
 0009:805906EE       aWait_125
 0009:805906F3       aSeOjTrampoline
 0009:8059070B       aSeOjTrampoline_0
 0009:80590724       aSePvJumpJoy_8
 0009:80590733       aSeOjTrampoline_1
 0009:8059074C       aSePvJumpM_1
 0009:80590759       aJump2
 0009:80590880       aBody_252
 0009:80590900       aTreasureboxcra
 0009:80590913       aTreasureboxgol
 0009:80590923       aTreasurebox
 0009:8059092F       aBody_253
 0009:80590934       aShadow_30
 0009:8059093B       aWait_126
 0009:80590940       aLight_9
 0009:80590946       aGlow_4
 0009:8059094B       aOpen_17
 0009:80590950       aSeOjTreasureBo
 0009:8059096A       aSeOjTreasureBo_0
 0009:80590982       aShock_3
 0009:80590988       aSeOjTerasBoxGo
 0009:805909A4       aSeSyFailure1
 0009:805909B4       aEmpty
 0009:805909BA       aCoin_6
 0009:805909BF       aYellowchip_0
 0009:805909CA       aBluechip_1
 0009:805909D3       aKinokooneup_1
 0009:805909DF       aKinokolifeup_1
 0009:805909EC       aAirbubble_2
 0009:805909F6       aPowerstar_4
 0009:80590C20       aCoinflower
 0009:80590C2B       aBloom_2
 0009:80590C31       aSeOjCoinFlower
 0009:80590C49       aGlow_5
 0009:80590D1D       aBsign
 0009:80590D23       aBwait
 0009:80590D29       aFwait
 0009:80590D2F       aSign_4
 0009:80590D34       aFsign
 0009:80590D3A       aSeOjLvTsukidas_1
 0009:80590D52       aSeOjTsukidashi_1
 0009:80590D69       aSeOjLvTsukidas_2
 0009:80590D82       aSeOjTsukidashi_2
 0009:80590ED5       aClose_9
 0009:80590EDB       aBody_254
 0009:80590EE0       aOpen_18
 0009:80591108       aUfobattlestage
 0009:80591118       aSeOjUfoBtlCSta
 0009:8059112E       aUfonormalb
 0009:80591139       aSeOjLvUfoNormB
 0009:80591152       aUfobattlestage_0
 0009:80591162       aSeOjLvUfoBtlDR
 0009:8059117C       aSeOjLvUfoBtlCM
 0009:80591194       aSeOjLvUfoMove
 0009:805911A6       aSeOjUfoBtlCSto
 0009:805911BB       aSeOjUfoMoveEnd
 0009:805911CE       aBloom_3
 0009:805911D4       aSbloom_1
 0009:805911DC       aBody_255
 0009:80591398       aUfokinokolow
 0009:805913E0       aSeOjUfoKinokoM
 0009:805913F9       aSeOjLvUfoKinok_0
 0009:80591412       aSeOjUfoKinokoM_0
 0009:80591510       aValveswitch
 0009:8059151C       aBody_256
 0009:80591521       aBinder_7
 0009:80591528       aValve
 0009:8059152E       aValvecol
 0009:80591537       aValveswitchon
 0009:80591545       aValveswitchrev
 0009:8059155A       aScrewswitchon_0
 0009:80591568       aSeOjLvValveSwi
 0009:80591583       aSeOjValveSwitc
 0009:80591599       aSePvTwistStart_1
 0009:805915AB       aSePmSpinAttack_4
 0009:805916A7       aWait_127
 0009:805916AC       aWarppod
 0009:805916C7       aActive_5
 0009:805916CE       aEndglow_0
 0009:805916E8       aSeOjWarpPodPat
 0009:80591708       aSeOjWarpPodAct
 0009:8059171E       aTestcolorBti
 0009:8059172C       aTestmaskBti
 0009:805917D8       aWatchtowerrota
 0009:805917ED       aSeSyReadRiddle_15
 0009:80591801       aSeOjWatchTower
 0009:80591819       aSeOjLvWatchTow
 0009:80591844       aWatchtowerrota_0
 0009:80591915       aBody_257
 0009:8059191A       aSeOjWaterfallC
 0009:80591936       aSeSyReadRiddle_16
 0009:80591A09       aIcestepnoslip
 0009:80591A17       aStart_8
 0009:80591A1D       aWaterleakpipe
 0009:80591A2B       aBottom_0
 0009:80591A32       aSplash_1
 0009:80591A39       aSeOjLvWaterLea
 0009:80591A4D       aSeOjIceFloorFr_0
 0009:80591A64       aSeOjIceFloorMe_0
 0009:80591BB0       aCannon1_3
 0009:80591C38       aWaterbullet
 0009:80591C44       aBody_258
 0009:80591C49       aBinder_8
 0009:80591C50       aGcapturebreak_0
 0009:80591C5E       aBreak_49
 0009:80591C64       aSeOjWPressBubb
 0009:80591C7F       aShot_6
 0009:80591C84       aMove_33
 0009:80591C89       aWaterbulletwai
 0009:80591C99       aSeOjLvWPressBu
 0009:80591CB5       aSePvTwistStart_2
 0009:80591CC7       aSePmSpinAttack_5
 0009:80591CD9       aSpin2nd_0
 0009:80591CE1       aSeOjWPressBubb_0
 0009:80591CF9       aSePvCatch_2
 0009:80591D05       aTouch_15
 0009:80591D0B       aWaterbulletsta
 0009:80591DF8       aWaterwaveArc_3
 0009:80591E06       aWaterBti_2
 0009:80591E10       aWaterindirectB_2
 0009:80591E22       aSeAtLvWhirlPoo_0
 0009:80591EB0       aWoodbox
 0009:80591EB8       aBody_259
 0009:80591EDF       aWoodboxbreak
 0009:80591EEC       aSeOjStarPieceB_59
 0009:80591F03       aSeSyReadRiddle_17
 0009:80591F17       aSeOjWoodBoxBre
 0009:80591F2E       aSeOjWoodBoxBre_0
 0009:80591F43       aSeEmExplodeS_32
 0009:80591F53       aBreak_50
 0009:80591F59       aBreakwater_1
 0009:80592088       aWormeatenplane_1
 0009:80592098       aFirst
 0009:8059209E       aSecond
 0009:805920A5       aThird
 0009:805920AB       aFourth
 0009:805920B2       aBody_52
 0009:80592113       aConnectpartsC
 0009:8059212D       aWormeatenhill_0
 0009:8059213B       aAppear_55
 0009:80592228       aYellowchip_1
 0009:805922B0       aMove_4
 0009:805922B5       aMapparts
 0009:805922BE       aBody_53
 0009:8059236C       aRailpoint_0
 0009:805925A8       aLavahomefloate
 0009:805925B9       aSeOjLavaFloate
 0009:805925CF       aSeOjLvLavaFloa
 0009:805925EA       aSeOjLvLavaFloa_0
 0009:80592603       aLavahomefloate_1
 0009:80592614       aSeOjLavaFloate_0
 0009:80592630       aLavafloatingst_3
 0009:80592642       aLavafloatingst_4
 0009:80592654       aLavafloatingst_5
 0009:80592666       aLavafloatingst_6
 0009:80592678       aIcevolcanofloa
 0009:8059268B       aIcevolcanofloa_0
 0009:8059269E       aFloaterotaking_0
 0009:805926B5       aOceanpierfloat_0
 0009:805926C7       aOceanhexagonfl
 0009:805926DB       aPhantomshipbox
 0009:805926F2       aPhantomshipbox_0
 0009:80592709       aPhantomshipbox_1
 0009:80592720       aIcemountainflo
 0009:80592734       aSeOjLvIceMFloa
 0009:80592750       aSeOjLvIceMFloa_0
 0009:8059276A       aLavahomefloate_2
 0009:8059277B       aLavahomefloate_3
 0009:8059278C       aLavafloatingst_8
 0009:8059279E       aLavafloatingst_9
 0009:805927B0       aLavafloatingst_10
 0009:805927C2       aLavafloatingst_11
 0009:805927D4       aFloaterotaking_3
 0009:805927FE       aSeOjLavaFloate_1
 0009:80592948       aSmokesphere_0
 0009:80592A19       aBody_260
 0009:80592A63       aCommonpathId
 0009:80592B09       aCommonpathId_0
 0009:80593000       aAssemblyblock
 0009:8059300E       aClipfieldmappa
 0009:80593020       aFlexiblesphere
 0009:8059302F       aMercatorfixpar
 0009:80593040       aMercatorrailmo
 0009:80593056       aMercatorrotate
 0009:8059306A       aTripodbossfixp
 0009:8059307D       aTripodbossrail
 0009:80593095       aTripodbossrota
 0009:805930AB       aSimplenormalma
 0009:805930BE       aSunshademappar
 0009:805930D0       _24MovementOnOffGroupHolder::`vtbl'
 0009:805930F8       _7NameObj::`vtbl'
 0009:80593120       _14NameObjAdaptor::`vtbl'
 0009:80593148       _Q233@unnamed@NameObjCategoryList_cpp@40NameObjRealDelegator<M7NameObjFPCvPCv_v>::`vtbl'
 0009:80593160       aConnecttoscene
 0009:805931A0       aSwitchcube
 0009:805931AB       aSwitchsphere
 0009:805931B8       aSwitchcylinder
 0009:805931C7       aCubecamerabox
 0009:805931D5       aCubecameracyli
 0009:805931E8       aCubecamerasphe
 0009:805931F9       aCubecamerabowl
 0009:80593208       aEffectcylinder_1
 0009:80593217       aBindendcube_0
 0009:80593223       aDeathcube
 0009:8059322D       aDeathsphere
 0009:80593239       aDeathcylinder
 0009:80593247       aPullbackcube_1
 0009:80593254       aPullbackcylind_1
 0009:80593265       aRestartcube_1
 0009:80593271       aWarpcube_1
 0009:8059327A       aTripodbossstep_1
 0009:80593292       aChangebgmcube_0
 0009:805932A0       aBgmprohibitare_1
 0009:805932B0       aSoundemittercu_0
 0009:805932C1       aSoundemittersp_0
 0009:805932D4       aWatercube
 0009:805932DE       aWatersphere_0
 0009:805932EA       aWatercylinder
 0009:805932F8       aFallscube_1
 0009:80593302       aPlanemodecube_3
 0009:80593310       aPlanecircularm_1
 0009:80593326       aPipemodecube_1
 0009:80593333       aTowermodecylin_1
 0009:80593345       aBloomcube
 0009:8059334F       aBloomsphere
 0009:8059335B       aBloomcylinder
 0009:80593369       aSimplebloomcub
 0009:80593379       aSimplebloomsph
 0009:8059338B       aSimplebloomcyl
 0009:8059339F       aScreenblurcube
 0009:805933AE       aScreenblursphe
 0009:805933BF       aScreenblurcyli
 0009:805933D2       aDepthoffieldcu
 0009:805933E3       aDepthoffieldsp
 0009:805933F6       aDepthoffieldcy
 0009:8059340B       aClipareacenter
 0009:8059341D       aClipvolumebox_0
 0009:8059342B       aClipareabottom
 0009:8059343D       aClipareatopcon
 0009:8059344D       aClipvolumesphe_0
 0009:8059345E       aClipareabottom_0
 0009:80593471       aClipareasphere
 0009:80593480       aLightctrlcube
 0009:8059348E       aLightctrlcylin
 0009:805934A0       aPlanecollision_1
 0009:805934B3       aForbidtriangle_1
 0009:805934CA       aForbidwatersea_1
 0009:805934E0       aQuakeeffectare_1
 0009:805934F4       aHazecube_2
 0009:805934FD       aLensflarearea_1
 0009:8059350B       aCamerarepulsiv_2
 0009:80593521       aCamerarepulsiv_3
 0009:80593539       aSunlightareabo
 0009:80593549       aGlaringlightar_3
 0009:80593562       aBigbubblegoala_2
 0009:80593577       aBigbubblegoala_3
 0009:80593591       aBigbubblegoala_4
 0009:805935A9       aBigbubblecamer
 0009:805935BC       aBigbubblecamer_0
 0009:805935D4       aBigbubblecamer_1
 0009:805935EA       aBigbubbleswitc
 0009:805935FD       aBigbubbleswitc_0
 0009:80593615       aBigbubbleswitc_1
 0009:8059362B       aViewgroupctrlc_1
 0009:8059363D       aAudioeffectcub
 0009:8059364D       aAudioeffectsph
 0009:8059365F       aAudioeffectcyl
 0009:80593673       aPlayersecube
 0009:80593680       aPlayersesphere
 0009:8059368F       aPlayersecylind
 0009:805936A0       aMercatorcube_3
 0009:805936AD       aAstrochangesta_0
 0009:805936C2       aBluestarguidan_1
 0009:805936D7       aTicoseedguidan_1
 0009:805936EC       aMessageareacub
 0009:805936FC       aMessageareacyl
 0009:80593710       aSmokeeffectcol_1
 0009:80593729       aBeewallshortdi_1
 0009:80593742       aExtrawallcheck_3
 0009:80593755       aExtrawallcheck_4
 0009:8059376C       aMirrorareacube
 0009:8059377B       aSpinguidancecu_2
 0009:8059378C       aSpinguidance_0
 0009:80593799       aTamakoromovegu_2
 0009:805937B2       aBallguidance_0
 0009:805937BF       aTamakorojumpgu_2
 0009:805937D8       aHeavysteeringc_1
 0009:805937EA       aNonsleepcube_1
 0009:805937F7       aAreamovesphere_1
 0009:80593806       aDodoryuclosedc_2
 0009:8059381C       aDashchargecyli_1
 0009:8059382F       aRasterscrollcu_1
 0009:80593840       aOnimasucube_0
 0009:8059384C       aForbidjumpcube_1
 0009:8059385B       aCollisionarea_0
 0009:80593869       aAstrooverlooka_1
 0009:80593883       aCelestrialsphe_1
 0009:80593894       aDarkmattercube_2
 0009:805938A3       aDarkmattercyli_1
 0009:805938B6       aMario_8
 0009:805938BC       aMarioactor
 0009:805938C7       aCaretaker_0
 0009:805938D1       aRabbit
 0009:805938D8       aMoonrabbit_0
 0009:805938E3       aTalksyati
 0009:805938ED       aSyati_0
 0009:805938F3       aCollecttico_0
 0009:805938FF       aStraytico_1
 0009:80593909       aTrickrabbit_4
 0009:80593915       aTrickrabbitfre
 0009:80593928       aTrickrabbitfre_0
 0009:80593942       aRunawayrabbitc
 0009:80593957       aTrickrabbitgho
 0009:80593968       aKinopio_2
 0009:80593970       aKinopioastro
 0009:8059397D       aHoneybee_0
 0009:80593986       aHoneyqueen_0
 0009:80593991       aPeach_1
 0009:80593997       aPenguin_3
 0009:8059399F       aPenguincoach_0
 0009:805939AC       aPenguinmaster_0
 0009:805939BA       aPenguinracer_0
 0009:805939C7       aPenguinracerle_0
 0009:805939DA       aPenguinskater_0
 0009:805939E8       aPenguinstudent_0
 0009:805939F7       aSignboard_1
 0009:80593A01       aTico_6
 0009:80593A06       aTicocomet_0
 0009:80593A10       aTicoshop_0
 0009:80593A19       aTicostarring
 0009:80593A26       aTicoastro
 0009:80593A30       aTicobaby_1
 0009:80593A39       aDemorabbit_0
 0009:80593A44       aTicofat_0
 0009:80593A4C       aTicogalaxy
 0009:80593A57       aTicorail
 0009:80593A60       aTicoreading
 0009:80593A6C       aTicodomelectur
 0009:80593A7C       aRosetta_0
 0009:80593A84       aRosettareading_0
 0009:80593A93       aRosettapicture_0
 0009:80593AA6       aLuiginpc_1
 0009:80593AAF       aLuigievent_0
 0009:80593ABA       aTeresaracer_0
 0009:80593AC6       aNpcsupportrail
 0009:80593AD5       aGhostplayer
 0009:80593AE1       aButler_2
 0009:80593AE8       aButlermap_0
 0009:80593AF2       aButlerexplain_0
 0009:80593B00       aDemokoopajrshi
 0009:80593B10       aKoopajrship_3
 0009:80593B1C       aCreeper
 0009:80593B24       aJetturtle
 0009:80593B2E       aKoura_5
 0009:80593B34       aFluff_0
 0009:80593B3A       aFluffwind_0
 0009:80593B44       aTamakoro_0
 0009:80593B4D       aTamakorowithtu
 0009:80593B62       aGoldenturtle
 0009:80593B6F       aKourashine_2
 0009:80593B7A       aJumpbranch_0
 0009:80593B85       aPlant
 0009:80593B8B       aPole_0
 0009:80593B90       aPolenomodel_0
 0009:80593B9C       aPolesquare_0
 0009:80593BA7       aPolesquarenomo
 0009:80593BB9       aSurfray_0
 0009:80593BC1       aSwingrope
 0009:80593BCB       aSpacecocoon_1
 0009:80593BD7       aTrapeze_0
 0009:80593BDF       aTreecube_0
 0009:80593BE8       aWaterroad_0
 0009:80593BF2       aWaterwave
 0009:80593BFC       aWarppod_0
 0009:80593C04       aCoinbox
 0009:80593C0C       aPunchbox_0
 0009:80593C15       aSwitchbox_0
 0009:80593C1F       aNormalmaptesto_0
 0009:80593C30       aTakobo_0
 0009:80593C37       aKarikari
 0009:80593C40       aKaripon_0
 0009:80593C48       aKotebug_0
 0009:80593C50       aBalloonfish_0
 0009:80593C5C       aBombhei_0
 0009:80593C64       aBomb_3
 0009:80593C69       aJiraira_0
 0009:80593C71       aBombheilaunche_0
 0009:80593C81       aBomblauncher_0
 0009:80593C8E       aSpindriver_1
 0009:80593C99       aSuperspindrive_15
 0009:80593CA9       aSuperspindrive_17
 0009:80593CBE       aSuperspindrive_20
 0009:80593CD2       aKuribo_1
 0009:80593CD9       aKuribochief_0
 0009:80593CE5       aKuribomini_0
 0009:80593CF0       aKabokuri_0
 0009:80593CF9       aTakohei_0
 0009:80593D01       aOtarock_0
 0009:80593D09       aMeramera_0
 0009:80593D12       aIcemeramera_0
 0009:80593D1E       aEyebeamer_0
 0009:80593D28       aBigbirikyu
 0009:80593D33       aBirikyu
 0009:80593D3B       aHomingkiller_0
 0009:80593D48       aCocosambo
 0009:80593D52       aCocosambobody_0
 0009:80593D60       aSambohead_0
 0009:80593D6A       aBegomanbaby_0
 0009:80593D76       aBegomanspring_0
 0009:80593D84       aBegomanspringh_2
 0009:80593D96       aBegomanspike_0
 0009:80593DA3       aBegomanlaunche_0
 0009:80593DB3       aTogebegomanlau_0
 0009:80593DC7       aBegomanbabylau_0
 0009:80593DDB       aFirebubble_1
 0009:80593DE6       aBallbeamer_0
 0009:80593DF1       aJumpbeamer
 0009:80593DFC       aJumpbeamerbody_0
 0009:80593E0B       aJumpguarder_0
 0009:80593E17       aRingbeamer_0
 0009:80593E22       aPukupuku_0
 0009:80593E2B       aBombteresa_0
 0009:80593E36       aTeresa_0
 0009:80593E3D       aTeresachief_0
 0009:80593E49       aTeresawater_0
 0009:80593E55       aTorpedo_0
 0009:80593E5D       aDossun_0
 0009:80593E64       aOnimasu_0
 0009:80593E6C       aOnimasupivot
 0009:80593E79       aUnizo_0
 0009:80593E7F       aUnizoland_0
 0009:80593E89       aUnizoshoal_0
 0009:80593E94       aUnizolauncher
 0009:80593EA2       aKiraira_0
 0009:80593EAA       aKirairarail_0
 0009:80593EB6       aNokonokoland_0
 0009:80593EC3       aGesso_0
 0009:80593EC9       aPoihana_0
 0009:80593ED1       aSnakehead_0
 0009:80593EDB       aSnakeheadsmall_1
 0009:80593EEA       aJellyfish_0
 0009:80593EF4       aJellyfishelect_0
 0009:80593F06       aKanina_0
 0009:80593F0D       aKaninared_0
 0009:80593F17       aMogu_0
 0009:80593F1C       aMogucchi_0
 0009:80593F25       aMogucchirefuse
 0009:80593F3D       aHanachan
 0009:80593F46       aHanachanhead_0
 0009:80593F53       aJumpspider_0
 0009:80593F5E       aStringspider_0
 0009:80593F6B       aPackunpetit_0
 0009:80593F77       aStinkbugsmall
 0009:80593F85       aStinkbugparent
 0009:80593F94       aBasabasa
 0009:80593F9D       aBasabasaice_0
 0009:80593FA9       aMetbo_0
 0009:80593FAF       aBombbird_0
 0009:80593FB8       aMechanickoopam_0
 0009:80593FCA       aKaron_0
 0009:80593FD0       aHammerheadpack
 0009:80593FE1       aPackunflower_0
 0009:80593FEE       aDharmasambo_0
 0009:80593FFA       aSearchbeamer_0
 0009:80594007       aPetari_0
 0009:8059400E       aMagnumkiller_0
 0009:8059401B       aBossbegoman_0
 0009:80594027       aBossstinkbug_0
 0009:80594034       aDinopackun_0
 0009:8059403F       aDinopackunvs2
 0009:8059404D       aDinopackun2_0
 0009:80594059       aDodoryu_0
 0009:80594061       aKoopavs1
 0009:8059406A       aKoopa_0
 0009:80594070       aKoopavs2
 0009:80594079       aKoopavs3
 0009:80594082       aOtaking_0
 0009:8059408A       aPolta_0
 0009:80594090       aSkeletalfishbo_10
 0009:805940A1       aSkeletalfishba
 0009:805940B2       aSnakefish_0
 0009:805940BC       aSkeletalfishba_0
 0009:805940D1       aSkeletalfishbo_17
 0009:805940E6       aTombspider_0
 0009:805940F1       aBosskameck_0
 0009:805940FC       aBosskameck2
 0009:80594108       aFireballbeamka
 0009:8059411B       aKameck_0
 0009:80594122       aTurtlebeamkame
 0009:80594133       aTripodboss_4
 0009:8059413E       aTripod2boss
 0009:8059414A       aTripodbossbase
 0009:80594166       aTripodbosskill_0
 0009:80594180       aTripodbosskill_1
 0009:80594197       aTripodbossstep_2
 0009:805941AB       aTripodbosscore_2
 0009:805941BA       aTripodbosscoin
 0009:805941C9       aTripodbosskino
 0009:805941DF       aKinokooneup_2
 0009:805941EB       aTripodbossshel_1
 0009:805941FB       aTripodbossguar_1
 0009:8059420F       aTripodbossbody_1
 0009:8059421F       aTripodbossbody_2
 0009:80594234       aTripodbossleg1
 0009:80594244       aTripodbossleg1_0
 0009:80594254       aTripodbossleg1_1
 0009:80594264       aTripodbossleg2_0
 0009:80594274       aTripodbossleg2_1
 0009:80594289       aTripodbossleg3
 0009:80594299       aTripodbossleg3_0
 0009:805942A9       aTripodbossleg3_1
 0009:805942B9       aTripodbossfoot_0
 0009:805942C8       aTripodbossfoot_1
 0009:805942DC       aTripodbosslegb
 0009:805942F0       aTripodbosseyel_1
 0009:80594303       aTripodbosseyel_2
 0009:8059431B       aTripodbossgear
 0009:8059432B       aTripodbossgear_0
 0009:8059433B       aTripodbossgear_1
 0009:8059434B       aTripodbossgear_2
 0009:80594360       aTripodbossgear_3
 0009:80594375       aTripodbossgear_4
 0009:8059438A       aTripodbossgear_5
 0009:8059439D       aTripodbossuppe_0
 0009:805943B9       aTripodbossunde_0
 0009:805943D5       aTripodbossbott_0
 0009:805943F2       aSpiderattachpo
 0009:80594404       aSpiderthreadat_0
 0009:8059441C       aSpidercoin
 0009:80594427       aCoin_9
 0009:8059442C       aSpidermapblock_0
 0009:8059443B       aArrowswitch_1
 0009:80594447       aArrowswitchmul
 0009:80594458       aArrowswitchtar
 0009:8059446A       aAstrooverlooko
 0009:8059447B       aBluestarcupsul_0
 0009:80594491       aBigfan
 0009:80594498       aBigfannoleg
 0009:805944A4       aClipareadropla_0
 0009:805944B6       aRevolvingway_0
 0009:805944C3       aSoundemitter
 0009:805944D0       aJumphole_0
 0009:805944D9       aBallopener_0
 0009:805944E4       aDragonheadflow_0
 0009:805944F5       aConcreteblock_1
 0009:80594503       aSphereraildash
 0009:80594512       aSnowplowswitch
 0009:80594521       aBallrail
 0009:8059452A       aFalldownbridge
 0009:80594539       aRockcreator
 0009:80594545       aRock_1
 0009:8059454A       aMeteocontainer_0
 0009:80594559       aMagicbell
 0009:80594563       aBell_0
 0009:80594568       aFlowergroup_0
 0009:80594574       aFlower_0
 0009:8059457B       aFlowerbluegrou_0
 0009:8059458B       aFlowerblue_0
 0009:80594596       aCutbushgroup
 0009:805945A3       aCutbush_0
 0009:805945AB       aSmallstone_0
 0009:805945B6       aCircleshell_0
 0009:805945C2       aCirclestrawber_0
 0009:805945D3       aTsukidashikun
 0009:805945E1       aTsukidashikunb_0
 0009:805945F2       aTimercoinblock_0
 0009:80594601       aCoinblock_0
 0009:8059460B       aSplashcoinbloc_0
 0009:8059461B       aTimerpiecebloc_0
 0009:8059462B       aSplashpieceblo_0
 0009:8059463C       aItemblockswitc_0
 0009:8059464C       aExterminationc
 0009:80594667       aExterminationk
 0009:80594684       aExterminations
 0009:805946A2       aExterminationm
 0009:805946B8       aShootingstar_0
 0009:805946C5       aFlamegun_0
 0009:805946CE       aBenefititemone
 0009:805946DF       aBenefititemlif
 0009:805946F1       aKinokolifeup_2
 0009:805946FE       aBenefititeminv_0
 0009:80594714       aPowerupinvinci_1
 0009:80594726       aCoinspot
 0009:8059472F       aCollisionblock
 0009:80594740       aLotusleaf_0
 0009:8059474A       aPunchingkinoko_0
 0009:80594759       aDesertmovingla
 0009:8059476A       aDesertmovingla_0
 0009:80594780       aNotefairy_0
 0009:8059478A       aEarthenpipe_0
 0009:80594796       aEarthenpipeinw_0
 0009:805947A9       aElectricrail_0
 0009:805947B6       aElectricrailmo_0
 0009:805947C9       aWanwanrolling_0
 0009:805947D7       aWanwanrollingm_0
 0009:805947E9       aWanwanrollingg_1
 0009:805947FB       aBreakablecage_0
 0009:80594809       aBreakablecager_0
 0009:8059481D       aBreakablecagel_0
 0009:8059482C       aBreakablefixat_0
 0009:8059483E       aBreakabletrash_0
 0009:8059484D       aBigbubble_0
 0009:80594857       aBigbubblemovel
 0009:80594875       aBigbubblemovel_0
 0009:80594890       aBigbubblegener
 0009:805948A3       aAirbubblegener_1
 0009:805948B6       aBigobstructbub
 0009:805948D1       aGcapturetarget_1
 0009:805948E0       aAsteroida
 0009:805948EA       aAsteroidb
 0009:805948F4       aAsteroidc
 0009:805948FE       aAsteroidd
 0009:80594908       aSpacesticka
 0009:80594914       aSpacestickb
 0009:80594920       aBlackhole_0
 0009:8059492A       aBlackholecube_0
 0009:80594938       aKillergunnersi_3
 0009:8059494B       aKillergunnerdo
 0009:8059495E       aKillergunnertr
 0009:80594971       aPowerstar_7
 0009:8059497B       aGrandstar_3
 0009:80594985       aPowerstarappea_0
 0009:8059499A       aCoconut_1
 0009:805949A2       aCoconuttree_0
 0009:805949AE       aCoconuttreelea_0
 0009:805949BE       aCollapseplane
 0009:805949CC       aWoodbox_0
 0009:805949D4       aItembubble_2
 0009:805949DF       aSpinningbox_0
 0009:805949EB       aElectricball_0
 0009:805949F8       aSpacemine
 0009:80594A02       aMorphitemneoho_0
 0009:80594A15       aPoweruphopper_0
 0009:80594A23       aMorphitemneobe_0
 0009:80594A33       aPowerupbee_0
 0009:80594A3E       aMorphitemneote_0
 0009:80594A51       aPowerupteresa_0
 0009:80594A5F       aMorphitemneoic_0
 0009:80594A6F       aPowerupice_0
 0009:80594A7A       aMorphitemneofi
 0009:80594A8B       aPowerupfire_0
 0009:80594A97       aMorphitemneofo
 0009:80594AA7       aPowerupfoo_0
 0009:80594AB2       aAirbubble_3
 0009:80594ABC       aButterfly_0
 0009:80594AC6       aPompon2plant
 0009:80594AD3       aPompon4plant
 0009:80594AE0       aLavageyser_0
 0009:80594AEB       aLavaprominence_5
 0009:80594AFA       aLavaprominence_9
 0009:80594B0F       aLavaprominence_7
 0009:80594B29       aLavaprominence_11
 0009:80594B45       aLavaobstaclero_2
 0009:80594B5B       aLavaobstaclero_3
 0009:80594B71       aLavaobstaclero_4
 0009:80594B87       aLavahomefloate_4
 0009:80594B98       aLavafloatingst_12
 0009:80594BAA       aLavafloatingst_14
 0009:80594BBC       aLavafloatingst_15
 0009:80594BCE       aLavafloatingst_16
 0009:80594BE0       aLavahomeseesaw
 0009:80594BEF       aLavahomevolcan_1
 0009:80594C03       aLavahomevolcan_2
 0009:80594C1C       aLavarotateplan_2
 0009:80594C36       aLavabreakbridg
 0009:80594C46       aLavabreakrocka_0
 0009:80594C55       aLavabreakrockb_0
 0009:80594C64       aLavabreakrockc_0
 0009:80594C73       aLavabreakrockd_0
 0009:80594C82       aLavabreakcolum_0
 0009:80594C92       aLavashelltower
 0009:80594CA1       aLavafalldownco_1
 0009:80594CB5       aLavafalldownco_2
 0009:80594CC9       aLavashelltower_0
 0009:80594CDC       aLavastepa_0
 0009:80594CE6       aLavastepb_0
 0009:80594CF0       aLavastepc_0
 0009:80594CFA       aLavasteam_0
 0009:80594D04       aLavastrangeroc_4
 0009:80594D14       aLavastrangeroc_2
 0009:80594D25       aLavastrangeroc_5
 0009:80594D3A       aLavaspacestick
 0009:80594D4A       aLavaspacestick_0
 0009:80594D5A       aLavablackufo
 0009:80594D67       aCrystalcages_0
 0009:80594D74       aCrystalcagem_0
 0009:80594D81       aCrystalcagel
 0009:80594D8E       aCrystalcagemov
 0009:80594DA0       aShellfishcoin_0
 0009:80594DAE       aShellfish_0
 0009:80594DB8       aShellfishyello_0
 0009:80594DCC       aSeabottombigdo_5
 0009:80594DDE       aSeabottombigdo_6
 0009:80594DF0       aSeabottombigdo_7
 0009:80594E02       aFloaterlandpar
 0009:80594E18       aOceanfloaterty_0
 0009:80594E2A       aDashring_0
 0009:80594E33       aMeteorstrike_3
 0009:80594E40       aMeteorstrikeen_0
 0009:80594E58       aMeteorcannon_0
 0009:80594E65       aBrightobj
 0009:80594E6F       aLensflare_0
 0009:80594E79       aBrightsun
 0009:80594E83       aPhantomtorch
 0009:80594E90       aPhantombonfire_0
 0009:80594E9F       aPhantomcandles_0
 0009:80594EB2       aCandlestandice_0
 0009:80594EC8       aMariolauncher_0
 0009:80594ED6       aMariolaunchera_0
 0009:80594EED       aWaterbazooka
 0009:80594EFA       aElectricbazook_1
 0009:80594F0A       aWaterpressure
 0009:80594F18       aFirepressure_0
 0009:80594F25       aIroncannonlaun_1
 0009:80594F38       aIroncannonlaun_2
 0009:80594F50       aFirepressurera
 0009:80594F64       aTemplatestageg
 0009:80594F7A       aSunkenship_0
 0009:80594F85       aBeeflowerhover_0
 0009:80594F94       aWaterfallcavec
 0009:80594FA7       aWaterfallcaven
 0009:80594FC1       aPalmisland_0
 0009:80594FCC       aIcemeramerakin_2
 0009:80594FDC       aOceanpierfloat_1
 0009:80594FEE       aHeavenlybeacht_2
 0009:80595003       aHeavenlybeachu_1
 0009:8059501A       aOceansmallturt_0
 0009:8059502B       aOceanhexagonfl_1
 0009:8059503F       aSpringwaterflo
 0009:80595053       aSpringwaterflo_0
 0009:80595067       aShutterdoorb_0
 0009:80595074       aShutterdoorc_0
 0009:80595081       aShutterdoord_0
 0009:8059508E       aShutterdoore_0
 0009:8059509B       aSeabottomtripl_0
 0009:805950B9       aSeabottomtripl_1
 0009:805950D2       aOceanfloaterto_3
 0009:805950EF       aOceanfloaterto_4
 0009:8059510C       aOceanfloaterto_5
 0009:80595129       aOceanfloaterto_6
 0009:80595146       aLargechain_0
 0009:80595151       aIciclerock_1
 0009:8059515C       aItemappearston
 0009:80595176       aSnowfloor
 0009:80595180       aSnowfloortile
 0009:8059518E       aFlippanel_0
 0009:80595198       aFlippanelobser
 0009:805951AA       aFlippanelrever_0
 0009:805951BB       aFlippanelframe
 0009:805951CA       aPhantomtowermo_0
 0009:805951E0       aSidespikemoves_0
 0009:805951F3       aSpacemineraila
 0009:80595202       aSpaceminerail5
 0009:80595212       aSandupdowntowe_11
 0009:80595225       aSandupdowntowe_12
 0009:8059523B       aSandupdownkill
 0009:80595256       aSandupdowntrir
 0009:80595268       aJumpstand_0
 0009:80595272       aCaretakergarba
 0009:80595283       aGlassbottletal
 0009:80595293       aHopperbeltconv_1
 0009:805952B2       aHopperbeltconv_2
 0009:805952CF       aChoochootrain_0
 0009:805952DD       aSandriverlight_0
 0009:805952ED       aSnowman_0
 0009:805952F5       aSnowblocka_1
 0009:80595300       aShockwavegener_0
 0009:80595313       aDangersignboar_0
 0009:80595323       aBanekiti_0
 0009:8059532C       aMirrorreflecti
 0009:80595341       aMirrorreflecti_0
 0009:8059535D       aMirrorreflecti_1
 0009:8059537A       aMirrormodeltes
 0009:8059538A       aMirrormodelpea
 0009:805953A1       aMirrormodeltwi
 0009:805953B9       aPhantomfirewoo
 0009:805953C9       aArrowboard
 0009:805953D4       aTeresaroomglar
 0009:805953EB       aSpacedustwooda
 0009:805953FA       aSpacedustwoodb
 0009:80595409       aTeresaroomdoor_0
 0009:80595418       aTramplestar
 0009:80595424       aReversegravity_4
 0009:8059543E       aHipdroprock_0
 0009:8059544A       aDropofwatercor
 0009:8059545A       aWatchtowerrota_1
 0009:8059546F       aForestappearst_0
 0009:80595481       aForestobstacle_0
 0009:80595495       aAstrodomeaster_0
 0009:805954A7       aAstrodomeblues
 0009:805954B9       aAstrodomecomet_1
 0009:805954C8       aAstrodomedemoa_0
 0009:805954E1       aSphereselector
 0009:805954F6       aForestwoodcove
 0009:80595506       aKoopashipmanho
 0009:8059551C       aStarduststepa
 0009:8059552A       aStarduststepb
 0009:80595538       aTreasurespot
 0009:80595545       aCoinflower_0
 0009:80595550       aStardustrollin
 0009:80595565       aAsteroidmovea_0
 0009:80595573       aStarpiececlust_0
 0009:80595584       aSpaceseparator
 0009:80595594       aSpaceseparator_0
 0009:805955A4       aForestnarrowst
 0009:805955B6       aForesthomegate
 0009:805955C5       aRgtowerpressgr_0
 0009:805955D9       aWeathervane
 0009:805955E5       aRaincloud_0
 0009:805955EF       aPowerstarkeepe_2
 0009:80595600       aPowerstarkeepe_3
 0009:80595611       aPowerstarkeepe_4
 0009:80595622       aForestpoihanaf
 0009:80595636       aForestpoihanaf_0
 0009:8059564A       aTeresamansionb
 0009:8059565F       aTeresamansionb_0
 0009:80595674       aDarknessroomdo
 0009:80595686       aTeresamansiond
 0009:80595699       aTeresamansiond_0
 0009:805956AC       aTeresamansione_0
 0009:805956C6       aWaterbazookato_2
 0009:805956E1       aWaterbazookato_3
 0009:805956FC       aWaterbazookato_4
 0009:80595717       aQuestionboxmov_2
 0009:8059572C       aQuestionboxmov_3
 0009:80595741       aQuestionboxmov_4
 0009:80595756       aForesthomebrid
 0009:80595767       aForestbarricad
 0009:8059577C       aReversegravity_5
 0009:8059579B       aReversegravity_6
 0009:805957BA       aReversegravity_7
 0009:805957D9       aReversegravity_8
 0009:805957F8       aReversegravity_9
 0009:80595817       aRollingovalpla
 0009:8059582E       aTeresamansionl_1
 0009:80595842       aTeresamansionl_3
 0009:80595856       aTeresamansionc_1
 0009:8059586F       aTeresamansionh_1
 0009:80595886       aKoopastatue_2
 0009:80595892       aTeresapicture
 0009:805958A0       aKinokooneuppic
 0009:805958B3       aFirebar
 0009:805958BB       aFirebarcore_0
 0009:805958C7       aBattleshipmove_1
 0009:805958DC       aBattleshipmove_2
 0009:805958F1       aBattleshipelev_0
 0009:80595904       aBattleshipelev_1
 0009:8059591C       aTeresaracespac
 0009:80595932       aTeresaracespac_0
 0009:80595948       aTeresaracespac_1
 0009:8059595E       aTeresaracepart_1
 0009:8059596F       aTeresaracepart_2
 0009:80595980       aNeedleplant_0
 0009:8059598C       aNeedleplantfly
 0009:8059599B       aBeewallclimbpa_0
 0009:805959AE       aPeachcastletow_4
 0009:805959C9       aPeachcastletow_2
 0009:805959E5       aPeachcastletow_5
 0009:805959F9       aPhantomdecorat
 0009:80595A0F       aPhantomdecorat_0
 0009:80595A25       aPhantomdecorat_1
 0009:80595A3E       aCocoonstepa
 0009:80595A4A       aCocoonstepb
 0009:80595A56       aSpacecannonlau
 0009:80595A6A       aTrapbasea
 0009:80595A74       aSweetsdecorate_1
 0009:80595A8D       aSweetsdecorate
 0009:80595AA5       aSeesawmovenuta
 0009:80595AB4       aSeesawmovenutb
 0009:80595AC3       aSeesawmovenutc
 0009:80595AD2       aTwistersan_0
 0009:80595ADD       aTwistersanslim_1
 0009:80595AEC       aSunakazekun_0
 0009:80595AF8       aSandstreammove
 0009:80595B0D       aSandstreammove_0
 0009:80595B22       aWaterleakpipe_0
 0009:80595B30       aBroadbeanmoves_1
 0009:80595B43       aBroadbeanmoves_2
 0009:80595B56       aColorpencil
 0009:80595B62       aTeresaracepart_3
 0009:80595B77       aSandcapsulepre
 0009:80595B8E       aRaygunplanetpa_1
 0009:80595BA5       aRaygunplanetpa_2
 0009:80595BBB       aBreakdownfixst
 0009:80595BCD       aSandstreamhigh_1
 0009:80595BEA       aDriftwood
 0009:80595BF4       aToyfactorydeco
 0009:80595C11       aMinimechakoopa_3
 0009:80595C2E       aMinimechakoopa_4
 0009:80595C46       aMinimechakoopa_5
 0009:80595C5E       aAsteroidblockr_0
 0009:80595C77       aSandupdowntowe_8
 0009:80595C95       aSandupdowntowe_10
 0009:80595CB3       aHoledeathsandm_0
 0009:80595CCA       aSandupdowntowe_13
 0009:80595CE3       aDeathsandlandp
 0009:80595CF7       aDeathsandlandp_0
 0009:80595D0B       aDeathsandlandp_1
 0009:80595D26       aDeathsandenvir
 0009:80595D43       aDeathsandenvir_0
 0009:80595D60       aDeathsandenvir_1
 0009:80595D79       aDeathsandenvir_2
 0009:80595D95       aUfosandobstacl_5
 0009:80595DA6       aUfosandobstacl_6
 0009:80595DB7       aUfosandobstacl_7
 0009:80595DC8       aSweetdecoratep
 0009:80595DE1       aCapsulecage
 0009:80595DED       aKameckshiplv1
 0009:80595DFB       aLavaballrising
 0009:80595E14       aStrongblock_0
 0009:80595E20       aChoconveyorcho
 0009:80595E32       aChoconveyormov_0
 0009:80595E48       aHoneyqueenleaf
 0009:80595E58       aForesthomepart
 0009:80595E6C       aForesthomepart_0
 0009:80595E85       aRosettachair_1
 0009:80595E92       aGravitylighta_0
 0009:80595EA0       aGravitylightro_0
 0009:80595EB1       aPoltabattlepla
 0009:80595EC9       aHeavenlybeacht_3
 0009:80595EE1       aHeavenlybeacht_4
 0009:80595EF9       aReversekingdom_6
 0009:80595F0D       aFloaterotaking_5
 0009:80595F24       aWindmillpropel_0
 0009:80595F36       aWindmillpropel_1
 0009:80595F4C       aLavarotatestep
 0009:80595F68       aLavarotatestep_0
 0009:80595F84       aLavarotatestep_1
 0009:80595FA0       aLavarotatestep_2
 0009:80595FBC       aQuicksand2dmov
 0009:80595FD2       aBiribiribegoma_0
 0009:80595FEE       aHugebattleship
 0009:8059600B       aMysterygravity
 0009:80596025       aDeadleaves
 0009:80596030       aProloguedirect
 0009:80596041       aDemoletter_0
 0009:8059604C       aDeathpromenade_3
 0009:8059606B       aDeathpromenade_4
 0009:80596087       aDeathpromenade_5
 0009:805960A3       aFlexiblesandpl_0
 0009:805960BC       aDarkhopperrota_2
 0009:805960D2       aDarkhopperplan_4
 0009:805960E9       aDarkhopperplan_5
 0009:80596100       aDarkhopperplan_6
 0009:80596117       aClockworkhandl_0
 0009:80596127       aMinimechakoopa_6
 0009:8059613E       aRockroadcircle
 0009:8059614E       aAssemblyblockp_2
 0009:80596162       aAssemblyblockp_3
 0009:80596176       aAssemblyblockp_4
 0009:8059618A       aAssemblyblockp_5
 0009:8059619E       aAssemblyblockp_6
 0009:805961B2       aAssemblyblockp_7
 0009:805961C9       aAssemblyblockp_8
 0009:805961E0       aAssemblyblockp_9
 0009:805961F7       aAssemblyblockp_10
 0009:8059620E       aAssemblyblockp_0
 0009:80596227       aHellballguidep
 0009:8059623B       aHellballrotate
 0009:80596250       aHellballrotate_0
 0009:80596265       aHellballrotate_1
 0009:8059627A       aHellballrotate_2
 0009:8059628F       aHellballrotate_3
 0009:805962A4       aHellballrotate_4
 0009:805962B9       aHellballrotate_5
 0009:805962CE       aIcesliproad
 0009:805962DA       aCandylifta
 0009:805962E5       aCandyliftb
 0009:805962F0       aSurfingracetut
 0009:80596309       aSurfingracemai
 0009:8059631D       aSurfingracesub
 0009:80596330       aSurfingraceste
 0009:80596340       aSurfingracesig
 0009:80596355       aSurfingracevic
 0009:8059636D       aHeavensdoorflo
 0009:80596380       aHeavensdoorhou
 0009:80596395       aHeavensdoorapp_3
 0009:805963B1       aHeavensdoorapp_4
 0009:805963C8       aHeavensdoormid_1
 0009:805963E6       aHeavensdoormid_2
 0009:80596404       aHeavensdoorins_13
 0009:8059641A       aHeavensdoorins_11
 0009:80596438       aHeavensdoorins_14
 0009:80596456       aHeavensdoorins_15
 0009:80596474       aHeavensdoorins_16
 0009:80596492       aMechakoopapart_7
 0009:805964A6       aMechakoopapart_8
 0009:805964BC       aMechakoopapart_9
 0009:805964D2       aMechakoopapart_10
 0009:805964EA       aMechakoopapart_11
 0009:80596501       aMechakoopapart_5
 0009:80596515       aMechakoopapart_12
 0009:80596530       aMechakoopapart_13
 0009:80596547       aMechakoopapart_14
 0009:80596560       aMechakoopapart_15
 0009:80596576       aCannonfortress_1
 0009:8059658F       aCannonfortress_2
 0009:805965AE       aCannonfortress_3
 0009:805965CD       aCannonfortress_4
 0009:805965EC       aCannonfortress_5
 0009:80596603       aSpaceshipstep
 0009:80596611       aQuarterrollgra
 0009:8059662D       aNutshipfleetbr_0
 0009:80596640       aIcevolcanomove_0
 0009:80596654       aIcevolcanobala_1
 0009:8059666B       aIcevolcanobala_2
 0009:80596682       aIcevolcanofloa_1
 0009:80596695       aIcevolcanofloa_2
 0009:805966A8       aIcevolcanoappe_1
 0009:805966BE       aIcevolcanoappe_2
 0009:805966D4       aIcevolcanoclim_0
 0009:805966EB       aIcemountainflo_0
 0009:805966FF       aIcemountainsee_4
 0009:80596718       aIcemountainsee_5
 0009:8059672F       aIcemountainsee_6
 0009:80596746       aIcemountainsee_7
 0009:8059675D       aIcemountainsee_8
 0009:80596774       aIceringbumpypa
 0009:80596787       aIcewaterupdown_0
 0009:8059679B       aLavaupdownpart_0
 0009:805967AB       aIceupdownshutt_0
 0009:805967C1       aIcelavaislands
 0009:805967D8       aIcelavaislandi
 0009:805967F5       aIcelavaislandl_0
 0009:80596813       aHolebeltconvey
 0009:8059682A       aHolebeltconvey_0
 0009:80596841       aHolebeltconvey_1
 0009:80596858       aHolebeltconvey_2
 0009:8059686F       aHolebeltconvey_3
 0009:80596886       aHolebeltconvey_4
 0009:8059689D       aHolebeltconvey_5
 0009:805968B4       aHolebeltconvey_6
 0009:805968CB       aChallengeballa_0
 0009:805968E7       aChallengeballg_0
 0009:805968FA       aChallengeballm_2
 0009:80596913       aChallengeballm_3
 0009:8059692C       aChallengeballr_0
 0009:80596947       aChallengeballv_0
 0009:80596963       aTrialbubbletim
 0009:8059697D       aTrialbubblerot_0
 0009:80596994       aTrialbubblerev_0
 0009:805969AF       aTrialbubblemov_0
 0009:805969C4       aCubebubbleexho
 0009:805969D9       aCubebubbleexst
 0009:805969EF       aCubebubbleexro_0
 0009:80596A07       aCubebubbleexro_1
 0009:80596A1F       aCubebubbleexpa
 0009:80596A32       aUfonormalb_0
 0009:80596A3D       aUfonormald
 0009:80596A48       aUfostronga
 0009:80596A53       aUfobattlestage_3
 0009:80596A63       aUfobattlestage_4
 0009:80596A73       aUfobattlestage_5
 0009:80596A83       aUfokinoko_0
 0009:80596A8D       aUfokinokolandi_0
 0009:80596A9E       aUfobluestarcup_1
 0009:80596AB1       aKoopashipa
 0009:80596ABC       aKoopashipb
 0009:80596AC7       aKoopashipc
 0009:80596AD2       aKoopashipd
 0009:80596ADD       aKoopashipe_0
 0009:80596AE8       aKoopashipseesa_0
 0009:80596AFC       aKoopajrsmallsh_0
 0009:80596B0E       aKoopajrsmallsh_1
 0009:80596B2A       aKoopajrkillers
 0009:80596B3D       aKoopajrnormals_0
 0009:80596B50       aWaterroadcaves_0
 0009:80596B63       aWaterroadcaves_1
 0009:80596B76       aWaterroadcaver
 0009:80596B90       aSubmarinevolca_4
 0009:80596BA7       aSubmarinevolca_0
 0009:80596BC1       aSubmarinevolca_2
 0009:80596BDD       aOnimasuplanetp
 0009:80596BF4       aOnimasuplaneto
 0009:80596C10       aOnimasuplanetr_2
 0009:80596C2C       aOnimasuplanetr_3
 0009:80596C46       aOnimasuplanetr_4
 0009:80596C60       aPhantomshippro_3
 0009:80596C7A       aPhantomshippro_4
 0009:80596C92       aPhantomshiphan_0
 0009:80596CA4       aPhantomshipbri
 0009:80596CB6       aTakobarrela
 0009:80596CC2       aTakobarrelb
 0009:80596CCE       aKooparestarter
 0009:80596CE0       aKoopapowerupsw
 0009:80596CF3       aKoopaswitchkee
 0009:80596D05       aKoopaviewswitc
 0009:80596D1B       aKoopabattlemap_15
 0009:80596D2F       aKoopabattlemap_16
 0009:80596D43       aKoopaplate_0
 0009:80596D4E       aKoopabattlemap_17
 0009:80596D66       aKoopaplatecoin_0
 0009:80596D75       aKoopabattlemap_18
 0009:80596D8C       aKoopabattlemap_19
 0009:80596DA4       aKoopabattlemap_20
 0009:80596DC2       aKoopavs1partss
 0009:80596DDA       aKoopavs1partsm_1
 0009:80596DF1       aKoopavs1partsm_2
 0009:80596E08       aKoopavs1partsr_1
 0009:80596E25       aKoopavs1partsr_2
 0009:80596E42       aKoopavs1partsr_3
 0009:80596E5C       aKoopavs1partss_0
 0009:80596E73       aKoopavs1partsb
 0009:80596E8C       aKoopavs2partsr_0
 0009:80596EA7       aKoopavs2partsr_1
 0009:80596EC2       aKoopavs2partss_7
 0009:80596EDD       aKoopavs2partsr_2
 0009:80596EF4       aKoopavs2partsr_3
 0009:80596F0B       aKoopavs2partsr_4
 0009:80596F22       aKoopavs2partsr_5
 0009:80596F39       aKoopavs2partsr_6
 0009:80596F50       aKoopavs2partsr_7
 0009:80596F67       aKoopavs2partsr_8
 0009:80596F7E       aKoopavs2partsr_9
 0009:80596F95       aKoopavs2partsd
 0009:80596FAE       aKoopavs2partsd_0
 0009:80596FC7       aKoopavs2partsd_1
 0009:80596FE0       aKoopavs2partsd_2
 0009:80596FF9       aKoopavs2partsd_3
 0009:80597012       aKoopavs2partss_8
 0009:8059702E       aKoopavs2partss_9
 0009:8059704A       aKoopavs2partss_10
 0009:80597066       aKoopavs2partsr_10
 0009:8059707F       aKoopavs2parts2_5
 0009:8059709B       aKoopavs2parts2_6
 0009:805970B7       aKoopavs2parts2_7
 0009:805970D4       aKoopavs2parts2_8
 0009:805970F2       aKoopavs2parts2_9
 0009:80597110       aKoopavs2parts2_10
 0009:8059712D       aKoopavs2partsj_1
 0009:80597149       aKoopavs2partsj_2
 0009:80597165       aKoopavs2partss_11
 0009:80597182       aKoopavs2partss_12
 0009:8059719F       aKoopavs2partss_13
 0009:805971BC       aKoopavs2partss_14
 0009:805971D9       aKoopavs2partsc_0
 0009:805971F7       aKoopavs2partss_15
 0009:8059720D       aKoopavs2parts2_11
 0009:80597227       aKoopavs3rotate_0
 0009:8059723B       aKoopavs3rotate_1
 0009:8059724F       aKoopavs3rotate_2
 0009:80597263       aKoopavs3rotate_3
 0009:80597278       aKoopavs3parts2
 0009:8059728D       aTreasureboxcra_1
 0009:805972A5       aTreasureboxcra_2
 0009:805972B8       aTreasureboxcra_3
 0009:805972CF       aTreasureboxcra_4
 0009:805972EC       aTreasureboxcra_5
 0009:80597307       aTreasureboxcra_6
 0009:80597325       aTreasureboxcra_7
 0009:80597344       aTreasureboxcra_0
 0009:80597360       aTreasureboxcra_8
 0009:8059737C       aTreasureboxemp
 0009:8059738D       aTreasurebox_0
 0009:80597399       aTreasureboxcoi
 0009:805973A9       aTreasureboxyel
 0009:805973BF       aTreasureboxblu
 0009:805973D3       aTreasureboxkin
 0009:805973EA       aTreasureboxkin_0
 0009:80597402       aTreasureboxgol_0
 0009:80597417       aTreasureboxgol_1
 0009:80597427       aOceanringruins_5
 0009:8059743A       aOceanringruins_6
 0009:80597452       aOceanringruins_7
 0009:80597468       aOceanringruins_8
 0009:8059747D       aOceanringruins_9
 0009:80597490       aKameckship
 0009:8059749B       aBeachparasol
 0009:805974A8       aBeachchair
 0009:805974B3       aGhostshipcavem_1
 0009:805974CC       aGhostshipcavem_2
 0009:805974E5       aPhantomshipbox_5
 0009:805974FC       aPhantomshipbox_6
 0009:80597513       aPhantomshipbox_7
 0009:8059752A       aPhantomcaveste
 0009:8059753B       aGhostshipcavec
 0009:80597554       aGhostshipbroke
 0009:80597568       aCannonundercon
 0009:80597581       aCannonundercon_0
 0009:8059759A       aGhostshipcavep
 0009:805975B5       aAstromapboard
 0009:805975C3       aAstrocore
 0009:805975CD       aAstrocountdown_1
 0009:805975E1       aAstrodome_12
 0009:805975EB       aAstrodomeentra_14
 0009:805975FD       aAstrostarplate_7
 0009:8059760C       aAstrobasea_0
 0009:80597617       aAstrobaseb_0
 0009:80597622       aAstrobasec_0
 0009:8059762D       aAstrobasekitch_0
 0009:8059763E       aAstrobasecente_2
 0009:8059764F       aAstrobasecente_3
 0009:80597660       aAstrobasecente_4
 0009:80597673       aAstrorotateste_3
 0009:80597684       aAstrorotateste_4
 0009:80597695       aAstrodecoratep_3
 0009:805976A9       aAstrodecoratep_4
 0009:805976C1       aAstrochildroom_1
 0009:805976D0       aAstroparking_1
 0009:805976DD       aAstrolibrary_1
 0009:805976EA       aAstroroomlibra
 0009:805976FB       aAstrotorchligh
 0009:8059770E       aAstrotorchligh_0
 0009:80597722       aEffectticos
 0009:8059772E       aEffectticol
 0009:8059773A       aUfokinokounder_0
 0009:80597755       aUfokinokolandi_1
 0009:8059776B       aAstrodomesky_0
 0009:80597778       aWhiteroom
 0009:80597782       aVrorbit
 0009:8059778A       aVrdarkspace
 0009:80597796       aVrsandwichsun
 0009:805977A4       aSummersky_0
 0009:805977AE       aGalaxysky
 0009:805977B8       aMilkywaysky
 0009:805977C4       aHalfgalaxysky
 0009:805977D2       aGreenplanetorb
 0009:805977E6       aPhantomsky
 0009:805977F1       aKoopavs1sky
 0009:805977FD       aKoopavs2sky
 0009:80597809       aFamicommariosk
 0009:80597819       aDesertsky
 0009:80597823       aChildroomsky
 0009:80597830       aAurorasky
 0009:8059783A       aCloudsky
 0009:80597843       aRockplanetorbi
 0009:80597856       aStarrysky
 0009:80597860       aAstrodomeskya_1
 0009:8059786E       aHomeair
 0009:80597876       aSphereair
 0009:80597880       aSunsetair
 0009:8059788A       aFineair
 0009:80597892       aDimensionair
 0009:8059789F       aDarknessroomai
 0009:805978AF       aTwilightair
 0009:805978BB       aZonehalo_0
 0009:805978C4       aPowerstarhalo_0
 0009:805978D2       aPurplecoin_0
 0009:805978DD       aRailcoin
 0009:805978E6       aCirclecoingrou
 0009:805978F6       aPurplerailcoin
 0009:80597905       aCirclepurpleco
 0009:8059791B       aPurplecoinstar
 0009:8059792D       aCoinreplica
 0009:80597939       aQuestioncoin_0
 0009:80597946       aBluechip_2
 0009:8059794F       aYellowchip_2
 0009:8059795A       aBluechipgroup
 0009:80597968       aYellowchipgrou
 0009:80597978       aStarpiece_4
 0009:80597982       aStarpieceflow_0
 0009:80597990       aStarpiecegroup
 0009:8059799F       aStarpiecefollo
 0009:805979B4       aStarpiecemothe_0
 0009:805979C4       aStarpiecespot
 0009:805979D2       aOceanbowl
 0009:805979DC       aOceanring
 0009:805979E6       aOceanringandfl
 0009:805979F7       aOceansphere
 0009:80597A03       aWhirlpool
 0009:80597A0D       aWhirlpoolaccel
 0009:80597A22       aWhirlpool_0
 0009:80597A2C       aFishgroupa_0
 0009:80597A37       aFisha_0
 0009:80597A3D       aFishgroupb_0
 0009:80597A48       aFishb_0
 0009:80597A4E       aFishgroupc_0
 0009:80597A59       aFishc_0
 0009:80597A5F       aFishgroupd_0
 0009:80597A6A       aFishd_0
 0009:80597A70       aFishgroupe_0
 0009:80597A7B       aFishe_0
 0009:80597A81       aFishgroupf_0
 0009:80597A8C       aFishf_0
 0009:80597A92       aFlag
 0009:80597A97       aFlagkoopaa_0
 0009:80597AA2       aFlagkoopab_0
 0009:80597AAD       aFlagracea_0
 0009:80597AB7       aFlagkoopacastl_0
 0009:80597AC7       aFlagpeachcastl_2
 0009:80597AD8       aFlagpeachcastl_3
 0009:80597AE9       aFlagpeachcastl_4
 0009:80597AFA       aFlagsurfing_1
 0009:80597B06       aFlagtamakoro
 0009:80597B13       aSeagullgroup
 0009:80597B20       aSeagull_0
 0009:80597B28       aWaterplant
 0009:80597B33       aHitwalltimersw_0
 0009:80597B46       aPtimerswitch_0
 0009:80597B53       aCrystalswitch_0
 0009:80597B61       aHipdropswitch_0
 0009:80597B6F       aHipdroptimersw_0
 0009:80597B82       aDesertlandupsw
 0009:80597B95       aDesertlanddown_0
 0009:80597BAA       aScrewswitch_0
 0009:80597BB6       aScrewswitchrev_1
 0009:80597BC9       aPicketswitch
 0009:80597BD6       aPicketswitchbi
 0009:80597BE6       aValveswitch_0
 0009:80597BF2       aKeyswitch_2
 0009:80597BFC       aSpinleverswitc_0
 0009:80597C0C       aEffectobjsampl
 0009:80597C1C       aShootingstarar
 0009:80597C2D       aIceplanetlight
 0009:80597C3C       aIcelayerbreak_0
 0009:80597C4A       aLavasparkss
 0009:80597C56       aLavasparksl
 0009:80597C62       aSpacedusts
 0009:80597C6D       aSpacedustl
 0009:80597C78       aBirdlouses
 0009:80597C83       aBirdlousel
 0009:80597C8E       aSnows
 0009:80597C94       aFallingsmallro_0
 0009:80597CA5       aLavahomevolcan_3
 0009:80597CC0       aFountain
 0009:80597CC9       aFountainbig_0
 0009:80597CD5       aWaterfalls
 0009:80597CE0       aWaterfalll
 0009:80597CEB       aDrainpipebubbl
 0009:80597CFC       aDrainpipebubbl_0
 0009:80597D0D       aWaterdroptop
 0009:80597D1A       aWaterdropbotto
 0009:80597D2A       aWaterdropmiddl
 0009:80597D3A       aSubmarinesteam
 0009:80597D49       aSubmarinevolca_5
 0009:80597D5A       aWaterlayerbrea
 0009:80597D6A       aStarpiececlust_1
 0009:80597D80       aFireworksa_0
 0009:80597D8B       aBattleshipexpl
 0009:80597DA3       aBattleshipexpl_0
 0009:80597DBC       aForestwaterfal
 0009:80597DCD       aForestwaterfal_0
 0009:80597DDE       aSandbreezes
 0009:80597DEA       aSandbreezel
 0009:80597DF6       aSpringjetwater
 0009:80597E05       aSandupdownkgba_0
 0009:80597E1C       aSandupdowntowe_14
 0009:80597E35       aUfosandobstacl_8
 0009:80597E4C       aUfosandobstacl_9
 0009:80597E63       aUfosandobstacl_10
 0009:80597E7A       aGravitydust
 0009:80597E86       aSteam_2
 0009:80597E8C       aFallredleaf
 0009:80597E98       aFallgreenleaf
 0009:80597EA6       aIciclerockligh
 0009:80597EB6       aTwinfalllakewa
 0009:80597ECC       aEffectteresa
 0009:80597ED9       aUfokinokolandi_2
 0009:80597EF4       aInvisiblewall1
 0009:80597F07       aInvisiblewall1_0
 0009:80597F1A       aInvisiblewallj
 0009:80597F31       aInvisiblewallj_0
 0009:80597F48       aInvisiblewallg
 0009:80597F63       aInvisiblewallg_0
 0009:80597F7E       aPolygoncoderec
 0009:80597F97       aPolygoncoderec_0
 0009:80597FAF       aInvisiblewallb
 0009:80597FC8       aInvisiblewater
 0009:80597FDB       aInvisiblewater_0
 0009:80597FFA       aStatusfloor
 0009:80598006       aGlobalcubegrav
 0009:80598018       aGlobalconegrav
 0009:8059802A       aGlobaldiskgrav
 0009:8059803C       aGlobaldisktoru
 0009:80598053       aGlobalplanegra
 0009:80598066       aGlobalplanegra_0
 0009:8059807E       aGlobalplanegra_1
 0009:8059809B       aGlobalpointgra
 0009:805980AE       aGlobalsegmentg
 0009:805980C3       aGlobalwiregrav
 0009:805980D5       aMinieggstargal
 0009:805980E7       aMinihoneybeeki
 0009:80598101       aMiniflippanele
 0009:80598117       aMinisurfinglv1
 0009:8059812C       aMinitrileglv1g
 0009:80598140       aMinistardustga
 0009:80598153       aMinitamakoroex
 0009:8059816B       aMinibattleship
 0009:80598180       aMinibreakdownp
 0009:8059819A       aMinikoopabattl
 0009:805981B3       aMiniheavenlybe
 0009:805981CB       aMinicubebubble
 0009:805981E5       aMiniphantomgal
 0009:805981F7       aMinioceanfloat
 0009:80598212       aMinikoopajrshi
 0009:8059822B       aMinicosmosgard
 0009:80598242       aMiniicevolcano
 0009:80598257       aMinihoneybeeex
 0009:8059826C       aMinisandclockg
 0009:80598280       aMinikoopabattl_0
 0009:80598299       aMinireversekin
 0009:805982B2       aMinioceanringg
 0009:805982C6       aMinifactorygal
 0009:805982D8       aMiniskullshark
 0009:805982ED       aMinifloaterota
 0009:80598306       aMinioceanphant
 0009:80598321       aMinicannonflee
 0009:80598337       aMinidarkroomga
 0009:8059834A       aMinihellpromin
 0009:80598363       aMinikoopabattl_1
 0009:8059837C       aSurprisedgalax_0
 0009:8059838C       aMinisurprisedg_0
 0009:805983A0       aSurpbeltconvey
 0009:805983B9       aSurpcocoonexga
 0009:805983CC       aSurpteardropga
 0009:805983DF       aSurpteresamari
 0009:805983F7       aSurpsnowcapsul
 0009:8059840D       aSurptransforma
 0009:80598428       aSurpfishtunnel
 0009:8059843D       aSurptamakoroex
 0009:80598455       aSurpsurfinglv2
 0009:8059846A       aSurpcubebubble
 0009:80598484       aSurppeachcastl
 0009:8059849F       aClipfieldswitc
 0009:805984AF       aFalloutfielddr
 0009:805984C0       aClipfieldfilld
 0009:805984D2       aSpotlightvolum
 0009:805984E6       aGroupswitchwat
 0009:805984F9       aRacerail
 0009:80598502       aTimerswitch
 0009:8059850E       aSwitchsynchron
 0009:80598528       aMoviestarter
 0009:80598535       aCinemasuper_0
 0009:80598541       aDemogroup
 0009:8059854B       aDemosubgroup
 0009:80598558       aAstrodomedemos
 0009:8059856D       aAstrodomegalax
 0009:80598585       aStarreturndemo
 0009:8059859B       aGrandstarretur
 0009:805985B6       aScenariostarte
 0009:805985C6       aWelcome_0
 0009:805985CE       aFileselector
 0009:805985DB       aAssemblyblockp_1
 0009:805985F9       aGcaptureribbon_1
 0009:80598608       aAstrodomecomet_2
 0009:8059861C       aAstrodomedemoc_1
 0009:80598630       aSpindriverpath_1
 0009:8059863F       aBackbutton_3
 0009:8059864A       aGalaxyselect_0
 0009:80598657       aBasabasahang_0
 0009:80598664       aBasabasaicehan_0
 0009:80598674       aBeeflowerhover_1
 0009:80598686       aBegomanspringh_1
 0009:80598698       aBegomanbrokenp_0
 0009:805986AB       aBegomanspikehe_0
 0009:805986BC       aBigfanwind_0
 0009:805986C7       aBlackholerange_0
 0009:805986D6       aBluestar
 0009:805986DF       aBluestardemo
 0009:805986EC       aBombbirdbomb_0
 0009:805986F9       aBossbegomanhea_0
 0009:80598709       aBosskameckbatt_0
 0009:8059871E       aBosskameckfire_0
 0009:80598731       aBosskameckbarr_0
 0009:80598743       aBossstinkbugbo_1
 0009:80598754       aBossstinkbugbo_2
 0009:8059876D       aBossstinkbugde_3
 0009:8059877E       aBossstinkbugwi_0
 0009:8059878F       aBreakablecageb_0
 0009:805987A2       aGlareglow_0
 0009:805987AC       aGlareline_0
 0009:805987B6       aAllstarlist_0
 0009:805987C2       aMapbutton_0
 0009:805987CC       aMapdomeicon_0
 0009:805987D8       aMapgalaxybg_0
 0009:805987E4       aMapgalaxyicon_0
 0009:805987F2       aMapgrandgalaxy_0
 0009:80598801       aGalaxydetail_0
 0009:8059880E       aGalaxyinfotext_3
 0009:80598820       aIconcomet_2
 0009:8059882A       aIconmario_0
 0009:80598834       aMapticoicon_0
 0009:80598840       aMaptitle_0
 0009:80598849       aChainedball
 0009:80598855       aIronball
 0009:8059885E       aChoochootrainb_0
 0009:80598870       aCocosambohead_0
 0009:8059887E       aConcreteblockb
 0009:80598891       aCreeperflower_0
 0009:8059889F       aCreeperleaf_0
 0009:805988AB       aCrystalcagelbr_0
 0009:805988BD       aCrystalcagesbr_0
 0009:805988CF       aKoopajr_1
 0009:805988D7       aKoopajrmiddle
 0009:805988E5       aKoopajrlow
 0009:805988F0       aDharmasambopar_0
 0009:80598901       aDinopackundemo_0
 0009:80598918       aDinopackuneggs_1
 0009:8059892B       aDinopackuneggs_2
 0009:80598943       aDinopackuntail_0
 0009:80598956       aDinopackunfire_0
 0009:80598969       aDodoryubank_0
 0009:80598975       aDodoryuhilla_0
 0009:80598982       aDodoryuhillb
 0009:8059898F       aDodoryuhillc
 0009:8059899C       aDodoryuleadhil_1
 0009:805989AC       aDodoryurabbit_0
 0009:805989BA       aEarthenpipestr_0
 0009:805989CC       aElectricbazook_2
 0009:805989E1       aElectricbullet_0
 0009:805989F0       aMogucchishoote_0
 0009:80598A00       aWaterbazookaca_0
 0009:80598A14       aElectricrailpo_1
 0009:80598A26       aEyebeamerbeam_0
 0009:80598A34       aEyebeamerbeamb_0
 0009:80598A47       aEyebeamerbeamv_0
 0009:80598A5B       aFileinfo_0
 0009:80598A64       aFileselect_4
 0009:80598A6F       aFileselectdata_6
 0009:80598A84       aFileselectdata_7
 0009:80598A98       aFileselectdata_8
 0009:80598AAC       aFileselectdata_9
 0009:80598AC0       aFileselectdata_10
 0009:80598AD4       aFileselectdata_11
 0009:80598AEA       aCometnearorbit_0
 0009:80598AFC       aMiifacedatabas
 0009:80598B0C       aFilenumber_1
 0009:80598B17       aTitlelogo_1
 0009:80598B21       aPressstart_0
 0009:80598B2C       aMiiselect_1
 0009:80598B36       aMiiicon_0
 0009:80598B3E       aMiiconfirmicon_0
 0009:80598B4D       aBrosbutton_0
 0009:80598B58       aP2manual_0
 0009:80598B61       aMiniaturegalax_7
 0009:80598B77       aSyspalinfo_0
 0009:80598B82       aFirebarball_0
 0009:80598B8E       aFirebullet_0
 0009:80598B99       aFlippanelbloom
 0009:80598BA8       aFlippanelrever_1
 0009:80598BBE       aFluffleaf_0
 0009:80598BC8       aRace_0
 0009:80598BCD       aDemoastroretur_1
 0009:80598BDD       aResultwindow_0
 0009:80598BEA       aGravitylightal
 0009:80598C03       aPackunleaf_0
 0009:80598C0E       aHanachanbody_0
 0009:80598C1B       aHanachanbodys_0
 0009:80598C29       aShimmerboard_0
 0009:80598C36       aHeavensdoorins_12
 0009:80598C59       aHipdroprockbre_0
 0009:80598C6A       aHoneybeelow
 0009:80598C76       aHoneybeemiddle
 0009:80598C85       aHoneyqueenlow
 0009:80598C93       aHoneyqueenmidd
 0009:80598CA4       aHoneyqueenwing_0
 0009:80598CB3       aIcemanice_0
 0009:80598CBD       aIcemeramerakin_3
 0009:80598CD2       aIcemeramerakin_4
 0009:80598CE7       aIciclerockbrea
 0009:80598CF7       aBalltornado
 0009:80598D03       aIronballspin
 0009:80598D10       aKoopajrshipcan_2
 0009:80598D27       aJumpbeamerbeam_5
 0009:80598D36       aJumpbeamerbeam_6
 0009:80598D4A       aJumpbeamerhead_0
 0009:80598D59       aJumpguarderhea_0
 0009:80598D69       aKabokuribreak_0
 0009:80598D77       aKart
 0009:80598D7C       aKinopiomiddle
 0009:80598D8A       aKinopiolow
 0009:80598D95       aKirairachain_0
 0009:80598DA2       aKirairafixpoin_1
 0009:80598DB8       aKirairafixpoin_2
 0009:80598DCB       aKoopajrnormals_1
 0009:80598DE1       aKoopajrshipbre_0
 0009:80598DF2       aKoopajrshipcan_3
 0009:80598E0D       aKoopajrshippod_1
 0009:80598E1C       aKoopashipelow
 0009:80598E2A       aKoopastatuebre
 0009:80598E3B       aKoopaplatedama_0
 0009:80598E4C       aKoopaplanetsha_0
 0009:80598E5E       aKoopaarmorbrea_0
 0009:80598E6E       aKoopabattlemap_7
 0009:80598E83       aKoopabattlemap_8
 0009:80598E9D       aKoopafire_0
 0009:80598EA7       aKoopafirebloom
 0009:80598EB6       aKoopashockwave_1
 0009:80598EC5       aKoopashockwave_2
 0009:80598ED9       aKoopashockwave_3
 0009:80598EEE       aKoopathorn_0
 0009:80598EF9       aKoopathornbrea_0
 0009:80598F09       aMeteorstrikebr_1
 0009:80598F1B       aKoopabattlemap_9
 0009:80598F33       aKoopabattlemap_10
 0009:80598F50       aKooparollball_0
 0009:80598F5E       aKoopabattlemap_11
 0009:80598F79       aKoopabattlemap_12
 0009:80598F94       aKoopabattlemap_13
 0009:80598FAF       aKooparock_0
 0009:80598FB9       aKooparockbreak_0
 0009:80598FC8       aKoopavs3holesu_1
 0009:80598FDE       aKoopavs3holesu_2
 0009:80598FF9       aKoopavs3holesu_3
 0009:80599015       aKoopavs3holesu_4
 0009:80599036       aPeachmiddle
 0009:80599042       aPeachlow
 0009:8059904B       aLargechainfixp_0
 0009:8059905E       aLavaprominence_6
 0009:80599072       aLavaprominence_8
 0009:80599091       aLavaprominence_10
 0009:805990AB       aLavastrangeroc_3
 0009:805990BF       aLodtestplanet
 0009:805990CD       aLodtestbillboa
 0009:805990DE       aLodtestlowpoly
 0009:805990F0       aTelescope_0
 0009:805990FA       aSight_0
 0009:80599100       aMechakoopapart_6
 0009:80599117       aMeteorcannonbr_0
 0009:80599129       aMoguhole_0
 0009:80599132       aMogustone_0
 0009:8059913C       aMogucchihilla_0
 0009:8059914A       aMogucchihillb
 0009:80599158       aMogucchihillc
 0009:80599166       aMogucchihole_0
 0009:80599173       aNote_1
 0009:80599178       aWatercamerafil_1
 0009:8059918A       aFireball_1
 0009:80599193       aPackunpetithea_0
 0009:805991A3       aPeachcastletow_3
 0009:805991C4       aPenguinlow
 0009:805991CF       aPenguinmiddle
 0009:805991DD       aTiltguidance_0
 0009:805991EA       aPlantleaf_0
 0009:805991F4       aPlantseed_0
 0009:805991FE       aPlanttop_0
 0009:80599207       aPoltaarmbreak_0
 0009:80599215       aPoltabodybreak_0
 0009:80599224       aPoltaformation_1
 0009:80599237       aPoltagroundroc_1
 0009:80599247       aPoltagroundroc_2
 0009:8059925C       aPoltaleftarm_1
 0009:80599269       aPoltarightarm_1
 0009:80599277       aPoltarock_0
 0009:80599281       aPeachlettermin_0
 0009:80599291       aProloguedemo_0
 0009:8059929E       aDemopeachcastl_0
 0009:805992B2       aMoonrabbitlow
 0009:805992C0       aMoonrabbitmidd
 0009:805992D1       aRockball
 0009:805992DA       aRockbreak_0
 0009:805992E4       aRuby
 0009:805992E9       aLodtestlow
 0009:805992F4       aLodtestmiddle
 0009:80599302       aSpotmarklight_0
 0009:80599310       aTrickrabbitbab_1
 0009:80599320       aSandupdowntowe_9
 0009:80599342       aSkeletalfishbo_11
 0009:80599358       aSkeletalfishbo_12
 0009:8059936E       aSkeletalfishbo_13
 0009:80599389       aSkeletalfishbo_14
 0009:805993A3       aSkeletalfishbo_15
 0009:805993B9       aSkeletalfishbo_16
 0009:805993D0       aSkeletalfishgu_2
 0009:805993E2       aSkeletalfishgu_3
 0009:805993FA       aSnakeheadshado_0
 0009:8059940A       aSnakeheadsmall_2
 0009:8059941F       aSpindrivershad_0
 0009:80599430       aStringspiderst_0
 0009:80599443       aSubmarinevolca_1
 0009:80599462       aSubmarinevolca_3
 0009:80599483       aSuperspindrive_16
 0009:80599499       aSuperspindrive_18
 0009:805994AE       aSuperspindrive_19
 0009:805994C1       aPrizering_0
 0009:805994CB       aIcebox_0
 0009:805994D2       aTakoheiink_0
 0009:805994DD       aTeresamansiong_1
 0009:805994F8       aTeresamansionl_2
 0009:80599517       aTeresamansiong_2
 0009:80599532       aTeresamansiong_3
 0009:80599552       aTeresamansionl_4
 0009:80599571       aSandriverglari_0
 0009:80599588       aSandriverlight_1
 0009:805995A3       aStarpiecetarge_1
 0009:805995B8       aStarpiecetarge_2
 0009:805995CF       aTicolow_1
 0009:805995D7       aTicomiddle_1
 0009:805995E2       aSpiderthread
 0009:805995EF       aTombspidercoco_0
 0009:80599600       aTombspiderglan_0
 0009:80599610       aTombspiderplan_0
 0009:80599621       aTombspiderplan_1
 0009:80599635       aTombspidervita_0
 0009:80599649       aTorpedopropell_0
 0009:8059965A       aTorpedolight_0
 0009:80599667       aBombtimer_1
 0009:80599671       aTripod2bosslow
 0009:80599680       aTripod2bossleg
 0009:80599695       aTripodbosslegs
 0009:805996A9       aTripodbosslow
 0009:805996B7       aTripodbosscore_3
 0009:805996CB       aTripodbosscore_4
 0009:805996DF       aTripodbossshel_2
 0009:805996F4       aUfobattlestage_1
 0009:80599704       aUfobattlestage_2
 0009:80599719       aUnizobreak_0
 0009:80599724       aUnizolandbreak_0
 0009:80599733       aUnizoshoalbrea_0
 0009:80599743       aWanwanrollingb_0
 0009:80599756       aWanwanrollingg_2
 0009:8059976D       aWatchtowerrota_2
 0009:80599786       aWaterbazookabr_0
 0009:80599798       aWaterbullet_0
 0009:805997A4       aWaterfallcavec_0
 0009:805997BC       aIcestepnoslip_0
 0009:805997CA       aWhiteroombloom
 0009:805997D9       aWoodboxbreak_0
 0009:805997E6       aSpaceinner_0
 0009:805997F1       aKoopabattlemap_14
 0009:80599804       aAsteroidblow
 0009:80599811       aAsteroidclow
 0009:8059981E       aAsteroiddlow
 0009:8059982B       aSpacestickalow
 0009:8059983A       aSpacestickblow
 0009:80599849       aLavablackufolo
 0009:80599859       aLavastepalow
 0009:80599866       aLavastepblow
 0009:80599873       aLavastepclow
 0009:80599880       aLavafloatingst_13
 0009:80599895       aLavarotateplan_3
 0009:805998B2       aSweetsdecorate_0
 0009:805998CD       aSweetsdecorate_2
 0009:805998E9       aMoviepadrumble_0
 0009:80599901       aMoviepadrumble_1
 0009:80599919       aMoviepadrumble_2
 0009:80599933       aMoviepadrumble_3
 0009:8059994B       aMoviepadrumble_4
 0009:80599961       aMoviepadrumble_5
 0009:80599977       aRunawaytico_1
 0009:80599983       aHopper
 0009:8059A1AA       aAstrodomeButle
 0009:8059A1BE       aAstrodomeButle_0
 0009:8059A1D2       aAstrodomeButle_1
 0009:8059A1E6       aAstrodomeButle_2
 0009:8059A1FA       aAstrodomeButle_3
 0009:8059A20E       aAstrogalaxyBut
 0009:8059A224       aAstrogalaxyBut_0
 0009:8059A23A       aButler
 0009:8059A241       aBody_54
 0009:8059A246       aSpin_2
 0009:8059A24B       aWait_15
 0009:8059A250       aTalk
 0009:8059A255       aAstrogalaxyBut_1
 0009:8059A26B       aAstrodomeButle_4
 0009:8059A292       aTrileglv1galax_2
 0009:8059A2A2       aSeSmNpcTrample_5
 0009:8059A2B5       aSeSvButlerTram
 0009:8059A2CB       aSeSvButlerPoin
 0009:8059A2DE       aSeSyTicofatPoi
 0009:8059A2F2       aSeSyStarPieceS
 0009:8059A38D       aDemobutlerrepo
 0009:8059A3B4       aDemobutlerdome
 0009:8059A3CB       aAstrodomeButle_5
 0009:8059A3DF       aDemobutlerdome_0
 0009:8059A3F6       aAstrodomeButle_6
 0009:8059A40A       aDemobutlerstar
 0009:8059A41F       aAstrodomeButle_7
 0009:8059A433       aDemobutlerstar_0
 0009:8059A480       aSeSyLectStarPi
 0009:8059A5F4       aReaction_1
 0009:8059A5FD       aPointing
 0009:8059A606       aTrampled_1
 0009:8059A60F       aSpin_15
 0009:8059A624       aButlerexplain
 0009:8059A632       aButler_0
 0009:8059A639       aDemowithbutler
 0009:8059A66C       aSeSmNpcTrample_6
 0009:8059A67F       aSeSvButlerTram_0
 0009:8059A774       aButlermap
 0009:8059A77E       aButler_1
 0009:8059A785       aBody_55
 0009:8059A78A       aSpin_3
 0009:8059A78F       aWait_16
 0009:8059A794       aTalk_0
 0009:8059A7A6       aDemobutlermapl
 0009:8059A7BB       aAstrogalaxyBut_2
 0009:8059A807       aAstrogalaxyBut_3
 0009:8059A81D       aSeSmNpcTrample_7
 0009:8059A830       aSeSvButlerTram_1
 0009:8059A846       aSeSvButlerPoin_0
 0009:8059A999       aStarpiecereact
 0009:8059A9AB       aSeSmButlerAbso_0
 0009:8059A9F0       aCaretaker
 0009:8059A9FA       aCaretakermiddl
 0009:8059AA0A       aCaretakerlow
 0009:8059AA17       aBombtimer
 0009:8059AA54       aBodycolor
 0009:8059AA5E       aDirt
 0009:8059AA63       aBtrampled
 0009:8059AA6D       aBspinhit
 0009:8059AA76       aBtalkhelp
 0009:8059AA80       aBwaitstand
 0009:8059AA8B       aBruntalk
 0009:8059AA94       aBwaitrun
 0009:8059AA9D       aWait_17
 0009:8059AAA2       aSpinhit_0
 0009:8059AAAA       aTrampled
 0009:8059AAB3       aTalkangry
 0009:8059AABD       aTalknormal
 0009:8059AAC8       aWaitrun
 0009:8059AAD0       aTakeoutstarcar
 0009:8059AAEE       aSeSmLvCaretake
 0009:8059AB08       jpt_8026EE80
 0009:8059AB24       aTalkcry
 0009:8059AB2C       aBtalknormal
 0009:8059AB38       aBtalkcry
 0009:8059AB41       aBtalkspin
 0009:8059AB4B       aBtalksurprise
 0009:8059AB59       aBtalkspring
 0009:8059AB65       aBtalksurvive
 0009:8059AB74       jpt_8026F06C
 0009:8059AB90       aSeSyE3TimerTim
 0009:8059ABA7       aSeSyE3TimerCou
 0009:8059ABBE       aSeSyE3TimerCou_0
 0009:8059ABD5       aSeSyE3TimerCou_1
 0009:8059ABEC       aSeSmNpcTrample
 0009:8059AC05       aSeSvCareTakerT
 0009:8059AC1E       aSeSmCaretakerS
 0009:8059AC37       aSeSvCareTakerS
 0009:8059AC51       aSeSvCareTakerP
 0009:8059AC6C       aSeSvCareTakerS_0
 0009:8059AC9F       aWatch_0
 0009:8059ACC8       aBgmMinigameSta_0
 0009:8059ACDB       aSeSyRaceCountD_0
 0009:8059ACF1       aMbgmRace01_0
 0009:8059ACFE       aSeSyRaceStart_0
 0009:8059AD0F       aSeSyTotalCompl_2
 0009:8059AEFF       aCollecttico
 0009:8059AF33       aSeSmLvStraytic
 0009:8059AF4F       aCollectticolig
 0009:8059AF60       aSeSmStrayticoF
 0009:8059B060       aTrickrabbitbab_0
 0009:8059B070       aTrickrabbit_2
 0009:8059B094       aDemorabbit
 0009:8059B13B       aAppear_56
 0009:8059B142       aSeSmDemorabbit
 0009:8059B15A       aSeSmDemorabbit_0
 0009:8059B171       aWait_128
 0009:8059B185       aSeSmRabbitJump_2
 0009:8059B197       aChange_3
 0009:8059B19E       aSeSmRabbitHide_0
 0009:8059B1B0       aSeSmMetamorpho_3
 0009:8059B1C9       aMbgmGalaxy24_2
 0009:8059B310       aHoneybee
 0009:8059B319       aCenter_16
 0009:8059B320       aSleepwait
 0009:8059B32A       aStickwait
 0009:8059B334       aGatekeeperwait
 0009:8059B343       aFlustered
 0009:8059B350       jpt_80271A6C
 0009:8059B378       aSeSmNpcTrample_0
 0009:8059B38B       aSeSvHoneybeeTr
 0009:8059B3A3       aSeSvHoneybeePo
 0009:8059B3B8       aSeSvHoneybeeSp
 0009:8059B3CC       aSeSvHoneybeeSt
 0009:8059B3EA       aSeSmLvHoneybee
 0009:8059B400       aWalkwait_0
 0009:8059B409       aWait_18
 0009:8059B40E       aFlywait
 0009:8059B416       aHipdropwait
 0009:8059B422       aFlylecturewait
 0009:8059B431       aFlylecturea
 0009:8059B43D       aSeSmLvHoneybee_0
 0009:8059B458       aFlylectureb
 0009:8059B56C       aTalkturn
 0009:8059B575       aTalk_3
 0009:8059B57A       aTurn_12
 0009:8059B57F       aWait_129
 0009:8059B5B8       aHoneyqueen
 0009:8059B5C3       aCenter_4
 0009:8059B5CA       aBody_56
 0009:8059B5CF       aCenterfur
 0009:8059B5D9       aFace_0
 0009:8059B5DE       aLarm01
 0009:8059B5E5       aLarm02
 0009:8059B5EC       aLfoot001
 0009:8059B5F5       aRarm01
 0009:8059B5FC       aRarm02
 0009:8059B603       aRfoot001
 0009:8059B60C       aTactile
 0009:8059B614       aHoneyqueenwing
 0009:8059B644       aSeSmLvHoneyque
 0009:8059B65C       aTouchjump
 0009:8059B666       aTalk_4
 0009:8059B66B       aWait_130
 0009:8059B670       aEventwait
 0009:8059B7B0       aKinopio_0
 0009:8059B7B8       aBody_57
 0009:8059B7BD       aPickel
 0009:8059B7C4       aTalk_1
 0009:8059B7C9       aWalk_1
 0009:8059B7CE       aWaitpickel
 0009:8059B7D9       aTalkpickel
 0009:8059B7E4       aWalkpickel
 0009:8059B7EF       aSpinwait1
 0009:8059B7F9       aSpinwait2
 0009:8059B803       aSpinwait3
 0009:8059B80D       aSwimwait
 0009:8059B816       aSleep
 0009:8059B81C       aKinopiogoodswe
 0009:8059B833       aKinopiogoodswe_0
 0009:8059B846       aKinopiogoodswe_1
 0009:8059B85D       aRightened
 0009:8059B867       aStarpiecewait
 0009:8059B875       aKinopiogoodsst
 0009:8059B88F       aGetaway
 0009:8059B897       aTakeoutstar
 0009:8059B8A3       aColorchange_1
 0009:8059B8B0       jpt_802734B4
 0009:8059B8EC       aSeSmNpcTrample_1
 0009:8059B8FF       aSeSvKinopioPoi
 0009:8059B91C       aSeSvKinopioTra
 0009:8059B933       aSeSvKinopioPoi_0
 0009:8059B94A       aSeSvKinopioSpi
 0009:8059B95D       aSeSvKinopioSta
 0009:8059B97A       aNotice
 0009:8059B981       aTumble
 0009:8059B988       aGetup
 0009:8059B98E       aChange_0
 0009:8059B995       aEscape
 0009:8059B99C       aSeSvKinopioPuh
 0009:8059B9AF       aSeSmNpcFlyOut
 0009:8059B9C1       aMbgmKinopioTan
 0009:8059B9D7       aFishtunnelgala_1
 0009:8059BBD8       aStafffinallett
 0009:8059BBED       aWiimessagetitl
 0009:8059BBFD       aKinopio_1
 0009:8059BC05       aPeachcastlefin_1
 0009:8059BC1C       aAllcompleteima
 0009:8059BC2D       aCommonKinopio0
 0009:8059BC3F       aAllcompleteima_0
 0009:8059BC55       aAllcompleteima_1
 0009:8059BC6B       aSeSy5up
 0009:8059BCB4       aStaffletter
 0009:8059BCC0       aAllcompleteima_2
 0009:8059BCE6       aAstrogalaxyKin
 0009:8059BD1A       aSeSmLvKinomesG
 0009:8059BE04       aKoopajr
 0009:8059BE0C       aWait_19
 0009:8059BE11       aDamage_2
 0009:8059BE25       aApron
 0009:8059BE2B       aSeOjStarPieceH_4
 0009:8059BE46       aSeBvKoopajrDam_1
 0009:8059BE5D       aSeOjStarPieceB_60
 0009:8059BE74       aRecovery_2
 0009:8059BE7D       aTrileglv1galax_3
 0009:8059BE8D       aRoboappeardemo
 0009:8059BE9C       aAppeardemo_0
 0009:8059BEA7       aAngrydemo_3
 0009:8059BEB1       aWaitangry
 0009:8059BEBB       aRunawaydemo
 0009:8059BEC7       aStumble
 0009:8059BECF       aTalk_5
 0009:8059BED4       aTalkwait
 0009:8059C008       aLuiginpc_0
 0009:8059C011       aLuiginpcmiddle
 0009:8059C020       aLuiginpclow
 0009:8059C02C       aSeSmNpcTrample_8
 0009:8059C03F       aSeSmStarPieceH
 0009:8059C06C       aLuigievent
 0009:8059C077       aCenter_5
 0009:8059C07E       aTakeoutstar_0
 0009:8059C08A       aTurn_3
 0009:8059C08F       aWait_20
 0009:8059C094       aTalk_2
 0009:8059C099       aAfraid
 0009:8059C0A0       aAfraidwait
 0009:8059C0AB       aAfraidtalk
 0009:8059C0B6       aSeSvLuigiTramp
 0009:8059C0CB       aSeSvLuigiPoint
 0009:8059C0DD       aSeSvLuigiSpin
 0009:8059C0EE       aSeSvLuigiStarP
 0009:8059C109       aSeSvLuigiLiftU
 0009:8059C11D       aSeOjLvPowStarE_0
 0009:8059C135       aSquatstart
 0009:8059C140       aSquat
 0009:8059C146       aSquatend
 0009:8059C14F       aArrestedtalk
 0009:8059C15C       aArrested
 0009:8059C165       aLeave
 0009:8059C16B       aSeSvLuigiEscap
 0009:8059C17E       aTreewait
 0009:8059C187       aSeSvLvLuigiAfr
 0009:8059C19D       aTreetrampled
 0009:8059C1AA       aSeSvLuigiAfrai
 0009:8059C1C3       aTreehit
 0009:8059C1CB       aSeSvLuigiFall
 0009:8059C1DC       aTreeland
 0009:8059C1E5       aSeSmLuigiLand
 0009:8059C484       aObjectdataMiif
 0009:8059C4A4       aRflResDat
 0009:8059C4D0       aInitnameobjonm
 0009:8059C578       aPeach_0
 0009:8059C57E       aHelp
 0009:8059C610       aKourashine_0
 0009:8059C656       aKoura_1
 0009:8059C66B       aPenguin_0
 0009:8059C673       aPush_1
 0009:8059C678       aCenterjoint
 0009:8059C684       aColorchange_5
 0009:8059C690       aTurn_13
 0009:8059C695       aWait_131
 0009:8059C69A       aTalkturn_0
 0009:8059C6A3       aTalk_6
 0009:8059C6A8       aWalk_18
 0009:8059C6AD       aSitdowntalk
 0009:8059C6B9       aSitdown
 0009:8059C6C1       aSwimwaittalk
 0009:8059C6CE       aSwimwait_0
 0009:8059C6D7       aSwim_5
 0009:8059C6DC       aSwimsurfacetal
 0009:8059C6EC       aSwimwaitsurfac
 0009:8059C6FC       aSwimsurface
 0009:8059C708       aSwimturtletalk
 0009:8059C717       aSwimturtle_0
 0009:8059C722       aDasha
 0009:8059C728       jpt_80279378
 0009:8059C748       aSeSmPenguinTra
 0009:8059C75F       aSeSvPenguinSTr
 0009:8059C778       aSeSvPenguinSPo
 0009:8059C793       aSeSvPenguinSSp
 0009:8059C7AC       aSeSvPenguinSSt
 0009:8059C7C7       aTalka
 0009:8059C7CD       aTalkb
 0009:8059C7D3       aSeSmLvPenguinS
 0009:8059C7ED       aSwimdive
 0009:8059C7F6       aSeSvPenguinSDi
 0009:8059C93C       aHandyglow_0
 0009:8059C946       aKourashine_1
 0009:8059C951       aKoura_2
 0009:8059C957       aReaction_7
 0009:8059C960       aPointing_4
 0009:8059C969       aTrampled_4
 0009:8059C972       aSpin_22
 0009:8059C990       aPenguincoach
 0009:8059C99D       aTakeoutstar_1
 0009:8059C9A9       aTakeoutstarpen
 0009:8059C9C1       aBody_58
 0009:8059C9C6       aHead_10
 0009:8059C9DF       aCommonSurfingt
 0009:8059C9F9       aHead_31
 0009:8059C9FE       aTurn_14
 0009:8059CA03       aWait_132
 0009:8059CA08       aTalkturn_1
 0009:8059CA11       aTalk_7
 0009:8059CA16       aTrampled_2
 0009:8059CA1F       aReaction_2
 0009:8059CA28       aPointing_0
 0009:8059CA9E       aSeSmPenguinTra_0
 0009:8059CAB5       aSeSvPenguinLTr
 0009:8059CACE       aSeSvPenguinLPo
 0009:8059CAE9       aSeSvPenguinLSp
 0009:8059CB02       aSeSmPenguinLSp
 0009:8059CB1B       aSeSvPenguinLSt
 0009:8059CC80       aPenguinmaster
 0009:8059CC8E       aBody_261
 0009:8059CC93       aHead_32
 0009:8059CC98       aTalk_8
 0009:8059CC9D       aWait_133
 0009:8059CCA2       aTrampled_3
 0009:8059CCAB       aReaction_3
 0009:8059CCB4       aPointing_1
 0009:8059CCBD       aSeSvPenguinOld
 0009:8059CCD8       aSeSmPenguinTra_1
 0009:8059CCEF       aSeSvPenguinOld_0
 0009:8059CD0C       aSeSvPenguinOld_1
 0009:8059CD27       aSeSvPenguinOld_2
 0009:8059CDE0       aPenguin_1
 0009:8059CDE8       aPush_2
 0009:8059CDED       aColorchange_6
 0009:8059CDF9       aPenguinracer
 0009:8059CE06       aTurn_15
 0009:8059CE0B       aRacerwait
 0009:8059CE15       aTalkturn_2
 0009:8059CE1E       aRacertalk
 0009:8059CE28       aSeSmPenguinTra_2
 0009:8059CE3F       aSeSvPenguinSTr_0
 0009:8059CE58       aSeSvPenguinSPo_0
 0009:8059CE73       aSeSvPenguinSSp_0
 0009:8059CE8C       aSeSvPenguinSSt_0
 0009:8059CEA7       aSeSvLvPenguinS_0
 0009:8059CEBF       aRacerswimwaits
 0009:8059CED4       aRacerlandswim
 0009:8059CEE2       aSeSmLvPenguinS_1
 0009:8059CEF9       aSeSvLvPenguinS
 0009:8059CF16       aRacerswim
 0009:8059CF20       aRacerlandswims
 0009:8059CF32       aSeSmPenguinWat
 0009:8059CF4A       aWatercolumn_6
 0009:8059CF56       aRacerswimslow
 0009:8059CF64       aSeSmPenguinWat_0
 0009:8059CF7B       aRacerswimdamag
 0009:8059CF8B       aSeSvPenguinSDa
 0009:8059CFA8       aSeSmLvPenguinS_2
 0009:8059CFC1       aSeSvPenguinSHe
 0009:8059CFD9       aRacerswimsurfa
 0009:8059CFEE       aRacerwalksoon
 0009:8059CFFC       aRacerswimwaits_0
 0009:8059D00E       aRacerwaitsoon
 0009:8059D1E8       aPenguinracerle
 0009:8059D1FB       aTakeoutstar_2
 0009:8059D360       aPenguinskater
 0009:8059D36E       aPenguin_2
 0009:8059D380       aTurn_16
 0009:8059D385       aWait_134
 0009:8059D38A       aTalkturn_3
 0009:8059D393       aTalk_9
 0009:8059D398       aColorchange_7
 0009:8059D3A4       aSeSmPenguinTra_3
 0009:8059D3BB       aSeSvPenguinSTr_1
 0009:8059D3D4       aSeSvPenguinSPo_1
 0009:8059D3EF       aSeSvPenguinSSp_1
 0009:8059D408       aSeSvPenguinSSt_1
 0009:8059D438       aIceswimstart
 0009:8059D445       aIceswim
 0009:8059D44D       aSeSmPenguinSka
 0009:8059D467       aSeSmLvPenguinS_3
 0009:8059D47E       aIceswimturn
 0009:8059D48A       aCongratulate1
 0009:8059D49F       aCaught
 0009:8059D4A6       aTossstart
 0009:8059D4B0       aSeSmPenguinCau
 0009:8059D4C5       aSeSvPenguinSCa
 0009:8059D4DC       aSeSyTotalCompl_3
 0009:8059D4F1       aTosswait
 0009:8059D4FA       aCaughtwait
 0009:8059D521       aWatch_1
 0009:8059D527       aSitdowntalk_0
 0009:8059D533       aSitdown_0
 0009:8059D6B4       aPenguin
 0009:8059D6BC       aPush
 0009:8059D6C1       aPenguinstudent
 0009:8059D6D0       aColorchange_2
 0009:8059D6DC       aSwim_1
 0009:8059D6E1       aSwimturtle
 0009:8059D6EC       aSeSmLvPenguinS_0
 0009:8059D7E8       aMoonrabbit
 0009:8059D7F3       aBody_262
 0009:8059D7F8       aSpine_5
 0009:8059D7FE       aShadow_31
 0009:8059D805       aWait2_0
 0009:8059D80B       aLight_10
 0009:8059D811       aTurnsmall
 0009:8059D81B       aWait_135
 0009:8059D820       aTalk_10
 0009:8059D825       aSpin_16
 0009:8059D82A       aPress_12
 0009:8059D830       aPointing_2
 0009:8059D839       aReaction_4
 0009:8059D842       aSeSmNpcTrample_9
 0009:8059D855       aSeSvRabbitTram
 0009:8059D86B       aAppear_57
 0009:8059D872       aAppearland
 0009:8059D87D       aTurn_17
 0009:8059D882       aChange_4
 0009:8059D889       aSeSmRabbitChan
 0009:8059D8A2       aSeSmRabbitChan_0
 0009:8059D8BD       aJumpend_1
 0009:8059D8C5       aJumpstart_2
 0009:8059D8CF       aSeSmRabbitHop
 0009:8059D8E0       aJump_8
 0009:8059D8E5       aSeSmRabbitJump_3
 0009:8059D8F7       aSeSmLvRabbitPo
 0009:8059D90D       aSeSvRabbitSpin
 0009:8059D91F       aSeSmRabbitSpin
 0009:8059D931       aSeSmRabbitStar_0
 0009:8059D94D       aSeSvRabbitStar_0
 0009:8059D969       aSpinlecture
 0009:8059D975       aJumpspinlectur
 0009:8059DB47       aCaught_0
 0009:8059DB4E       aCatch_2
 0009:8059DB54       aSeSmRabbitCaug
 0009:8059DB68       aTrickrabbitlan
 0009:8059DB78       aCaughtland
 0009:8059DB83       aCatchland
 0009:8059DB8D       aSeSmLvRabbitSt
 0009:8059DBA6       aCaughtwait_0
 0009:8059DBB1       aCatchwait
 0009:8059DBBB       aTrickrabbitwai
 0009:8059DC63       aWait_136
 0009:8059DC68       aTurnsmall_0
 0009:8059DC72       aReaction_5
 0009:8059DC7B       aSeSmRabbitStar_1
 0009:8059DC97       aSeSvRabbitStar_1
 0009:8059DCB3       aPress_13
 0009:8059DCB9       aSeSmNpcTrample_10
 0009:8059DCCC       aSeSvRabbitTram_0
 0009:8059DCE2       aSpin_17
 0009:8059DCE7       aSeSvRabbitSpin_0
 0009:8059DCF9       aSeSmRabbitSpin_0
 0009:8059DD0B       aPointing_3
 0009:8059DD14       aSeSmLvRabbitPo_0
 0009:8059DDE8       aRosetta
 0009:8059DDF0       aRosettamiddle
 0009:8059DDFE       aRosettalow
 0009:8059DE24       aChin
 0009:8059DE29       aHead_11
 0009:8059DE2E       aBody_59
 0009:8059DE33       aNormal_3
 0009:8059DE63       aSpine2_4
 0009:8059DE94       aWaita
 0009:8059DE9A       aTalka_0
 0009:8059DEA0       aTalkb_0
 0009:8059DEA6       aTalkc
 0009:8059DEAC       aWaitb
 0009:8059DEB2       aBgmFlyingA
 0009:8059DEBF       aBgmSenarioSel3
 0009:8059DED1       aKoopabattlevs3_3
 0009:8059DEE6       aStmAstroOut3_0
 0009:8059DEF6       aSeSmRosettaBar
 0009:8059DF0C       aSeSvRosettaPoi
 0009:8059DF20       aSeSvRosettaSpi
 0009:8059DF33       aSeSvRosettaSta
 0009:8059E03F       aProloguestarst
 0009:8059E053       aText00_0
 0009:8059E05A       aTalkballoon
 0009:8059E066       aCrossfade1
 0009:8059E071       aCrossfade2
 0009:8059E07C       aCrossfade3
 0009:8059E087       aFadein_1
 0009:8059E08E       aWinfadein
 0009:8059E098       aRosettamonolog
 0009:8059E0AD       aAbuttonpositio_0
 0009:8059E0BD       aSeSyTalkFocusI_0
 0009:8059E0D3       aSeSyTalkOk_0
 0009:8059E0E1       aCsClickClose_0
 0009:8059E0F0       aFadeout_0
 0009:8059E0F8       aWinfadeout
 0009:8059E140       aDemowithbutler_0
 0009:8059E1A1       aAstrogalaxyRos
 0009:8059E1DB       aAstrogalaxyRos_0
 0009:8059E243       aAstrogalaxyRos_1
 0009:8059E275       aAstrogalaxyRos_2
 0009:8059E2A5       aAstrogalaxyRos_3
 0009:8059E2D7       aAstrogalaxyRos_4
 0009:8059E309       aAstrogalaxyRos_5
 0009:8059E33F       aAstrogalaxyRos_6
 0009:8059E371       aAstrogalaxyRos_7
 0009:8059E39D       aAstrogalaxyRos_8
 0009:8059E4D7       aDemoepilogueb
 0009:8059E511       aSeDmLvEpilogue
 0009:8059E5B7       aDemogetpower
 0009:8059E5E5       aLightdome
 0009:8059E5EF       aCenter_17
 0009:8059E5F6       aAppear_58
 0009:8059E608       aDomehalo
 0009:8059E661       aSeOjRosettaHal
 0009:8059E67B       aLight_11
 0009:8059E681       aDemogetpowerst
 0009:8059E697       aDisappear_12
 0009:8059E6D8       aSeSvRosettaSwi
 0009:8059E6EC       aSeSmRosettaOpS
 0009:8059E78F       aSeSmLvTicoOpWa
 0009:8059E7A5       aSeSmLvRosettaO
 0009:8059E7CC       aDemoredstar
 0009:8059E7E3       aWaitb_0
 0009:8059E890       aRosettareading
 0009:8059E89F       aDemorosettarea_0
 0009:8059E8B2       aLibraryroomRos_0
 0009:8059E8D0       aLibraryroomRos
 0009:8059E8EE       aChin_0
 0009:8059E91C       aSeSmLvTicoWait_0
 0009:8059E937       aSeSmRosettaBoo
 0009:8059EA30       aTrickrabbitbab
 0009:8059EA40       aTrickrabbit
 0009:8059EA4C       aSpine
 0009:8059EA52       aBody_60
 0009:8059EA57       aCatch
 0009:8059EA5D       aAppearsmoke
 0009:8059EA69       aSeSmRabbitJump
 0009:8059EA81       aSeSmRabbitJump_0
 0009:8059EA9A       aSeSmRabbitStar_2
 0009:8059EAB6       aSeSvRabbitStar_2
 0009:8059EAD2       aSeSvLvRabbitNe
 0009:8059EAE8       aSeSmLvRabbitRu
 0009:8059EB01       aSeSmLvRabbitRu_0
 0009:8059EB1C       aJump_9
 0009:8059EB21       aSeSmRabbitAppe
 0009:8059EB35       aSeSmRunawayRab
 0009:8059EB51       aRuntired
 0009:8059EB5A       aTossstart_0
 0009:8059EB64       aSeSmRabbitCaug_0
 0009:8059EB78       aSePvCatch_3
 0009:8059EB84       aTosswait_0
 0009:8059EB8D       aSeSmLvRabbitSt_0
 0009:8059EBA6       aToss
 0009:8059EBAB       aSePvThrow_1
 0009:8059ED08       aRunawayrabbit
 0009:8059ED16       aRunawaytico_0
 0009:8059ED3A       aSpine_6
 0009:8059ED40       aSeSyRunawayRab
 0009:8059ED5B       aSeSyRunawayRab_0
 0009:8059ED76       aSeSyRunawayRab_1
 0009:8059EE30       aTicobaby
 0009:8059EE39       aTico_1
 0009:8059EE3E       aTicomiddle
 0009:8059EE49       aTicolow
 0009:8059EE78       aRunawaytico
 0009:8059EE84       aDemomeettico
 0009:8059EEF2       aTicodemoposD
 0009:8059EF0F       aSeSmLvTicoWait_1
 0009:8059EF22       aSeSmLvTicoFloa_0
 0009:8059EF3B       aBgmMeetTicoZoo
 0009:8059EF52       aSeDmLvMeetTico
 0009:8059EF6E       aMetamorphosis_2
 0009:8059EF7C       aBody_263
 0009:8059EF9C       aMbgmGalaxy24_3
 0009:8059EFAB       aSeSmLvTicoOpWa_0
 0009:8059EFD0       aWait_137
 0009:8059EFD5       aWatchupmore
 0009:8059EFE1       aAppear_59
 0009:8059EFE8       aSeSmRunawayRab_0
 0009:8059F004       aSeSmMetamorpho_4
 0009:8059F01D       aTalk_11
 0009:8059F130       aSignboard
 0009:8059F13A       aBody_264
 0009:8059F1C8       aStraytico_0
 0009:8059F1D7       aItembubble_1
 0009:8059F1E2       aMove_34
 0009:8059F1E7       aBubble_0
 0009:8059F1EE       aBody_265
 0009:8059F1F3       aPowerstarc_0
 0009:8059F1FE       aSeSmLvStraytic_0
 0009:8059F216       aSeSmLvStraytic_1
 0009:8059F232       aBreak_51
 0009:8059F238       aSeOjItemBubble_1
 0009:8059F250       aWait_138
 0009:8059F255       aGlad_0
 0009:8059F25A       aSeSmStrayticoS
 0009:8059F26F       aSeSmStrayticoG
 0009:8059F283       aSeSvStrayticoG
 0009:8059F298       aChase_4
 0009:8059F29E       aCompletedemo
 0009:8059F378       aWaitreverse
 0009:8059F384       aTalk_17
 0009:8059F389       aStartwait_0
 0009:8059F393       aStarttalk_0
 0009:8059F39D       aDelight_0
 0009:8059F3C0       aTurn_20
 0009:8059F3C5       aTurnreverse_0
 0009:8059F3E8       aSyati
 0009:8059F3EE       aHead_12
 0009:8059F40A       aHead_33
 0009:8059F40F       aBody_266
 0009:8059F414       aTail_5
 0009:8059F419       aSpin2_0
 0009:8059F41F       aRipple_7
 0009:8059F426       aTurnsplash
 0009:8059F431       aTurn_18
 0009:8059F436       aShadowvolumeov
 0009:8059F447       aWaitdeepsea
 0009:8059F453       aWaitreverse_0
 0009:8059F45F       aOpen_19
 0009:8059F46D       aSwimwait_1
 0009:8059F47B       aTalk_12
 0009:8059F480       aOceanphantomca_5
 0009:8059F497       aStmGalaxy05
 0009:8059F4A5       aTurnreverse
 0009:8059F4B1       aNormal_24
 0009:8059F4B8       aSeSmSyatiTurn
 0009:8059F4C9       aSwim_6
 0009:8059F4CE       aSeSyRaceCountD_1
 0009:8059F4E4       aSeSyRaceStart_1
 0009:8059F4F5       aScrew_1
 0009:8059F4FB       aSeSmSyatiRoll
 0009:8059F50C       aStar_4
 0009:8059F51C       aFailure
 0009:8059F524       aMbgmGalaxy05
 0009:8059F533       aDelightdeepsea
 0009:8059F542       aDelight
 0009:8059F54A       aStartwait
 0009:8059F554       aStarttalk
 0009:8059F55E       aSyatiring
 0009:8059F568       aSeSmLvSyatiSwi
 0009:8059F57C       aBlink_5
 0009:8059F582       aSeSmSyatiTramp
 0009:8059F7AC       aTeresaracer
 0009:8059F7BD       aWaitopen
 0009:8059F7C6       aWaitopentalk
 0009:8059F7D3       aChase_5
 0009:8059F7D9       aTakeoutstarter
 0009:8059F7F0       aSeSmTereracerT
 0009:8059F808       aClose_10
 0009:8059F80E       aClosetalk
 0009:8059F818       aDefeat
 0009:8059F81F       aOpen_20
 0009:8059F824       aSeAtLvDeathPro
 0009:8059F9E8       aTicobaby_0
 0009:8059F9F1       aTico_2
 0009:8059F9F6       aTicomiddle_0
 0009:8059FA01       aTicolow_0
 0009:8059FA09       aBody_267
 0009:8059FA0E       aSpin_18
 0009:8059FA13       aWait_139
 0009:8059FA18       aTalk_13
 0009:8059FA1D       aColorchange_8
 0009:8059FA38       aCommonTico000
 0009:8059FA7C       jpt_8028C734
 0009:8059FAA4       aSeSmLvTicoWait
 0009:8059FAB7       aSeSmLvTicoFloa
 0009:8059FACB       aSeSmNpcTrample_2
 0009:8059FADE       aSeSvTicoTrampl
 0009:8059FAF2       aSeSvTicoPoint
 0009:8059FB03       aSeSmButlerAbso
 0009:8059FB17       aAppear_8
 0009:8059FB1E       aMetamorphosis
 0009:8059FB2C       aSeSmMetamorpho
 0009:8059FDC0       aCenter_18
 0009:8059FDC7       aWait_140
 0009:8059FDCC       aTalk_14
 0009:8059FDD1       aJoy2_0
 0009:8059FDD6       aSeSmLvTicofatG
 0009:8059FDEC       aEat0_0
 0009:8059FDF1       aBig0
 0009:8059FDF6       aEat1_0
 0009:8059FDFB       aBig1
 0009:8059FE00       aEat2_0
 0009:8059FE05       aBig2
 0009:8059FE0A       aExcite_0
 0009:8059FE11       aMouth_6
 0009:8059FE17       aSeSmLvTicofatA
 0009:8059FE2F       aSeSmLvTicofatE
 0009:8059FE60       aTicocomet
 0009:8059FE6A       aLeftrotate
 0009:8059FE75       aRightrotate
 0009:8059FE81       aSmall0
 0009:8059FE88       aNormal_4
 0009:8059FE8F       aSeSmNpcTrample_3
 0009:8059FEA2       aSeSvTicocometT
 0009:8059FEBB       aSeSvTicocometP
 0009:8059FED1       aSeSmTicocometS
 0009:8059FEE6       aSeSvTicocometS
 0009:8059FF05       aDemo
 0009:8059FF0A       aSeSmTicofatMet
 0009:8059FF22       aSeSmTicofatMet_0
 0009:8059FF35       aSeSmMetamorpho_0
 0009:8059FF4E       aSeDmTicofatMor
 0009:8059FF6A       aSeDmTicofatMor_0
 0009:805A016F       aDemogetpower_0
 0009:805A01B8       aSeSmTicoOpAppe
 0009:805A01CD       aSeSmTicoOpAppe_0
 0009:805A01E6       aSeSvTicoOpAppe
 0009:805A020F       aBgmStarPowGet
 0009:805A0220       aSeSmLvTicoWait_2
 0009:805A0233       aSeSmTicoFlashS
 0009:805A0249       aSeSmTicoFlashL
 0009:805A0260       aSeSmTicoFusion
 0009:805A0272       aSePvPowerStarG
 0009:805A02D8       aTico_3
 0009:805A02DD       aColorchange_9
 0009:805A02E9       aShadow_32
 0009:805A02F0       aWait_141
 0009:805A02F5       aSeSmLvTicoWait_3
 0009:805A0311       aSeSmLvTicoFlyD
 0009:805A0328       aMetamorphosis_3
 0009:805A0336       aSeSmTicoMetamo_0
 0009:805A03F8       aInformationpla
 0009:805A040A       aEat2
 0009:805A040F       aEatstart
 0009:805A0418       aEatstart2
 0009:805A0422       aWait_21
 0009:805A0427       aWait2
 0009:805A042D       aExcite
 0009:805A0434       aExcite2
 0009:805A043C       aJoy2
 0009:805A0441       aEat1
 0009:805A0446       aEatstart1
 0009:805A0450       aWait1
 0009:805A0456       aExcite1
 0009:805A045E       aJoy1
 0009:805A0463       aEat0
 0009:805A0468       aEatstart0
 0009:805A0472       aWait0
 0009:805A0478       aExcite0
 0009:805A0480       aJoy0
 0009:805A0485       aTicofat
 0009:805A049C       aCenter_6
 0009:805A04A3       aMouth
 0009:805A04A9       aCommonTicofat0
 0009:805A04BB       aCommonTicofat0_0
 0009:805A04EB       aTicofatgoodsst
 0009:805A0501       aSmall0_1
 0009:805A0508       aNormal_25
 0009:805A0518       aTalk_15
 0009:805A051D       aSeSmLvTicoWait_4
 0009:805A0530       aFatred
 0009:805A0537       aBody_268
 0009:805A053C       aSpine1_7
 0009:805A0543       aTicofatscreene
 0009:805A0557       aTicofatscreene_0
 0009:805A0570       aTicofatscreene_1
 0009:805A0587       aSeSmTicofatAbs
 0009:805A059C       aTicofatgoodsst_0
 0009:805A05B5       aSeSmNpcTrample_11
 0009:805A05C8       aSeSvTicofatTra
 0009:805A05DF       aSeSvTicofatPoi
 0009:805A05F3       aSeSmTicofatSpi
 0009:805A0606       aSeSvTicofatSta
 0009:805A0623       aSeSmLvTicofatE_0
 0009:805A063B       aChem
 0009:805A0640       aSeSmTicofatMax
 0009:805A0652       aSeSmLvTicofatG_0
 0009:805A0668       aMetamorphosis_4
 0009:805A0676       aSeSmTicofatMet_3
 0009:805A0689       aSeSmTicofatMet_4
 0009:805A06A1       aSeSmMetamorpho_5
 0009:805A06BA       aDemo_1
 0009:805A06BF       aSeDmTicofatMor_1
 0009:805A06D7       aSeDmTicofatMor_2
 0009:805A06F4       aSeDmTicofatMor_3
 0009:805A0710       aDummy_1
 0009:805A0716       aTicofatlight
 0009:805A0723       aBgmAppearPlane
 0009:805A0735       aSeSyTalkOk_1
 0009:805A0978       aInformationgal
 0009:805A099B       aMouth_7
 0009:805A0A40       aTico_4
 0009:805A0A45       aBody_269
 0009:805A0A4A       aShadow_33
 0009:805A0A51       aColorchange_10
 0009:805A0A7A       aTurn_19
 0009:805A0A7F       aSpin_19
 0009:805A0A84       aWait_142
 0009:805A0A89       aTalk_16
 0009:805A0A8E       aReaction_6
 0009:805A0A97       aCallback
 0009:805A0BB8       aTico_5
 0009:805A0BBD       aColorchange_11
 0009:805A0BC9       aShadow_34
 0009:805A0BD0       aDemorosettarea_1
 0009:805A0C88       aTicoshop
 0009:805A0C91       aCenter_7
 0009:805A0C98       aMouth_0
 0009:805A0C9E       aShake
 0009:805A0CA4       aCommonTicoshop
 0009:805A0CB7       aSmall0_0
 0009:805A0CBE       aMetamorphosis_0
 0009:805A0CCC       aSeSmNpcTrample_4
 0009:805A0CDF       aSeSvTicoshopTr
 0009:805A0CF7       aSeSvTicoshopPo
 0009:805A0D0C       aSeSmTicoshopSp
 0009:805A0D20       aSeSvTicoshopSt
 0009:805A0D3E       aDemo_0
 0009:805A0D43       aSeSmTicofatMet_1
 0009:805A0D5B       aSeSmTicofatMet_2
 0009:805A0D6E       aSeSmMetamorpho_1
 0009:805A0EA0       aAstrogalaxyTic
 0009:805A0EBA       aTamakoroexlv2g_1
 0009:805A0ECE       aSurfinglv2gala_3
 0009:805A0EDF       aCubebubbleexlv_4
 0009:805A0EF5       aPeachcastlefin_3
 0009:805A0F0C       aUnknown_1
 0009:805A0FB3       aLight_12
 0009:805A0FB9       aTrickrabbit_3
 0009:805A0FC5       aBody_270
 0009:805A0FCA       aSpine_7
 0009:805A0FD0       aCatch_3
 0009:805A0FD6       aStartevent_1
 0009:805A0FE1       aSeSmRabbitStar_3
 0009:805A0FFD       aSeSvRabbitStar_3
 0009:805A1019       aSeSmNpcTrample_12
 0009:805A102C       aSeSvRabbitTram_1
 0009:805A1047       aFalldownland
 0009:805A1054       aFollowme_0
 0009:805A105D       aBrake_1
 0009:805A1063       aFall_14
 0009:805A1068       aFalldownloop
 0009:805A1075       aFalldownend
 0009:805A1081       aSeSyTotalCompl_4
 0009:805A109D       aWait_143
 0009:805A10A2       aGiveuptalk_0
 0009:805A10AD       aSeSmRabbitJump_4
 0009:805A10BF       aJumpstart_3
 0009:805A10C9       aJumpstartloop
 0009:805A10D7       aJump_10
 0009:805A10DC       aThicketjump
 0009:805A10E8       aSeSmRabbitThic
 0009:805A10FD       aSeSyE3TimerCou_2
 0009:805A1114       aSeSyE3TimerCou_3
 0009:805A112B       aSeSyE3TimerCou_4
 0009:805A1142       aSePmLastDamage
 0009:805A1348       aTrickrabbit_0
 0009:805A1354       aShadow_10
 0009:805A135B       aLight_2
 0009:805A1361       aBody_61
 0009:805A1366       aSpine_0
 0009:805A136C       aCatch_0
 0009:805A1372       aStartevent
 0009:805A1382       aBattlewait_9
 0009:805A1394       aWait_144
 0009:805A1399       aGiveuptalk_1
 0009:805A13A4       aSeSmRabbitJump_5
 0009:805A13BC       aSeSmRabbitJump_6
 0009:805A14F5       aSnowrabbitcoll
 0009:805A1512       aSeSyTotalCompl_5
 0009:805A1556       aBattlewait_10
 0009:805A1561       aSeSyE3TimerTim_1
 0009:805A1578       aSeSyE3TimerCou_5
 0009:805A158F       aSeSyE3TimerCou_6
 0009:805A15A6       aSeSyE3TimerCou_7
 0009:805A15BD       aSePmLastDamage_0
 0009:805A15CF       aTakeoutstartri
 0009:805A15E6       aWait_145
 0009:805A15EB       aPowerstarc_1
 0009:805A17A4       aTrickrabbit_1
 0009:805A17B0       aShadow_11
 0009:805A17B7       aLight_3
 0009:805A17BD       aSnowrabbit
 0009:805A17C8       aBody_62
 0009:805A17CD       aSpine_1
 0009:805A17D3       aCatch_1
 0009:805A17D9       aGiveuptalk
 0009:805A17E4       aSeSmRabbitStar
 0009:805A1800       aSeSvRabbitStar
 0009:805A181C       aStartevent_0
 0009:805A1827       aChange_1
 0009:805A182E       aSeSmRabbitHide
 0009:805A1840       aSeSmMetamorpho_2
 0009:805A1862       aAppearsmoke_0
 0009:805A186E       aJump_11
 0009:805A1873       aSeSmRabbitAppe_0
 0009:805A1887       aSeSmRunawayRab_1
 0009:805A18AA       aSeOjStarPieceB_61
 0009:805A18C1       aSeSmRabbitJump_7
 0009:805A18D9       aSeSmRabbitJump_8
 0009:805A1A3B       aRabbitfootprin
 0009:805A1AF0       aEggstargalaxy_0
 0009:805A1AFE       aStardustgalaxy_2
 0009:805A1B0D       aSandclockgalax_3
 0009:805A1B1D       aCannonfleetgal_3
 0009:805A1B2F       aPhantomgalaxy_3
 0009:805A1B3D       aCosmosgardenga_2
 0009:805A1B50       aFactorygalaxy_2
 0009:805A1B5E       aReversekingdom_2
 0009:805A1B73       aBlack
 0009:805A1BDC       aBody_63
 0009:805A1BE1       aShadow_12
 0009:805A1CB8       aMmodel
 0009:805A1CBF       aMmakeactor
 0009:805A1CCA       aMhostio
 0009:805A1CD2       aMmessage
 0009:805A1CDB       aMmessageoffset
 0009:805A1CEA       aMinterpole
 0009:805A1CF5       aMconnectto
 0009:805A1D00       aMlightctrl
 0009:805A1D0B       aMeffect
 0009:805A1D13       aMsound
 0009:805A1D1A       aMsoundsize
 0009:805A1D25       aMattribute
 0009:805A1D30       aMposition
 0009:805A1D3A       aMlodctrl
 0009:805A1D43       aMnerve
 0009:805A1D4A       aMbinder
 0009:805A1D52       aMbindersize
 0009:805A1D5E       aMsensor
 0009:805A1D66       aMsensorjoint
 0009:805A1D73       aMsensorsize
 0009:805A1D7F       aMsensormax
 0009:805A1D8A       aMshadow
 0009:805A1D92       aMshadowsize
 0009:805A1D9E       aMrailrider
 0009:805A1DA9       aMswitchdead
 0009:805A1DB5       aMswitchappear
 0009:805A1DC3       aMpointer
 0009:805A1DCC       aMpointersize
 0009:805A1DD9       aMgoods0
 0009:805A1DE1       aMgoods1
 0009:805A1DE9       aMgoodsjoint0
 0009:805A1DF6       aMgoodsjoint1
 0009:805A1E88       aNpcdataArc
 0009:805A1EB8       aSitemBcsv
 0009:805A1F40       aBalloon
 0009:805A1F48       aText00_1
 0009:805A1F4F       aAppear_60
 0009:805A1F56       aBeak
 0009:805A1F5B       aPicbeak
 0009:805A1F63       aTalkballoonstr
 0009:805A1F76       aOneline
 0009:805A1F7E       aTwoline
 0009:805A1F86       aTxttext
 0009:805A1F8E       aTalkballooneve
 0009:805A1F9F       aAbuttonpositio_1
 0009:805A1FAF       aSeSyTalkOk_2
 0009:805A1FBD       aShabeak
 0009:805A1FC5       aSeSyTalkFocusI_1
 0009:805A1FDB       aSeSmTalkblnOpe
 0009:805A1FEE       aStmKinopioTank
 0009:805A2003       aWait_146
 0009:805A2008       aSignboardballo
 0009:805A2019       aTalkballoonlet
 0009:805A2315       aSelectSYes
 0009:805A2323       aSelectSNo
 0009:805A2330       aSeSyTalkFocusI_2
 0009:805A2346       aSeSyTalkSelect_2
 0009:805A235C       aSeSmTalkblnOpe_0
 0009:805A2421       aMessagearea_0
 0009:805A2434       jpt_802A0430
 0009:805A246C       aPenguinrace
 0009:805A2478       aSwimmingschool
 0009:805A2487       aBombtimeattack
 0009:805A2499       aPhantomteresar
 0009:805A24AC       aBombtimeattack_0
 0009:805A24BE       aTrialsurfingco
 0009:805A24D0       aTrialsurfingho
 0009:805A24E2       aDeathpromenade_2
 0009:805A24FC       aRosettafinalba
 0009:805A250F       aComettico
 0009:805A2519       aTransformtico
 0009:805A2527       aChallengesurfi
 0009:805A253D       aTicoshopexchan
 0009:805A254E       aTicoshopwhich
 0009:805A255C       aKinopiopurple
 0009:805A256A       aCometticotell
 0009:805A2578       aTrialtamakoroh
 0009:805A258B       aKnockonthedoor
 0009:805A259C       jpt_802A0CFC
 0009:805A2610       aSS03d
 0009:805A2650       aSeSmTalkButton
 0009:805A2669       aSeSyTalkStart
 0009:805A267A       aCsClickOpen
 0009:805A2768       aNw4rPointerMus
 0009:805A278A       aLinklistH
 0009:805A2798       aMariofireball
 0009:805A27A6       aBreak_52
 0009:805A27AC       aSeOjMarioFireB
 0009:805A27C8       aBody_271
 0009:805A27CD       aRoll_0
 0009:805A27D2       aSeOjMarioFireB_0
 0009:805A27EC       aCsFireBall
 0009:805A27F9       aSeOjMarioFireB_1
 0009:805A28A9       aSeBmGhostMario
 0009:805A28C2       aSeBvGhostMario
 0009:805A28E5       aSeBmGhostMario_0
 0009:805A28FE       aSeBvGhostMario_0
 0009:805A2921       aSeBmGhostMario_1
 0009:805A293A       aSeBvGhostMario_1
 0009:805A2BC6       aGhostdata
 0009:805A2BD0       aGhostluigi
 0009:805A2BDB       aGhostmario
 0009:805A2BFD       aSluigiGst
 0009:805A2C09       aSGst
 0009:805A2C10       aArc
 0009:805A2C15       aBody_272
 0009:805A2C73       aHandr_5
 0009:805A2C79       aShadow_35
 0009:805A2C80       aSeBmLvGhostMar
 0009:805A2C9D       aPowerstarget_0
 0009:805A2CAA       aSeBmGhostMario_2
 0009:805A2CC3       aSeBvGhostMario_2
 0009:805A2D2F       aSeBvGhostMario_3
 0009:805A2D46       aSeBmGhostMario_3
 0009:805A2D5D       aSeBvGhostMario_4
 0009:805A2DC3       aSePvSquat
 0009:805A2DCF       aSeSyRaceCountD_2
 0009:805A2DE5       aSeBvGhostMario_5
 0009:805A2E06       aSeSyRaceStart_2
 0009:805A2E28       aBgmRaceLose_0
 0009:805A2E43       aSeBvGhostMario_6
 0009:805A2E59       aDieswimevent
 0009:805A2E71       aSeOjStarPieceB_62
 0009:805A2E8A       aSeOjStarPieceB_63
 0009:805A2F1A       aSpine1_8
 0009:805A2F39       aPartscontrol
 0009:805A31D8       aKoura_3
 0009:805A3258       aMarinesnow
 0009:805A32A9       aEpiloguedemost_2
 0009:805A32BB       aSeSyCameraNg_0
 0009:805A34BA       aDummy_2
 0009:805A34C5       aFootprintBti_0
 0009:805A34F3       aHandr_6
 0009:805A3678       jpt_802AFA60
 0009:805A36F0       aSeSySuperKinok
 0009:805A3712       aChange_5
 0009:805A3779       aBody_273
 0009:805A37FC       aHandl_2
 0009:805A3802       aFace0_0
 0009:805A3808       aFootr_1
 0009:805A380E       aSpine1_9
 0009:805A3815       aCapposition_0
 0009:805A3821       aSpine2_5
 0009:805A3853       aDamagewait_2
 0009:805A386C       jpt_802B28B0
 0009:805A388C       aColorchange_3
 0009:805A3898       aCenter_8
 0009:805A389F       aAllRoot
 0009:805A38A8       aHandl0
 0009:805A38AF       aHandr0
 0009:805A38B6       aFootl
 0009:805A3AFC       aLuigi
 0009:805A3B02       aMarioanime
 0009:805A3B0D       aMario_0
 0009:805A3B13       aElementend
 0009:805A3B1E       aBeeluigi_0
 0009:805A3B27       aBeeluigiArc
 0009:805A3B34       aBeemario_0
 0009:805A3B3D       aBeemarioArc
 0009:805A3B4A       aBeemariowing_0
 0009:805A3B57       aFace0
 0009:805A3B5D       aBWing
 0009:805A3B64       aHopperluigi_0
 0009:805A3B70       aHopperluigiArc
 0009:805A3B80       aHoppermario_0
 0009:805A3B8C       aHoppermarioArc
 0009:805A3B9C       aIceluigi_0
 0009:805A3BA5       aIceluigiArc
 0009:805A3BB2       aIcemario_0
 0009:805A3BBB       aIcemarioArc
 0009:805A3BD1       aInvincibleluig_0
 0009:805A3BE1       aInvincibleluig_1
 0009:805A3BF5       aInvinciblemari_2
 0009:805A3C05       aInvinciblemari_3
 0009:805A3C19       aTeresaluigi_0
 0009:805A3C25       aTeresamario_0
 0009:805A3C3C       aLuigitornado
 0009:805A3C49       aMariotornado
 0009:805A3C56       aBoneluigi
 0009:805A3C60       aBonemario
 0009:805A3C6A       aHandr_7
 0009:805A3C70       aEyelidV
 0009:805A3C79       aMariotornadoen
 0009:805A3C89       aMariotornadolo
 0009:805A3C9A       aHandr0_0
 0009:805A3CA1       aHandl0_0
 0009:805A3CA8       aMarioEyelid0
 0009:805A3CB7       aLuigiface
 0009:805A3CC1       aMarioface
 0009:805A3CCB       aPartscontrol_0
 0009:805A3DE6       aBody_274
 0009:805A3EE8       aBody_275
 0009:805A3EF0       aBody_276
 0009:805A4071       aBeewallshortdi_0
 0009:805A4086       aNormal_26
 0009:805A4090       aHandr0_1
 0009:805A4097       aHandl0_1
 0009:805A409E       aIcemariohandl_0
 0009:805A40AC       aIcemariohandr_0
 0009:805A40BA       aMariohandl
 0009:805A40C5       aMariohandr
 0009:805A40D0       aInvinciblemari_4
 0009:805A40E5       aInvinciblemari_5
 0009:805A40FA       aPartscontrol_1
 0009:805A41A8       jpt_802BB70C
 0009:805A41FD       aMariofreezeice
 0009:805A422A       aSpintico_0
 0009:805A4233       aHandr_8
 0009:805A4239       aHandl_3
 0009:805A423F       aWait_147
 0009:805A4244       aFlywait_1
 0009:805A424C       aFlyfall
 0009:805A4275       aBody_277
 0009:805A4289       aSleepstart_0
 0009:805A42A3       aSleep_1
 0009:805A4328       aNomal
 0009:805A432E       aBreak_53
 0009:805A4349       aSpintimer
 0009:805A435E       aCenter_19
 0009:805A4478       aBody_278
 0009:805A4486       aDummy_3
 0009:805A4495       aPullout
 0009:805A4540       aBody_279
 0009:805A4545       aExEye
 0009:805A454C       aDummy_4
 0009:805A4552       aSpine1_10
 0009:805A4559       aSpin2nd_1
 0009:805A4788       aLuigishadow
 0009:805A4794       aMarioshadow
 0009:805A47AF       aAllRoot_0
 0009:805A47B8       aExtrawallcheck_1
 0009:805A47CB       aExtrawallcheck_2
 0009:805A47E2       aShoulderl
 0009:805A47EC       aShoulderr_0
 0009:805A47F6       aHandl0_2
 0009:805A47FD       aHandr0_2
 0009:805A4804       aJointroot_3
 0009:805A48B0       aFace0_1
 0009:805A48D2       aSpine1_11
 0009:805A5DF0       aBgmMutekiA
 0009:805A5DFD       aBgmIceA
 0009:805A5E07       aBgmFireA
 0009:805A5E12       aBgmFlyingA_0
 0009:805A5E30       aColorchange_12
 0009:805A5E3C       aGlow_6
 0009:805A5E5C       aTornadoelement
 0009:805A5E93       aInvinciblemari_6
 0009:805A5EA3       aInvinciblemari_7
 0009:805A5EB8       aInvinciblemari_8
 0009:805A5ECD       aElementend_0
 0009:805A5EFD       aErase_2
 0009:805A5F03       aAppear_61
 0009:805A5F0A       aWait_148
 0009:805A5F40       jpt_802C458C
 0009:805A5F68       jpt_802C4418
 0009:805A5FA6       aDieblackhole_0
 0009:805A5FB3       aDieblackholebe
 0009:805A5FC3       aDieblackholelu
 0009:805A60D2       aEyelidV_0
 0009:805A60E0       aBody_280
 0009:805A6103       aDummy_5
 0009:805A61C8       aBody_281
 0009:805A61DC       jpt_802C6E88
 0009:805A6228       jpt_802C7BC8
 0009:805A6398       aBody_282
 0009:805A63D0       aBody_283
 0009:805A6516       aDieblackhole
 0009:805A65F5       aWalksoft
 0009:805A65FE       aWalk_20
 0009:805A6603       aWait_186
 0009:805A6803       aWaitslopel
 0009:805A680E       aWaitsloper
 0009:805A6828       aWaitsloped
 0009:805A6833       aWaitslopeu
 0009:805A6A49       aSquatwait
 0009:805A6A53       aSquatwalk_0
 0009:805A6AE1       aJump_13
 0009:805A6B00       aJumproll
 0009:805A74F9       aRunend
 0009:805A78B4       aJumpback_0
 0009:805A829A       aSpin_23
 0009:805A82AA       aSpinground
 0009:805AF6A8       aLuigirun
 0009:805AF6B1       aLuigijump
 0009:805AF6BB       aLuigijumproll
 0009:805AF6C9       aLuigijumpback
 0009:805AF6D7       aLuigirunend
 0009:805AF6E3       aLuigispin
 0009:805AF6ED       aLuigispingroun
 0009:805AF6FD       aSpaceflyshort_0
 0009:805AF70B       aLuigispaceflys
 0009:805AF71E       aLuigiwait_0
 0009:805AF728       aLuigiwaitslope
 0009:805AF738       aLuigiwaitslope_0
 0009:805AF748       aLuigiwaitslope_1
 0009:805AF758       aLuigiwaitslope_2
 0009:805AF82E       aPulloutgraspen
 0009:805AF8A5       aSquatwalk
 0009:805AF8AF       aBeecreepwalk
 0009:805AF8BC       aWalk_19
 0009:805AF906       aDamagewait_3
 0009:805AF911       aArmr1_0
 0009:805AF917       aArml1_0
 0009:805AF91D       aHead_34
 0009:805AF922       aShoulderl_0
 0009:805AF92C       aShoulderr_1
 0009:805AF94E       aSpine1_12
 0009:805AF955       aPartscontrol_2
 0009:805AF962       aSpine1
 0009:805AF969       aArmr2_0
 0009:805AF96F       aSpine2_1
 0009:805AF9BC       aPullout_0
 0009:805AF9E5       aCarrystart
 0009:805AFA0C       aSwimbubble_1
 0009:805B0096       aNonsleepcube_0
 0009:805B02FC       aSpine1_13
 0009:805B031E       aGhostthroughco_0
 0009:805B0394       aSidefall
 0009:805B039E       aLSidefall
 0009:805B03AA       aRSidefall
 0009:805B03B6       aFSidefall
 0009:805B03C2       aForceTrans
 0009:805B03CE       aForceTrs2
 0009:805B03D9       aForceTrs3
 0009:805B03E4       aNoGBack
 0009:805B03EF       aNoG
 0009:805B03F4       aCubecamera_5
 0009:805B03FF       aPullbackcube_0
 0009:805B040C       aPullbackcylind_0
 0009:805B041D       aPlanecollision_0
 0009:805B0430       aTowermodecylin_0
 0009:805B0442       aForbidtriangle_0
 0009:805B0459       aGlaringlightar_2
 0009:805B046A       aFallscube_0
 0009:805B047F       aHeavysteeringc_0
 0009:805B0491       aDashchargecyli_0
 0009:805B04A4       aRasterscrollcu_0
 0009:805B04B5       aForbidjumpcube_0
 0009:805B04C4       aDarkmattercube_0
 0009:805B04D4       jpt_802D17D4
 0009:805B0550       jpt_802D1DD8
 0009:805B1639       aModule
 0009:805B20F8       aNotsidestep_1
 0009:805B2104       aNoaction_1
 0009:805B23C7       aHipdropsmoke
 0009:805B23D4       aHipdropwater
 0009:805B23E1       aHipdropflower
 0009:805B23EF       aHipdropsand
 0009:805B23FB       aHipdropsnow
 0009:805B2407       aMudcircle
 0009:805B2411       aHoneycircle
 0009:805B258C       aHoney_0
 0009:805B2592       aSand_1
 0009:805B2598       jpt_802DC244
 0009:805B2A10       aSmokesphere
 0009:805B2A1C       aSmokesphereloo
 0009:805B2A2C       aSmokecircle
 0009:805B2A38       aSmokecircleloo
 0009:805B2A48       aWatersphere
 0009:805B2A54       aWatersphereloo
 0009:805B2A64       aWatercircle
 0009:805B2A70       aWatercircleloo
 0009:805B2A80       aFlowercircle
 0009:805B2A8D       aFlowerspherelo
 0009:805B2A9E       aSandcircle
 0009:805B2AA9       aSandsphereloop
 0009:805B2AB8       aSnowsphere
 0009:805B2AC3       aSnowsphereloop
 0009:805B2AD2       aSnowcircle
 0009:805B2ADD       aSnowcircleloop
 0009:805B2AEC       aSmokespherefol
 0009:805B2AFE       aSmokespherefol_0
 0009:805B2B15       aSmokecirclefol
 0009:805B2B27       aSmokecircleloo_0
 0009:805B2B3D       aMudsphere
 0009:805B2B47       aMudsphereloop
 0009:805B2B55       aMudcircleloop
 0009:805B2B63       aHoneysphere
 0009:805B2B6F       aHoneysphereloo
 0009:805B2B7F       aHoneycircleloo
 0009:805B2B8F       aFootr
 0009:805B2B95       aHandr_1
 0009:805B2B9B       aSpine1_4
 0009:805B2BC0       jpt_802DC71C
 0009:805B2BE8       jpt_802DCD6C
 0009:805B2C10       jpt_802DCA60
 0009:805B2C38       aMario_1
 0009:805B2C3E       aSlipup
 0009:805B2C54       aWallspark
 0009:805B2C69       aDamage_24
 0009:805B2C79       aStepon
 0009:805B2C8B       aSuperspindrive_14
 0009:805B2CB9       aBringbubble
 0009:805B2CD0       aBringbubblebre
 0009:805B2CF0       aWatersplashrig
 0009:805B2D0A       aWatersplashlef
 0009:805B2D23       aWatersplashsri
 0009:805B2D40       aWatersplashsle
 0009:805B2D5C       aSpinlightburst
 0009:805B2D7C       aElectricdamage
 0009:805B2D94       aFiredamagesmok
 0009:805B2DB1       aBluefiredamage
 0009:805B2DD4       aSpinlight
 0009:805B2DEB       aIcemariospinli
 0009:805B2E0A       aFiremariospinl
 0009:805B2E2C       aBeemariospinli
 0009:805B2E49       aBeeluigispinli
 0009:805B2E6E       aSweat
 0009:805B2E7B       aCarrystartshor
 0009:805B2E9A       aAirrecover
 0009:805B2EAE       aInvincible
 0009:805B2EC9       aFireballthrow
 0009:805B2EEA       aThrow_1
 0009:805B2EFB       aDieburybody
 0009:805B2F12       aDieburyhand
 0009:805B2F29       aDiedeathmudbod
 0009:805B2F44       aDiedeathmudhan
 0009:805B2F5F       aSpinlightconce
 0009:805B2F7F       aFoomariohandgl
 0009:805B2FA4       aFoomariohandgl_0
 0009:805B2FC9       aFoomariobrakel
 0009:805B2FF1       aFoomariobrakel_0
 0009:805B3019       aFoomarioendl
 0009:805B3037       aFoomarioendr
 0009:805B3055       aWallhit_2
 0009:805B3066       aBarrierbound
 0009:805B307E       aWaterbound
 0009:805B3094       aIcewalljump
 0009:805B30AD       aCeilingcrash
 0009:805B30C5       aCoin_7
 0009:805B30D1       aPunchhit
 0009:805B30E7       aWaterripple
 0009:805B30FA       aSwimwaitripple
 0009:805B311A       aSwimspinlight
 0009:805B3133       aDivebubble
 0009:805B3149       aWatercolumns
 0009:805B3167       aSurfacewave
 0009:805B317C       aBodybubble
 0009:805B3192       aMouthbubble
 0009:805B31A7       aSeasmoke
 0009:805B31B9       aMetamorphosis_5
 0009:805B31CC       aMetamorphosise
 0009:805B31E6       aBeeflowerpolle
 0009:805B3205       aSkatel
 0009:805B3217       aSkater
 0009:805B3229       aIcejumpland
 0009:805B3242       aFlowerspin
 0009:805B324D       aBlur_4
 0009:805B3265       aSpinring
 0009:805B327B       aVanish_7
 0009:805B32A0       aCrestgetflyc
 0009:805B32BC       aCommonphotondu
 0009:805B32DC       aMariospacedust
 0009:805B3308       aMinipandaspinl
 0009:805B3332       aIndtest
 0009:805B3347       aTestmariobaoba
 0009:805B336F       aTornadochargee
 0009:805B338B       aTornadocharge
 0009:805B33A6       aApplehit
 0009:805B33AF       aLandrubber
 0009:805B33C3       aDiedarkmatter
 0009:805B33E2       aHoppermariohip
 0009:805B3406       aHopperluigihip
 0009:805B3432       aHipdropblur
 0009:805B3443       aHipdropblurlui
 0009:805B3461       aGetagain
 0009:805B348A       aMariopunchlblu
 0009:805B34A9       aMariopunchrblu
 0009:805B34B9       aWatercolumn_7
 0009:805B3513       aEffectcylinder_0
 0009:805B3522       aSmokeeffectcol_0
 0009:805B37B8       aCelestrialsphe_0
 0009:805B37C9       aFoolineBti
 0009:805B3819       aHandl_4
 0009:805B381F       aHandr_9
 0009:805B3E34       aNoaction_2
 0009:805B3E46       aNotwallslip_0
 0009:805B411D       aSand_2
 0009:805B4200       jpt_802E80D8
 0009:805B423C       jpt_802E7E94
 0009:805B426C       jpt_802E7C04
 0009:805B43C8       aPPlanetmap
 0009:805B4410       jpt_802E959C
 0009:805B448C       jpt_802E961C
 0009:805B47D0       aPlanemodecube_2
 0009:805B47DE       aPlanecircularm_0
 0009:805B47F4       aPipemodecube_0
 0009:805B4A45       aSpine1_14
 0009:805B4B4D       aSearchlightcon
 0009:805B4B6C       aHandr_2
 0009:805B4B72       aGlow_0
 0009:805B4BF0       aNotsidestep
 0009:805B4BFC       aNoaction
 0009:805B6CE3       aSeSyTrampleCom
 0009:805B6D0A       aHellprominence_4
 0009:805B6D1F       aCannonfleetgal_7
 0009:805B6D31       aAstrogalaxy_9
 0009:805B6D3D       aBattleshipgala_5
 0009:805B6D4E       aSandclockgalax_5
 0009:805B6D5E       aTrileglv1galax_4
 0009:805B6D6E       aHeavensdoorgal_9
 0009:805B6F58       aStick_0
 0009:805B72A3       aNotwallslip_1
 0009:805B72AF       aNoaction_3
 0009:805B736E       aNotwalljump_0
 0009:805B748D       aNotgrab_0
 0009:805B7495       aNoaction_4
 0009:805B74BA       aModule_0
 0009:805B790C       aWaterarea
 0009:805B79B8       aBrakelamp_0
 0009:805B79E6       aModule_1
 0009:805B7A0D       aForbidwatersea_0
 0009:805B7CE9       aSeOjStarPieceB_64
 0009:805B7D05       aBody_284
 0009:805B7D0A       aDummy_6
 0009:805B7D1D       aSeOjMorphItemI_0
 0009:805B7D38       jpt_80304700
 0009:805B7EBB       aForceTrans_0
 0009:805B80A9       aRunslope
 0009:805B80B2       aDamagewait_4
 0009:805B80F5       aTripod
 0009:805B80FC       aTripod_0
 0009:805B8135       aSand_3
 0009:805B8240       aMariodummyitem
 0009:805B824F       aPickupball
 0009:805B825A       aDummyitem
 0009:805B8264       aDummypoly
 0009:805B82E8       aModule_2
 0009:805B85C0       aNoslip_0
 0009:805B85C7       aSand_4
 0009:805B87B2       aCsTeresa
 0009:805B87E6       aWallhit_3
 0009:805B87FD       aFallquicklysta
 0009:805B881C       aBlink_6
 0009:805B8822       aSleep_2
 0009:805B8828       aSleep_3
 0009:805B882E       aWait_149
 0009:805B8833       aSpin_20
 0009:805B8838       aFall_15
 0009:805B88E8       aWait_187
 0009:805B8B58       aWarpcube_0
 0009:805B8B6A       aModule_3
 0009:805B8D60       aSeSyCameraFpVi
 0009:805B8D7A       aSeSyCameraRese_0
 0009:805B8E20       aMariotornadost
 0009:805B8E32       aMariotornadoen_0
 0009:805B8E42       aMariotornadolo_0
 0009:805B8E53       aSePmLvTornadeF
 0009:805B8F6D       aPullback_1
 0009:805B8F76       aGlass_0
 0009:805B90FE       aBgmGameover
 0009:805B91C6       aBgmMiss
 0009:805B9348       aBgmMiss_0
 0009:805B94D3       aBgmMiss_1
 0009:805B969B       aBgmMiss_2
 0009:805B9838       aBgmMiss_3
 0009:805BA348       aBigbubble
 0009:805BA352       aPushwind
 0009:805BA35B       aRide_0
 0009:805BA360       aBody_285
 0009:805BA365       aBind_5
 0009:805BA36A       aMerge
 0009:805BA370       aSeOjBigBubbleM
 0009:805BA387       aBreak_54
 0009:805BA38D       aSeOjBigBubbleB
 0009:805BA3A4       aSeOjBigBubbleA
 0009:805BA3BC       aSpacewait_1
 0009:805BA3C6       aBigbubblecaptu
 0009:805BA3D7       aSeOjBigBubbleM_0
 0009:805BA3F1       aSwimdive_0
 0009:805BA3FA       aBigbubbleescap
 0009:805BA40A       aSePvHipDrop
 0009:805BA419       aSePmPreHipdrop
 0009:805BA42B       aSeSyReadRiddle_18
 0009:805BA43F       aSeSyLvBigBubbl
 0009:805BA540       aBind_6
 0009:805BA54C       aCreeperArc
 0009:805BA558       aStalkBti
 0009:805BA56F       aCreeperflower
 0009:805BA58A       aCreeperleaf
 0009:805BA596       aWait_150
 0009:805BA59B       aGrowplantcatch
 0009:805BA5AA       aGrowplanthangu
 0009:805BA5BA       aGrowplanthangd
 0009:805BA5CC       aSePvJumpS_2
 0009:805BA5D9       aSeOjCreeperSwi
 0009:805BA5ED       aSeOjLvCreeperD
 0009:805BA603       aSePvCatch_4
 0009:805BA60F       aSePmGrabObj
 0009:805BA61E       aGrowplantjump
 0009:805BA62C       aSeOjCreeperUpS
 0009:805BA643       aSePvJumpJoy_9
 0009:805BA652       aSePmJumpL
 0009:805BA65F       aSeOjCreeperFli
 0009:805BA672       aSeOjLvCreeperU
 0009:805BA750       aFluff
 0009:805BA756       aBind_7
 0009:805BA75B       aBody_286
 0009:805BA760       aMariohang
 0009:805BA76A       aWindreceiver
 0009:805BA777       aDamagemario
 0009:805BA783       aDamagemiddle
 0009:805BA790       aJoint3
 0009:805BA797       aDamagehead
 0009:805BA7A2       aHead_35
 0009:805BA7C9       aFluffleaf
 0009:805BA7D3       aBloom_4
 0009:805BA7D9       aWait_151
 0009:805BA7DE       aWaitair
 0009:805BA7E6       aSpin_21
 0009:805BA7EB       aSeOjFluffRiseU
 0009:805BA804       aSplash_2
 0009:805BA80B       aSeOjFluffBreak
 0009:805BA81D       aFluffstart
 0009:805BA828       aFlufffly
 0009:805BA831       aFluffflylast
 0009:805BA83E       aHardwind
 0009:805BA847       aFlywind
 0009:805BA84F       aFluffflywind
 0009:805BA85C       aSePvJumpJoy_10
 0009:805BA86B       aSePvTwistStart_3
 0009:805BA87D       aFluffspin
 0009:805BA887       aSeOjFluffLose
 0009:805BA898       aSeOjFluffRiseU_0
 0009:805BA8AE       aSpin1st
 0009:805BA8B6       aSeOjFluffRiseU_1
 0009:805BA8CC       aSpin2nd_2
 0009:805BA8D4       aSeOjFluffRiseU_2
 0009:805BA8EA       aSpin3rd
 0009:805BA8F2       aBlur_5
 0009:805BA8F7       aSePvCatch_5
 0009:805BA903       aSePmGrabObj_0
 0009:805BA912       aFall_16
 0009:805BA917       aSePvJumpS_3
 0009:805BA924       aSePmJumpM_0
 0009:805BA931       aSeOjLvFluffSid
 0009:805BA94A       aSeOjLvFluffFly
 0009:805BA95D       aSeOjLvFluffFly_0
 0009:805BAA8C       aFluffwind
 0009:805BABF8       aJumpbranch
 0009:805BAC03       aBind_8
 0009:805BAC08       aJumpbranchwait
 0009:805BAC17       aSePmGrabObj_1
 0009:805BAC26       aSePmSpin
 0009:805BAC31       aSePmJumpM_1
 0009:805BAC3E       aSePvJumpS_4
 0009:805BAC4B       aJumpbranchfron
 0009:805BAC5F       aJumpbranchback
 0009:805BAC72       aFall_17
 0009:805BAD2F       aPlantseed
 0009:805BAD4A       aPlanttop
 0009:805BAD53       aBind_9
 0009:805BAD58       aSeed
 0009:805BAD5D       aRide_1
 0009:805BAD72       aWait_152
 0009:805BAD77       aSeOjPlantBud
 0009:805BAD98       aGrowup
 0009:805BAD9F       aSeOjPlantSeedB
 0009:805BADB6       aSeSyItemAppear_3
 0009:805BADC8       aSeOjPlantGrowS
 0009:805BADDF       aGrowplantcatch_0
 0009:805BADEE       aGrowplanthangu_0
 0009:805BADFE       aGrowplanthangd_0
 0009:805BAE10       aSeOjPlantMario
 0009:805BAE25       aGrowplantjump_0
 0009:805BAE33       aSeOjPlantMario_0
 0009:805BAE4A       aSePmGrabObj_2
 0009:805BAE59       aSePvCatch_6
 0009:805BAE65       aSeOjLvPlantGro
 0009:805BAE79       aSeOjPlantMario_1
 0009:805BAE94       aSePmJumpL_0
 0009:805BAEA1       aSePvJumpJoy_11
 0009:805BB014       aPlantleaf
 0009:805BB12C       aPlantArc
 0009:805BB136       aPlantstalkBti
 0009:805BB210       aNomodel
 0009:805BB218       aSquare
 0009:805BB21F       aBind_10
 0009:805BB224       aRide_2
 0009:805BB229       aPush_3
 0009:805BB22E       aPole9m
 0009:805BB235       aPolenomodel
 0009:805BB241       aPoleArc
 0009:805BB24A       aPole
 0009:805BB24F       aPolesquareArc
 0009:805BB25E       aPolesquare
 0009:805BB269       aPoletop
 0009:805BB271       aPolebottom
 0009:805BB27C       aPoletopstopmat
 0009:805BB28D       aTreecube
 0009:805BB296       aWorldRoot
 0009:805BB2A1       aSeOjLvPoleAppe
 0009:805BB2B6       aSquarepolestar
 0009:805BB2C6       aTreeclimbstart
 0009:805BB2D5       aSquarepolewait
 0009:805BB2E4       aTreewait_0
 0009:805BB2ED       aSquarepoleturn
 0009:805BB2FD       aSquarepoleturn_0
 0009:805BB30D       aClimbturn
 0009:805BB317       aSquarepoleturn_1
 0009:805BB329       aSquarepoleclim
 0009:805BB339       aTreeclimb
 0009:805BB343       aSquarepolepush
 0009:805BB356       aSquarepolefall
 0009:805BB365       aTreefall
 0009:805BB36E       aSePmLvPoleSlid
 0009:805BB382       aTreehandstands
 0009:805BB395       aSePmPoleStand
 0009:805BB3A6       aSePvLiftUp_0
 0009:805BB3B4       aTreehandstandw
 0009:805BB3C6       aTreehandstande
 0009:805BB3D7       aTreehandstandt
 0009:805BB3E9       aSePmGrabObj_3
 0009:805BB3F8       aSePmJumpM_2
 0009:805BB405       aSePvJumpJoy_12
 0009:805BB414       aTreehandstandj
 0009:805BB426       aWalljump
 0009:805BB5A8       aSpiderthreadat
 0009:805BB5C0       aBind_11
 0009:805BB5C5       aAttack_61
 0009:805BB5CC       aInvalidhitmark_3
 0009:805BB656       aSpidercocoonla
 0009:805BB667       aCocoonland
 0009:805BB672       aSpidercocoonwa
 0009:805BB683       aSePvCatch_7
 0009:805BB68F       aSeOjSpaceCocoo
 0009:805BB6A9       aCsDpdHit
 0009:805BB6B4       aSeOjLvSpaceCoc
 0009:805BB6CF       aAirrotation_0
 0009:805BB6DB       aSeBmTspiderBou
 0009:805BB6EF       aWallhit_4
 0009:805BB6F7       aStick_1
 0009:805BB6FD       aSeOjSpiderThre
 0009:805BB719       aSeSvKinopioPoi_1
 0009:805BB730       aWait_153
 0009:805BB735       aCocoonstretch
 0009:805BB743       aSpidercocoonst
 0009:805BB757       aSpin2nd_3
 0009:805BB75F       aSePvJumpS_5
 0009:805BB76C       aSePmJumpM_3
 0009:805BB779       aSpacecocoonblu_0
 0009:805BB789       aSeOjSpaceCocoo_0
 0009:805BB7A3       aCocoonfly_1
 0009:805BB7AD       aSePvJumpJoy_13
 0009:805BB7BC       aSeSvKinopioTal
 0009:805BB7D8       aSeSvKinopioTra_0
 0009:805BB7EF       aSePvDamageS
 0009:805BB7FE       aSePmLandHeavy_0
 0009:805BB8F8       aBind_12
 0009:805BB8FD       aPush_4
 0009:805BB902       aAttack_62
 0009:805BB90E       aSpacecocoon_0
 0009:805BB948       aSpacecocoonArc
 0009:805BB958       aSpacecocoonBti
 0009:805BB968       aCocoonland_0
 0009:805BB973       aSePvCatch_8
 0009:805BB97F       aSeOjSpaceCocoo_1
 0009:805BB999       aCocoonwait
 0009:805BB9A4       aCocoonreaction
 0009:805BB9C2       aSeOjSpaceCocoo_2
 0009:805BB9DD       aCsDpdHit_0
 0009:805BB9E8       aSeOjLvSpaceCoc_0
 0009:805BBA03       aCocoonfly_2
 0009:805BBA0D       aSePvJumpJoy_14
 0009:805BBA1C       aSeSvKinopioTal_0
 0009:805BBA38       aSeOjSpaceCocoo_3
 0009:805BBA52       aAirrotation_1
 0009:805BBA5E       aStick_2
 0009:805BBA64       aSeOjLvSpaceCoc_1
 0009:805BBA80       aSeOjLvSpaceCoc_2
 0009:805BBA9C       aCocoonstretch_0
 0009:805BBAAA       aSeOjSpaceCocoo_4
 0009:805BBAC3       aSpacecocoonblu_1
 0009:805BBCBB       aSurfray
 0009:805BBCC3       aBlink_7
 0009:805BBCC9       aBody_287
 0009:805BBCCE       aBind_13
 0009:805BBCD3       aRipple_8
 0009:805BBCDA       aShadow_36
 0009:805BBCFA       aFirstwait
 0009:805BBD04       aFirstwaitturn
 0009:805BBD12       aSeSmSurfRayTur
 0009:805BBD2B       aWait_154
 0009:805BBD43       aRundash
 0009:805BBD97       aJump_12
 0009:805BBD9C       aSePvJumpS_6
 0009:805BBDC0       aSePvJumpJoy_15
 0009:805BBDDE       aFall_18
 0009:805BBDE3       aSeSmSurfRayLan
 0009:805BBE07       aLand_18
 0009:805BBE0C       aSurflectureunb
 0009:805BBE21       aLectureunbalan
 0009:805BBE32       aSurfride
 0009:805BBE3B       aSurflectureans
 0009:805BBE4D       aLectureanswer
 0009:805BBE5B       aSeSmSurfRayJum_2
 0009:805BBE73       aSurfrideloop
 0009:805BBE80       jpt_80331438
 0009:805BBEB8       aWaitracestart
 0009:805BBEC6       aRundashsplash
 0009:805BBED4       aSwimsplash
 0009:805BBEDF       aSeSmLvSurfRayL
 0009:805BBEF6       aSeSmSurfRayHit
 0009:805BBF0E       aSeSmSurfRayJum
 0009:805BBF25       aSeSmSurfRayJum_0
 0009:805BBF3C       aSeSmSurfRayJum_1
 0009:805BBF53       aSeSmLvSurfRayM
 0009:805BBF6B       aSeSmLvSurfRayM_0
 0009:805BBF83       aSeSmLvSurfRayM_1
 0009:805BBF9B       aSeSmLvSurfRayM_2
 0009:805BBFB3       aSeSmSurfRayMov
 0009:805BBFCC       aSeSmLvSurfRayC
 0009:805BBFE4       aCenter_9
 0009:805BC16B       aBody_288
 0009:805BC170       aSeSySurfTutori
 0009:805BC187       aSeSySurfTutori_0
 0009:805BC1A2       aSeSySurfTutori_1
 0009:805BC1B9       aSeSySurfTutori_2
 0009:805BC1D5       aSeSySurfTutori_3
 0009:805BC1EF       aSeSySurfTutori_4
 0009:805BC20A       aSeSySurfTutori_5
 0009:805BC318       aBind_14
 0009:805BC31D       aBody_289
 0009:805BC322       aSwingropeslide
 0009:805BC33A       aSwingropeslide_0
 0009:805BC34D       aSePvCatch_9
 0009:805BC359       aSePmGrabObj_4
 0009:805BC368       aSePvJumpS_7
 0009:805BC375       aSePmJumpM_4
 0009:805BC382       aSwingropespin_0
 0009:805BC390       aSwingropeaccel
 0009:805BC39F       aSwingropeswing
 0009:805BC3B2       aSwingropewait
 0009:805BC3C0       aSeOjLvRopeSwin
 0009:805BC3DB       aSeOjRopeCreakH
 0009:805BC3EE       aFootl_1
 0009:805BC400       aSwingropeArc
 0009:805BC40E       aSwingropeBti
 0009:805BC560       aTamakoro
 0009:805BC580       aBody_290
 0009:805BC585       aBind_15
 0009:805BC598       aRing
 0009:805BC59D       aSePvUpset
 0009:805BC5A9       aSwingropespin
 0009:805BC5B7       aHellprominence_2
 0009:805BC5CC       aBgmTamakoro2
 0009:805BC5DB       aBgmTamakoro
 0009:805BC5E8       aWallhit
 0009:805BC5F0       aLand_0
 0009:805BC5F5       aSeSmIronsphHit
 0009:805BC607       aSePvGuard
 0009:805BC613       aSlidestomachre
 0009:805BC627       aTamakoroland
 0009:805BC634       aBallland
 0009:805BC63D       aSePvCatch
 0009:805BC649       aSeSmRideStart
 0009:805BC667       aFall_19
 0009:805BC66C       aBallfall
 0009:805BC675       aBalljump
 0009:805BC67E       aSePvJumpM_2
 0009:805BC68B       aSeSmBalloonsph
 0009:805BC6A1       aBallhit
 0009:805BC6A9       aSeSmIronsphLan
 0009:805BC6CD       aBigjumpblur
 0009:805BC6D9       aBigjumpland
 0009:805BC6E5       aBallroll
 0009:805BC6EE       aSePvJumpJoy_16
 0009:805BC6FD       aSeSmIronsphRai
 0009:805BC714       aBallrollstart
 0009:805BC722       aBallrollend
 0009:805BC72E       aBreak_55
 0009:805BC734       aSeSmRideEnd
 0009:805BC743       aSePvJumpS_8
 0009:805BC750       aSeSmLvIronsphR
 0009:805BC76B       aSeSmLvIronsphR_0
 0009:805BC950       aSignboard_0
 0009:805BC95A       aBody_291
 0009:805BC95F       aPush_5
 0009:805BC964       aShadow_37
 0009:805BC96B       aCommonTamakoro
 0009:805BC986       aCommonTamakoro_0
 0009:805BC9A1       aRevivalfront
 0009:805BC9AE       aSeSySurfTutori_6
 0009:805BC9C5       aSeSySurfTutori_7
 0009:805BC9DC       aSeSySurfTutori_8
 0009:805BC9F7       aSeOjSignBoardT
 0009:805BCA13       aDownfront
 0009:805BCA1D       aDownback
 0009:805BCA26       aSeOjSignBoardR
 0009:805BCA3F       aRevivalback
 0009:805BCA4B       aSeOjSignBoardT_0
 0009:805BCA66       aSeSySurfTutori_9
 0009:805BCA80       aSeSySurfTutori_10
 0009:805BCC18       aBind_16
 0009:805BCC1D       aBody_292
 0009:805BCC22       aTrapeze
 0009:805BCC2A       aShadow_38
 0009:805BCC31       aTrapezewait
 0009:805BCC3D       aTrapezeslidedo
 0009:805BCC53       aTrapezeslidedo_0
 0009:805BCC64       aTrapezeslowswi
 0009:805BCC7F       aTrapezeswingfr
 0009:805BCC96       aTrapezeslowswi_0
 0009:805BCCAF       aTrapezeswingfr_0
 0009:805BCCC4       aTrapezeslowswi_1
 0009:805BCCDE       aTrapezeswingba
 0009:805BCCF4       aTrapezeslowswi_2
 0009:805BCD0C       aTrapezeswingba_0
 0009:805BCD20       aSePvCatch_10
 0009:805BCD2C       aSePmGrabObj_5
 0009:805BCD3B       aTrapezefrontsp
 0009:805BCD4C       aTrapezebackspi
 0009:805BCD5C       aSePvJumpJoy_17
 0009:805BCD6B       aSePmJumpM_5
 0009:805BCD78       aSeOjLvRopeSwin_0
 0009:805BCD93       aSeOjLvRopeSwin_1
 0009:805BCDAE       aSeOjRopeCreakH_0
 0009:805BCDC1       aSeOjLvSlideRop
 0009:805BCDE8       aTrapezeArc
 0009:805BCDF4       aTrapezeropeBti
 0009:805BCFA8       aGamescene
 0009:805BCFCD       aGame_8
 0009:805BCFE0       aCosmosgardenga_3
 0009:805BCFF3       aKoopabattlevs1_1
 0009:805BD008       aAstrogalaxy_2
 0009:805BD014       aSurfinglv1gala_2
 0009:805BD025       aSurfinglv2gala_2
 0009:805BD036       aMirrorarea_0
 0009:805BD19F       aBgmStartDemo
 0009:805BD1F8       aIntermissionsc
 0009:805BD230       aLogoscene
 0009:805BD23A       aStrap
 0009:805BD253       aWiiremotestrap
 0009:805BD350       aPlaytimerscene
 0009:805BD390       aSeSyE3TimerTim_0
 0009:805BD3A7       aAppear_9
 0009:805BD473       aHeavensdoorgal_10
 0009:805BD570       aScenedatainiti
 0009:805BD585       aLayoutdataPaus
 0009:805BD5C8       aGame_1
 0009:805BD5CD       aIntermission
 0009:805BD5DA       aLogo
 0009:805BD669       aIndirect_1
 0009:805BD67D       aIgnorepausenam_0
 0009:805BD9C4       jpt_80344B48
 0009:805BDD08       aStopscenestate
 0009:805BDD1E       aScenenameobjmo
 0009:805BDD90       aCommon
 0009:805BDD97       aLayera
 0009:805BDD9E       aLayerb
 0009:805BDDA5       aLayerc
 0009:805BDDAC       aLayerd
 0009:805BDDB3       aLayere
 0009:805BDDBA       aLayerf
 0009:805BDDC1       aLayerg
 0009:805BDDC8       aLayerh
 0009:805BDDCF       aLayeri
 0009:805BDDD6       aLayerj
 0009:805BDDDD       aLayerk
 0009:805BDDE4       aLayerl
 0009:805BDDEB       aLayerm
 0009:805BDDF2       aLayern
 0009:805BDDF9       aLayero
 0009:805BDE00       aLayerp
 0009:805BDE4C       aAreaobjinfo
 0009:805BDE58       aPlanetobjinfo
 0009:805BDE66       aDemoobjinfo
 0009:805BDE72       aCameracubeinfo
 0009:805BDE81       aStagedataholde
 0009:805BDE91       aJmpPlacement
 0009:805BDEA0       aJmpMapparts
 0009:805BDEAE       aJmpStart
 0009:805BDEB9       aJmpGeneralpos
 0009:805BDEC9       aJmpChildobj
 0009:805BDED7       aJmpList
 0009:805BDEE1       aJmpPath
 0009:805BDEEB       aCommonpathinfo
 0009:805BDEFA       aLId
 0009:805BDEFF       aCommonpathpoin
 0009:805BDF16       aStageinfo
 0009:805BDF20       aMultifilename
 0009:805BDF2E       aAllMul
 0009:805BDF36       aChangescenelis
 0009:805BDF4A       aSceneno
 0009:805BDF52       aCameraId
 0009:805BDF5C       aParentid
 0009:805BDF65       aEnName
 0009:805BDF6D       aJpName
 0009:805BDF84       aMariono
 0009:805BDF8C       aSS_10
 0009:805BDF92       aStagedataObjna
 0009:805BDFAE       aObjnametableTb
 0009:805BDFBF       aStageobjinfo
 0009:805BDFCC       aPosX
 0009:805BDFD2       aPosY
 0009:805BDFD8       aPosZ
 0009:805BDFDE       aDirX
 0009:805BDFE4       aDirY
 0009:805BDFEA       aDirZ
 0009:805BE018       aStagedataSArc
 0009:805BE02A       aArc_0
 0009:805BE043       aStopscenecontr
 0009:805BE0C0       aBackbutton
 0009:805BE0CB       aBack_3
 0009:805BE0D0       aBoxbutton
 0009:805BE0DA       aSeSyButtonCurs_1
 0009:805BE0F1       aSeSyGalaxyDeci_3
 0009:805BE140       aBatteryinfo
 0009:805BE14C       aSeSyBatteryLow
 0009:805BE15E       aAppearlow
 0009:805BE168       aWaitlow
 0009:805BE170       aEndlow
 0009:805BE177       aSeSyBatteryCri
 0009:805BE18E       aAppearcritical
 0009:805BE19D       aWaitcritical
 0009:805BE1AA       aEndcritical
 0009:805BE1B6       aAppearnone
 0009:805BE1C1       aWaitnone
 0009:805BE1CA       aEndnone
 0009:805BE1D2       aBatterylayout
 0009:805BE1E0       aWinbattery1
 0009:805BE1EC       aWinbattery2
 0009:805BE38F       aBombtimer_0
 0009:805BE399       aCounter
 0009:805BE3A1       aAppear_62
 0009:805BE3A8       aWait_155
 0009:805BE3AD       aDanger
 0009:805BE3B4       aBlink_8
 0009:805BE430       aBrosbutton
 0009:805BE43B       aBoxbbutton
 0009:805BE446       aSeSyFileSelSwL
 0009:805BE45E       aSeSyFileSelSwM
 0009:805BE476       aSeSyButtonCurs_2
 0009:805BE500       aButtonappear
 0009:805BE50D       aButtonwait
 0009:805BE518       aButtondecide
 0009:805BE525       aButtonselectin
 0009:805BE534       aButtonselectou
 0009:805BE544       aButtonend
 0009:805BE5F0       aCamerainfo
 0009:805BE5FB       aForbid
 0009:805BE602       aAppear_63
 0009:805BE609       aCamera_2
 0009:805BE610       aLined
 0009:805BE616       aLineu
 0009:805BE61C       aLinel
 0009:805BE622       aLiner
 0009:805BE628       aFirstperson
 0009:805BE6B8       aGamescreen
 0009:805BE6C3       aIndirect_0
 0009:805BE6CC       aCamera
 0009:805BE6D3       aWipemap
 0009:805BE6DB       aSystemwipe
 0009:805BE6E6       aUnused
 0009:805BE6FC       aIndirect_2
 0009:805BE817       aCinemaframe
 0009:805BE823       aWait_156
 0009:805BE828       aOpen_21
 0009:805BE82D       aAppear_64
 0009:805BE834       aClose_11
 0009:805BE8E0       aCoincounter
 0009:805BE8EC       aCounter_0
 0009:805BE8F4       aFlash
 0009:805BE8FA       aCoincounterlig
 0009:805BE90B       aPosition001
 0009:805BE917       aPosition100
 0009:805BE923       aPosition010
 0009:805BE92F       aWait_157
 0009:805BE9A8       aRetrybutton
 0009:805BE9B4       aNbackup
 0009:805BE9BC       aNbackdown
 0009:805BE9C6       aBoxbutton1_0
 0009:805BE9D1       aBoxbutton2_0
 0009:805BE9DC       aButtonappear_0
 0009:805BE9E9       aButtonwait_0
 0009:805BE9F4       aButtonselectin_0
 0009:805BEA03       aButtondecide_0
 0009:805BEA10       aButtonselectou_0
 0009:805BEA20       aButtonend_0
 0009:805BEA45       aSeSyButtonCurs_3
 0009:805BEA5C       aSeSyTalkSelect_3
 0009:805BEA72       aSeSyTalkSelect_4
 0009:805BEB19       aAppear_65
 0009:805BECEC       aCustomtagproce
 0009:805BED03       aNw4rPointerErr
 0009:805BED36       aNw4rPointerErr_0
 0009:805BED68       aNw4rPointerErr_1
 0009:805BEDA0       aLengthIsOutOfB
 0009:805BEDD8       aNw4rPointerErr_2
 0009:805BEE60       aNw4rPointerErr_12
 0009:805BEE9B       aTextwriterbase_3
 0009:805BEEAC       aNw4rPointerErr_11
 0009:805BEEDF       aTextwriterbase_2
 0009:805BEEF0       aNw4rPointerErr_30
 0009:805BEF23       aTextwriterbase_5
 0009:805BEF34       aNw4rPointerErr_10
 0009:805BEF67       aTextwriterbase_1
 0009:805BEF78       aNw4rPointerErr_9
 0009:805BEFAB       aTextwriterbase_0
 0009:805BEFBC       aNw4rPointerErr_8
 0009:805BEFEF       aTextwriterbase
 0009:805BF000       aNw4rPointerErr_29
 0009:805BF033       aTextwriterbase_4
 0009:805BF044       aNw4rPointerErr_31
 0009:805BF077       aTextwriterbase_6
 0009:805BF088       aNw4rPointerErr_23
 0009:805BF0BD       aCharwriterH_14
 0009:805BF0CA       aNw4rPointerErr_22
 0009:805BF0FD       aCharwriterH_13
 0009:805BF10A       aNw4rPointerErr_14
 0009:805BF13D       aCharwriterH_5
 0009:805BF14A       aNw4rPointerErr_32
 0009:805BF17D       aCharwriterH_16
 0009:805BF18A       aNw4rPointerErr_24
 0009:805BF1BD       aCharwriterH_15
 0009:805BF1CA       aNw4rPointerErr_18
 0009:805BF1FD       aCharwriterH_9
 0009:805BF20A       aNw4rPointerErr_3
 0009:805BF23D       aCharwriterH
 0009:805BF24A       aNw4rPointerErr_33
 0009:805BF27D       aCharwriterH_17
 0009:805BF28A       aNw4rPointerErr_13
 0009:805BF2BD       aCharwriterH_4
 0009:805BF2CA       aNw4rPointerErr_6
 0009:805BF2FD       aCharwriterH_2
 0009:805BF30A       aNw4rPointerErr_7
 0009:805BF33D       aCharwriterH_3
 0009:805BF34A       aNw4rPointerErr_4
 0009:805BF37D       aCharwriterH_0
 0009:805BF38A       aNw4rPointerErr_5
 0009:805BF3BD       aCharwriterH_1
 0009:805BF3CA       aNw4rPointerErr_17
 0009:805BF3FD       aCharwriterH_8
 0009:805BF40A       aNw4rPointerErr_21
 0009:805BF43D       aCharwriterH_12
 0009:805BF44A       aNw4rPointerErr_19
 0009:805BF47D       aCharwriterH_10
 0009:805BF48A       aNw4rPointerErr_20
 0009:805BF4BD       aCharwriterH_11
 0009:805BF4CA       aNw4rPointerErr_15
 0009:805BF4FD       aCharwriterH_6
 0009:805BF50A       aNw4rPointerErr_16
 0009:805BF53D       aCharwriterH_7
 0009:805BF54A       aNw4rPointerErr_34
 0009:805BF57D       aFontH
 0009:805BF584       aNw4rFailedAsse
 0009:805BF5B9       aCharstrmreader_2
 0009:805BF5CA       aNw4rPointerErr_26
 0009:805BF5FF       aCharstrmreader_1
 0009:805BF610       aNw4rAlignmentE
 0009:805BF657       aCharstrmreader_0
 0009:805BF668       aNw4rPointerErr_25
 0009:805BF69B       aCharstrmreader
 0009:805BF6AC       aNw4rPointerErr_28
 0009:805BF6DF       aCharstrmreader_4
 0009:805BF6F0       aNw4rPointerErr_27
 0009:805BF723       aCharstrmreader_3
 0009:805BF77E       aSyspalinfo
 0009:805BF789       aAppear_66
 0009:805BF790       aWait_158
 0009:805BF795       aSeSyTalkFocusI_3
 0009:805BF825       aErrormessagewi
 0009:805BF838       aErrortexthalf
 0009:805BF846       aErrormessage
 0009:805BF853       aPicdummy_0
 0009:805BF85C       aAppear_67
 0009:805BF863       aWait_159
 0009:805BF8E8       aFileselect_2
 0009:805BF8F3       aSeSyButtonCurs_4
 0009:805BF90A       a2pguidanceicon
 0009:805BF919       aP2button
 0009:805BF922       aCopybutton
 0009:805BF92D       aMiibutton
 0009:805BF937       aDeletebutton
 0009:805BF944       aStartbutton
 0009:805BF950       aP2manualbutton
 0009:805BF95F       aPiccopy
 0009:805BF967       aPicmii
 0009:805BF96E       aPicdelete
 0009:805BF978       aBoxstartbutton
 0009:805BF987       aBoxp2
 0009:805BF9F0       aFileinfo
 0009:805BF9F9       aAppear_68
 0009:805BFA00       aFilenumber
 0009:805BFA0B       aFilename
 0009:805BFA14       aStar_5
 0009:805BFA19       aStarpiece_3
 0009:805BFA23       aTxtday
 0009:805BFA2A       aTxttime
 0009:805BFA32       aMisscounter
 0009:805BFA3E       aComplete1
 0009:805BFA48       aComplete2
 0009:805BFA52       aBrosicon
 0009:805BFA5B       aTxtmario
 0009:805BFA64       aTxtluigi
 0009:805BFA7A       aButtonappear_1
 0009:805BFA87       aButtonend_1
 0009:805BFAA0       aMariowait
 0009:805BFAAA       aMariottoluigi
 0009:805BFAB8       aLuigiwait
 0009:805BFAC2       aLuigitomario
 0009:805BFBC8       aFilenumber_0
 0009:805BFBD3       aAppear_69
 0009:805BFBED       aSelectout
 0009:805BFBF7       aSelectin
 0009:805BFCB7       aStarpiecetarge
 0009:805BFCCC       aTargetmeter
 0009:805BFCD8       aPicframeshine
 0009:805BFCF5       aStarpiecetarge_0
 0009:805BFD0C       aNumbermax
 0009:805BFD16       aCount_0
 0009:805BFD1C       aShine
 0009:805BFD22       aFlash_0
 0009:805BFD28       aNumber_0
 0009:805BFD2F       aSeSyTicofatPoi_0
 0009:805BFD43       aAppear_70
 0009:805BFDC7       aCometscreenfil
 0009:805BFE2B       aGalaxyselect
 0009:805BFE38       aStartbutton_0
 0009:805BFE44       aBoxstartbutton_0
 0009:805BFE5E       aSeSyButtonCurs_5
 0009:805BFE75       aSeSyGalaxyDeci_4
 0009:805BFE8C       aSeSyGalaxyDeci_5
 0009:805BFF08       aGalaxyinfotext
 0009:805BFF1E       aSBti
 0009:805BFF25       aPicdummy
 0009:805BFF2E       aCometposition
 0009:805BFF3C       aGalaxyinfotext_0
 0009:805BFF52       aGalaxyinfotext_1
 0009:805BFF6F       aUnknown
 0009:805BFF77       aGalaxyinfoHate
 0009:805BFF89       aGalaxyinfoUnkn
 0009:805BFF9C       aGalaxyinfoNew
 0009:805BFFAB       aGalaxyname
 0009:805BFFB6       aStaricon
 0009:805BFFBF       aTxtstarbase
 0009:805BFFCB       aComplete
 0009:805BFFD4       aCometwindow
 0009:805BFFE0       aCometname
 0009:805BFFEA       aGalaxyinfoCome
 0009:805C0023       aMapgrandgalaxy
 0009:805C0064       aStar_1
 0009:805C0210       aDomein
 0009:805C0217       aDomeout
 0009:805C0238       aMappanename
 0009:805C0244       aDummy_0
 0009:805C024A       aName_1
 0009:805C024F       aDome1
 0009:805C0255       aDome2
 0009:805C025B       aDome3
 0009:805C0261       aDome4
 0009:805C0267       aDome5
 0009:805C026D       aDome6
 0009:805C0273       aBase1
 0009:805C0279       aBase2
 0009:805C027F       aBase3
 0009:805C0285       aBase4
 0009:805C028B       aBase5
 0009:805C0291       aBase6
 0009:805C0297       aMario7
 0009:805C029E       aMario1
 0009:805C02A5       aMario2
 0009:805C02AC       aMario3
 0009:805C02B3       aMario4
 0009:805C02BA       aMario5
 0009:805C02C1       aMario6
 0009:805C02C8       aGmario1
 0009:805C02D0       aGmario2
 0009:805C02D8       aGmario3
 0009:805C02E0       aGmario4
 0009:805C02E8       aGmario5
 0009:805C02F0       aGmario6
 0009:805C02F8       aAstrodome_3
 0009:805C0302       aTico1d
 0009:805C030A       aSeSyGalamapIco
 0009:805C03BD       aMapgalaxybg
 0009:805C03C9       aWait_160
 0009:805C0400       aIconcomet
 0009:805C040A       aWait_161
 0009:805C040F       aColor_0
 0009:805C0448       aGalaxymapcontr
 0009:805C047C       aGalaxymapcontr_0
 0009:805C049C       jpt_8035BD98
 0009:805C04BC       aSeSyLvGalamapB
 0009:805C04D7       aSeSyLvGalamapB_0
 0009:805C04F2       aSeSyLvGalamapB_1
 0009:805C050E       aSeDmTicocometM
 0009:805C052D       aSeSyGalaxyDeci
 0009:805C0548       aSeSyGalamapPag
 0009:805C0562       aSeSyGalamapChP
 0009:805C057C       aSeSyGalamapChP_0
 0009:805C0738       aMapdomeicon
 0009:805C0744       aDomecolor
 0009:805C074E       aAstrodome_6
 0009:805C0758       aStatus
 0009:805C075F       aSelectin_0
 0009:805C0768       aBlink_9
 0009:805C076E       aWait_162
 0009:805C0773       aGalaxy1d
 0009:805C077D       aMappanename_0
 0009:805C0789       aName_3
 0009:805C07E8       aGalaxydetail
 0009:805C07F5       aShacoinnum_0
 0009:805C0800       aAppear_71
 0009:805C0807       aSeSyGalamapWin
 0009:805C0821       aWait_163
 0009:805C0826       aSeSyGalamapWin_0
 0009:805C08C6       aGalaxyname_0
 0009:805C0908       aMapgalaxyicon
 0009:805C0916       aGalaxyicon
 0009:805C0921       aStatus_0
 0009:805C0928       aNewblink
 0009:805C0931       aNewwait
 0009:805C0939       aButtonselectin_1
 0009:805C097F       aIconmario
 0009:805C0989       aLuigi_1
 0009:805C098F       aWait_164
 0009:805C09D5       aMapbutton
 0009:805C09DF       aMaplist
 0009:805C09E7       aBoxlbutton
 0009:805C09F2       aSeSyGalamapDec
 0009:805C0A07       aSeSyGalamapCur
 0009:805C0AD0       aMapticoicon
 0009:805C0ADC       aAppear_72
 0009:805C0AE3       aWait_165
 0009:805C0AE8       aTicometer
 0009:805C0AF2       aSelectin_1
 0009:805C0AFB       aBlink_10
 0009:805C0B38       aMaptitle
 0009:805C0B41       aGuidance
 0009:805C0B4A       aGalaxymapAstro
 0009:805C0B5D       aGalaxymapGrand
 0009:805C0B76       aTitlewait
 0009:805C0B80       aTitleappear
 0009:805C0B8C       aTexttitle
 0009:805C0B96       aTitleend
 0009:805C0C37       aGalaxynameplat_1
 0009:805C0C47       aOneline_0
 0009:805C0C4F       aGalaxynameshor
 0009:805C0C67       aGalaxynameshor_0
 0009:805C0C7B       aGalaxynameplat_2
 0009:805C0C8E       aGalaxynameplat_3
 0009:805C0C9F       aShabeak_0
 0009:805C0CA7       aShabeaku
 0009:805C0CB0       aPicbeak_0
 0009:805C0CB8       aPicbeaku
 0009:805C0CC1       aGalaxyname_1
 0009:805C0CCC       aGalaxynameu
 0009:805C0CD8       aTxtgalaxyname
 0009:805C0CE6       aTxtgalaxynameu
 0009:805C0CF5       aUnknown_2
 0009:805C0CFD       aAppear_73
 0009:805C0D04       aWait_166
 0009:805C0D09       aSeSyAstroGalax
 0009:805C0DE3       aBackbutton_0
 0009:805C0DEE       aBack_4
 0009:805C0DF3       aBoxbutton_0
 0009:805C0E75       aGalaxyinfo
 0009:805C0E80       aAppear_74
 0009:805C0E87       aGalaxyinfotext_2
 0009:805C0E99       aIconcomet_0
 0009:805C0F07       aSeSyPauseOn
 0009:805C0F16       aCsClickOpen_0
 0009:805C0FB5       aIgnorepausenam_1
 0009:805C106C       aGetstar
 0009:805C1074       aGetstarPowerst
 0009:805C1086       aGetstarGrandst
 0009:805C1098       aBgmClear
 0009:805C10A2       aBgmGrandStarGe
 0009:805C10B7       aBgmGrandStarGe_0
 0009:805C1120       aShimmerboard
 0009:805C1132       aHazecube_1
 0009:805C11D8       aLayoutdataHome
 0009:805C11F3       aHomebutton2Spe
 0009:805C120E       aHomebutton2Hom
 0009:805C1224       aHomebutton2Con
 0009:805C12A8       aIconabutton
 0009:805C12B4       aAppear_75
 0009:805C12BB       aPicplate
 0009:805C12C4       aLayoutSystemta
 0009:805C12D6       aLayoutSystemre
 0009:805C12E8       aLayoutSystemne
 0009:805C12FA       aLayoutSystemte
 0009:805C130C       aLayoutSystemde
 0009:805C1320       aLayoutSystemtu
 0009:805C1332       aPress_14
 0009:805C13A9       aIconcomet_1
 0009:805C1430       aImageeffectare_4
 0009:805C1498       aBloomeffectPre
 0009:805C14AD       aBloomeffectPos
 0009:805C15BD       aInformationwin
 0009:805C15CF       aAbuttonposc
 0009:805C15DB       aAbuttonposu
 0009:805C15E7       aInfowindowup
 0009:805C15F4       aInfowindowcent
 0009:805C1605       aAppear_76
 0009:805C160C       aLine_0
 0009:805C1611       aInfconfirmc
 0009:805C161D       aInfconfirmu
 0009:805C1629       aWait_167
 0009:805C1690       aInformationobs
 0009:805C16A7       aBgmFirstMorphB
 0009:805C16B9       aInformationobs_0
 0009:805C16D3       aInformationobs_1
 0009:805C16ED       aInformationobs_2
 0009:805C1705       aBgmFirstMorphA
 0009:805C1717       aBgmFireB
 0009:805C1722       aInformationobs_3
 0009:805C1739       aBgmIceB
 0009:805C1743       aInformationobs_4
 0009:805C175D       aBgmFlyingB
 0009:805C176A       aInformationobs_5
 0009:805C1788       aBgmMutekiB
 0009:805C1795       aInformationobs_6
 0009:805C17B4       aInformationobs_7
 0009:805C17CD       aInformationobs_8
 0009:805C18A9       aInformationobs_9
 0009:805C18C8       aSeSyTalkOk_3
 0009:805C18D8       jpt_80365D48
 0009:805C19E0       aNw4rPointerMus_0
 0009:805C1A02       aLinklistH_0
 0009:805C1A10       a16x9
 0009:805C1A15       aReplace
 0009:805C1A1D       aSArc_0
 0009:805C1A24       aSBrlan
 0009:805C1A2D       aSBrlyt
 0009:805C1A36       aInddummyTpl
 0009:805C1A60       aNw4rPointerMus_3
 0009:805C1A82       aLinklistH_3
 0009:805C1A8D       aNw4rPointerMus_2
 0009:805C1AAF       aLinklistH_2
 0009:805C1ABA       aNw4rPointerMus_1
 0009:805C1ADC       aLinklistH_1
 0009:805C1AE7       aNw4rFailedAsse_0
 0009:805C1B1A       aMaterialH
 0009:805C1B25       aNw4rFailedAsse_1
 0009:805C1B58       aMaterialH_0
 0009:805C1B7B       aLensflare
 0009:805C1B94       aGlareglow
 0009:805C1BAF       aGlareline
 0009:805C1BCA       aLensflarearea_0
 0009:805C1EDF       aLuigiletter
 0009:805C1EEB       aLuigipictureSA
 0009:805C1EFE       aLuigipictureSB
 0009:805C1F11       aPicdummy_1
 0009:805C1F1A       aAbuttonpositio_2
 0009:805C1F2A       aAppear_77
 0009:805C1F31       aSeSyLetterAppe_1
 0009:805C1F45       aSeSvLuigiMail
 0009:805C1F56       aWait_168
 0009:805C1F5B       aSeSyTalkOk_4
 0009:805C1F69       aLuigipictureS
 0009:805C1FD8       aP2manual
 0009:805C1FE1       aLeftbutton
 0009:805C1FEC       aPiclbutton
 0009:805C1FF7       aRightbutton
 0009:805C2003       aPicrbutton
 0009:805C2025       a2pguidance
 0009:805C2030       aS03d
 0009:805C2037       aPicture
 0009:805C203F       aAppear_78
 0009:805C2046       aWait_169
 0009:805C204B       aSeSyFileSelTip_0
 0009:805C2064       aPageout
 0009:805C206C       aPagein
 0009:805C2073       aSeSyButtonCurs_6
 0009:805C208A       a2pguidance03d
 0009:805C2099       aText
 0009:805C209E       a2pguidancetitl
 0009:805C20B2       aTitle_0
 0009:805C20B8       aPagenumber
 0009:805C20D0       aButtonoff
 0009:805C20DA       aSeSyGalaxyDeci_6
 0009:805C21A7       aHitpointmeter
 0009:805C21CA       aSuddendeathmet
 0009:805C220D       aFlymeter
 0009:805C2223       aAirmeter
 0009:805C2268       aHitpointmeter_0
 0009:805C2276       aHitpointnumber
 0009:805C2285       aFont
 0009:805C228A       aHpmeter
 0009:805C2292       aHitpointw
 0009:805C229C       aFontposition2t
 0009:805C22AD       aShowhide_0
 0009:805C22B6       aPicbase
 0009:805C22BE       aDanger1
 0009:805C22C6       aFlash_1
 0009:805C22CC       aFontposition1t
 0009:805C22DD       aDamage1
 0009:805C22E5       aDamage2
 0009:805C22ED       aBreak_56
 0009:805C22F3       aSeSyLifePlateD
 0009:805C2308       aBreak123
 0009:805C2311       aMovemeter
 0009:805C231B       aMovemeterw
 0009:805C2326       aDanger2
 0009:805C232E       aCount_1
 0009:805C2334       aRecoverycount
 0009:805C2438       aMiiconfirmicon
 0009:805C2447       aShamiidummy
 0009:805C2453       aPicmiidummy
 0009:805C245F       aMiiname
 0009:805C2467       aButtonappear_2
 0009:805C2474       aButtonwait_1
 0009:805C247F       aButtonend_2
 0009:805C24F0       aMiiselect_0
 0009:805C24FA       aTxtname
 0009:805C2502       aAppear_79
 0009:805C2509       aSeSyFileSelMii_2
 0009:805C253C       aWait_170
 0009:805C2541       aPreviousmii
 0009:805C254D       aNextmii
 0009:805C2555       aLeft
 0009:805C255A       aRight
 0009:805C2568       aPicarrowl
 0009:805C2572       aPicarrowr
 0009:805C2584       aSeSyFileSelMii
 0009:805C259F       aTxtpage
 0009:805C25CA       aMii02d
 0009:805C2678       aMiiicon
 0009:805C2680       aMarioicon
 0009:805C268A       aCharacter_0
 0009:805C2694       aShamii
 0009:805C269B       aPicmii_0
 0009:805C26A2       aPicmiishine
 0009:805C26AE       aHide_13
 0009:805C26B3       aPicmario
 0009:805C26BC       aSeSyButtonCurs_7
 0009:805C2766       aToobad
 0009:805C276D       aAppear_80
 0009:805C2809       aMovieplayersim
 0009:805C281F       aMoiveFileNotFo
 0009:805C28C8       aMoviedataProlo_1
 0009:805C28E1       aStmPrologue05
 0009:805C28F1       aMoviedataProlo_4
 0009:805C290A       aHeavensdoorgal_14
 0009:805C291C       aMoviedataFinal_1
 0009:805C2937       aMoviedataFinal_2
 0009:805C2957       aKoopabattlevs3_9
 0009:805C296C       aMoviedataEpilo_1
 0009:805C2985       aMoviedataEpilo_2
 0009:805C29A3       aMoviedataEpilo_3
 0009:805C29BC       aMoviedataEndin_1
 0009:805C29D3       aMoviedataEndin_2
 0009:805C29EF       aMoviedataEndin_3
 0009:805C2A06       aProloguea
 0009:805C2A10       aPrologueb
 0009:805C2A1A       aFinalbattle
 0009:805C2A26       aEpiloguea
 0009:805C2A30       aEndinga
 0009:805C2A38       aEndingb
 0009:805C2A40       aMoviedataProlo_2
 0009:805C2A64       aWait_171
 0009:805C2A69       aMoviedataFinal_0
 0009:805C2A84       aKoopabattlevs3_4
 0009:805C2A99       aMoviedataProlo_3
 0009:805C2B77       aCinemasuper
 0009:805C2B83       aText00_2
 0009:805C2BF0       aMoviedataProlo
 0009:805C2C09       aLayoutStorydem
 0009:805C2C26       aLayoutStorydem_0
 0009:805C2C43       aLayoutStorydem_1
 0009:805C2C60       aLayoutStorydem_2
 0009:805C2C7D       aLayoutStorydem_3
 0009:805C2C9A       aMoviedataProlo_0
 0009:805C2CB3       aLayoutStorydem_4
 0009:805C2CD0       aLayoutStorydem_5
 0009:805C2CEE       aMoviedataFinal
 0009:805C2D09       aLayoutStorydem_6
 0009:805C2D28       aLayoutStorydem_7
 0009:805C2D47       aMoviedataEpilo
 0009:805C2D60       aLayoutStorydem_8
 0009:805C2D7D       aLayoutStorydem_9
 0009:805C2D9A       aMoviedataEpilo_0
 0009:805C2DB3       aMoviedataEndin
 0009:805C2DCA       aLayoutStorydem_10
 0009:805C2DE9       aLayoutStorydem_11
 0009:805C2E08       aLayoutStorydem_12
 0009:805C2E27       aMoviedataEndin_0
 0009:805C2E3E       aLayoutStorydem_13
 0009:805C2E5D       aLayoutStorydem_14
 0009:805C2F18       aSeSyFlowerGetC
 0009:805C2FFA       aOneup
 0009:805C3000       aAppear_81
 0009:805C3007       aOneupget
 0009:805C3070       aHeavensdoorgal_2
 0009:805C3091       aPausemenu
 0009:805C309B       aPicstagebase
 0009:805C30A8       aPicstagebase1
 0009:805C30B6       aCounter_1
 0009:805C30BE       aStars
 0009:805C30C4       aCoin_8
 0009:805C30C9       aPiece
 0009:805C30CF       aShastagetitle
 0009:805C30DD       aNbackup_0
 0009:805C30E5       aBoxbutton1_1
 0009:805C30F0       aNbackdown_0
 0009:805C30FA       aBoxbutton2_1
 0009:805C3105       aPausemenuButto_0
 0009:805C311D       aPausemenuButto
 0009:805C313B       aAstrodome_7
 0009:805C3145       aScenariotitle
 0009:805C3153       aLetterbutton
 0009:805C3160       aBoxbutton3_0
 0009:805C316B       aShastarnum_0
 0009:805C3176       aShamarionum
 0009:805C3182       aShacoinnum_1
 0009:805C318D       aShapiecenum
 0009:805C3199       aShamario
 0009:805C31A2       aPlayerleft
 0009:805C31AD       aShapiece
 0009:805C31B6       aAppear_82
 0009:805C31BD       aCposition1
 0009:805C31C8       aPposition1
 0009:805C31D3       aCposition3
 0009:805C31DE       aCposition2
 0009:805C31E9       aPposition4
 0009:805C31F4       aPposition3
 0009:805C31FF       aPposition2
 0009:805C320A       aShastara
 0009:805C3213       aShastarb
 0009:805C321C       aShastarc
 0009:805C3225       aShastard
 0009:805C322E       aShastare
 0009:805C3237       aShastarf
 0009:805C3240       aShastarg
 0009:805C3249       aPicstara
 0009:805C3252       aPicstarb
 0009:805C325B       aPicstarc
 0009:805C3264       aPicstard
 0009:805C326D       aPicstare
 0009:805C3276       aPicstarf
 0009:805C327F       aPicstarg
 0009:805C3288       aStar_2
 0009:805C328D       aSeSySelectPaus
 0009:805C32A5       aSeSyPauseOff
 0009:805C32B5       aCsClickClose
 0009:805C32C4       aSeSyFileSelUpp
 0009:805C32E0       aPausemenuConfi
 0009:805C32F9       aPausemenuConfi_0
 0009:805C33A8       aPeachletter
 0009:805C33B4       aAbuttonpositio
 0009:805C33C4       aBody_64
 0009:805C33C9       aPeachletter001
 0009:805C33D9       aAppear_10
 0009:805C33E0       aSeSyLetterAppe
 0009:805C33F4       aSeSvPeachMail
 0009:805C3405       aWait_22
 0009:805C340A       aSeSyTalkOk
 0009:805C3489       aBackbutton_1
 0009:805C3494       aBack_5
 0009:805C3499       aBoxbutton_1
 0009:805C34A3       aSeSyGalaxyDeci_7
 0009:805C34BE       aCsClickClose_1
 0009:805C34CD       aSeSyButtonCurs_8
 0009:805C3548       aChapter1
 0009:805C3551       aChapter2
 0009:805C355A       aChapter3
 0009:805C3563       aChapter4
 0009:805C356C       aChapter5
 0009:805C3575       aChapter6
 0009:805C357E       aChapter7
 0009:805C3587       aChapter8
 0009:805C3590       aChapter9
 0009:805C3599       aBoxbutton1
 0009:805C35A4       aBoxbutton2
 0009:805C35AF       aBoxbutton3
 0009:805C35BA       aBoxbutton4
 0009:805C35C5       aBoxbutton5
 0009:805C35D0       aBoxbutton6
 0009:805C35DB       aBoxbutton7
 0009:805C35E6       aBoxbutton8
 0009:805C35F1       aBoxbutton9
 0009:805C35FC       aPicturebookcha
 0009:805C3615       aChapterDpageDB
 0009:805C3629       aPicturebookcha_0
 0009:805C3659       aPicturebook
 0009:805C3665       aAbuttonpositio_3
 0009:805C3675       aText_0
 0009:805C367A       aContents
 0009:805C3683       aPicturebookcha_1
 0009:805C3698       aPicturebooktex
 0009:805C36AB       aBackbutton_2
 0009:805C36B6       aPicturebooktex_0
 0009:805C36CD       aPicturebooktit
 0009:805C36E2       aPicturebookcov
 0009:805C36FC       aPicturebookcov_0
 0009:805C3715       aPicturebookcha_2
 0009:805C3730       aTitle_1
 0009:805C3736       aPicleftpage
 0009:805C3742       aPicturnrightpa
 0009:805C3753       aPicrightpage
 0009:805C3760       aPicturnleftpag
 0009:805C3770       aPictonedown
 0009:805C377C       aAppear_83
 0009:805C3783       aStmPrologue01_0
 0009:805C3793       aSeSyPictureboo
 0009:805C37AD       aSeSyPicbookCon
 0009:805C37C8       aSeSyTalkOk_5
 0009:805C37D6       aPagenext
 0009:805C37DF       aTextcolor
 0009:805C37E9       aStmPrologue01B
 0009:805C37FB       aSeSyTalkFocusI_4
 0009:805C3811       aSeSyPictureboo_0
 0009:805C382D       aSeSyPictureboo_1
 0009:805C3849       aSeSyPictureboo_2
 0009:805C3863       aSeSyPictureboo_3
 0009:805C397F       aSpinguidancecu_1
 0009:805C3990       aTamakoromovegu_1
 0009:805C39A9       aTamakorojumpgu_1
 0009:805C39C2       aAppear_84
 0009:805C39DA       aSpinguidance
 0009:805C39FA       aBallguidance
 0009:805C3A07       aWaitrotation
 0009:805C3A14       aWaitraise
 0009:805C3A1E       aWaitraisehold
 0009:805C3A2C       aRaiseok
 0009:805C3A34       aWaitabutton
 0009:805C3A40       aCsNoticeUseDpd
 0009:805C3A52       aSeSyCsNoticeUs
 0009:805C3A6A       aSeSyCtrlGuideA
 0009:805C3A82       aSeSyCtrlGuideC
 0009:805C3A9A       aSeSyCtrlGuideC_0
 0009:805C3AB3       aWait_172
 0009:805C3B38       aPlayerleft_0
 0009:805C3B43       aCounter_2
 0009:805C3B4B       aCenterplayerle
 0009:805C3B5C       aLuigi_2
 0009:805C3B62       aWait_173
 0009:805C3B67       aFlash_2
 0009:805C3BE0       aPlayerleft_1
 0009:805C3BEB       aCenterplayerle_0
 0009:805C3BFC       aWait_174
 0009:805C3C01       aLuigi_3
 0009:805C3C07       aSeSyPlayerLeft
 0009:805C3C90       aTxtstage1
 0009:805C3C9A       aTxtstage2
 0009:805C3CA4       aTxtstage3
 0009:805C3CAE       aTxtstage4
 0009:805C3CB8       aTxtstage5
 0009:805C3CC2       aTxtstage6
 0009:805C3CCC       aTxtstage7
 0009:805C3CD6       aTxtstage8
 0009:805C3CE0       aTxtstar1
 0009:805C3CE9       aTxtstar2
 0009:805C3CF2       aTxtstar3
 0009:805C3CFB       aTxtstar4
 0009:805C3D04       aTxtcoinpiece1
 0009:805C3D12       aTxtcoinpiece2
 0009:805C3D20       aTxtcoinpiece3
 0009:805C3D2E       aTxtcoinpiece4
 0009:805C3D3C       aTxtcomp1
 0009:805C3D45       aTxtcomp2
 0009:805C3D4E       aTxtcomp3
 0009:805C3D57       aTxtcomp4
 0009:805C3D60       aTxttime1
 0009:805C3D69       aTxttime2
 0009:805C3D72       aTxttime3
 0009:805C3D7B       aTxttime4
 0009:805C3D84       aPicbelt1
 0009:805C3D8D       aPicbelt2
 0009:805C3D96       aPicbelt3
 0009:805C3D9F       aPicbelt4
 0009:805C3DA8       aWinbelt4
 0009:805C3DB1       aWiimessagestar
 0009:805C3DC4       aHeavensdoorgal_3
 0009:805C3DF8       aAllstarlist
 0009:805C3E04       aPicbg
 0009:805C3E0A       aList1
 0009:805C3E10       aList2
 0009:805C3E16       aTitle
 0009:805C3E1C       aBelt
 0009:805C3E44       aArrowupbutton
 0009:805C3E52       aBoxbutton100
 0009:805C3E60       aArrowdownbutto
 0009:805C3E70       aBoxbutton101
 0009:805C3E7E       aCapture
 0009:805C3E86       aBoxtbutton
 0009:805C3E91       aAllstarlistTit
 0009:805C3EA3       aPagenumber_0
 0009:805C3EAE       aAllstarlistPag
 0009:805C3EBF       aPhoto
 0009:805C3EC5       aTxtphotopage
 0009:805C3ED2       aBlosbase
 0009:805C3EDB       aSeSyGalamapCur_0
 0009:805C3EF3       aWait_175
 0009:805C3F0A       aTurnoverpage2
 0009:805C3F18       aTurnoverpage1
 0009:805C3F26       aAppear_85
 0009:805C3F2D       aEnd2
 0009:805C3F32       aSeSyGalamapScr
 0009:805C3F47       aSeSyGalamapCap
 0009:805C3F5D       aAllstarlistCon
 0009:805C3F85       aWiimessagetitl_0
 0009:805C4078       aPeachlettermin
 0009:805C4088       aAbuttonpositio_4
 0009:805C4098       aAppear_86
 0009:805C409F       aWait_176
 0009:805C40A4       aSeSyTalkOk_6
 0009:805C4129       aProloguedemo
 0009:805C4136       aPrologue
 0009:805C413F       aSeSyTalkFocusI_5
 0009:805C4155       aAbuttonpositio_5
 0009:805C41D8       aPurplecoincoun
 0009:805C41EA       aCounter_3
 0009:805C41FC       aFlash_3
 0009:805C4202       aPurplecoincoun_0
 0009:805C4219       aWait_177
 0009:805C42B0       aSystemPlayerna
 0009:805C42C7       aSystemPlayerna_0
 0009:805C42E0       aSaveicon
 0009:805C42E9       aIconsave
 0009:805C42F2       aRotate_3
 0009:805C42F9       aSaveiconpositi
 0009:805C4340       aStar1
 0009:805C4346       aStar2
 0009:805C434C       aStar3
 0009:805C4352       aStar4
 0009:805C4358       aStar5
 0009:805C435E       aStar6
 0009:805C4364       aStar7
 0009:805C436A       aNewstar1
 0009:805C4373       aNewstar2
 0009:805C4393       aScenarioselect
 0009:805C43A2       aScenarioframe
 0009:805C43B0       aScenario
 0009:805C43B9       aStartop
 0009:805C43C1       aStardown
 0009:805C43CA       aBestscore
 0009:805C43D4       aBesttime
 0009:805C43DD       aNewstargreen
 0009:805C43EA       aMario_2
 0009:805C43F0       aCometappear
 0009:805C43FC       aScenarioselect_0
 0009:805C4422       aScenarioselect_1
 0009:805C443F       aAppear_87
 0009:805C4446       aWait_178
 0009:805C444B       aStarpositionto
 0009:805C445B       aStarpositiondo
 0009:805C446C       aGalaxy
 0009:805C4473       aSelectin_2
 0009:805C447C       aShacoinnum_2
 0009:805C4492       aShatime
 0009:805C449A       aSelectout_0
 0009:805C44A4       aSeSyGalaxyDeci_8
 0009:805C44BF       aShamario_0
 0009:805C44C8       aPlayerleft_2
 0009:805C44D3       aShamarionum_0
 0009:805C44DF       aMarioposition0
 0009:805C44EF       aMarioposition1
 0009:805C44FF       aBgmSenarioSel_0
 0009:805C450F       aBgmSenarioSel2
 0009:805C4521       aSeDmLvSenarioS
 0009:805C453A       aNewwait_0
 0009:805C4542       aSeSyDecide1
 0009:805C4551       aCsClickClose_2
 0009:805C4560       aTextcomet
 0009:805C456A       aGalaxyinfoCome_0
 0009:805C4582       aSeSyCometWarni
 0009:805C459B       aSeSyCometWarni_0
 0009:805C45AF       aCometwait
 0009:805C45B9       aCometend
 0009:805C46B7       aStagetitle
 0009:805C46C2       aGalaxy_0
 0009:805C46C9       aScenario_0
 0009:805C46D2       aAppear_88
 0009:805C475A       aIgnorepausenam_2
 0009:805C4848       aGamescreen_0
 0009:805C48D8       aStaffroll
 0009:805C48E2       aSaveafterstaff
 0009:805C48F5       aStaffrolltextu
 0009:805C490A       aMstaffrolltext
 0009:805C491C       aLstaffrolltext
 0009:805C492E       aStafflist000
 0009:805C493B       aText00
 0009:805C4942       aTitlelogo
 0009:805C494C       aTheend
 0009:805C4953       aPicturelu
 0009:805C495D       aPictureru
 0009:805C4967       aPictureld
 0009:805C4971       aPicturerd
 0009:805C498C       aFadein
 0009:805C4993       aFadeout
 0009:805C499B       aFramein
 0009:805C49A3       aFrameout
 0009:805C49BC       aStaffroll_0
 0009:805C49C6       aStaffrollpictu
 0009:805C49D7       aPicturelu_0
 0009:805C49E1       aPictureld_0
 0009:805C49EB       aPictureru_0
 0009:805C49F5       aPicturerd_0
 0009:805C49FF       aS03dBti
 0009:805C4A0A       aPiclu
 0009:805C4A10       aPicld
 0009:805C4A16       aPicru
 0009:805C4A1C       aPicrd
 0009:805C4A22       aFadein_0
 0009:805C4A29       aStaffrolltitle
 0009:805C4A5E       aStmStaffRoll
 0009:805C4A6D       aTitlelogoappea
 0009:805C4A7D       aTitlelogowait
 0009:805C4A8B       aAllrights
 0009:805C4A95       aSeSyThankYouLu
 0009:805C4AAB       aSeSyE3ThankYou
 0009:805C4ABE       aSystemResult00_8
 0009:805C4ACF       aStaffrollinfoC
 0009:805C4AE3       aStaffrollinfoF
 0009:805C4B01       aStaffrollinfoL
 0009:805C4B15       aBgmNewGalaxy
 0009:805C4B24       aSeSyLuigiModeA
 0009:805C4B3C       aSeSyTalkOk_7
 0009:805C4D30       aDisplayinforma
 0009:805C4D4C       aBgmGalaxyCompl
 0009:805C4D60       aBgmNewGalaxy_0
 0009:805C4D6F       aSeSyTalkOk_8
 0009:805C4D7D       aCsClickClose_3
 0009:805C4D99       aResultwindow
 0009:805C4DA6       aAppear_89
 0009:805C4DAD       aResult
 0009:805C4DB4       aLine_1
 0009:805C4DB9       aBgmAstroReturn
 0009:805C4DCA       aFlash_4
 0009:805C4DD0       aSeSyResultPowS
 0009:805C4DEA       aResultstarcoun
 0009:805C4DFC       aBgmHighScore
 0009:805C4E0B       aResultpiececou
 0009:805C4E1E       aSeSyStarPieceS_0
 0009:805C4E36       aSeSyStarPieceS_1
 0009:805C4E52       aTotalstar
 0009:805C4E5C       aBestscore_0
 0009:805C4E66       aTotalpiece
 0009:805C501F       aStarcounter
 0009:805C502B       aCounter_4
 0009:805C5033       aWait_179
 0009:805C5038       aFlash_5
 0009:805C50B0       aStarpiececount
 0009:805C50C1       aTspiececounter
 0009:805C50D0       aTcounter
 0009:805C50D9       aCounter_5
 0009:805C50E1       aTposition1000
 0009:805C50EF       aTposition0100
 0009:805C50FD       aTposition0010
 0009:805C510B       aTposition0001
 0009:805C5119       aPosition100_0
 0009:805C5125       aPosition010_0
 0009:805C5131       aPosition001_0
 0009:805C513D       aFlash_6
 0009:805C5143       aTstarpiececoun
 0009:805C515A       aStarpiececount_0
 0009:805C5170       aWait_180
 0009:805C5175       aPictstarpiece
 0009:805C5183       aPicnstarpiece
 0009:805C525D       aWait_181
 0009:805C5262       aPicribbon
 0009:805C526C       aCommandstream
 0009:805C527A       aPicarrow
 0009:805C5283       aArrow
 0009:805C5289       aSeSyDpdDragRan
 0009:805C5368       aPointerguidanc_4
 0009:805C5378       aNpointerguide
 0009:805C5386       aPointerframe1
 0009:805C5394       aPointerframe2
 0009:805C53A2       aCsCanPlay2p
 0009:805C53B1       aCsOutDisplay2p
 0009:805C53C3       aCsInDisplay2p
 0009:805C53D4       aCsNoticeUseDpd_0
 0009:805C53E6       aSeSyCsNoticeUs_0
 0009:805C53FE       aAppeartwoline
 0009:805C540C       aAppearoneline
 0009:805C541A       aWait_182
 0009:805C541F       aEndtwoline
 0009:805C542A       aEndoneline
 0009:805C5528       aDpdpointersub
 0009:805C5536       aDpdpointer
 0009:805C5541       aStarpointer
 0009:805C554D       aHandpointer
 0009:805C5559       aStarframe
 0009:805C5563       aStar_6
 0009:805C5568       aPicnozzle
 0009:805C5572       aGroupring
 0009:805C557C       aStarpointerblu
 0009:805C5590       aBlurBti
 0009:805C55B0       aWait_183
 0009:805C55B5       aSeSyDpdBTrig
 0009:805C55C6       aGrip
 0009:805C55CB       aTouch_16
 0009:805C55D1       aHold
 0009:805C55D6       aSeSyDpdBReleas
 0009:805C55EA       aRelease
 0009:805C55F2       aHandarrow
 0009:805C55FC       aBlink_11
 0009:805C5602       aTransparency
 0009:805C5610       jpt_80388A8C
 0009:805C562C       aPicplayer1
 0009:805C5637       aPicplayer2
 0009:805C5642       aHandtype
 0009:805C564B       aDpdpointernumb
 0009:805C565C       aCsContConnect
 0009:805C566C       aSeSyCsContConn
 0009:805C5682       aPosition
 0009:805C57B0       aCount_2
 0009:805C57B6       aAppear_90
 0009:805C57BD       aWait_184
 0009:805C57C2       aDanger_0
 0009:805C5800       aHitpointmeter_1
 0009:805C580E       aHitpointnumber_0
 0009:805C581D       aFont_0
 0009:805C5822       aHitpointw_0
 0009:805C582C       aFontposition2t_0
 0009:805C583D       aShowhide_1
 0009:805C5846       aFontposition1t_0
 0009:805C5857       aBreak_57
 0009:805C585D       aDamage2_0
 0009:805C5865       aSeSyLifePlateD_0
 0009:805C587A       aMovemeterw_0
 0009:805C5885       aCount_3
 0009:805C588B       aRecoverycount_0
 0009:805C5965       aTiltguidance
 0009:805C5972       aOkappear
 0009:805C597B       aOkend
 0009:805C5981       aAppear_91
 0009:805C5988       aSlope
 0009:805C598E       aSeSyCtrlGuideA_0
 0009:805C59A6       aSeSyCtrlGuideC_1
 0009:805C59BF       aSeSyCtrlGuideC_2
 0009:805C59D7       aSlopehold
 0009:805C59E1       aSlopeok
 0009:805C59E9       aTurnleft_2
 0009:805C59F2       aTurnlefthold
 0009:805C59FF       aTurnleftok
 0009:805C5A0A       aTurnright_2
 0009:805C5A14       aTurnrighthold
 0009:805C5A22       aTurnrightok
 0009:805C5B37       aInfowindow
 0009:805C5B42       aWininfowindow
 0009:805C5B50       aInfowindowm
 0009:805C5B5C       aWininfowindowm
 0009:805C5B6B       aLeft_1
 0009:805C5B70       aRight_1
 0009:805C5B76       aSystemSave00No
 0009:805C5B87       aSystemSave00Ye
 0009:805C5B99       aButtonappear_3
 0009:805C5BA6       aSYes
 0009:805C5BAD       aSNo
 0009:805C5BB3       aSysinfowindow
 0009:805C5BC1       aSysinfowindowm
 0009:805C5BD3       aButtonwait_2
 0009:805C5BDE       aSeSyTalkOk_9
 0009:805C5BEC       aCsClickClose_4
 0009:805C5BFB       aButtonend_3
 0009:805C5CA4       aSystemwipe_0
 0009:805C5E78       aTimeup_0
 0009:805C5E8E       aTimelimit
 0009:805C5E98       aNumber_1
 0009:805C5E9F       aSeSyE3TimerSca
 0009:805C5EB7       aAppear_92
 0009:805C5EBE       aTimesignal
 0009:805C5EC9       aSeSyE3TimerCou_8
 0009:805C5EE0       aSeSyE3TimerCou_9
 0009:805C5EF7       aSeSyE3TimerCou_10
 0009:805C5FE5       aTitlelogo_0
 0009:805C5FEF       aPressAB
 0009:805C5FFB       aPressstart
 0009:805C6006       aStmTitle
 0009:805C6010       aAppear_93
 0009:805C6017       aWait_185
 0009:805C601C       aTitlelogolight
 0009:805C602B       aTitlelogolight_0
 0009:805C603B       aTitlelogolight_1
 0009:805C604B       aTitlelogolight_2
 0009:805C605B       aTitlelogolight_3
 0009:805C606B       aTitlelogolight_4
 0009:805C607B       aTitlelogolight_5
 0009:805C608B       aSeSyGameStart
 0009:805C609C       aCsClickClose_5
 0009:805C60AB       aReactiona
 0009:805C60B5       aReactionb
 0009:805C60BF       aDecide
 0009:805C60C6       aButtonreaction
 0009:805C619D       aWatercamerafil
 0009:805C61B3       aWatercamerafil_0
 0009:805C62EF       aGameover
 0009:805C63CF       aWipekoopa
 0009:805C6460       aWipering
 0009:805C6469       aRing_1
 0009:805C646E       aIcevolcanogala_3
 0009:805C6518       aSeSyTalkFocusI
 0009:805C652E       aSeSyTalkSelect
 0009:805C6544       aSeSyTalkSelect_0
 0009:805C656E       aRight_2
 0009:805C6574       aBoxright
 0009:805C657D       aLeft_2
 0009:805C6582       aBoxleft
 0009:805C658A       aLefttext
 0009:805C6593       aRighttext
 0009:805C659D       aCsClickClose_6
 0009:805C6619       aSelectbutton
 0009:805C6626       aLeft_3
 0009:805C662B       aRight_3
 0009:805C66E0       aFileripperCpp
 0009:805C66EF       aFileIsnTExist
 0009:805C6701       aDvdopenFailed
 0009:805C6728       aGamesystem
 0009:805C6751       aLogo_0
 0009:805C67C8       aDisc04
 0009:805C67D0       aDisc01
 0009:805C67D8       aDisc02
 0009:805C67E0       aDisc03
 0009:805C67E8       aCont01
 0009:805C67F0       aCont10
 0009:805C67F8       aCont102
 0009:805C6802       aErrorwatcher
 0009:805C680F       aErrormessageim
 0009:805C6825       aFreestyleunpla
 0009:805C683C       jpt_8039A74C
 0009:805C6870       jpt_8039A7D8
 0009:805C68F0       aErrormessagear
 0009:805C6908       aLayoutdataEmbe
 0009:805C6925       aMessagefont26B_0
 0009:805C6939       aLayoutdataFont
 0009:805C694E       aMessagefont26B_1
 0009:805C6963       aPicturefontBrf_0
 0009:805C6976       aMenufont64Brfn_0
 0009:805C6988       aNumberfontBrfn_0
 0009:805C699A       aCinemafont26Br_0
 0009:805C69B0       aLogo_1
 0009:805C69B8       aErrormessagear_0
 0009:805C69D0       aParticledataEf
 0009:805C69E9       aSMessagedataSy
 0009:805C6A04       aMemorySystemme
 0009:805C6A1E       aLayoutdataErro
 0009:805C6A41       aMemoryErrormes
 0009:805C6ACB       aMarioanimeArc
 0009:805C6ADA       aMarioArc
 0009:805C6AE4       aMario_3
 0009:805C6AEA       aLuigiArc
 0009:805C6AF4       aLuigi_4
 0009:805C6BE8       aIntermission_0
 0009:805C6C08       aTitle_2
 0009:805C6C0E       aAstrodome_8
 0009:805C6C18       aGame_9
 0009:805C6C1D       aAstrogalaxy_10
 0009:805C6C29       aLibraryroom_3
 0009:805C6C35       aHeavensdoorgal_11
 0009:805C6C47       aSystemSetup
 0009:805C6C64       aDestroySceneS
 0009:805C6C83       aChangeWaveData
 0009:805C6CA4       aInitializeScen
 0009:805C6CC8       aEmptyScene
 0009:805C6E48       aHeapmemorywatc
 0009:805C6E60       aJpjapanese
 0009:805C6E6B       aUsenglish
 0009:805C6E75       aUsspanish
 0009:805C6E7F       aUsfrench
 0009:805C6E88       aEuenglish
 0009:805C6E92       aEuspanish
 0009:805C6E9C       aEufrench
 0009:805C6EA5       aEugerman
 0009:805C6EAE       aEuitalian
 0009:805C6EB8       aEudutch
 0009:805C6EC0       aEnglish
 0009:805C6EC8       aBrlyt
 0009:805C6ECF       aBrlan
 0009:805C6ED6       aBrfnt
 0009:805C6EDD       aMessagefont26B
 0009:805C6EF1       aMenufont64Brfn
 0009:805C6F02       aNumberfontBrfn
 0009:805C6F13       aPicturefontBrf
 0009:805C6F25       aCinemafont26Br
 0009:805C6F38       aSSS_0
 0009:805C6F3F       aSS_4
 0009:805C6F45       aBrlyt_0
 0009:805C6F4C       aBrlan_0
 0009:805C7000       aMessageBmg
 0009:805C700C       aMessageidTbl
 0009:805C701A       aMessageid
 0009:805C7024       aIndex
 0009:805C702A       aMemorySystemme_0
 0009:805C7044       aMessagedataMes
 0009:805C7060       aNanderror
 0009:805C706A       aNand03
 0009:805C7072       aNand02
 0009:805C707A       aNand112
 0009:805C7084       aNand11
 0009:805C708C       aNand08
 0009:805C7094       aNand05
 0009:805C709C       aNand06
 0009:805C70A4       aNand07
 0009:805C70AC       aSystemSave05
 0009:805C70BA       aSystemSave04
 0009:805C70C8       aSeSySaveConfir
 0009:805C71F0       _13NerveExecutor::`vtbl'
 0009:805C7328       aHeavenlybeachg
 0009:805C7340       aBdl
 0009:805C7345       aBmd
 0009:805C734A       aBck
 0009:805C734F       aBca
 0009:805C7354       aBtk
 0009:805C7359       aBpk
 0009:805C735E       aBtp
 0009:805C7363       aBlk
 0009:805C7368       aBrk
 0009:805C736D       aBas
 0009:805C7372       aBmt
 0009:805C7377       aBva
 0009:805C737C       aBanmt
 0009:805C7383       aSSS_1
 0009:805C738A       aSS_5
 0009:805C7390       aBtp_0
 0009:805C7395       aBpk_0
 0009:805C739A       aBtk_0
 0009:805C739F       aBrk_0
 0009:805C73A4       aBlk_0
 0009:805C73A9       aBck_0
 0009:805C73AE       aBca_0
 0009:805C73B3       aBas_0
 0009:805C73B8       aBmt_0
 0009:805C73BD       aBva_0
 0009:805C73C2       aBanmt_0
 0009:805C73C9       aBdl_0
 0009:805C73CE       aMarioshadowBdl
 0009:805C73DE       aBmd_0
 0009:805C7438       aScenario_1
 0009:805C7441       aScenariodataBc
 0009:805C7454       aZonelistBcsv
 0009:805C7463       aIshidden
 0009:805C746C       aPowerstarid
 0009:805C7478       aZonename
 0009:805C7481       aScenariono
 0009:805C748C       aStagedata
 0009:805C74DC       jpt_803A9AD8
 0009:805C7550       aStagedata_0
 0009:805C7560       aObjectdataMari
 0009:805C757B       aObjectdataBone
 0009:805C7595       aObjectdataMari_0
 0009:805C75AB       aObjectdataMari_1
 0009:805C75C5       aObjectdataMari_2
 0009:805C75E1       aObjectdataMari_3
 0009:805C75FE       aObjectdataBone_0
 0009:805C7618       aObjectdataLuig
 0009:805C762E       aObjectdataLuig_0
 0009:805C7648       aObjectdataLuig_1
 0009:805C7664       aObjectdataLuig_2
 0009:805C7681       aObjectdataMari_4
 0009:805C769C       aObjectdataMari_5
 0009:805C76B7       aObjectdataMari_6
 0009:805C76D6       aObjectdataIces
 0009:805C76EE       aObjectdataMari_7
 0009:805C770C       aObjectdataMari_8
 0009:805C7727       aObjectdataMari_9
 0009:805C7746       aObjectdataSpin
 0009:805C775F       aObjectdataCoin
 0009:805C7774       aObjectdataKino
 0009:805C7790       aObjectdataKino_0
 0009:805C77AD       aObjectdataPowe
 0009:805C77C9       aObjectdataKino_1
 0009:805C77E0       aObjectdataSear
 0009:805C7800       aObjectdataShad
 0009:805C7825       aObjectdataShad_0
 0009:805C7848       aObjectdataShad_1
 0009:805C7869       aObjectdataStar
 0009:805C7883       aObjectdataWate
 0009:805C789F       aObjectdataYell
 0009:805C78BA       aObjectdataStar_0
 0009:805C78DA       aObjectdataPowe_0
 0009:805C78F4       aObjectdataKour
 0009:805C790A       aObjectdataRail
 0009:805C7924       aLayoutdataScen
 0009:805C7943       aLayoutdataBack
 0009:805C795E       aObjectdataScen
 0009:805C7980       aLayoutdataMapt
 0009:805C799C       aLayoutdataGala
 0009:805C79BC       aLayoutdataIcon
 0009:805C79D6       aLayoutdataMapt_0
 0009:805C79EF       aLayoutdataGala_0
 0009:805C7A0C       aLayoutdataResu
 0009:805C7A29       aLayoutdataMapg
 0009:805C7A47       aLayoutdataIcon_0
 0009:805C7A61       aLayoutdataMapb
 0009:805C7A7B       aLayoutdataMapd
 0009:805C7A97       aLayoutdataAlls
 0009:805C7AB3       aObjectdataSupe
 0009:805C7AD3       aLayoutdataPaus_0
 0009:805C7AED       aLayoutdataMapg_0
 0009:805C7B09       aLayoutdataMapg_1
 0009:805C7B28       aObjectdataSpin_0
 0009:805C7B47       aObjectdataMari_10
 0009:805C7B61       aObjectdataVror
 0009:805C7B79       aObjectdataButl
 0009:805C7B90       aObjectdataGala
 0009:805C7BB2       aObjectdataButt
 0009:805C7BCC       aObjectdataAstr
 0009:805C7BEF       aObjectdataSupe_0
 0009:805C7C15       aLayoutdataStar
 0009:805C7C3A       aObjectdataKino_2
 0009:805C7C5D       aObjectdataSign
 0009:805C7C77       aObjectdataTico
 0009:805C7C8F       aObjectdataCutb
 0009:805C7CA7       aObjectdataCrys
 0009:805C7CC2       aObjectdataTico_0
 0009:805C7CDD       aObjectdataDemo
 0009:805C7CFD       aObjectdataAstr_0
 0009:805C7D1B       aObjectdataKino_3
 0009:805C7D36       aObjectdataSupe_1
 0009:805C7D5B       aObjectdataPowe_1
 0009:805C7D76       aObjectdataKino_4
 0009:805C7D9A       aObjectdataWood
 0009:805C7DB2       aObjectdataTico_1
 0009:805C7DD8       aObjectdataKino_5
 0009:805C7DF6       aObjectdataWood_0
 0009:805C7E13       aObjectdataCrys_0
 0009:805C7E33       aObjectdataKino_6
 0009:805C7E55       aObjectdataAstr_1
 0009:805C7E79       aObjectdataKino_7
 0009:805C7E9E       aObjectdataMini
 0009:805C7EC2       aObjectdataAstr_2
 0009:805C7EEC       aObjectdataAstr_3
 0009:805C7F0F       aObjectdataAstr_4
 0009:805C7F35       aObjectdataWarp
 0009:805C7F4D       aObjectdataRose
 0009:805C7F68       aObjectdataAstr_5
 0009:805C7F82       aObjectdataAstr_6
 0009:805C7FAA       aObjectdataTico_2
 0009:805C7FBF       aObjectdataAstr_7
 0009:805C7FE5       aObjectdataTico_3
 0009:805C7FFD       aObjectdataAstr_8
 0009:805C8023       aObjectdataAstr_9
 0009:805C8044       aObjectdataAstr_10
 0009:805C8061       aObjectdataAstr_11
 0009:805C8085       aObjectdataRose_0
 0009:805C80A3       aObjectdataKino_8
 0009:805C80BB       aObjectdataAstr_12
 0009:805C80DE       aObjectdataGran
 0009:805C80F8       aObjectdataAstr_13
 0009:805C8119       aObjectdataAstr_14
 0009:805C813A       aObjectdataAstr_15
 0009:805C8157       aObjectdataAstr_16
 0009:805C8178       aObjectdataAstr_17
 0009:805C8199       aObjectdataAstr_18
 0009:805C81B4       aObjectdataAstr_19
 0009:805C81DD       aObjectdataAstr_20
 0009:805C8206       aObjectdataAstr_21
 0009:805C8233       aObjectdataAstr_22
 0009:805C825C       aObjectdataAstr_23
 0009:805C827B       aObjectdataTico_4
 0009:805C829E       aObjectdataLuig_3
 0009:805C82BA       aObjectdataLuig_4
 0009:805C82D9       aObjectdataTico_5
 0009:805C82F3       aObjectdataGlar
 0009:805C830D       aObjectdataGlar_0
 0009:805C8327       aObjectdataLens
 0009:805C8341       aObjectdataSunA
 0009:805C8355       aLayoutdataGala_1
 0009:805C8370       aLayoutdataGala_2
 0009:805C838D       aObjectdataGcap
 0009:805C83AC       aObjectdataMini_0
 0009:805C83D2       aObjectdataAstr_24
 0009:805C83F6       aObjectdataMini_1
 0009:805C841C       aObjectdataAstr_25
 0009:805C8440       aObjectdataGcap_0
 0009:805C845F       aObjectdataAstr_26
 0009:805C8488       aObjectdataAstr_27
 0009:805C84A7       aObjectdataMini_2
 0009:805C84CE       aObjectdataDemo_0
 0009:805C84E8       aObjectdataLigh
 0009:805C8502       aObjectdataNpcd
 0009:805C851A       aLayoutdataAirm
 0009:805C8533       aLayoutdataBatt
 0009:805C854F       aLayoutdataBlue
 0009:805C856F       aLayoutdataCame
 0009:805C858A       aLayoutdataCine
 0009:805C85A6       aLayoutdataCine_0
 0009:805C85C2       aLayoutdataCoin
 0009:805C85DE       aLayoutdataColl
 0009:805C85FD       aLayoutdataCome
 0009:805C861F       aLayoutdataComm
 0009:805C863D       aLayoutdataDpdp
 0009:805C8658       aLayoutdataDpdp_0
 0009:805C8676       aLayoutdataDpdp_1
 0009:805C8697       aLayoutdataFlym
 0009:805C86B0       aLayoutdataGets
 0009:805C86C8       aLayoutdataHitp
 0009:805C86E6       aLayoutdataSudd
 0009:805C8707       aLayoutdataIcon_1
 0009:805C8723       aLayoutdataIcon_2
 0009:805C873C       aLayoutdataInfo
 0009:805C875E       aLayoutdataOneu
 0009:805C8774       aLayoutdataPlay
 0009:805C878F       aLayoutdataPoin
 0009:805C87AF       aLayoutdataPurp
 0009:805C87D1       aLayoutdataRetr
 0009:805C87ED       aLayoutdataSele
 0009:805C880A       aLayoutdataSign
 0009:805C882B       aLayoutdataStag
 0009:805C8846       aLayoutdataStar_0
 0009:805C8862       aLayoutdataStar_1
 0009:805C8883       aLayoutdataSysi
 0009:805C88A1       aLayoutdataSysi_0
 0009:805C88C3       aLayoutdataTalk
 0009:805C88E4       aLayoutdataTalk_0
 0009:805C8907       aLayoutdataTalk_1
 0009:805C8929       aLayoutdataToob
 0009:805C8940       aLayoutdataWipe
 0009:805C895A       aLayoutdataWipe_0
 0009:805C8973       aLayoutdataYell
 0009:805C8995       aHomebutton2Spe_0
 0009:805C89B0       aHomebutton2Hom_0
 0009:805C89C6       aHomebutton2Con_0
 0009:805C89DE       aParticledataEf_0
 0009:805C89F7       aLayoutdataFont_0
 0009:805C8A0C       aStagedataObjna_0
 0009:805C8A28       aObjectdataSave
 0009:805C8A47       aObjectdataErro
 0009:805C8A69       aObjectdataPlan
 0009:805C8A8C       aLayoutdataTime
 0009:805C8AA6       aLayoutdataTime_0
 0009:805C8ABD       aModuledataHome_0
 0009:805C8AE6       aModuledataProd_0
 0009:805C8AFE       aLayoutdataHome_0
 0009:805C8B19       aMessagedataMes_0
 0009:805C8B32       aLayoutdataGame
 0009:805C9670       aHbmcreaterso
 0009:805C967D       aHbminitrso
 0009:805C9688       aHbmcalcrso
 0009:805C9693       aHbmdrawrso
 0009:805C969E       aHbmgetselectbt
 0009:805C96B4       aHbmsetadjustfl
 0009:805C96C8       aHbmstartblacko
 0009:805C9714       aModuledataProd
 0009:805C972C       aModuledataHome
 0009:805C9758       aConfig1
 0009:805C97C0       aLuigieventstat
 0009:805C97D0       aSpecialstarlui
 0009:805C97E8       aLuigitalkafter
 0009:805C97FE       aSpecialstarfin_1
 0009:805C9820       aEggstargalaxy
 0009:805C982E       aHoneybeekingdo
 0009:805C9844       aStardustgalaxy
 0009:805C9853       aBattleshipgala_2
 0009:805C9864       aPhantomgalaxy
 0009:805C9872       aHeavenlybeachg_3
 0009:805C9886       aSandclockgalax
 0009:805C9896       aCosmosgardenga_4
 0009:805C98A9       aIcevolcanogala_1
 0009:805C98BA       aOceanringgalax_0
 0009:805C98CA       aReversekingdom_3
 0009:805C98DF       aFactorygalaxy_3
 0009:805C98ED       aCannonfleetgal
 0009:805C98FF       aOceanphantomca_4
 0009:805C9916       aHellprominence_3
 0009:805C992B       aEventcometstar
 0009:805C993D       aCoin100cometeg
 0009:805C9957       aSpecialstarcoi
 0009:805C9978       aGalaxycometsta
 0009:805C99B8       aName_4
 0009:805C99C0       aComet
 0009:805C99C6       aAppearpowersta
 0009:805C99E8       aPowerstarid_0
 0009:805C99F4       aLuigimodetimer
 0009:805C9A03       aPurple_0
 0009:805C9A0A       aBlack_0
 0009:805C9A10       aIshidden_0
 0009:805C9A20       aName_5
 0009:805C9A25       aPowerstarnum
 0009:805C9A32       aSpecialstargre
 0009:805C9A43       aSpecialstarred
 0009:805C9A52       aSpecialstarfin_2
 0009:805C9A6A       aSpecialstargra
 0009:805C9A7B       aSpecialstarlui_0
 0009:805C9A93       aAppearS
 0009:805C9A9C       aSpecialstargre_0
 0009:805C9AB0       aGrandgalaxyno
 0009:805C9AC0       aNormalcometS
 0009:805C9ACE       aCoin100cometS
 0009:805C9ADD       aComet1dstatus
 0009:805C9AEC       aStarpiececount_1
 0009:805C9B01       aSpecialstarfin_3
 0009:805C9B1B       aSpecialstargre_1
 0009:805C9B30       aMpowerstarflag
 0009:805C9B3F       aMfirstplayflag
 0009:805C9B4E       aMmaxcoinnum
 0009:805C9B5A       aMgalaxyname
 0009:805C9BC0       aMario1_0
 0009:805C9BC7       aMario_4
 0009:805C9BCD       aPicturebookC
 0009:805C9BE6       aSHi
 0009:805C9BEC       aSLo
 0009:805C9BF2       aMisspointforle
 0009:805C9C05       aMissnum
 0009:805C9C0D       aSpecialstargra_0
 0009:805C9C21       aAppearS_0
 0009:805C9C2A       aName_6
 0009:805C9C2F       aProgress
 0009:805C9C58       aAppearflippane
 0009:805C9C70       aFlippanelexgal_1
 0009:805C9C82       aAppearsurfingl
 0009:805C9C99       aSurfinglv1gala_3
 0009:805C9CAA       aAppeartamakoro
 0009:805C9CC4       aTamakoroexlv1g_1
 0009:805C9CD8       aAppearbreakdow
 0009:805C9CF4       aBreakdownplane_1
 0009:805C9D0A       aAppearcubebubb
 0009:805C9D26       aCubebubbleexlv_3
 0009:805C9D3C       aStarnumoceanfl
 0009:805C9D5A       aOceanfloaterla_1
 0009:805C9D71       aSpecialstarope
 0009:805C9D97       aHeavenlybeachg_4
 0009:805C9DAB       aAppearoceanflo
 0009:805C9DC8       aStarnumhoneybe
 0009:805C9DE0       aHoneybeeexgala_1
 0009:805C9DF1       aSpecialstarope_0
 0009:805C9E11       aHoneybeekingdo_3
 0009:805C9E27       aAppearhoneybee
 0009:805C9E3E       aStarnumskullsh
 0009:805C9E56       aSkullsharkgala_1
 0009:805C9E67       aSpecialstarope_1
 0009:805C9E87       aTeardropgalaxy_1
 0009:805C9E96       aAppearskullsha
 0009:805C9EAD       aStarnumdarkroo
 0009:805C9EC3       aDarkroomgalaxy_1
 0009:805C9ED2       aSpecialstarope_2
 0009:805C9EF0       aFactorygalaxy_4
 0009:805C9EFE       aAppeardarkroom
 0009:805CAD92       aStarpieceS
 0009:805CAD9E       aSpecialstargre_2
 0009:805CADAF       aName_7
 0009:805CADB4       aOpencondition1
 0009:805CADC8       jpt_803B3804
 0009:805CADF8       jpt_803B3AC8
 0009:805CAE28       a2bytesFlag
 0009:805CB088       aNwc24messenger
 0009:805CB0CB       aKoopabattlevs3_5
 0009:805CB11A       aLogo_2
 0009:805CB11F       aTitle_3
 0009:805CB125       aThankyou
 0009:805CB12E       aGame_10
 0009:805CB13E       aEpiloguedemost_3
 0009:805CB150       aSeSyTicoWakePl
 0009:805CB167       aKoopabattlevs3_6
 0009:805CB17C       aHeavensdoorgal_12
 0009:805CB18E       aPeachcastlegar_4
 0009:805CB218       aBannercreator
 0009:805CB226       aTmpBannerBin
 0009:805CB236       aTitleMain
 0009:805CB241       aTitleSub
 0009:805CB24B       aSaveiconbanner
 0009:805CB25E       aSavebannerBti
 0009:805CB26D       aSaveicon02dBti
 0009:805CB2C0       aMario_5
 0009:805CB2C6       aLuigi_5
 0009:805CB2CC       aSysconf_0
 0009:805CB2D8       aMario
 0009:805CB2DE       aLuigi_0
 0009:805CB2E4       aConfig
 0009:805CB2EB       aSysconf
 0009:805CB2F3       aSavedatahandle
 0009:805CB303       aS1d
 0009:805CB386       aSystemSave07
 0009:805CB394       aSystemSave00
 0009:805CB3A2       aSystemSave02
 0009:805CB3B0       aConfirmendgame
 0009:805CB3BF       aS1d_0
 0009:805CB3C5       aMario_6
 0009:805CB3CB       aLuigi_6
 0009:805CB3D1       aConfig1d
 0009:805CB3DB       aSysconf_1
 0009:805CB3E3       aNand08_0
 0009:805CB3EB       aSystemSave01
 0009:805CB3F9       aSeSyLvSaving
 0009:805CB409       aSeSySaveConfir_0
 0009:805CB421       aSeSySaveSucces
 0009:805CB434       aSeSySaveFailur
 0009:805CB447       aNand112_0
 0009:805CB568       aSpecialstargre_3
 0009:805CB580       aStarpiecealmss
 0009:805CB8B6       aTrileglv1galax
 0009:805CB9AD       aStorysequencee
 0009:805CB9C3       aSave
 0009:805CB9C8       aAstrogalaxy_11
 0009:805CB9D4       aAstrodome_9
 0009:805CB9DE       aPeachcastlegar_5
 0009:805CB9F6       aFileselect_3
 0009:805CBA04       jpt_803BA608
 0009:805CBA24       jpt_803BA784
 0009:805CBA72       aKoopabattlevs3_7
 0009:805CBA87       aEpiloguedemost_4
 0009:805CBA99       aHeavensdoorgal_13
 0009:805CBAAB       aEggstargalaxy_6
 0009:805CBAB9       aEventkinopioex
 0009:805CBAD5       aTrileglv1galax_5
 0009:805CBAE5       aEventcometstar_0
 0009:805CBAF7       aKoopabattlevs1_3
 0009:805CBB0C       aSpecialstarlui_1
 0009:805CBB24       aKoopajrshiplv1_1
 0009:805CBB39       aKoopabattlevs2_5
 0009:805CBB4E       aFloaterotaking_4
 0009:805CBB63       aSpecialstargre_4
 0009:805CBB9D       aLibraryroom_4
 0009:805CBBA9       aRosettatalkaft
 0009:805CBBE2       aSpecialstarfin_4
 0009:805CBBFB       aPowerstarcompl
 0009:805CBC1A       aFadein_2
 0009:805CBC21       aGame_11
 0009:805CBC26       aSpecialstargra_1
 0009:805CBCD8       aMtimeannounced
 0009:805CBCE7       aMtimesent
 0009:805CBCF1       aMsentbytes
 0009:805CBD38       aViewnormalendi
 0009:805CBD49       aViewcompleteen
 0009:805CBD5C       aSpecialstarfin_5
 0009:805CBD78       aS03d_0
 0009:805CBD83       aS03d_1
 0009:805CBD8E       aSS03d_0
 0009:805CBD9B       aSS03d_1
 0009:805CBDA8       aSS_11
 0009:805CBDAD       aSCanm_0
 0009:805CBDB8       aBody_293
 0009:805CBDC0       aSurfacecircle
 0009:805CBDCE       aSurfaceoval
 0009:805CBDDA       aSurfacebox
 0009:805CBDE5       aVolumesphere
 0009:805CBDF2       aVolumeoval
 0009:805CBDFD       aVolumeovalpole
 0009:805CBE0C       aVolumecylinder
 0009:805CBE1B       aVolumebox
 0009:805CBE25       aVolumeflatmode
 0009:805CBE35       aVolumeline
 0009:805CBE68       aName_2
 0009:805CBE6D       aGroupname_1
 0009:805CBE77       aJoint
 0009:805CBE7D       aType
 0009:805CBE82       aRadius
 0009:805CBE89       aSize
 0009:805CBE8E       aModel
 0009:805CBE94       aLinestart
 0009:805CBE9E       aLineend
 0009:805CBEA6       aLinestartradiu
 0009:805CBEB6       aLineendradius
 0009:805CBEC4       aDropoffset
 0009:805CBECF       aActorTrans
 0009:805CBEDD       aBaseMatrix
 0009:805CBEEB       aFixPosition
 0009:805CBEFA       aOtherTrans
 0009:805CBF08       aOtherMatrix
 0009:805CBF17       aDroplength
 0009:805CBF22       aDropstart
 0009:805CBF2C       aFollowscale
 0009:805CBF38       aSyncshow
 0009:805CBF41       aCollision_0
 0009:805CBF4B       aGravity_0
 0009:805CBF53       aVolumestart
 0009:805CBF5F       aVolumeend
 0009:805CBF69       aVolumecut
 0009:805CBF74       jpt_803C4ABC
 0009:805CBFA0       aSBcsv_4
 0009:805CC026       aCamTypeEyeposF_2
 0009:805CC040       aCamTypeDead
 0009:805CC04E       aCamTypeDpd_0
 0009:805CC05B       aCamTypeAnim_1
 0009:805CC069       aCamTypeBlackHo
 0009:805CC07D       aCamTypeObjPara
 0009:805CC093       aCamTypePointFi
 0009:805CC0A6       aSD_2
 0009:805CC128       aHitmarknormal_1
 0009:805CC296       aRosettatalkabo
 0009:805CC2AB       aSpecialstargra_2
 0009:805CC2BD       aViewcompleteen_0
 0009:805CC2DF       aSpecialstargre_5
 0009:805CC2F3       aSpecialstarred_0
 0009:805CC303       aViewnormalendi_0
 0009:805CC314       aKoopabattlevs3_8
 0009:805CC329       aEventcometstar_1
 0009:805CC33B       aSpecialstarfin_6
 0009:805CC354       aSpecialstarlui_2
 0009:805CC36C       aEventkinopioex_1
 0009:805CC389       aEventkinopioex_0
 0009:805CC3A5       aSpecialstargra_3
 0009:805CC3B7       aWarppodsavebit
 0009:805CC3C7       aTicogalaxyalre
 0009:805CC3DD       aAstrodome_10
 0009:805CC3E7       aSpecialstargra_4
 0009:805CC3FB       aDark
 0009:805CC400       aGhost
 0009:805CC406       aQuick
 0009:805CC40C       aPurple_1
 0009:805CC413       aBlack_1
 0009:805CC419       aPowerstarcompl_0
 0009:805CC42B       aStarpiececount_2
 0009:805CC440       aLuigitalkafter_0
 0009:805CC456       aEggstargalaxy_7
 0009:805CC464       aMessagealready
 0009:805CC478       aObjectdataS
 0009:805CC487       aMappartsdataS
 0009:805CC498       aSArc_4
 0009:805CC49F       aRegionLayoutda
 0009:805CC4B5       aLayoutdataS
 0009:805CC4C4       a16x9_0
 0009:805CC4C9       aSSArc
 0009:805CC4D2       aSreplaceArc
 0009:805CC4E0       aStagedataSSsce
 0009:805CC788       aBody_65
 0009:805CC78D       aLengthBti
 0009:805CC798       aIndirectBti
 0009:805CC7A5       aDensityBti
 0009:805CC7B1       aFurTxt
 0009:805CC7D8       aRange_0
 0009:805CC7DE       aDistant
 0009:805CC7E6       aPriority
 0009:805CC7EF       aGravityId
 0009:805CC7FA       aGravityType
 0009:805CC807       aNormal_27
 0009:805CC80E       aShadow_39
 0009:805CC815       aMagnet
 0009:805CC81C       aPower
 0009:805CC822       aLight_13
 0009:805CC828       aHeavy
 0009:805CC82E       aInverse
 0009:805CC838       aType_0
 0009:805CC83D       aName_8
 0009:805CC842       aObjArg0
 0009:805CC84B       aShapemodelno
 0009:805CC858       aPosX_0
 0009:805CC85E       aPosY_0
 0009:805CC864       aPosZ_0
 0009:805CC86A       aDirX_0
 0009:805CC870       aDirY_0
 0009:805CC876       aDirZ_0
 0009:805CC87C       aScaleX_0
 0009:805CC884       aScaleY_0
 0009:805CC88C       aScaleZ
 0009:805CC894       aObjArg1
 0009:805CC89D       aObjArg2
 0009:805CC8A6       aObjArg3
 0009:805CC8AF       aObjArg4
 0009:805CC8B8       aObjArg5
 0009:805CC8C1       aObjArg6
 0009:805CC8CA       aObjArg7
 0009:805CC8D3       aFollowid
 0009:805CC8DC       aGroupid
 0009:805CC8E4       aClippinggroupi
 0009:805CC8F4       aDemogroupid
 0009:805CC900       aLId_2
 0009:805CC905       aCommonpathId_1
 0009:805CC913       aSwA_0
 0009:805CC918       aSwB_0
 0009:805CC91D       aSwAppear_0
 0009:805CC927       aSwDead_0
 0009:805CC92F       aSwSleep_0
 0009:805CC938       aCamerasetid
 0009:805CC944       aViewgroupid
 0009:805CC950       aMessageid_0
 0009:805CC95A       aCastid_0
 0009:805CC961       aDemoname
 0009:805CC96A       aTimesheetname
 0009:805CC978       aPathArg0_0
 0009:805CC982       aPathArg1_0
 0009:805CC98C       aPathArg2_0
 0009:805CC996       aPathArg3_0
 0009:805CC9A0       aPathArg4_0
 0009:805CC9AA       aPathArg5_0
 0009:805CC9B4       aPathArg6_0
 0009:805CC9BE       aPathArg7_0
 0009:805CC9C8       aPathId
 0009:805CC9D0       aUsage
 0009:805CC9D6       aPnt0X
 0009:805CC9DD       aPnt0Y
 0009:805CC9E4       aPnt0Z
 0009:805CC9EB       aPnt1X
 0009:805CC9F2       aPnt1Y
 0009:805CC9F9       aPnt1Z
 0009:805CCA00       aPnt2X
 0009:805CCA07       aPnt2Y
 0009:805CCA0E       aPnt2Z
 0009:805CCA15       aClosed_0
 0009:805CCA1C       aClose_12
 0009:805CCA2E       aAbuttonpositio_6
 0009:805CCA3E       aColor_1
 0009:805CCAA4       aNw4rPointerMus_5
 0009:805CCAC6       aLinklistH_5
 0009:805CCAD1       aNw4rPointerMus_4
 0009:805CCAF3       aLinklistH_4
 0009:805CCAFE       aNw4rFailedAsse_3
 0009:805CCB32       aCommonH_0
 0009:805CCB3B       aNw4rFailedAsse_2
 0009:805CCB71       aCommonH
 0009:805CCB80       aSKcl
 0009:805CCB87       aSPa
 0009:805CCB8D       aInddummy_1
 0009:805CCB96       aMirrortex_0
 0009:805CCBD0       aMovelimit
 0009:805CCBDA       aWatersurface
 0009:805CCBE7       aSunshade
 0009:805CCBFE       aMiddle_1
 0009:805CCC05       aSS_12
 0009:805CCC0A       aBloom_5
 0009:805CCC10       aWater_6
 0009:805CCC16       aIndirect_3
 0009:805CCC1F       aMirrorarea_2
 0009:805CCC38       aMove_5
 0009:805CCC3D       aBody_66
 0009:805CCC42       aS02d
 0009:805CCC49       aFarclip
 0009:805CCC51       aPresstype
 0009:805CCC5B       aShadowtype
 0009:805CCC66       aMoveconditiont
 0009:805CCC78       aRotatespeed
 0009:805CCC84       aRotateangle
 0009:805CCC90       aRotateaxis
 0009:805CCC9B       aRotateacceltyp
 0009:805CCCAB       aRotatestoptime
 0009:805CCCBA       aRotatetype
 0009:805CCCC5       aSignmotiontype
 0009:805CCCD8       aWater_1
 0009:805CCCDE       aShallow
 0009:805CCCE6       aPullback
 0009:805CCD38       aGalaxynameS
 0009:805CCD46       aGalaxynameshor_1
 0009:805CCD59       aScenarionameSD
 0009:805CCD6B       aLayoutSS
 0009:805CCD77       aCometnameS
 0009:805CCD88       aMario_7
 0009:805CCD8E       aLuigi_7
 0009:805CCD94       aMariohandl_0
 0009:805CCD9F       aMariohandr_0
 0009:805CCDAA       aMarioface_0
 0009:805CCDB4       aLuigiface_0
 0009:805CCDBE       aMarioshadow_0
 0009:805CCDCA       aLuigishadow_0
 0009:805CCDD6       aIcemario_1
 0009:805CCDDF       aIceluigi_1
 0009:805CCDE8       aIcemariohandl_1
 0009:805CCDF6       aIcemariohandr_1
 0009:805CCE04       aInvinciblemari_9
 0009:805CCE19       aInvinciblemari_10
 0009:805CCE2E       aInvinciblemari_11
 0009:805CCE3E       aInvincibleluig_2
 0009:805CCE4E       aBeemario_1
 0009:805CCE57       aBeeluigi_1
 0009:805CCE60       aHoppermario_1
 0009:805CCE6C       aHopperluigi_1
 0009:805CCE78       aBonemario_0
 0009:805CCE82       aBoneluigi_0
 0009:805CCE8C       aSearchlightcon_0
 0009:805CCE9C       aFlexiblesphere_0
 0009:805CCEAB       aFlexiblesandpl
 0009:805CCEC3       aScaledownrelay_0
 0009:805CCED8       aGhostmario_0
 0009:805CCEE3       aGhostluigi_0
 0009:805CCEEE       aKoura_4
 0009:805CCEF4       aSArc_5
 0009:805CCEFB       aNormal_28
 0009:805CCF02       aSKcl_0
 0009:805CCF09       aObjectdataSArc
 0009:805CCF1C       aSS_13
 0009:805CCF21       aBloom_6
 0009:805CD030       aObjectdataSArc_0
 0009:805CD043       aSwimwait_2
 0009:805CD04C       aWatchturnswim
 0009:805CD05A       aWatch_2
 0009:805CD060       aWatchturn
 0009:805CD071       aFace0_2
 0009:805CD0AD       aTakeoutstarcar_0
 0009:805CD0C2       aTakeoutstarter_0
 0009:805CD0D9       aTakeoutstarpen_0
 0009:805CD0F1       aTakeoutstartri_0
 0009:805CD108       aSeOjLvPowStarE_3
 0009:805CD122       aSeOjLvPowStarE_4
 0009:805CD13A       aPowerstar_5
 0009:805CD218       aDeatharea_1
 0009:805CD222       aDarkmattercube_1
 0009:805CD231       aDarkmattercyli_0
 0009:805CD244       aSArc_6
 0009:805CD24B       aSBti_0
 0009:805CD261       aPowerstar_6
 0009:805CD2A8       jpt_803F2CF4
 0009:805CD2F0       aPathArg0
 0009:805CD2FA       aPathArg1
 0009:805CD304       aPathArg2
 0009:805CD30E       aPathArg3
 0009:805CD318       aPathArg4
 0009:805CD322       aPathArg5
 0009:805CD32C       aPathArg6
 0009:805CD336       aPathArg7
 0009:805CD340       aPointArg0
 0009:805CD34B       aPointArg1
 0009:805CD356       aPointArg2
 0009:805CD361       aPointArg3
 0009:805CD36C       aPointArg4
 0009:805CD377       aPointArg5
 0009:805CD382       aPointArg6
 0009:805CD38D       aPointArg7
 0009:805CD398       aPeachcastlegar_2
 0009:805CD3B0       aHeavensdoorgal_4
 0009:805CD3C2       aFileselect_0
 0009:805CD3CD       aEpiloguedemost_0
 0009:805CD3DF       aAstrogalaxy_3
 0009:805CD3EB       aAstrodome_4
 0009:805CD3F5       aLibraryroom_1
 0009:805CD401       aOceanringgalax_3
 0009:805CD411       aEggstargalaxy_4
 0009:805CD41F       aKoopabattlevs1_2
 0009:805CD434       aKoopabattlevs2_1
 0009:805CD449       aKoopabattlevs3_2
 0009:805CD471       aCosmosgardenga_5
 0009:805CD484       aPosname_1
 0009:805CD48C       aGeneral
 0009:805CD494       aCamera_3
 0009:805CD49B       aCameraparamBca
 0009:805CD4AC       aStartscenarioD
 0009:805CD507       aSeSy1up
 0009:805CD518       aAstrogalaxy_12
 0009:805CD524       aAstrodome_11
 0009:805CD568       aSeSyReadRiddle_19
 0009:805CD57C       aCsSpinHit_0
 0009:805CD588       aSePmSpinHit_0
 0009:805CD597       aMeDpdHit
 0009:805CD5A2       aSeSyDpdHit
 0009:805CD5B0       aCsDpdHit_1
 0009:805CD5BB       aSeEmLvDpdPoint
 0009:805CD5CE       aMe2pAssistJump
 0009:805CD5E0       aSeSy2pAssistJu
 0009:805CD5F5       aCsDpdJump
 0009:805CD601       aMe2pAssistJump_0
 0009:805CD615       aSeSy2pAssistJu_0
 0009:805CD62C       aCsDpdJumpHigh
 0009:805CD63D       aMe2pAssistAtta
 0009:805CD651       aSeSy2pAssistAt
 0009:805CD668       aCsDpdPunch
 0009:805CD675       aSeOjStarPieceH_5
 0009:805CD690       aGame_12
 0009:805CD695       aMbgmBoss01A
 0009:805CD6A4       aMbgmBoss01B
 0009:805CD6B3       aMbgmBoss02A
 0009:805CD6C2       aMbgmBoss02B
 0009:805CD6D1       aMbgmBoss03A
 0009:805CD6E0       aMbgmBoss03B
 0009:805CD6EF       aMbgmBoss05A
 0009:805CD6FE       aMbgmBoss05B
 0009:805CD710       jpt_803FA120
 0009:805CD730       aMbgmGalaxy02Hu
 0009:805CD745       aMbgmGalaxy02Ch
 0009:805CD75A       aMbgmRace01
 0009:805CD767       aMbgmRace02
 0009:805CD774       aMbgmStarExist
 0009:805CD788       aBluestarguidan_0
 0009:805CD79D       aPointerguidanc
 0009:805CD7B6       aTicoseedguidan_0
 0009:805CD7CB       aPointerguidanc_0
 0009:805CD7E3       aPointerguidanc_1
 0009:805CD7FD       aPointerguidanc_2
 0009:805CD81B       aSystemFilesele_6
 0009:805CD830       aSystemFilesele_7
 0009:805CD845       aPointerguidanc_3
 0009:805CD868       aSS_6
 0009:805CD86E       aSystemDate000
 0009:805CD87D       aSystemTime002
 0009:805CD88C       aSystemTime000
 0009:805CD89B       aSystemTime001
 0009:805CD8B0       aFf
 0009:805CD8B5       aDDDD
 0009:805CD8C4       aFfFfFfFf
 0009:805CD8F0       jpt_803FEACC
 0009:805CD910       aRestartcube_0
 0009:805CD91C       aWater_2
 0009:805CD922       aAreamovesphere_0
 0009:805CD931       aAstrooverlooka_0
 0009:805D2204       @unnamed@BezierSurface_cpp@::sTrianglePatchTableGroup(void)
 0009:805D2318       aSBcsv_6
 0009:805D2320       aJointname_3
 0009:805D232A       aTrans
 0009:805D2330       aRotate_4
 0009:805D2338       aUndifined
 0009:805D2348       aMappartsId
 0009:805D2354       aObjId
 0009:805D235B       aChildobjid
 0009:805D2374       aMappartsinfo
 0009:805D2381       aObjinfo
 0009:805D2389       aChildobjinfo
 0009:805D23A4       aLId_0
 0009:805D2409       aWiimessagesend
 0009:805D241B       aWc2404
 0009:805D2423       aWc2401
 0009:805D242B       aWc2402
 0009:805D2433       aWc2403
 0009:805D243C       jpt_80407CA0
 0009:805D2500       aWc2409
 0009:805D2508       aWc2408
 0009:805D2510       aWc2410
 0009:805D2518       aWc24Sendlimit
 0009:805D2658       aKinopioemergen
 0009:805D2673       aKinopioemergen_0
 0009:805D268E       aFindingluigi
 0009:805D269B       aWiimessagefrom
 0009:805D26B8       aOriginalArenal
 0009:805D26DC       aAbort
 0009:805D26E3       aJkrheapCpp
 0009:805D2750       aCannotAllocMem
 0009:805D2775       aBadAppendusedl
 0009:805D2789       aJkrexpheapCpp
 0009:805D2798       aHeapMayBeBroke
 0009:805D27BC       aBadBlock
 0009:805D27C7       aAddr08xBadHeap
 0009:805D27F1       aAddr08xBadNext
 0009:805D281E       aAddr08xBadPrev
 0009:805D2849       aAddr08xBadUsed
 0009:805D2872       aAddr08xBadBloc
 0009:805D2897       aBadTotalMemory
 0009:805D28C4       aThereIsSomeErr
 0009:805D28EA       aAttrAddressSiz
 0009:805D2921       aUsedBlocks
 0009:805D2930       aNone
 0009:805D2937       aXxxxx08xAbort
 0009:805D2971       aS08x08x3d3d08x
 0009:805D2996       aTemp
 0009:805D299C       aAlloc
 0009:805D29A2       aFreeBlocks
 0009:805D29B1       aFree
 0009:805D29B7       aDDBytes62fUsed
 0009:805D29E1       aJkrexpheap
 0009:805D29FD       aAlignGroupSize
 0009:805D2A2D       aFreefirst
 0009:805D2A3F       a08x_0
 0009:805D2A48       a2x3d6x08x08x
 0009:805D2A64       aFreelast
 0009:805D2A75       aUsedfirst
 0009:805D2A87       aUsedlast
 0009:805D2A98       aEnd
 0009:805D2B10       aAllocfromheadC
 0009:805D2B41       aAllocfromtailC
 0009:805D2B72       aFreeCannotFree
 0009:805D2B99       aResizeCannotRe
 0009:805D2BC8       aGetsizeCannotG
 0009:805D2BF6       aCheckBadTotalM
 0009:805D2C27       aHead08x08x
 0009:805D2C38       aTail08x08x
 0009:805D2C49       aDDBytes62fUsed_0
 0009:805D2CC8       aCheckBadTotalM_0
 0009:805D2CF9       aDDBytes62fUsed_1
 0009:805D2D98       aAddressNot32by
 0009:805D2DB7       aJkraramCpp
 0009:805D2DF8       aDirectionX
 0009:805D2E08       aSourceX
 0009:805D2E15       aDestinationX
 0009:805D2E27       aLengthX
 0009:805D2E34       aIllegalAddress
 0009:805D2E4C       aJkrarampieceCp
 0009:805D2E60       aCannotAllocMem_0
 0009:805D2E78       aJkraramstreamC
 0009:805D2F50       aBadSequence
 0009:805D2F62       aJkrmemarchiveC
 0009:805D2FC8       aBadSequence_0
 0009:805D2FDA       aJkraramarchive
 0009:805D3040       aSorryNotApplie
 0009:805D3065       aJkrdvdarchiveC
 0009:805D3077       aBadSequence_1
 0009:805D3089       aSorryNotApplie_0
 0009:805D3100       aIllegalArchive
 0009:805D3111       aJkrcomparchive
 0009:805D3124       aIllegalResourc
 0009:805D3188       aCannotCloseDvd
 0009:805D319F       aJkrdvdfileCpp
 0009:805D31F8       aSorryNotApplie_1
 0009:805D321C       aJkrdvdripperCp
 0009:805D322D       aNotSupportSzpW
 0009:805D32D8       aJutpaletteCpp
 0009:805D32E7       aJuttextureTlut
 0009:805D3318       aSystemReset
 0009:805D3325       aMachineCheck
 0009:805D3333       aExternalInterr
 0009:805D3346       aAlignment
 0009:805D3350       aProgram
 0009:805D3358       aFloatingPoint
 0009:805D3367       aDecrementer
 0009:805D3373       aSystemCall
 0009:805D337F       aTrace
 0009:805D3385       aPerformaceMoni
 0009:805D3398       aBreakPoint
 0009:805D33A4       aSystemInterrup
 0009:805D33B5       aThermalInterru
 0009:805D33C7       aProtection
 0009:805D3418       aSInSOnLineD
 0009:805D342F       aF02dNan
 0009:805D3440       aF02dInf
 0009:805D3450       aF02dInf_0
 0009:805D3460       aF02d00
 0009:805D3471       aF02d3e
 0009:805D347D       aFpr
 0009:805D34A3       aTrace_0
 0009:805D34CB       aAddressBackcha
 0009:805D34EB       aSuppressTrace
 0009:805D34FC       a08x08x08x
 0009:805D3511       aContext08xhSEx
 0009:805D3530       aContext08xh
 0009:805D353F       aFpeInvalidOper
 0009:805D3558       aSnan
 0009:805D355F       aInfinityInfini
 0009:805D3575       aInfinityInfini_0
 0009:805D358B       a00
 0009:805D3593       aInfinity0
 0009:805D35A2       aInvalidCompare
 0009:805D35B4       aSoftwareReques
 0009:805D35C7       aInvalidSquareR
 0009:805D35DD       aInvalidInteger
 0009:805D35F7       aFpeOverflow
 0009:805D3607       aFpeUnderflow
 0009:805D3618       aFpeZeroDivisio
 0009:805D362D       aFpeInexactResu
 0009:805D3643       aSrr008xhSrr108
 0009:805D365F       aDsisr08xhDar08
 0009:805D367B       aGpr
 0009:805D36A1       aR02d08xhR02d08
 0009:805D36C8       aR02d08xhR02d08_0
 0009:805D36E2       aSSXSectionD
 0009:805D36F7       aGprmap
 0009:805D3720       aR02d08xh
 0009:805D372D       aNoInformation
 0009:805D373F       aNoRegisterWhic
 0009:805D3765       aSrr0map
 0009:805D378F       aSrr008xh
 0009:805D379B       aMsr08xhFpscr08
 0009:805D37B4       aExceptionOccur
 0009:805D37EB       aUserHaltFramem
 0009:805D383A       aMap
 0009:805D383F       a08xS08xXhS
 0009:805D3BA8       jpt_8041C1C8
 0009:805D3DB0       jpt_8041F7B0
 0009:805D3DF4       jpt_8041FA98
 0009:805D4050       jpt_80423A2C
 0009:805D4080       jpt_80423790
 0009:805D4298       jpt_8042C464
 0009:805D42C8       jpt_8042C61C
 0009:805D42F8       jpt_8042C778
 0009:805D4328       jpt_8042C8C0
 0009:805D4D98       jpt_8042E914
 0009:805D4E28       jpt_8042EC00
 0009:805D4EB8       jpt_8042FDC0
 0009:805D5060       _15J3DAnmTransform::`vtbl'
 0009:805D5660       jpt_8044291C
 0009:805D568C       jpt_804425C0
 0009:805D56B8       jpt_80443A8C
 0009:805D58B0       jpt_80446FD0
 0009:805D58D0       jpt_80447B48
 0009:805D5968       jpt_8044A640
 0009:805D59D0       jpt_8044B000
 0009:805D5A38       aRvlSdkKpadRele
 0009:805D5A90       aRvlSdkThpRelea
 0009:805D5AD8       aInvalidVersion
 0009:805D5B08       aWarrningCtorsS
 0009:805D5B30       aWarrningDtorsS
 0009:805D5B58       aWarrningUnknow
 0009:805D5BB8       aOslinkUnknownR
 0009:805D5BE0       aSdaBase
 0009:805D5BEC       aSda2Base
 0009:805D5BF8       aErrorIncorrect
 0009:805D5C20       aRvlSdkRflRelea
 0009:805D5C68       aShared2Facelib
 0009:805D5C88       aShared2MenuFac
 0009:805D5CAC       aShared2MenuFac_0
 0009:805D5CE0       aRexPpc202020Re
 0009:805D5D20       jpt_80461080
 0009:805D5DA8       jpt_80461508
 0009:805D5DD8       aShared2Wc24Mbo
 0009:805D5DEC       aShared2Wc24Nwc
 0009:805D5E08       aShared2Wc24Nwc_0
 0009:805D5E24       aNwc24configC
 0009:805D5E34       aStopped
 0009:805D5E40       aRvlSdkNwc24Rel
 0009:805D5E8C       jpt_80463170
 0009:805D5F50       aWc24sendCtl
 0009:805D5F60       aWc24recvCtl
 0009:805D5F70       aWc24recvMbx
 0009:805D5F80       aWc24sendMbx
 0009:805D5F90       aShared2Wc24Mbo_0
 0009:805D5FB0       aShared2Wc24Mbo_1
 0009:805D5FD0       a24MbS07dMsg
 0009:805D5FE4       a24MbR07dMsg
 0009:805D5FF8       aAbcdefghijklmn
 0009:805D6040       aApplicationOct
 0009:805D605C       aApplicationXWi
 0009:805D6078       aApplicationXWi_0
 0009:805D6094       aImageJpeg
 0009:805D60A0       aImageXWiiPictu
 0009:805D60B4       aMultipartAlter
 0009:805D60D0       aMultipartMixed
 0009:805D60E0       aMultipartRelat
 0009:805D60F4       aTextHtml
 0009:805D6100       aTextPlain
 0009:805D6188       aIso2022Jp
 0009:805D6194       aIso88591
 0009:805D61A0       aIso885910
 0009:805D61AC       aIso885915
 0009:805D61B8       aIso88592
 0009:805D61C4       aIso88593
 0009:805D61D0       aIso88595
 0009:805D61DC       aIso88597
 0009:805D61E8       aIso88599
 0009:805D61F4       aShiftJis
 0009:805D6200       aUsAscii
 0009:805D620C       aUtf16be
 0009:805D6218       aUtf32be
 0009:805D6224       aWindows1252
 0009:805D62B8       aQuotedPrintabl
 0009:805D62F0       aMessageId
 0009:805D6300       a05x08x08x08x
 0009:805D6314       aSubject
 0009:805D6320       aXWiiCmd08x
 0009:805D6334       aXWiiTag08x
 0009:805D6348       aXWiiDwcid08x
 0009:805D635C       aXWiiIconnew08x
 0009:805D6374       aXWiiMbNoreply
 0009:805D638C       aXWiiMbRegdate0
 0009:805D63A8       aXWiiMbDelay02x
 0009:805D63C0       aBoundaryNwc240
 0009:805D63D8       aMimeVersion10
 0009:805D63EC       aContentTypeMul
 0009:805D6418       aMailFrom
 0009:805D6424       aRcptTo
 0009:805D6460       aDate02dSD02d02
 0009:805D6488       aXWiiAppid
 0009:805D6498       aD08x04x
 0009:805D64A8       aXWiiface
 0009:805D64B4       aXWiiAltname
 0009:805D64C4       aContentTypeSNa
 0009:805D64EC       aContentTransfe
 0009:805D6510       aContentDisposi
 0009:805D654C       aContentTypeTex
 0009:805D6574       aContentTransfe_0
 0009:805D6598       aDevNetKdReques
 0009:805D65AC       aNwc24isetscrip
 0009:805D65C0       aNwc24irequestg
 0009:805D65E0       aExectrysuspend
 0009:805D65F8       aShared2Wc24Nwc_1
 0009:805D6618       aShared2Wc24Nwc_2
 0009:805D6638       aNwc24igettimed
 0009:805D6650       aDevNetKdTime
 0009:805D6664       aNwc24isetrtcco
 0009:805D6678       aShared2Wc24Nwc_3
 0009:805D6698       aNwc24iprepares
 0009:805D66B0       aDevNetKdReques_0
 0009:805D66C4       aNwc24irequests
 0009:805D66E0       aNoName
 0009:805D6790       funcs_804837D4
 0009:805D67B0       aSetuparamheapX
 0009:805D67F8       jpt_8048BC88
 0009:805D6820       jpt_8048BD78
 0009:805D7E38       jpt_8048C364
 0009:805D7F0C       jpt_8048C51C
 0009:805D7FE0       jpt_8048D2B4
 0009:805D800C       aJastrack8xDump
 0009:805D8041       aBase0x08xCur0x
 0009:805D8063       aRegA0x04xRegB0
 0009:805D808E       aRegX0x04xRegY0
 0009:805D80B9       aPort030x04x0x0
 0009:805D80E0       aPort470x04x0x0
 0009:805D8107       aPort8B0x04x0x0
 0009:805D812E       aPortCF0x04x0x0
 0009:805D8178       jpt_8048EBAC
 0009:805D82D9       aAudioresWaves
 0009:805D8330       jpt_80492C18
 0009:805D834C       jpt_804938B0
 0009:805D836C       jpt_80493818
 0009:805D83C8       aSfrUpdate
 0009:805D83D3       aKillDspChannel
 0009:805D83E4       aDspMain
 0009:805D83ED       aMonoMix
 0009:805D83F6       aMonoWMix
 0009:805D8402       aDspmix
 0009:805D8409       aMixing
 0009:805D8410       aSfrDsp
 0009:805D8418       aUpdateDac
 0009:805DA3B8       aCannotNewSe08x
 0009:805DA408       jpt_80498784
 0009:805DA480       aItCostDStepsTo
 0009:805DA66C       aIndexOutOfRang_4
 0009:805DA68E       aIndexOutOfRang_3
 0009:805DA6B1       aIndexOutOfRang_2
 0009:805DA740       aAnonymous
 0009:805DA7B0       aArinitDummyAra
 0009:805DA7F0       aH4aShouldNotBe
 0009:805DA828       aRvlSdkOsReleas
 0009:805DA870       aRevolutionOs
 0009:805DA880       aKernelBuiltSS
 0009:805DA898       aAug82007
 0009:805DA8A4       a020624
 0009:805DA8B0       aConsoleType
 0009:805DA8C0       aPreProductionB
 0009:805DA8D8       aPreProductionB_0
 0009:805DA8F4       aPreProductionB_1
 0009:805DA910       aRetailD
 0009:805DA91C       aNdev21
 0009:805DA928       aNdev20
 0009:805DA934       aNdev12
 0009:805DA940       aNdev11
 0009:805DA94C       aNdev10
 0009:805DA958       aRevolutionEmul
 0009:805DA970       aEmulationPlatf
 0009:805DA98C       aTdevBasedEmula
 0009:805DA9A8       aFirmwareDDD
 0009:805DA9C4       aDDD
 0009:805DA9D0       aMemoryDMb
 0009:805DA9E0       aMem1Arena0xX0x
 0009:805DA9FC       aMem2Arena0xX0x
 0009:805DAA18       jpt_804A13D4
 0009:805DAA80       aOsErrorBootPro
 0009:805DAAD0       aFailedToRunApp
 0009:805DAAE8       aOsErrorAppload
 0009:805DAB7C       aInstallingOsdb
 0009:805DAB98       aOsinitExceptio
 0009:805DABC8       aOsinitExceptio_0
 0009:805DABF8       aExceptionsInit
 0009:805DACA8       aL2InvalidateSh
 0009:805DACD8       aMachineCheckRe
 0009:805DACF0       aHid20xXSrr10xX
 0009:805DAD10       aMachineCheckWa
 0009:805DAD40       aDmaerrorhandle
 0009:805DAD7C       aTheFollowingEr
 0009:805DADB4       aRequestedALock
 0009:805DADF4       aDmaAttemptedTo
 0009:805DAE20       aDmaMissedInDat
 0009:805DAE40       aDmaQueueOverfl
 0009:805DAE5C       aL1ICachesIniti
 0009:805DAE78       aL1DCachesIniti
 0009:805DAE94       aL2CacheInitial
 0009:805DAEAC       aLockedCacheMac
 0009:805DAEE0       aContext0x08x
 0009:805DAF28       aR2d0x08x14dR2d
 0009:805DAF58       aLr0x08xCr0x08x
 0009:805DAF88       aSrr00x08xSrr10
 0009:805DAFB8       aGqrs
 0009:805DAFCC       aGqrD0x08xGqrD0
 0009:805DAFF0       aFprs
 0009:805DB004       aFrDDFrDD
 0009:805DB020       aPsfs
 0009:805DB034       aPsD0xXPsD0xX
 0009:805DB054       aAddressBackCha
 0009:805DB07C       a0x08x0x08x0x08
 0009:805DB098       aFpuUnavailable
 0009:805DB0C0       aInSOnLineD
 0009:805DB0D8       aAddressBackCha_0
 0009:805DB100       a0x08x0x08x0x08_0
 0009:805DB11C       aNonRecoverable
 0009:805DB13C       aUnhandledExcep
 0009:805DB154       aDsisr0x08xDar0
 0009:805DB188       aTb0x016llx
 0009:805DB198       aInstructionAt0
 0009:805DB1F8       aAttemptedToFet
 0009:805DB244       aInstructionAt0_0
 0009:805DB2A8       aProgramExcepti
 0009:805DB308       aAiDmaAddress0x
 0009:805DB328       aAramDmaAddress
 0009:805DB348       aDiDmaAddress0x
 0009:805DB364       aLastInterruptD
 0009:805DB39C       jpt_804A44E4
 0009:805DB3E0       aOsexecFailedTo
 0009:805DB404       aOsexecTheSpeci
 0009:805DB440       aTitle08x08xDat
 0009:805DB458       aTitle08x08xCon
 0009:805DB474       aNullPointerDet
 0009:805DB49C       aOsexecC
 0009:805DB4A8       aOslaunchtitleF
 0009:805DB4D4       aOslaunchtitleC
 0009:805DB504       aOslaunchtitleC_0
 0009:805DB534       aOslaunchtitlev
 0009:805DB578       aOslaunchtitlel
 0009:805DB5BC       aOslaunchdiskYo
 0009:805DB600       aOslaunchdiskYo_0
 0009:805DB648       aOslaunchdiskSp
 0009:805DB69C       a00000000000000
 0009:805DB6B0       a20040201
 0009:805DB6BC       aOslaunchpartit
 0009:805DB704       aOslaunchpartit_0
 0009:805DC298       aOsresetC
 0009:805DC2A4       aOshotresetFali
 0009:805DC2D0       aOsreturntomenu_0
 0009:805DC300       aOsreturntodata
 0009:805DC338       aCalendarCalend
 0009:805DC358       aDisplayDisplay
 0009:805DC374       aSoundSoundInde
 0009:805DC38C       aParentalContro
 0009:805DC3BC       aInternetIntern
 0009:805DC3DC       aWiiconnect24Wi
 0009:805DC404       aUpdateUpdateIn
 0009:805DC420       aOsreturntosett
 0009:805DC450       jpt_804A9F2C
 0009:805DC470       aOsreturntomenu
 0009:805DC4A4       aOsresetsystemI
 0009:805DC4E0       aOssetbootdolIs
 0009:805E83C0       aDevStmImmediat
 0009:805E83D4       aDevStmEventhoo
 0009:805E83E8       aOsstatetmC
 0009:805E83F4       aErrorTheFirmwa
 0009:805E842C       aErrorTheFirmwa_0
 0009:805E8464       aErrorOnStmStat
 0009:805E8488       aTitle000000010_0
 0009:805E84B4       jpt_804AD0DC
 0009:805E84D0       aTitle000000010
 0009:805E84F8       aFailedToRegist
 0009:805E852C       aFailedToSuspen
 0009:805E8560       aFailedToSynchr
 0009:805E85A0       aNwc24iprepares_0
 0009:805E85B8       aDevNetKdReques_1
 0009:805E85CC       aNwc24suspendsc
 0009:805E85E4       aNwc24resumesch
 0009:805E85FC       aNwc24irequests_0
 0009:805E8614       aNwc24shutdownG
 0009:805E8630       aNwc24isetrtcco_0
 0009:805E8648       aDevNetKdTime_0
 0009:805E8660       aShared2SysNand
 0009:805E8680       aShared2Expired
 0009:805E8694       aOsplaytimeC
 0009:805E86A4       aPlaytimeDSecon
 0009:805E86C0       aRvlSdkExiRelea
 0009:805E8708       aRvlSdkSiReleas
 0009:805E87D8       aSisetsamplingr
 0009:805E8810       aDbexceptiondes
 0009:805E8828       aRvlSdkViReleas
 0009:805E8B10       jpt_804B196C
 0009:805E8B34       jpt_804B1EDC
 0009:805E8BC0       jpt_804B2674
 0009:805E8C10       aCAUTION
 0009:805E8C3C       aThisTvFormatDe
 0009:805E8C68       aTemporarySolut
 0009:805E8C94       aIsAvailablePle
 0009:805E8CC0       aModeInRealGame
 0009:805E8CEC       aViconfigureTri
 0009:805E8D38       jpt_804B39BC
 0009:805E8D5C       jpt_804B3D14
 0009:805E9320       aRvlSdkGxReleas
 0009:805E9560       aCpufifo08x08x
 0009:805E9578       aGpFifo08x08x
 0009:805E9590       jpt_804B8FBC
 0009:805E95F8       jpt_804B9440
 0009:805E963C       jpt_804B95F4
 0009:805E9680       jpt_804B99E0
 0009:805E969C       jpt_804B9870
 0009:805E9820       jpt_804BB550
 0009:805E9840       jpt_804BBBB8
 0009:805E9934       jpt_804BBCDC
 0009:805E9A28       jpt_804BBEC0
 0009:805E9B00       jpt_804BEB98
 0009:805E9B5C       jpt_804BE774
 0009:805E9BF0       aDvdconvertentr
 0009:805E9CB8       aWarningDvdopen
 0009:805E9CF0       aDvdreadasyncSp
 0009:805E9D24       aDvdreadSpecifi
 0009:805E9D54       aWarningDvdopen_0
 0009:805E9D90       aRvlSdkDvdRelea
 0009:805E9DD8       aDvdchangediskF
 0009:805E9E0C       jpt_804C1E88
 0009:805E9EB8       jpt_804C2D64
 0009:805E9F64       jpt_804C2CBC
 0009:805EA01C       jpt_804C40C8
 0009:805EA0C8       jpt_804C3FD4
 0009:805EA100       jpt_804C4608
 0009:805EA138       aShared2Test2Dv
 0009:805EA154       aShared2Test2
 0009:805EA1F8       aAnErrorHasOccu
 0009:805EA54C       aErIsEenFoutOpg
 0009:805EA5DC       aAnErrorHasOccu_0
 0009:805EA6B4       aError001Unauth
 0009:805EA768       aError001SeHaDe
 0009:805EA7A4       aErrore001Rilev
 0009:805EA7E0       aFout001Ongeoor
 0009:805EA810       aDotransactionc
 0009:805EA844       aDocovercallbac
 0009:805EA870       aDvdlowfinishEr
 0009:805EA898       aIpccltinitRetu
 0009:805EA8B8       aDdrallocaligne
 0009:805EA8F4       aAllocationOfDi
 0009:805EA91C       aAllocationOfPa
 0009:805EA93C       aDvdlowinitErro
 0009:805EA988       aDvdlowinitErro_0
 0009:805EA9D0       aDvdlowinitErro_1
 0009:805EAA1C       aDvdlowinitIosO
 0009:805EAA50       aNewcontextErro
 0009:805EAA88       aNewcontextNowS
 0009:805EAAB8       aNewcontextSome
 0009:805EAAF8       aWarningCalling
 0009:805EAB34       aDvdlowreaddisk
 0009:805EAB70       aDvdlowopenpart
 0009:805EABA8       aDvdlowopenpart_0
 0009:805EABE0       aDvdlowopenpart_1
 0009:805EAC20       aDvdlowopenpart_2
 0009:805EAC44       aSEticketMemory
 0009:805EAC68       aSTmdParameterC
 0009:805EAC8C       aSTmdMemoryIsUn
 0009:805EACAC       aSEticketParame
 0009:805EACD8       aDvdlowopenpart_3
 0009:805EAD00       aSEticketviewPa
 0009:805EAD2C       aSEticketviewMe
 0009:805EAD54       aDvdlowgetnodis
 0009:805EAD70       aSErrorNullPoin
 0009:805EAD94       aSNumtmdbytesMe
 0009:805EADBC       aSCertificatesM
 0009:805EADE4       aSIosIoctlvasyn
 0009:805EAE14       aDvdlowgetnodis_0
 0009:805EAE38       aSPointerArgume
 0009:805EAE5C       aDvdlownodiscop
 0009:805EAE78       aDvdlowclosepar
 0009:805EAEB8       aDvdlowunencryp
 0009:805EAEF8       aDvdlowstopmoto
 0009:805EAF34       aDvdlowwaitforc
 0009:805EAF78       aDvdlowinquiryI
 0009:805EAFB0       aDvdlowrequeste
 0009:805EAFEC       aDvdlowsetspinu
 0009:805EB034       aDvdlownotifyre
 0009:805EB070       aDvdlowresetIos
 0009:805EB0A8       aDvdlowaudiobuf
 0009:805EB0EC       aDvdlowgetcover
 0009:805EB134       aDvdlowgetcover_0
 0009:805EB170       aDvdlowreaddvdI
 0009:805EB1A8       aDvdlowreaddvdc
 0009:805EB1E8       aDvdlowreaddvdc_0
 0009:805EB228       aDvdlowreaddvdp
 0009:805EB268       aDvdlowreaddvdd
 0009:805EB2A8       aDvdlowreportke
 0009:805EB2E4       aDvdlowoffsetIo
 0009:805EB31C       aDvdlowstoplase
 0009:805EB358       aDvdlowreaddisk_0
 0009:805EB394       aDvdlowsermeasc
 0009:805EB3D4       aDvdlowrequestd
 0009:805EB418       aDvdlowrequestr
 0009:805EB45C       aDvdlowsetmaxro
 0009:805EB49C       aDvdlowreadErro
 0009:805EB4DC       aDvdlowreadIosI
 0009:805EB510       aDvdlowseekIosI
 0009:805EB544       aDvdlowgetcover_1
 0009:805EB588       aDvdlowgetcover_2
 0009:805EB5C0       aDvdlowpreparec
 0009:805EB604       aDvdlowprepares
 0009:805EB64C       aDvdlowclearcov
 0009:805EB690       aDvdlowenabledv
 0009:805EB6D0       aRvlSdkAiReleas
 0009:805EBAB8       aRvlSdkDspRelea
 0009:805EBB00       aDspinitBuildDa
 0009:805EBB20       aAug82007_0
 0009:805EBB2C       a015906
 0009:805EBB38       aDspIsBootingTa
 0009:805EBB58       aDspBootTaskIra
 0009:805EBB88       aDspBootTaskIra_0
 0009:805EBBB8       aDspBootTaskIra_1
 0009:805EBBE8       aDspBootTaskDra
 0009:805EBC18       aDspBootTaskSta
 0009:805EBC48       aDspAddTaskAdde
 0009:805EBC78       aTmpSys
 0009:805EBC84       aS08xS
 0009:805EBCA0       aRvlSdkNandRele
 0009:805EBD50       aShared2
 0009:805EBD5C       aShared2_0
 0009:805EBD68       aIsfsErrorCodeD
 0009:805EBD7C       aCautionUnexpec
 0009:805EBDB0       aIsfsUnexpected
 0009:805EBDD0       aFailedToSetHom
 0009:805EBDF0       aTitle00010000
 0009:805EBE00       aTitle00010001
 0009:805EBE10       aTitle00010003
 0009:805EBE20       aTitle00010004
 0009:805EBE30       aTitle00010005
 0009:805EBE40       aTitle00010006
 0009:805EBE50       aTitle00010007
 0009:805EBE60       aShared2Title
 0009:805EBEA0       aShared2Test2Na
 0009:805EBEBC       aD04d02d02d02d0
 0009:805EBEE8       aRvlSdkScReleas
 0009:805EBF30       aIplEula
 0009:805EBF3C       aIplSadr
 0009:805EBF48       aNetCtpc
 0009:805EBF54       aNetProf
 0009:805EBF60       aNetWcpc
 0009:805EBF6C       aNetWcfg
 0009:805EC098       jpt_804D040C
 0009:805EC118       aArcinithandleB
 0009:805EC13C       aWarningArcopen
 0009:805EC188       aAppErrorNotEno
 0009:805EC1B0       aRvlSdkWpadRele
 0009:805EC1FC       aNoAllocNothing
 0009:805EC218       aNoFreeNothingT
 0009:805EC234       aDeregisterAllo
 0009:805EC264       aWaitForDMsUnti
 0009:805EC2A0       aReconnectStart
 0009:805EC2B8       aCheckTheUpdate
 0009:805EC2E0       aWifiUsesChanne
 0009:805EC2F8       aWpadinit
 0009:805EC304       aThisErrorMeans
 0009:805EC33C       a21OrLater
 0009:805EC34C       aConnectionIsOp
 0009:805EC364       aNintendoRvlCnt_0
 0009:805EC378       aConnectionIsCl
 0009:805EC390       aCleanUpCommand
 0009:805EC3A8       aWarningDisconn
 0009:805EC3F0       aHidParserRepor
 0009:805EC408       aWpadirecvcallb
 0009:805EC434       aWpadsetsamplin
 0009:805EC450       aWpadsetconnect
 0009:805EC46C       aWpadsetextensi
 0009:805EC488       aWpadsetautosam
 0009:805EC4A4       aHandleDRepid02
 0009:805EC4C0       jpt_804DC768
 0009:805EC580       aDetachingExten
 0009:805EC5AC       aDpdSettingIsOk
 0009:805EC5C0       aDpdSettingIsBr
 0009:805EC5D8       aOldFirmwareUse
 0009:805EC61C       aXLfYLf
 0009:805EC630       aDifavexLfDifav
 0009:805EC650       aDeltaxLfDeltay
 0009:805EC670       aCalibxLfCaliby
 0009:805EC68C       aCentxLfCentyLf
 0009:805EC6A8       aRolagLf
 0009:805EC6B8       aAccIsOk
 0009:805EC6C8       aAccIsBroken
 0009:805EC6D8       a0gAccxDAccyDAc
 0009:805EC700       a1gAccxDAccyDAc
 0009:805EC728       aVolumeDMotorD
 0009:805EC744       aCheckSumError
 0009:805EC758       a0gFsaccxDFsacc
 0009:805EC788       a1gFsaccxDFsacc
 0009:805EC7B8       aFsXDXMaxDXMinD
 0009:805EC7E0       aFsYDYMaxDYMinD
 0009:805EC808       aClXDXMaxDXMinD
 0009:805EC830       aClYDYMaxDYMinD
 0009:805EC858       aCrXDXMaxDXMinD
 0009:805EC880       aCrYDYMaxDYMinD
 0009:805EC8A8       aLrLDRD
 0009:805EC8C0       aDevidDSubidD
 0009:805EC8D8       aTypeD_0
 0009:805EC8E4       aModeD
 0009:805EC8F0       aReceivedReport
 0009:805EC904       aInitializeAtta
 0009:805EC91C       aAlreadyInitial
 0009:805EC934       aAlreadyDisconn
 0009:805EC94C       aReadErrorHappe
 0009:805EC964       aBaseAddr08x
 0009:805EC978       aLengthD
 0009:805EC988       aI2c04x
 0009:805EC994       aEncD
 0009:805EC9A0       aAccessToExtens
 0009:805EC9C0       aDecode
 0009:805EC9CC       aLenDAddr04x
 0009:805EC9E8       aReceivedDataIs
 0009:805ECA08       aReceivedAck
 0009:805ECA18       aAckReportId02x
 0009:805ECA44       aAckErrorReport
 0009:805ECA74       aInvalidAck
 0009:805EDCE8       aAnsDDDDDD
 0009:805EDD04       aRandDDDDDDDDDD
 0009:805EDD2C       aT0DDDDDDDDDD
 0009:805EDD54       aKeyDDDDDD
 0009:805EDD70       aFtDDDDDDDD
 0009:805EDD90       aSbDDDDDDDD
 0009:805EDDB0       aUsbErr
 0009:805EDDBC       aLibraryIsAlrea
 0009:805EDDEC       aIusbSizeDLoXHi
 0009:805EDE0C       aNotEnoughIpcAr
 0009:805EDE24       aNotEnoughHeaps
 0009:805EDE38       aIntrblkctrliso
 0009:805EDE58       aIntrblkctrliso_0
 0009:805EDE78       aIntrblkctrliso_1
 0009:805EDEA0       aFreeingCleanDX
 0009:805EDEB8       aIosfreeD0xXFai
 0009:805EDED8       aCbXCbargX
 0009:805EDEEC       aCallingIsoCall
 0009:805EDF04       aIosallocaligne
 0009:805EDF28       aOpendeviceidsN
 0009:805EDF4C       aDevUsbSXX
 0009:805EDF60       aOpendeviceS
 0009:805EDF74       aOpendeviceRetu
 0009:805EDF90       aOpendevice
 0009:805EDF9C       aOpendeviceidsa
 0009:805EDFC4       aClosedevice
 0009:805EDFD4       aClosedeviceRet
 0009:805EDFF0       aClosedeviceasy
 0009:805EE018       aOpendeviceNotE
 0009:805EE038       aGetdevicelistN
 0009:805EE05C       aIntrblkmsgintN
 0009:805EE080       aIntrBlkIoctlRe
 0009:805EE0A0       aIntblkmsgintAs
 0009:805EE0CC       aIntrblkmsgCb0x
 0009:805EE0F0       aCtrlmsgBadData
 0009:805EE10C       aCtrlMsgNotEnou
 0009:805EE12C       aCtrlmsgintAsyn
 0009:805EE154       aCtrlmsgintCb0x
 0009:805EE178       aCtrlMsgAsyncRe
 0009:805EE198       aGetstrcbReturn
 0009:805EE1B0       aGetstrcbBuf0xX
 0009:805EE1D4       aFailedToConver
 0009:805EE204       aCallingCb0xXWi
 0009:805EE224       aFailedCtrlmsgD
 0009:805EE23C       aFailedToConver_0
 0009:805EE260       aGetstrGetstrcb
 0009:805EE274       aGetasciistrasy
 0009:805EE2A0       aCtrlmsgintFail
 0009:805EE2B8       aGetdescrcbRetu
 0009:805EE2D4       aGetdevdescr
 0009:805EE2E8       aGetdevdescrNot
 0009:805EE308       aGetdevdescrD
 0009:805EE31C       aGetdevdescrGet
 0009:805EE338       aGetdevdescrasy
 0009:805EE360       aDeviceremovaln
 0009:805EE37C       aPacketUTooBigU
 0009:805EE394       aInvalidParamet
 0009:805EE3C4       aIusbIsomsgasyn
 0009:805EE3EC       aOpenSFailed
 0009:805EE400       aInvalidPathOrD
 0009:805EE51C       aAppMemalloc
 0009:805EE52C       aAppMemfree
 0009:805EE53C       aSyncflushcallb
 0009:805EE560       aDeleteflushcal
 0009:805EE588       aShutflushcallb
 0009:805EE5B0       aInitflushcallb
 0009:805EE5D4       aDDevicesIsStor
 0009:805EE5F4       aPairingDone
 0009:805EE604       aNintendoRvlCnt_1
 0009:805EE618       aWriteStoredLin
 0009:805EE630       aAddr02x02x02x0_0
 0009:805EE658       aKey02x02x02x02
 0009:805EE6B0       aCancelSearchin
 0009:805EE6E0       aWarningIlligal
 0009:805EE6FC       jpt_804E59AC
 0009:805EE720       aHciVersion02x
 0009:805EE738       aHciRevision04x
 0009:805EE750       aLmpVersion02x
 0009:805EE768       aLmpSubversion0
 0009:805EE780       aManufacturer04
 0009:805EE798       a2045FirmwareVe
 0009:805EE7C0       aWudiappendrunt
 0009:805EE7DC       aNameS
 0009:805EE7E8       aNintendoRvlCnt
 0009:805EE7FC       aInitcore
 0009:805EE808       aBtaInitIsStart
 0009:805EE820       aBtaInitIsDone
 0009:805EE834       aWudshutdown
 0009:805EE844       aWudsetsyncdevi
 0009:805EE860       aWudsetcleardev
 0009:805EE87C       aWudstartsyncde
 0009:805EE894       aWudstartsyncsi
 0009:805EE8B0       aWudstartsyncsp
 0009:805EE8C8       aWudcancelsyncd
 0009:805EE8E0       aWudstopsyncsim
 0009:805EE8F8       aWudstartcleard
 0009:805EE910       aWudsetdisablec
 0009:805EE928       aBtmSetafhchann
 0009:805EE944       aWudsethidrecvc
 0009:805EE960       aWudsethidconnc
 0009:805EEA94       aStartWudiinits
 0009:805EEAB0       aWudiautosync
 0009:805EEAC0       aWudicancelsync
 0009:805EEAD4       aWudideletealll
 0009:805EEAF0       aBtaDmadddevice
 0009:805EEB08       aBtaHhadddev
 0009:805EEB18       aWudiremovedevi
 0009:805EEB30       aHandleDAddr02x_0
 0009:805EEB68       aRemoveDeviceIn
 0009:805EEB8C       aBtaHhremovedev
 0009:805EEBA0       aHandleD
 0009:805EEBB0       aBtaDmremovedev
 0009:805EEBCC       aNewEntryIndexI
 0009:805EEBE4       aWarningUsbClos
 0009:805EEC04       aWudsecuritycal
 0009:805EEC20       aBtaEnableEvt
 0009:805EEC30       aHost02x02x02x0
 0009:805EEC58       aBtaDisableEvt
 0009:805EEC6C       aBtaDmPinReqEvt
 0009:805EEC80       aBtaDmAuthCmplE
 0009:805EEC98       aAddr02x02x02x0_1
 0009:805EECC0       aKey02x02x02x02_0
 0009:805EED1C       aResultD
 0009:805EED2C       aBtaDmAuthorize
 0009:805EED44       aBtaDmLinkUpEvt
 0009:805EED58       aAddr02x02x02x0_2
 0009:805EED84       aS02x02x02x02x0
 0009:805EEDAC       aNotPaired
 0009:805EEDB8       a4LinksExist
 0009:805EEDC8       aBtaDmLinkDownE
 0009:805EEDE0       aResultD_0
 0009:805EEDEC       aThisDeviceInNo
 0009:805EEE08       aWarningLinkNum_0
 0009:805EEE2C       aBtaDmSigStreng
 0009:805EEE48       aBtaDmBusyLevel
 0009:805EEE60       jpt_804E82CC
 0009:805EEE84       aInquiryResult0
 0009:805EEEC8       aInquiryComplet
 0009:805EEEDC       aDiscoverResult
 0009:805EEF1C       aDiscoverComple
 0009:805EEF30       aSearchCancel
 0009:805EEF40       aWarningSearchC
 0009:805EEF70       aVseInitiatePai
 0009:805EEF88       aVseDeleteAllKe
 0009:805EEFA0       aVseSiPortStatu
 0009:805EEFC4       aVseWatchDogRes
 0009:805EEFEC       aModuleFatalErr
 0009:805EF000       aWuddevicestatu
 0009:805EF01C       aWarningUsbFata
 0009:805EF044       aBtmCbEvtReturn
 0009:805EF064       aBdAddr02x02x02
 0009:805EF090       aLinkkey02x02x0
 0009:805EF0EC       aThisDeviceIsNo
 0009:805EF110       aLast02x02x02x0
 0009:805EF138       aBtmCbEvtReadSt
 0009:805EF15C       aStatusDMaxKeys
 0009:805EF188       aBtmCbEvtWriteS
 0009:805EF1AC       aStatusDNumKeys
 0009:805EF1C8       aBtmCbEvtDelete
 0009:805EF1EC       aWarningNoEntry
 0009:805EF20C       aUnknownEvent
 0009:805EF21C       aWudpowermanage
 0009:805EF238       aHciStatusD
 0009:805EF24C       aUnknownDeviceI
 0009:805EF290       aAddr02x02x02x0
 0009:805EF2C8       aWudenabletestm
 0009:805EF2DC       aWudstartsyncde_0
 0009:805EF2F4       aWuddeletestore
 0009:805EF310       aDevNumberD
 0009:805EF324       a06
 0009:805EF340       aNintendoRvlWbc
 0009:805EF358       aBtaHhEnableEvt
 0009:805EF36C       aBtaHhDisableEv
 0009:805EF380       aBtaHhOpenEvt
 0009:805EF394       aHandleDAddr02x
 0009:805EF3C8       aErrorCodeD
 0009:805EF3D8       aBtaHhCloseEvt
 0009:805EF3EC       aDeviceHandleDS
 0009:805EF410       aBtaHhSetRptEvt
 0009:805EF424       aBtaHhGetRptEvt
 0009:805EF438       aBtaHhSetProtoE
 0009:805EF450       aBtaHhGetProtoE
 0009:805EF468       aBtaHhSetIdleEv
 0009:805EF480       aBtaHhGetIdleEv
 0009:805EF498       aBtaHhGetDcspEv
 0009:805EF4B0       aBtaHhAddDevEvt
 0009:805EF4C4       aResultDHandleD
 0009:805EF504       aBtaHhRmvDevEvt
 0009:805EF518       aBtaHhVsUnplugE
 0009:805EF530       aWarningLinkNum
 0009:805EF558       jpt_804E92D0
 0009:805EF598       aInvalidAppIdD
 0009:805EF5B0       aBtaHhCoOpen
 0009:805EF5C4       aBtaHhCoClose
 0009:805EF5D8       aGetbufSizeIsZe
 0009:805EF5F0       aGetbufSizeIsTo
 0009:805EF608       aFreeBufCorrupt
 0009:805EF620       aFreeingLinkedB
 0009:805EF634       aBadBufQid
 0009:805EF640       aSendingToUnkno
 0009:805EF658       aSendBufferCorr
 0009:805EF670       aSendBufferLink
 0009:805EF688       aEnqueueBufferC
 0009:805EF6A4       aEneueueBufAlre
 0009:805EF6C4       aEneueueHeadBuf
 0009:805EF6E8       aGkiGetBufStart
 0009:805EF708       aDeletingBadPoo
 0009:805EF720       aHcisUnableToAl
 0009:805EF75C       aHcisInvalidLen
 0009:805EF790       aBtaGotEvent0xX
 0009:805EF7A4       aBtaGotUnregist
 0009:805EF7C8       aBtaDmDisableTi
 0009:805EF7E8       aBtaDmSearchTim
 0009:805EF808       aBtaDmPinCbackF
 0009:805EF848       aTimerStopped
 0009:805EF85C       aBtaDmL2capServ
 0009:805EF88C       aBtaDmCompressC
 0009:805EF8C8       aBtaDmCompressC_0
 0009:805EF908       aBtaDmActNoMore
 0009:805EF934       aBtaDmActNoMore_0
 0009:805EF958       aBtaHhSdpCbackP
 0009:805EF9B0       aBtaHhStartSdpS
 0009:805EF9E0       aBtaHhStartSdpH
 0009:805EFA30       aBtaHhSdpCmplSt
 0009:805EFA50       aBtaHhSdpCmplHi
 0009:805EFA9C       aBtaHhOpenActDe
 0009:805EFAC4       aBtaHhGetRptEvt_0
 0009:805EFAD8       aBtaHhSetRptEvt_0
 0009:805EFAEC       aBtaHhGetProtoE_0
 0009:805EFB04       aBtaHhSetProtoE_0
 0009:805EFB1C       aBtaHhGetIdleEv_0
 0009:805EFB30       aBtaHhSetIdleEv_0
 0009:805EFB48       aBtaHhOpenEvt_0
 0009:805EFB58       aUnknownEvent_0
 0009:805EFB68       aHandshakeRecei
 0009:805EFB94       aUnknownTransac
 0009:805EFBB0       jpt_804F14F4
 0009:805EFBD8       jpt_804F1484
 0009:805EFC00       aCtrlDataReceiv
 0009:805EFC24       aInvalidTransac
 0009:805EFC5C       jpt_804F17DC
 0009:805EFC84       jpt_804F16F8
 0009:805EFCB0       aInvalidCommand
 0009:805EFCC0       aHidHostwritede
 0009:805EFCDC       aBtaHhWriteDevA
 0009:805EFD04       aHidHdevEvtOpen
 0009:805EFD18       aHidHdevEvtClos
 0009:805EFD2C       aHidHdevEvtRetr
 0009:805EFD44       aHidHdevEvtIntr
 0009:805EFD5C       aHidHdevEvtIntr_0
 0009:805EFD74       aHidHdevEvtCtrl
 0009:805EFD8C       aHidHdevEvtCtrl_0
 0009:805EFDA4       aHidHdevEvtHand
 0009:805EFDBC       aHidHdevEvtVcUn
 0009:805EFDD4       aUnknownHidEven
 0009:805EFDE8       aBtaHhCbackHidE
 0009:805EFE08       jpt_804F1FCC
 0009:805EFE2C       jpt_804F1F54
 0009:805EFE50       aNoResourceToSe
 0009:805EFE80       aWrongDeviceHan
 0009:805EFE9C       aBtaHhNullSt
 0009:805EFEAC       aBtaHhIdleSt
 0009:805EFEBC       aBtaHhW4ConnSt
 0009:805EFED0       aBtaHhConnSt
 0009:805EFEE0       aUnknownHidHost
 0009:805EFEF8       aBtaHhSmExecute
 0009:805EFF2C       aHhStateChangeS
 0009:805EFF5C       aBtaHhHdlEventH
 0009:805EFF88       aBtaHhApiDisabl
 0009:805EFFA0       aBtaHhApiEnable
 0009:805EFFB8       aBtaHhApiOpenEv
 0009:805EFFCC       aBtaHhApiCloseE
 0009:805EFFE4       aBtaHhIntOpenEv
 0009:805EFFF8       aBtaHhIntCloseE
 0009:805F0010       aBtaHhIntHandsk
 0009:805F0028       aBtaHhIntDataEv
 0009:805F003C       aBtaHhIntCtrlDa
 0009:805F0054       aBtaHhApiWriteD
 0009:805F0070       aBtaHhSdpCmplEv
 0009:805F0084       aBtaHhDiscCmplE
 0009:805F009C       aBtaHhApiMaintD
 0009:805F00B8       aBtaHhApiGetDsc
 0009:805F00D0       aBtaHhOpenCmplE
 0009:805F00E8       aBtaHhApiGetAcl
 0009:805F0104       aUnknownHidHost_0
 0009:805F0120       jpt_804F2A24
 0009:805F0160       aFoundKdevCbDHi
 0009:805F0184       aInUseDKdevDHid
 0009:805F01B8       aBtaHhFindCbInd
 0009:805F01E4       aSubclass0x2x
 0009:805F01F8       aBtaHhParseKeyb
 0009:805F0238       aAltKeyPressed
 0009:805F0248       aAltKeyNotPress
 0009:805F025C       aThisChar02x
 0009:805F0270       aBtaHhparsekeyb
 0009:805F02B8       aBtaHhParseMice
 0009:805F0314       aMiceButton0x2x
 0009:805F0328       aMiceMoveXDYD
 0009:805F0344       aBtaHhTraceDevD
 0009:805F0380       aKdevDInUseDHan
 0009:805F03A4       aAttrMask04xSta
 0009:805F0420       aDuplicateBtmAc
 0009:805F0460       aSetpackettypeM
 0009:805F0480       aRoleChangeRequ
 0009:805F04DC       aBtmSetlinkpoli
 0009:805F0518       aBtmSetlinkpoli_0
 0009:805F0550       aBtmSetlinkpoli_1
 0009:805F0590       aBtmSetlinkpoli_2
 0009:805F05C8       aBtmReadlinkpol
 0009:805F0600       aBtmReadclockof
 0009:805F063C       aRoleSwitchEven
 0009:805F0674       aBtmSetqosBdadd
 0009:805F06A4       aBtmPFlowDelayV
 0009:805F06CC       aBtmReadrssiRem
 0009:805F0700       aBtmReadlinkqua
 0009:805F073C       aBtmRssiComplet
 0009:805F076C       aBtmLinkQuality
 0009:805F07AC       aBtmBeforeScoSe
 0009:805F07DC       aBtmLastScoRemo
 0009:805F080C       aBtmLastScoRemo_0
 0009:805F0840       aBtmSetafhchann_0
 0009:805F0870       aBtmResetComple
 0009:805F0884       aLocalSupported
 0009:805F08B0       aLocalSupported_0
 0009:805F08DC       aBtmBtmVendorsp
 0009:805F091C       aBtmUnableToSen
 0009:805F0960       aBtmEventReceiv
 0009:805F09A0       aBtmBtmWritepag
 0009:805F09C8       aBtmBtmWritevoi
 0009:805F09F8       aBtmBtmEnablete
 0009:805F0A10       aBtmBtmReadstor
 0009:805F0A3C       aBtmBtmWritesto
 0009:805F0A68       aBtmBtmDeletest
 0009:805F0AA0       aBtmSetdiscover
 0009:805F0AFC       aBtmSetconnecta
 0009:805F0B50       aBtmCancelinqui
 0009:805F0B6C       aBtmStartinquir
 0009:805F0BA4       aBtmReadremoted
 0009:805F0BE4       aBtmCancelremot
 0009:805F0C04       aBtmInqdbreadBd
 0009:805F0C38       aBtmWarningSetE
 0009:805F0C74       aBtmInqComplCal
 0009:805F0CB0       aBtmModeChangeA
 0009:805F0CF0       aBtmEscoConnRsp
 0009:805F0D14       aTcsAcceptScoPa
 0009:805F0D38       aBtmCreatescoES
 0009:805F0D7C       aTxbw0xXRxbw0xX
 0009:805F0DCC       aBtmScoChkPendU
 0009:805F0E1C       aBtmScoConnReqN
 0009:805F0E60       aBtmSetescomode
 0009:805F0E7C       aBtmSetescomode_0
 0009:805F0EB0       aTxbw0x08xRxbw0
 0009:805F0F10       aBtmReadescolin
 0009:805F0F38       aBtmChangeescol
 0009:805F0F7C       aBtmChangeescol_0
 0009:805F0FB4       aBtmEscoProcCon
 0009:805F0FF0       aBtmSecApplicat
 0009:805F1010       aBtmSetsecurity
 0009:805F1030       aBtmSetsecurity_0
 0009:805F105C       aBtmSetsecurity_1
 0009:805F1088       aBtmSetpintypeP
 0009:805F10D0       aBtmSecRegDIdDI
 0009:805F1118       aSec0xXServiceN
 0009:805F1160       aBtmSecRegOutOf
 0009:805F1190       aSecurityManage
 0009:805F11F0       aSecurityManage_0
 0009:805F1220       aBtmSecbondBda0
 0009:805F1250       aBtmSecbondIlle
 0009:805F1270       aBtmSecbondNoDe
 0009:805F1290       aBtmSecbondAlre
 0009:805F12B0       aBtmSecbondAuth
 0009:805F12D4       aBtmSecbondNoBu
 0009:805F12EC       aBtmRestoreMode
 0009:805F1314       aSecurityManage_1
 0009:805F1348       aSecurityManage_2
 0009:805F1380       aSecurityManage_3
 0009:805F13B0       aSecurityManage_4
 0009:805F1400       aSecurityManage_5
 0009:805F1438       aSecurityManage_6
 0009:805F147C       aSecurityManage_7
 0009:805F14C0       aSecurityManage_8
 0009:805F1518       aSecurityManage_9
 0009:805F1548       aSecurityManage_10
 0009:805F1588       aSecurityManage_11
 0009:805F15C4       aSecurityManage_12
 0009:805F15FC       aSecurityManage_13
 0009:805F1630       aSecurityManage_14
 0009:805F1660       aSecurityManage_15
 0009:805F1694       aSecurityManage_16
 0009:805F16D8       aBtmSecLinkKeyN
 0009:805F171C       aTypeD
 0009:805F1748       aBtmSecLinkKeyR
 0009:805F1788       aBtmSecPinCodeR
 0009:805F17AC       aBtmSecPinCodeR_0
 0009:805F17EC       aBtmSecPinCodeR_1
 0009:805F181C       aBtmSecPinCodeR_2
 0009:805F184C       aBtmSecPinCodeR_3
 0009:805F189C       aBtmSecExecuteP
 0009:805F18DC       aL2capNoLcbForL
 0009:805F1900       aSecurityManage_17
 0009:805F1924       aSecurityManage_18
 0009:805F194C       aSecurityManage_19
 0009:805F1970       aSecurityManage_20
 0009:805F1998       aSecurityManage_21
 0009:805F19C0       aSecurityManage_22
 0009:805F19E4       aBtmSecCollisio
 0009:805F1A00       aCtlrHWErrorEve
 0009:805F1A18       aEventMismatchO
 0009:805F1A40       aCmdTimeoutNoCm
 0009:805F1A60       aBtuHciCommandT
 0009:805F1A90       aWarningGapConn
 0009:805F1AD4       aGapConnRcvdL2c
 0009:805F1B00       aGapConnRcvdL2c_0
 0009:805F1B28       aGapConnRcvdL2c_1
 0009:805F1B60       aGapInquiryComp
 0009:805F1B9C       aGapDiscoveryCo
 0009:805F1BD0       aGapDiscoverySu
 0009:805F1BF8       aGapRemoteNameC
 0009:805F1C2C       jpt_804FF324
 0009:805F1C50       aGapInquiryResu
 0009:805F1C94       aCod02x02x02xCl
 0009:805F1CD8       aGapFindaddrbyn
 0009:805F1D1C       aGapFindaddrbyn_0
 0009:805F1D58       jpt_804FF57C
 0009:805F1D7C       jpt_804FF4E4
 0009:805F1DA0       aGapFindaddrbyn_1
 0009:805F1DE4       jpt_804FF730
 0009:805F1E08       jpt_804FF6C0
 0009:805F1E2C       jpt_804FF7D4
 0009:805F1E50       aHidOriginateSt
 0009:805F1E68       aHidOriginateFa
 0009:805F1E80       aHiddProcRepage
 0009:805F1EA0       aHidErrNotRegis
 0009:805F1EB8       aHidErrInvalidP
 0009:805F1ED0       aHidErrNoConnec
 0009:805F1EF4       aSecurityRegist
 0009:805F1F14       aSecurityRegist_0
 0009:805F1F34       aSecurityRegist_1
 0009:805F1F54       aSecurityRegist_2
 0009:805F1F74       aSecurityRegist_3
 0009:805F1F94       aSecurityRegist_4
 0009:805F1FB8       aHidControlRegi
 0009:805F1FD8       aHidInterruptRe
 0009:805F1FFC       aHidDisconnect
 0009:805F2010       aHidRcvdL2capCo
 0009:805F2044       aHidRcvdIntrL2c
 0009:805F2078       aHidRcvdIntrL2c_0
 0009:805F20A8       aHidRcvdCtlL2ca
 0009:805F20D8       aHidRcvdL2capCo_0
 0009:805F211C       aHidOriginateFa_0
 0009:805F2138       aHidOriginatorS
 0009:805F2158       aHidIntrOrigina
 0009:805F2174       aHidRcvdUnexpec
 0009:805F21A0       aHidGotCtrlConn
 0009:805F21D4       aHidRcvdL2capCf
 0009:805F2200       aHidRcvdCfgIndS
 0009:805F222C       aHidRcvdCfgCfmC
 0009:805F2258       aHidRcvdL2capDi
 0009:805F2284       aHidRcvdL2capDi_0
 0009:805F22A8       aHidRcvdL2capDi_1
 0009:805F22D8       aHidRcvdL2capDi_2
 0009:805F2300       aHidRcvdL2capCo_1
 0009:805F2338       aHidRcvdL2capCo_2
 0009:805F2370       aHidRcvdL2capDa
 0009:805F23A0       aL2capL2caRegis
 0009:805F23D0       aL2capNoCbRegis
 0009:805F23F8       aL2capInvalidPs
 0009:805F2420       aL2capNoRcbAvai
 0009:805F2448       aL2capL2caDereg
 0009:805F247C       aL2capPsm0x04xN
 0009:805F24B0       aL2caConnectreq
 0009:805F24D0       aL2caConnectreq_0
 0009:805F2508       aL2capConnectRe
 0009:805F252C       aL2capNoRcbForL
 0009:805F255C       aL2capNoLcbForL_0
 0009:805F2580       aL2capApiL2caCo
 0009:805F25B8       aL2capNoCcbForL
 0009:805F25DC       aL2capL2caConnR
 0009:805F260C       aL2caConnectrsp
 0009:805F2644       aL2caConnectrsp_0
 0009:805F267C       aL2capNoLcbForL_1
 0009:805F26A0       aL2capNoCcbForL_0
 0009:805F26C4       aL2capBadIdInL2
 0009:805F26F8       aL2caConfigreqC
 0009:805F2718       aL2capNoCcbForL_1
 0009:805F2744       aL2caConfigrspC
 0009:805F2770       aL2capNoCcbForL_2
 0009:805F279C       aL2caDisconnect
 0009:805F27C0       aL2capNoCcbForL_3
 0009:805F27EC       aL2caDisconnect_0
 0009:805F2810       aL2capNoCcbForL_4
 0009:805F283C       aL2caDatawriteC
 0009:805F2864       aL2capNoCcbForL_5
 0009:805F2890       aL2capCannotSen
 0009:805F28C8       aL2caPingBda02x
 0009:805F28F8       aL2capNoLcbForL_2
 0009:805F2918       aL2capRejectedS
 0009:805F2940       aL2capL2caPingR
 0009:805F2970       aL2capNoCcbForL_6
 0009:805F29A0       aL2caSetaclprio
 0009:805F29D8       aL2capNoLcbForL_3
 0009:805F2A00       aL2caSetcompres
 0009:805F2A60       aL2capNoCcbForL_7
 0009:805F2A88       aL2caFlushCid0x
 0009:805F2AB8       aL2caGetnumqueu
 0009:805F2AF8       aL2caGetnumqueu_0
 0009:805F2B30       jpt_80505E4C
 0009:805F2B54       aL2capStClosedE
 0009:805F2B70       aL2capCallingDi
 0009:805F2BB4       aL2capCallingCo
 0009:805F2BF0       jpt_80505EF0
 0009:805F2C6C       aL2capStOrigW4S
 0009:805F2C94       jpt_80506188
 0009:805F2D00       aL2capStTermW4S
 0009:805F2D28       aL2capCallingCo_0
 0009:805F2D58       jpt_805062E8
 0009:805F2DC4       aL2capStW4L2cap
 0009:805F2DEC       aL2capCallingCo_1
 0009:805F2E24       aL2capCallingCo_2
 0009:805F2E48       aL2capCallingCo_3
 0009:805F2E88       aL2capCallingCo_4
 0009:805F2EC0       jpt_80506460
 0009:805F2F30       aL2capStW4L2caC
 0009:805F2F54       jpt_8050669C
 0009:805F2FC4       aL2capStConfigE
 0009:805F2FE0       aL2capCallingCo_5
 0009:805F3010       aL2capCallingCo_6
 0009:805F3040       aL2capCallingCo_7
 0009:805F307C       aL2capCallingDi_0
 0009:805F30BC       aL2capCallingDa
 0009:805F30E8       jpt_80506878
 0009:805F3158       aL2capStOpenEvt
 0009:805F3174       jpt_80506C40
 0009:805F31E0       aL2capStW4L2cap_0
 0009:805F3208       aL2capCallingDi_1
 0009:805F3238       jpt_80506EA0
 0009:805F32A8       aL2capStW4L2caD
 0009:805F32D0       jpt_8050707C
 0009:805F3340       aL2capCannotSen_0
 0009:805F3368       aL2capFailedToA
 0009:805F3388       aL2capGotConnRe
 0009:805F33B0       aL2capGotConnCo
 0009:805F33D8       aL2capGotConnCo_0
 0009:805F340C       aL2capGotSecCom
 0009:805F3434       aL2capPingTimeo
 0009:805F344C       aL2capCongested
 0009:805F3478       aL2capCallingCo_8
 0009:805F34B8       aL2capBufferDro
 0009:805F34D8       aL2capCallingCo_9
 0009:805F3518       aLcbDPriorityDX
 0009:805F3560       aL2capDroppingI
 0009:805F3580       aL2capDroppingT
 0009:805F35A0       aL2capRcvdSegme
 0009:805F35D8       aL2capExpectedP
 0009:805F35FC       aL2capHoldingAc
 0009:805F3650       aL2capUnknownCi
 0009:805F3668       aL2capGotIncorr
 0009:805F368C       aL2capBadLength
 0009:805F36B8       aGotConnectionl
 0009:805F36D8       aCommandLenBadP
 0009:805F370C       aL2capMtuRejHan
 0009:805F3730       aL2capRejWithCi
 0009:805F3760       aL2capRcvdConnR
 0009:805F378C       aL2capUnableToA
 0009:805F37AC       aL2capNoCcbForC
 0009:805F37DC       aL2capConRspBad
 0009:805F3808       aL2capCfgRspBad
 0009:805F3834       aL2capRcvdCfgRs
 0009:805F3860       aL2capBadCmdCod
 0009:805F387C       jpt_805089A0
 0009:805F38AC       aL2capHoldConti
 0009:805F38C0       aL2capHoldTimeo
 0009:805F38D8       aL2capNoBufferC
 0009:805F38F4       aL2capNoBufferF
 0009:805F3914       aL2capNoBufferF_0
 0009:805F3934       aL2capNoBufferF_1
 0009:805F3954       aL2cuCreateConn
 0009:805F3998       aL2capNoBufferF_2
 0009:805F39C0       aPortOpenContin
 0009:805F39D4       aPortOpenContin_0
 0009:805F39F8       aPortStartcnfRe
 0009:805F3A10       aPortStartcnfFa
 0009:805F3A30       aPortStartind
 0009:805F3A40       aPortParnegindD
 0009:805F3A60       aPortParnegindP
 0009:805F3A80       aPortParnegcnfD
 0009:805F3AAC       aPortDlcestabli
 0009:805F3AD0       aPortDlcestabli_0
 0009:805F3B00       aPortPortnegind
 0009:805F3B10       aPortPortnegcnf
 0009:805F3B20       aPortPortnegcnf_0
 0009:805F3B38       aPortPortnegcnf_1
 0009:805F3B60       aPortControlind
 0009:805F3B70       aPortControlind_0
 0009:805F3BB0       aPortControlcnf
 0009:805F3BC0       aPortLinestatus
 0009:805F3BD4       aPortDlcrelease
 0009:805F3BE8       aPortCloseind
 0009:805F3BF8       aPortTimeoutclo
 0009:805F3C10       aPortDataindWit
 0009:805F3C34       aPortDataindBuf
 0009:805F3C68       aPortFlowindFcD
 0009:805F3C7C       aSendingRfcommD
 0009:805F3C94       aPortRfcClosedI
 0009:805F3CC0       aPortRfcClosedS
 0009:805F3CF0       aPortSelectMtuB
 0009:805F3D10       aPortSelectMtuS
 0009:805F3D48       aPortSelectMtuS_0
 0009:805F3D80       aPortSelectMtuA
 0009:805F3DA8       aPortSelectMtuC
 0009:805F3DF0       aRfcPortClosedD
 0009:805F3E08       aPortDataindDat
 0009:805F3E38       aRfcFindLcidMcb
 0009:805F3E54       aRfcFindLcidMcb_0
 0009:805F3E8C       aRfcommConnectc
 0009:805F3EA8       aRfcommConfigin
 0009:805F3EC4       aRfcommConfigcn
 0009:805F3EE0       aRfcommDisconne
 0009:805F3F00       aRfcommBufdatai
 0009:805F3F1C       aRfcommCongesti
 0009:805F3F4C       aRfcommCongesti_0
 0009:805F3F78       jpt_8050D700
 0009:805F3F94       aRfcMxSmStateId
 0009:805F3FB4       aMxErrorStateDE
 0009:805F3FD0       aRfcMxSendConfi
 0009:805F3FE8       aRfcommMxIgnore
 0009:805F4010       jpt_8050D798
 0009:805F4044       aRfcMxSmStateWa
 0009:805F406C       aRfcMxSmStateCo
 0009:805F4090       jpt_8050DB6C
 0009:805F40B4       aRfcMxSmSabmeWa
 0009:805F40D8       jpt_8050DC90
 0009:805F4114       aRfcMxSmStateWa_0
 0009:805F4138       aRfcMxSmStateCo_0
 0009:805F415C       jpt_8050DF18
 0009:805F418C       aRfcMxSmStateDi
 0009:805F41B4       jpt_8050E034
 0009:805F41F0       aRfcMxConfCnfPC
 0009:805F4214       aRfcMxConfIndPC
 0009:805F4230       aNullPortEventD
 0009:805F4244       aPortErrorState
 0009:805F4264       aPortStateClose
 0009:805F4288       jpt_8050E3EC
 0009:805F42C4       aPortStateSabme
 0009:805F42F0       jpt_8050E560
 0009:805F432C       aPortErrorState_0
 0009:805F4358       aPortStateTermW
 0009:805F4388       jpt_8050E704
 0009:805F43C8       aPortErrorState_1
 0009:805F43F8       aPortStateOrigW
 0009:805F4428       jpt_8050E8C0
 0009:805F4468       aPortStateOpene
 0009:805F448C       jpt_8050EA08
 0009:805F44C8       aPortStateDiscW
 0009:805F44F4       jpt_8050EBF0
 0009:805F4530       aMxPnWhileDisco
 0009:805F4558       aBadLength1D
 0009:805F4568       aBadLength2DD
 0009:805F457C       aBadSabme
 0009:805F4588       aBadDisc
 0009:805F4594       aBadUihInvalidD
 0009:805F45AC       aBadUihFcs
 0009:805F45BC       aBadUihResponse
 0009:805F45D0       aIllegalMxFrame
 0009:805F45F0       aBadMxFrame
 0009:805F4600       aBadPnFrame
 0009:805F4610       aBadMscFrame
 0009:805F4620       aBadRpnFrame
 0009:805F4630       aRfcTimerStop
 0009:805F4640       aRfcTimerStartT
 0009:805F4660       aRfcPortTimerSt
 0009:805F4684       aRfcPortTimerSt_0
 0009:805F4698       aRfcPortClosed
 0009:805F46A8       aRfcIncCreditD
 0009:805F46C0       aSdpInitdiscove
 0009:805F4710       aSdpAddattribut
 0009:805F474C       aSdpAdduuidsequ
 0009:805F4780       aDeletingAttrId
 0009:805F47A8       aSdpUnexpPduDIn
 0009:805F47D0       aSdpRcvdService
 0009:805F47F8       aSdpWrongType0x
 0009:805F4820       aSdpBadLenInAtt
 0009:805F4840       aSdpDbFull
 0009:805F4850       aSdpBadType0x02
 0009:805F4880       aSdpAttrNesting
 0009:805F489C       aSdpBadLenInUui
 0009:805F48BC       aSdpBadLenInBoo
 0009:805F48E0       jpt_805140F4
 0009:805F4908       aServiceDiscove
 0009:805F491C       aSecurityRegist_5
 0009:805F4940       aSecurityRegist_6
 0009:805F4968       aSdpRegistratio
 0009:805F4980       aSdpRcvdL2capCo
 0009:805F49B8       aSdpRcvdConnCnf
 0009:805F49E4       aSdpGotConnCnfS
 0009:805F4A10       aSdpRcvdConnCnf_0
 0009:805F4A40       aSdpRcvdL2capCf
 0009:805F4A6C       aSdpRcvdCfgIndS
 0009:805F4A98       aSdpRcvdCfgCfmC
 0009:805F4AC4       aSdpDisconnectC
 0009:805F4AE0       aSdpRcvdL2capDi
 0009:805F4B0C       aSdpRcvdL2capDi_0
 0009:805F4B30       aSdpIgnoredL2ca
 0009:805F4B68       aSdpRcvdL2capDa
 0009:805F4B94       aSdpNoSpareCcbF
 0009:805F4BB0       aSdpOriginateSt
 0009:805F4BC8       aSdpOriginateFa
 0009:805F4BE0       aSdpRcvdL2capDi_1
 0009:805F4C10       aSdpRcvdL2capDi_2
 0009:805F4C38       aSdpCcbTimeoutI
 0009:805F4C68       aSdpServerGotUn
 0009:805F4C8C       aSdpNoBufForSea
 0009:805F4CA8       jpt_805161F4
 0009:805F4CEC       aSdpSdpuBuildNS
 0009:805F4D24       aSdpNoBufForErr
 0009:805F4D40       jpt_805164F4
 0009:805F4D60       jpt_80516420
 0009:805F4D80       jpt_805169A0
 0009:805F4EE0       jpt_805187A0
 0009:805F5240       jpt_8051B010
 0009:805F5320       jpt_8051ACFC
 0009:805F5364       jpt_8051B2BC
 0009:805F53E8       jpt_8051B504
 0009:805F546C       jpt_8051CA18
 0009:805F5490       jpt_8051D3E4
 0009:805F5570       jpt_8051DDB4
 0009:805F5590       jpt_8051DC1C
 0009:805F55B0       jpt_8051FF34
 0009:805F55F4       jpt_80520380
 0009:805F5638       jpt_80520C5C
 0009:805F5718       jpt_80520994
 0009:805F575C       jpt_80520F1C
 0009:805F57E0       jpt_80521170
 0009:805F5864       jpt_80522718
 0009:805F58E0       jpt_80528004
 0009:805F5950       jpt_80528CA0
 0009:805F596C       jpt_80528EE4
 0003:805F5AC8       JASPoolAllocObject<10AudMeTrack>::memPool_(void)
 0003:805F5D10       @unnamed@DinoPackunStateDamage_cpp@::sOutPosition(void)
 0003:806504D0       funcs_804A4458
 0003:80652080       GPFifo
 0003:806520A4       CPUFifo
 0001:8069CCB0       @unnamed@BckCtrl_cpp@::sDefaultPlayDataName(void)
 0001:8069CCB8       aBpk_1
 0001:8069CCBC       aBtp_1
 0001:8069CCC0       aBtk_1
 0001:8069CE60       @unnamed@TripodBossAccesser_cpp@::cJMapBoneIDToBoneIndexTableSize(void)
 0001:8069DB98       aS_4
 0001:8069DBA0       aS_5
 0001:8069DBB0       aJp
 0001:8069DBB3       aUs
 0001:8069DBB6       aEu
 0001:8069DD08       aS_3
 0001:8069DD0C       aD_0
 0001:8069DD34       ARALT_AramStartAdr
 0001:8069DE58       aTplC
 0001:8069DEA8       aSS
 0001:8069DEB0       a24
 0001:8069DED8       aEucJp
 0001:8069DEE0       aUtf8
 0001:8069DEE8       a7bit
 0001:8069DEF0       a8bit
 0001:8069DEF8       aBase64
 0001:8069DF08       aData
 0001:8069DF1C       aS
 0001:8069DF30       aCSS
 0001:8069DF38       aS_0
 0001:8069DF3C       aFrom
 0001:8069DF44       aTo
 0001:8069DF4C       aJan
 0001:8069DF50       aFeb
 0001:8069DF54       aMar
 0001:8069DF58       aApr
 0001:8069DF5C       aMay
 0001:8069DF60       aJun
 0001:8069DF64       aJul
 0001:8069DF68       aAug
 0001:8069DF6C       aSep
 0001:8069DF70       aOct
 0001:8069DF74       aNov
 0001:8069DF78       aDec
 0001:8069E06C       aRva1
 0001:8069E074       a08x
 0001:8069E07C       aS_1
 0001:8069E080       aOsC
 0001:8069E088       aHaea
 0001:8069E0B0       a016llx
 0001:8069E0B8       aD
 0001:8069E0C0       aS_2
 0001:8069E0F0       aExpired
 0001:8069E120       aViC
 0001:8069E1B8       aDvdfsC
 0001:8069E1CC       aDvdC
 0001:8069E1E8       aDevDi
 0001:8069E200       __DSPVersion
 0001:8069E210       aS08x
 0001:8069E218       aSS_0
 0001:8069E238       aSS_1
 0001:8069E248       aMeta
 0001:8069E250       aTicket
 0001:8069E264       aIplCb
 0001:8069E26C       aIplAr
 0001:8069E278       aIplArn
 0001:8069E280       aIplCd
 0001:8069E288       aIplCd2
 0001:8069E290       aIplDh
 0001:8069E298       aIplE60
 0001:8069E2A0       aIplFrc
 0001:8069E2A8       aIplIdl
 0001:8069E2B0       aIplInc
 0001:8069E2B8       aIplLng
 0001:8069E2C0       aIplNik
 0001:8069E2C8       aIplPc
 0001:8069E2D0       aIplPgs
 0001:8069E2D8       aIplSsv
 0001:8069E2E0       aIplSnd
 0001:8069E2E8       aIplUpt
 0001:8069E2F0       aNetCnf
 0001:8069E2F8       aDevBtm
 0001:8069E300       aDevVim
 0001:8069E308       aDevCtc
 0001:8069E310       aDevDsm
 0001:8069E318       aBtDinf
 0001:8069E320       aBtCdif
 0001:8069E328       aBtSens
 0001:8069E330       aBtSpkv
 0001:8069E338       aBtMot
 0001:8069E340       aBtBar
 0001:8069E348       aDvdCnf
 0001:8069E350       aWwwRst
 0001:8069E358       aScv0
 0001:8069E360       aSced
 0001:8069E368       aArea
 0001:8069E370       aGame
 0001:8069E378       aArcC
 0001:8069E388       aDevEs
 0001:8069E3A0       aDevFs
 0001:8069E3C8       aUsb
 0001:8069E3D0       aWudC
 0001:8069E43C       aTrue
 0001:8069E444       aFalse
 0001:8069E458       aTrue_0
 0001:8069E460       aFalse_0
 0001:8069E468       aBadUa
 0001:8069E470       aBadDm
 0003:8069E4A0       _GUARD_SetupGXCommon__27_unnamed_ut_CharWriter_cpp_Fv_fog
 0003:8069E4B8       nw4r::db::sAssertionConsole(void)
 0003:8069E4C0       nw4r::lyt::Pane::typeInfo(void)
 0003:8069E4C8       nw4r::lyt::Layout::mspAllocator(void)
 0003:8069E508       CubeCameraArea::sCubeCategory(void)
 0003:8069E6C8       NrvBossStinkBugActionFlyLow::BossStinkBugActionFlyLowNrvFly::sInstance(void)
 0003:8069E6F4       NrvBossStinkBugGroundBattle::BossStinkBugActionGroundNrvWalk::sInstance(void)
 0003:806A0608       NrvCoinGroup::CoinGroupNrvAppear::sInstance(void)
 0003:806A0610       NrvCoinGroup::CoinGroupNrvDemoAppear::sInstance(void)
 0003:806A067C       NrvSandUpDownTriRock::SandUpDownTriRockNrvStop::sInstance(void)
 0003:806A1220       SingletonHolder<15NameObjRegister>::sInstance(void)
 0003:806A1228       SingletonHolder<10GameSystem>::sInstance(void)
 0003:806A1E18       @unnamed@GalaxyMap_cpp@::GalaxyMapIdle::sInstance(void)
 0003:806A1E24       @unnamed@GalaxyMap_cpp@::GalaxyMapFadeinGalaxyMap::sInstance(void)
 0003:806A1E28       @unnamed@GalaxyMap_cpp@::GalaxyMapFadeinAstroMap::sInstance(void)
 0003:806A1EBC       @unnamed@GalaxyMapTitle_cpp@::GalaxyMapTitleDisplay::sInstance(void)
 0003:806A1EC4       @unnamed@GalaxyMapTitle_cpp@::GalaxyMapTitleAppearToAnother::sInstance(void)
 0003:806A1EC8       @unnamed@GalaxyMapTitle_cpp@::GalaxyMapTitleDisappearToAnother::sInstance(void)
 0003:806A245C       SingletonHolder<17HeapMemoryWatcher>::sInstance(void)
 0003:806A2480       SingletonHolder<21ResourceHolderManager>::sInstance(void)
 0003:806A26DC       JKRHeap::sCurrentHeap(void)
 0003:806A26E0       JKRHeap::sRootHeap(void)
 0003:806A2CD8       DVDLowIntType
 0003:806A2EE0       GXOverflowSuspendInProgress
 0003:806A2EE4       __GXCurrentThread
 0003:806A30A0       __DSP_init_flag
 0003:806A30A8       __DSP_tmp_task
 0003:806A30AC       __DSP_last_task
 0003:806A30B0       __DSP_first_task
 0003:806A30B4       __DSP_curr_task
 0001:806A67CC       @unnamed@MoguStone_cpp@::hAddHeight(void)
 0001:806AD8D0       _LOCAL_MEMInitAllocatorForExpHeap__FP12MEMAllocatorP12MEMiHeapHeadi_sAllocatorFunc

Program entry point at 0001:0000003C
